/*

1. Which of the following is valid??
==========================================

    1. The main purpose of constructor is  to create an Object.

        invalid( constructor is used to perform initialisation but not creation of the object)

    2. The main purpose of the constructor is to perform initialisation of the object.

        Yes, that is true

    3.  The name of the constructor need not be same as the class name.

        Invalid, name of constructor should be same as name of the class.
    
    4. Return type concept applicable for constructors but only void.

        Invalid, return type concept not applicable to the constructor.

    5. We can apply any modifier for the constructor.

        invalid ( private, protected, default, public are only applicable)

    6. Default constructor generated by JVM.

        invalid( Default constructor is generated by compiler)

    7. Compiler is responsible to generate default constructor.

        Yes, that is right

    8. Compiler will always generate default constructor.

        Invalid
        If class does not contain any constructor then only the default constructor
        is generated by the compiler.
        
    9. If we are not writing no Argument constructor then compiler will generate default constructor.( invalid)

        invalid

            If we are not writing any constructor then only compiler will generate the default constructor.

    10. Every noArgument constructor is a default constructor.

        invalid

            Compiler generated constructor is only called default constructor

    11. Default constructor is always noArg constructor.

        Yes, that right default constructor generated by compiler is no arguments constructor.

    12. The first line inside every constructor should be either super() or this(). If
        we are not writing anything then compiler will generate this().

         invalid( compiler will always place super() but not this().

    13. For constructor both overloading and overriding concepts are applicable.

        invalid( only overloading is applicable but not overriding).

    14. For constructors inheritance concept applicable but not overriding.

        invalid( inheritance and overriding not applicable to the constructors)

    15. Only concrete classes can contain constructor. But abstract classes cannot

        invalid( abstract classes can contain constructor)

    16. Interface can contain constructors
        
        invalid

    17. Recursive constructor invocation is a run time exception
      
         invalid( it is a compile time error)

    18. If parent class constructor throws some checked exception then compiler child
           class constructor should throws the same checked exception or its child.
        
        invalid( child constructor should throw same checked exception or the parent Exception)
           
            

*/

//--------------------------------------------------------------------------*********--------------------------------------------------------------------------