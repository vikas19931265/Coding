package javalanggpackage;

/*
hashCode();
------------------------------

1. For every object in java, a unique number generated by the JVM which is nothing but
   hashcode.

2. Hashcode does not represent address of the object.

3. JVM will use the Hashcode , while saving the objects into Hashing related data structures
   like Hashtable, Hashmap, Hashset etc.

4. The main advantage of saving objects based on hashcode is that the search operation will become
   very easy.

5. The most powerful search algorithm up to now is Hashing.


How is Hashcode helpful in searching.
---------------------------------------

For every object , a unique number will be generated which is called as Hashcode.
Now when we create an object of HashSet then the underlying data structure used
is Hashtable.

Objects will be inserted in the buckets in the Hashtable based upon the objects unique
Hashcode.

So lets say if an object Hashcode is 100 then it will be stored in the 100th bucket.

Now when we want to perform search operation then , JVM will get the objects Hashcode
and check it in the Hashtable in just one attempt.

This make the searching operation very easy, hence these hashing related data structures
are the best choice for the purpose of searching.



6. If we are giving the chance to Object class hashCode() method , then it will generate
   the Hashcode based upon the address of the object. It does not mean hashcode will represent
   address of the object.


7. Based upon our requirement we can override Hashcode method in our class to generate our own
   Hashcode.


8. Overridding hashcode method is said to be proper if and only if for every object we generate
    a unique number as hashcode.


            class Student
            {

                public int hashCode()
                    
                {

                    return 100 
                }    
            }

        This is improper way of overriding Hashcode method because for all the students
objects we are generating same number as the hashCode.



        class Student
        {

            public int hashCode()
            
                {

                    return rollno;

                }
        }

        This is proper way of overriding hashcode method because we are  generating a different
hashCode for every object.

*/


class Student3
{
   static   int id=0;
    
 

     @Override
    
     public String toString()
     {
        return "Hashcode "+ hashCode();
     }
     
     public int hashCode()
    {
        id=id+1;
        
        return id;
    }

    public static void main(String[] args)
    {
        
        Student3 s = new Student3();
        
        Student3 s1= new Student3();
        
        System.out.println(s);
        
        System.out.println(s1);
    }
}

/*
run:
Hashcode 1
Hashcode 2
BUILD SUCCESSFUL (total time: 0 seconds)

*/

