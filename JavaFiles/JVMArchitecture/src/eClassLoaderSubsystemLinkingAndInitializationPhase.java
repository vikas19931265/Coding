/*

Linking
=======================

Linking consists of three activities

1. Verify
2. Prepare
3. Resolve

Verify
------------------

It is the process of ensuring that binary representation of a class is structurally
correct or not that is JVM will check whether the .class file is generated by the valid
compiler or not that is whether the .class file is properly formatted or not.

Internally byte code verifier is responsible for this activity. Byte code verifier
is the part of class loader subsystem.

If verification fails then we will get the RuntimeException saying java.lang.VerifyError


Preparation
---------------------

In this phase JVM will allocate memory for the class level static variables and assign
default values to it.

note:

In initialization phase original values will be assigned to the static variables and here only
the default values will be assigned.

Resolve
---------------------------

It is the process of replacing symbolic names in our program with the original memory
references from the method area.

Example

    class Test
    {

        public static void main(String[] args)
        {

            String s = new String("durga");
            Student s1= new Student("dum");
        }   
    }

For above classs, class loader loads Test.class, String.class , Student.class and the
Object.class.

The names of these classes are stored in the constant pool of the test class.

In the case of resolution phase these names are replaced with original memory level
references from the method area.


Initialization
==================================

In this phase all the static variables are assigned with the original values and 
static blocks will be executed from parent to the child and from top to the bottom.


*/