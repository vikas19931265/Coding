<?xml version="1.0"?>
<wsdl:definitions targetNamespace="http://api.webservices.cc.guidewire.com/" xmlns="http://entity.webservices.cc.guidewire.com/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:api="http://api.webservices.cc.guidewire.com/" xmlns:entity="http://entity.webservices.cc.guidewire.com/" xmlns:enum="http://enumeration.webservices.cc.guidewire.com/" xmlns:fault="http://fault.webservices.cc.guidewire.com/" xmlns:soap11="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema targetNamespace="http://enumeration.webservices.cc.guidewire.com/">
      <xs:import namespace="http://entity.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://api.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://fault.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:complexType name="ArrayOfClaimAccessType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="tns3:ClaimAccessType[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="RefTypeEnum" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Enumeration used to control how beans are used when calling into the system.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="GW_ByRef">
            <xs:annotation>
              <xs:documentation>Use this value to refer to a pre-existing bean.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GW_NotByRef">
            <xs:annotation>
              <xs:documentation>Use this value to specify the bean is being inserted into the database</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="GW_Events" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Typelist containing all events that can be fired</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="ActivityAdded">
            <xs:annotation>
              <xs:documentation>Activity was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ActivityChanged">
            <xs:annotation>
              <xs:documentation>Activity was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ActivityRemoved">
            <xs:annotation>
              <xs:documentation>Activity was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AuthorityLimitProfileAdded">
            <xs:annotation>
              <xs:documentation>AuthorityLimitProfile was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AuthorityLimitProfileChanged">
            <xs:annotation>
              <xs:documentation>AuthorityLimitProfile was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AuthorityLimitProfileRemoved">
            <xs:annotation>
              <xs:documentation>AuthorityLimitProfile was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BulkInvoiceAdded">
            <xs:annotation>
              <xs:documentation>BulkInvoice was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BulkInvoiceChanged">
            <xs:annotation>
              <xs:documentation>BulkInvoice was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BulkInvoiceRemoved">
            <xs:annotation>
              <xs:documentation>BulkInvoice was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BulkInvoiceStatusChanged">
            <xs:annotation>
              <xs:documentation>Fired when the BulkInvoice is added, and each time its status changes.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CatastropheAdded">
            <xs:annotation>
              <xs:documentation>Catastrophe was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CatastropheChanged">
            <xs:annotation>
              <xs:documentation>Catastrophe was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CatastropheRemoved">
            <xs:annotation>
              <xs:documentation>Catastrophe was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CheckAdded">
            <xs:annotation>
              <xs:documentation>Check was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CheckChanged">
            <xs:annotation>
              <xs:documentation>Check was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CheckIssued">
            <xs:annotation>
              <xs:documentation>Deprecated.  Use CheckStatusChanged instead.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CheckRemoved">
            <xs:annotation>
              <xs:documentation>Check was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CheckStatusChanged">
            <xs:annotation>
              <xs:documentation>Fired when the check is added, and each time its status changes.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CheckStopped">
            <xs:annotation>
              <xs:documentation>Deprecated.  Use CheckStatusChanged instead.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CheckSubmitted">
            <xs:annotation>
              <xs:documentation>Deprecated.  Use CheckStatusChanged instead.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CheckTransferred">
            <xs:annotation>
              <xs:documentation>Deprecated.  Use CheckStatusChanged instead.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CheckVoided">
            <xs:annotation>
              <xs:documentation>Deprecated.  Use CheckStatusChanged instead.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimAdded">
            <xs:annotation>
              <xs:documentation>Claim was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimAssociationAdded">
            <xs:annotation>
              <xs:documentation>ClaimAssociation was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimAssociationChanged">
            <xs:annotation>
              <xs:documentation>ClaimAssociation was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimAssociationRemoved">
            <xs:annotation>
              <xs:documentation>ClaimAssociation was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimChanged">
            <xs:annotation>
              <xs:documentation>Claim was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimContactAdded">
            <xs:annotation>
              <xs:documentation>ClaimContact was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimContactChanged">
            <xs:annotation>
              <xs:documentation>ClaimContact was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimContactContactChanged">
            <xs:annotation>
              <xs:documentation>Fired when the contact of a claim contact changes.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimContactRemoved">
            <xs:annotation>
              <xs:documentation>ClaimContact was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimContactRoleAdded">
            <xs:annotation>
              <xs:documentation>ClaimContactRole was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimContactRoleChanged">
            <xs:annotation>
              <xs:documentation>ClaimContactRole was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimContactRoleRemoved">
            <xs:annotation>
              <xs:documentation>ClaimContactRole was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimInfoAdded">
            <xs:annotation>
              <xs:documentation>ClaimInfo was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimInfoChanged">
            <xs:annotation>
              <xs:documentation>ClaimInfo was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimInfoPurged">
            <xs:annotation>
              <xs:documentation>ClaimInfo purged event.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimInfoRemoved">
            <xs:annotation>
              <xs:documentation>ClaimInfo was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimPurged">
            <xs:annotation>
              <xs:documentation>Claim purged event.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimRemoved">
            <xs:annotation>
              <xs:documentation>Claim was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimResync">
            <xs:annotation>
              <xs:documentation>Claim resync event. Generated only as a result of an administrator requesting a claim resync.  All pending messages for the claim are dumped and the event is fired.  Implementors will generally handle this event to dump the entire claim to bring the remote system up to date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ClaimValid">
            <xs:annotation>
              <xs:documentation>Deprecated - test for validity directly in rules.  Fired only if DeprecatedEventGeneration is set to true in config.xml.  This event denotes that a new Claim is valid or an existing Claim has become valid.  All other events raised in this database transaction related to the Claim, including events related to Exposures and other objects associated with the Claim, will be subsumed into this event.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactAdded">
            <xs:annotation>
              <xs:documentation>Contact was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactAutoSyncFailed">
            <xs:annotation>
              <xs:documentation>Fired when a contact auto sync work item is failed to process.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactAutoSyncWorkItemAdded">
            <xs:annotation>
              <xs:documentation>ContactAutoSyncWorkItem was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactAutoSyncWorkItemChanged">
            <xs:annotation>
              <xs:documentation>ContactAutoSyncWorkItem was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactAutoSyncWorkItemRemoved">
            <xs:annotation>
              <xs:documentation>ContactAutoSyncWorkItem was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactChanged">
            <xs:annotation>
              <xs:documentation>Contact was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactRemoved">
            <xs:annotation>
              <xs:documentation>Contact was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactTagsUpdated">
            <xs:annotation>
              <xs:documentation>This contact has had its tags updated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ContactUpdatedInAB">
            <xs:annotation>
              <xs:documentation>This contact has been updated by CC in AddressBook</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CoverageAdded">
            <xs:annotation>
              <xs:documentation>Coverage was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CoverageChanged">
            <xs:annotation>
              <xs:documentation>Coverage was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CoverageRemoved">
            <xs:annotation>
              <xs:documentation>Coverage was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DataChangeAdded">
            <xs:annotation>
              <xs:documentation>DataChange was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DataChangeChanged">
            <xs:annotation>
              <xs:documentation>DataChange was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DataChangeEditorIsExecutor">
            <xs:annotation>
              <xs:documentation>This event is raised if editor of the gosu script is the same person who executed the gosu script</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DataChangeRemoved">
            <xs:annotation>
              <xs:documentation>DataChange was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DocumentAdded">
            <xs:annotation>
              <xs:documentation>Document was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DocumentChanged">
            <xs:annotation>
              <xs:documentation>Document was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DocumentRemoved">
            <xs:annotation>
              <xs:documentation>Document was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DocumentStore">
            <xs:annotation>
              <xs:documentation>This is used by the asynchronous storage to inform the transport that this document needs to be processed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ExposureAdded">
            <xs:annotation>
              <xs:documentation>Exposure was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ExposureChanged">
            <xs:annotation>
              <xs:documentation>Exposure was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ExposureRemoved">
            <xs:annotation>
              <xs:documentation>Exposure was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ExposureValid">
            <xs:annotation>
              <xs:documentation>Deprecated - test for validity directly in rules.  Fired only if DeprecatedEventGeneration is set to true in config.xml.  This event denotes that a new Exposure is valid or an existing Exposure has become valid. All events raised in this database transaction related to the Exposure, including events related to objects off of the Exposure, will be subsumed into this event.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupAdded">
            <xs:annotation>
              <xs:documentation>Group was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupChanged">
            <xs:annotation>
              <xs:documentation>Group was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupRemoved">
            <xs:annotation>
              <xs:documentation>Group was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupUserAdded">
            <xs:annotation>
              <xs:documentation>GroupUser was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupUserChanged">
            <xs:annotation>
              <xs:documentation>GroupUser was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GroupUserRemoved">
            <xs:annotation>
              <xs:documentation>GroupUser was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InboundHistoryAdded">
            <xs:annotation>
              <xs:documentation>InboundHistory was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InboundHistoryChanged">
            <xs:annotation>
              <xs:documentation>InboundHistory was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="InboundHistoryRemoved">
            <xs:annotation>
              <xs:documentation>InboundHistory was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MatterAdded">
            <xs:annotation>
              <xs:documentation>Matter was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MatterChanged">
            <xs:annotation>
              <xs:documentation>Matter was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MatterRemoved">
            <xs:annotation>
              <xs:documentation>Matter was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MetroReportAdded">
            <xs:annotation>
              <xs:documentation>MetroReport was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MetroReportChanged">
            <xs:annotation>
              <xs:documentation>MetroReport was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MetroReportRemoved">
            <xs:annotation>
              <xs:documentation>MetroReport was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NegotiationAdded">
            <xs:annotation>
              <xs:documentation>Negotiation was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NegotiationChanged">
            <xs:annotation>
              <xs:documentation>Negotiation was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NegotiationRemoved">
            <xs:annotation>
              <xs:documentation>Negotiation was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NoteAdded">
            <xs:annotation>
              <xs:documentation>Note was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NoteChanged">
            <xs:annotation>
              <xs:documentation>Note was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NoteRemoved">
            <xs:annotation>
              <xs:documentation>Note was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OrganizationAdded">
            <xs:annotation>
              <xs:documentation>Organization was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OrganizationChanged">
            <xs:annotation>
              <xs:documentation>Organization was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OrganizationRemoved">
            <xs:annotation>
              <xs:documentation>Organization was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentAdded">
            <xs:annotation>
              <xs:documentation>Payment was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentChanged">
            <xs:annotation>
              <xs:documentation>Payment was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentRecoded">
            <xs:annotation>
              <xs:documentation>Deprecated - use PaymentStatusChanged instead (fired when the this object is submitted).</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentRemoved">
            <xs:annotation>
              <xs:documentation>Payment was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PaymentStatusChanged">
            <xs:annotation>
              <xs:documentation>Fired when the payment is added, and each time its status changes.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PolicyAdded">
            <xs:annotation>
              <xs:documentation>Policy was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PolicyChanged">
            <xs:annotation>
              <xs:documentation>Policy was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PolicyRemoved">
            <xs:annotation>
              <xs:documentation>Policy was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProcessHistoryAdded">
            <xs:annotation>
              <xs:documentation>ProcessHistory was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProcessHistoryChanged">
            <xs:annotation>
              <xs:documentation>ProcessHistory was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ProcessHistoryRemoved">
            <xs:annotation>
              <xs:documentation>ProcessHistory was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PurgedRootInfoAdded">
            <xs:annotation>
              <xs:documentation>PurgedRootInfo was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PurgedRootInfoChanged">
            <xs:annotation>
              <xs:documentation>PurgedRootInfo was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PurgedRootInfoRemoved">
            <xs:annotation>
              <xs:documentation>PurgedRootInfo was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RITransactionAdded">
            <xs:annotation>
              <xs:documentation>RITransaction was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RITransactionChanged">
            <xs:annotation>
              <xs:documentation>RITransaction was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RITransactionRemoved">
            <xs:annotation>
              <xs:documentation>RITransaction was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoveryAdded">
            <xs:annotation>
              <xs:documentation>Recovery was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoveryChanged">
            <xs:annotation>
              <xs:documentation>Recovery was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoveryRemoved">
            <xs:annotation>
              <xs:documentation>Recovery was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoveryReserveAdded">
            <xs:annotation>
              <xs:documentation>RecoveryReserve was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoveryReserveChanged">
            <xs:annotation>
              <xs:documentation>RecoveryReserve was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoveryReserveRemoved">
            <xs:annotation>
              <xs:documentation>RecoveryReserve was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoveryReserveStatusChanged">
            <xs:annotation>
              <xs:documentation>Fired when the recovery reserve is added, and each time its status changes.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoveryReserveSubmitted">
            <xs:annotation>
              <xs:documentation>Deprecated.  Use RecoveryReserveStatusChanged instead.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoveryStatusChanged">
            <xs:annotation>
              <xs:documentation>Fired when the recovery is added, and each time its status changes.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoverySubmitted">
            <xs:annotation>
              <xs:documentation>Deprecated.  Use RecoveryStatusChanged instead.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RecoveryVoided">
            <xs:annotation>
              <xs:documentation>Deprecated.  Use RecoveryStatusChanged instead.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReserveAdded">
            <xs:annotation>
              <xs:documentation>Reserve was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReserveChanged">
            <xs:annotation>
              <xs:documentation>Reserve was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReserveRemoved">
            <xs:annotation>
              <xs:documentation>Reserve was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReserveStatusChanged">
            <xs:annotation>
              <xs:documentation>Fired when the reserve is added, and each time its status changes.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ReserveSubmitted">
            <xs:annotation>
              <xs:documentation>Deprecated.  Use ReserveStatusChanged instead.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RoleAdded">
            <xs:annotation>
              <xs:documentation>Role was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RoleChanged">
            <xs:annotation>
              <xs:documentation>Role was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RoleRemoved">
            <xs:annotation>
              <xs:documentation>Role was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestAdded">
            <xs:annotation>
              <xs:documentation>ServiceRequest was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestChanged">
            <xs:annotation>
              <xs:documentation>ServiceRequest was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestDocumentLinkAdded">
            <xs:annotation>
              <xs:documentation>ServiceRequestDocumentLink was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestDocumentLinkChanged">
            <xs:annotation>
              <xs:documentation>ServiceRequestDocumentLink was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestDocumentLinkRemoved">
            <xs:annotation>
              <xs:documentation>ServiceRequestDocumentLink was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestDocumentToVendorAdded">
            <xs:annotation>
              <xs:documentation>A new document sent from the Adjuster to Vendor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestInvoiceAdded">
            <xs:annotation>
              <xs:documentation>ServiceRequestInvoice was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestInvoiceChanged">
            <xs:annotation>
              <xs:documentation>ServiceRequestInvoice was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestInvoiceOperation_approveinvoice">
            <xs:annotation>
              <xs:documentation>Service request invoice operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestInvoiceOperation_payinvoice">
            <xs:annotation>
              <xs:documentation>Service request invoice operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestInvoiceOperation_rejectinvoice">
            <xs:annotation>
              <xs:documentation>Service request invoice operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestInvoiceOperation_unpayinvoice">
            <xs:annotation>
              <xs:documentation>Service request invoice operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestInvoiceOperation_withdrawinvoice">
            <xs:annotation>
              <xs:documentation>Service request invoice operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestInvoiceRemoved">
            <xs:annotation>
              <xs:documentation>ServiceRequestInvoice was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestMessageAdded">
            <xs:annotation>
              <xs:documentation>ServiceRequestMessage was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestMessageChanged">
            <xs:annotation>
              <xs:documentation>ServiceRequestMessage was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestMessageRemoved">
            <xs:annotation>
              <xs:documentation>ServiceRequestMessage was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestMessageToVendorAdded">
            <xs:annotation>
              <xs:documentation>A new message from Adjuster to Vendor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_addinvoice">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_addquote">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_approvequote">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_cancelservicerequest">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_requestrequote">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_specialistacceptedwork">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_specialistcanceled">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_specialistcompletedwork">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_specialistdeclined">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_specialistresumedwork">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_specialistwaiting">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_submitinstruction">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_updatequoteecd">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestOperation_updateserviceecd">
            <xs:annotation>
              <xs:documentation>Service request operation is performed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestRemoved">
            <xs:annotation>
              <xs:documentation>ServiceRequest was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestStatementAdded">
            <xs:annotation>
              <xs:documentation>ServiceRequestStatement was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestStatementChanged">
            <xs:annotation>
              <xs:documentation>ServiceRequestStatement was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ServiceRequestStatementRemoved">
            <xs:annotation>
              <xs:documentation>ServiceRequestStatement was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SoapCallHistoryAdded">
            <xs:annotation>
              <xs:documentation>SoapCallHistory was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SoapCallHistoryChanged">
            <xs:annotation>
              <xs:documentation>SoapCallHistory was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SoapCallHistoryRemoved">
            <xs:annotation>
              <xs:documentation>SoapCallHistory was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StartablePluginHistoryAdded">
            <xs:annotation>
              <xs:documentation>StartablePluginHistory was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StartablePluginHistoryChanged">
            <xs:annotation>
              <xs:documentation>StartablePluginHistory was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StartablePluginHistoryRemoved">
            <xs:annotation>
              <xs:documentation>StartablePluginHistory was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TransactionAdded">
            <xs:annotation>
              <xs:documentation>Transaction was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TransactionChanged">
            <xs:annotation>
              <xs:documentation>Transaction was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TransactionRemoved">
            <xs:annotation>
              <xs:documentation>Transaction was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserAdded">
            <xs:annotation>
              <xs:documentation>User was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserChanged">
            <xs:annotation>
              <xs:documentation>User was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserRemoved">
            <xs:annotation>
              <xs:documentation>User was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserSettingsAdded">
            <xs:annotation>
              <xs:documentation>UserSettings was added</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserSettingsChanged">
            <xs:annotation>
              <xs:documentation>UserSettings was changed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UserSettingsRemoved">
            <xs:annotation>
              <xs:documentation>UserSettings was removed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Currency" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of Currencies.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_aud">
            <xs:annotation>
              <xs:documentation>Australian Dollar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cad">
            <xs:annotation>
              <xs:documentation>Canadian Dollar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_eur">
            <xs:annotation>
              <xs:documentation>Euro</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gbp">
            <xs:annotation>
              <xs:documentation>United Kingdom Pound</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_jpy">
            <xs:annotation>
              <xs:documentation>Japanese Yen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rub">
            <xs:annotation>
              <xs:documentation>Russian Ruble</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usd">
            <xs:annotation>
              <xs:documentation>US Dollar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BankAccount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_default">
            <xs:annotation>
              <xs:documentation>Default bank account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BankAccountType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of bank accout e.g. checking, savings etc</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_checking">
            <xs:annotation>
              <xs:documentation>Checking</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_savings">
            <xs:annotation>
              <xs:documentation>Savings</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CheckBatching" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>How a check should be batched for sending</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_apdefault">
            <xs:annotation>
              <xs:documentation>A/P default</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bulkcheck">
            <xs:annotation>
              <xs:documentation>Check is a record keeping entity for a bulk check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CheckHandlingInstructions" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Special handling instructions for a check</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_default">
            <xs:annotation>
              <xs:documentation>Default check handling procedures</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hold">
            <xs:annotation>
              <xs:documentation>Hold for supporting documentation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CheckType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes the relationship between a check and a primary check</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_primary">
            <xs:annotation>
              <xs:documentation>The primary check in a check group</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_secondary">
            <xs:annotation>
              <xs:documentation>A non-primary check in a check group</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BenefitEndReasonType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Benefit end reason - for use on EditableClaimantDependents LV</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BenefitLimitExpired">
            <xs:annotation>
              <xs:documentation>Benefit limit expired</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NoLongerDependent">
            <xs:annotation>
              <xs:documentation>No longer dependent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Remarried">
            <xs:annotation>
              <xs:documentation>Remarried</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Contact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Contact</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Adjudicator">
            <xs:annotation>
              <xs:documentation>Adjudicator</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Attorney">
            <xs:annotation>
              <xs:documentation>Attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AutoRepairShop">
            <xs:annotation>
              <xs:documentation>Auto Repair Shop</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AutoTowingAgcy">
            <xs:annotation>
              <xs:documentation>Auto Towing Agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Company">
            <xs:annotation>
              <xs:documentation>Company</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CompanyVendor">
            <xs:annotation>
              <xs:documentation>Vendor (Company)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Contact">
            <xs:annotation>
              <xs:documentation>Contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Doctor">
            <xs:annotation>
              <xs:documentation>Doctor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LawFirm">
            <xs:annotation>
              <xs:documentation>Law Firm</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegalVenue">
            <xs:annotation>
              <xs:documentation>Legal Venue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MedicalCareOrg">
            <xs:annotation>
              <xs:documentation>Medical Care Organization</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Person">
            <xs:annotation>
              <xs:documentation>Person</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PersonVendor">
            <xs:annotation>
              <xs:documentation>Vendor (Person)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Place">
            <xs:annotation>
              <xs:documentation>Place</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UserContact">
            <xs:annotation>
              <xs:documentation>User Contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VenueType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The types of legal venues.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ADR">
            <xs:annotation>
              <xs:documentation>Alternative dispute resolution</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_County">
            <xs:annotation>
              <xs:documentation>County</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Fed">
            <xs:annotation>
              <xs:documentation>Federal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Muni">
            <xs:annotation>
              <xs:documentation>Municipal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_State">
            <xs:annotation>
              <xs:documentation>State</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StateSup">
            <xs:annotation>
              <xs:documentation>State Supreme Court</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Supreme">
            <xs:annotation>
              <xs:documentation>Supreme Court</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WcAppeals">
            <xs:annotation>
              <xs:documentation>Workers' Comp Appeals Board</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AdjudicativeDomain" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>specialty types for adjudicators</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Appeals">
            <xs:annotation>
              <xs:documentation>Appeals</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_County">
            <xs:annotation>
              <xs:documentation>County</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Disputes">
            <xs:annotation>
              <xs:documentation>Alternative Dispute Resolutions (ADR)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Federal">
            <xs:annotation>
              <xs:documentation>Federal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Municipal">
            <xs:annotation>
              <xs:documentation>Municipal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Supreme">
            <xs:annotation>
              <xs:documentation>Supreme</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SpecialtyType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>specialty types for doctors</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_allergy">
            <xs:annotation>
              <xs:documentation>Allergy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_anesthesiology">
            <xs:annotation>
              <xs:documentation>Anesthesiology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cardiology">
            <xs:annotation>
              <xs:documentation>Cardiology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dermatology">
            <xs:annotation>
              <xs:documentation>Dermatology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_emergencymed">
            <xs:annotation>
              <xs:documentation>Emergency Medicine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_endocrinology">
            <xs:annotation>
              <xs:documentation>Endocrinology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ent">
            <xs:annotation>
              <xs:documentation>ENT</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_familypractice">
            <xs:annotation>
              <xs:documentation>Family Practice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gastroenterology">
            <xs:annotation>
              <xs:documentation>Gastroenterology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hematologyonc">
            <xs:annotation>
              <xs:documentation>Hematalogy/Oncology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hospitalist">
            <xs:annotation>
              <xs:documentation>Hospitalist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_infectiousdis">
            <xs:annotation>
              <xs:documentation>Infectious Disease</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_internalmed">
            <xs:annotation>
              <xs:documentation>Internal Medicine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medpeds">
            <xs:annotation>
              <xs:documentation>Med/Peds</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nephrology">
            <xs:annotation>
              <xs:documentation>Nephrology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_neurology">
            <xs:annotation>
              <xs:documentation>Neurology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_obgyn">
            <xs:annotation>
              <xs:documentation>Obstetrics/Gynecology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_occupationalmed">
            <xs:annotation>
              <xs:documentation>Occupational Medicine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_opthalmology">
            <xs:annotation>
              <xs:documentation>Opthalmology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pathology">
            <xs:annotation>
              <xs:documentation>Pathology</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_physmedrehab">
            <xs:annotation>
              <xs:documentation>Physical Medicine/Rehabilitation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plasticsurgery">
            <xs:annotation>
              <xs:documentation>Plastic Surgery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_psychiatry">
            <xs:annotation>
              <xs:documentation>Psychiatry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pulmcritcare">
            <xs:annotation>
              <xs:documentation>Pulmonary/Critical Care</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_surgery">
            <xs:annotation>
              <xs:documentation>Surgery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LegalSpecialty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>specialty types for attornies</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_generalliability">
            <xs:annotation>
              <xs:documentation>General liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_motorvehliability">
            <xs:annotation>
              <xs:documentation>Motor vehicle liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_personalinjury">
            <xs:annotation>
              <xs:documentation>Personal injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_workerscomp">
            <xs:annotation>
              <xs:documentation>Workers' compensation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PhoneCountryCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>List of regions and their regional phone codes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AC">
            <xs:annotation>
              <xs:documentation>247</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AD">
            <xs:annotation>
              <xs:documentation>376</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AE">
            <xs:annotation>
              <xs:documentation>971</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AF">
            <xs:annotation>
              <xs:documentation>93</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AG">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AI">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AL">
            <xs:annotation>
              <xs:documentation>355</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AM">
            <xs:annotation>
              <xs:documentation>374</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AN">
            <xs:annotation>
              <xs:documentation>599</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AO">
            <xs:annotation>
              <xs:documentation>244</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AR">
            <xs:annotation>
              <xs:documentation>54</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AS">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AT">
            <xs:annotation>
              <xs:documentation>43</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU">
            <xs:annotation>
              <xs:documentation>61</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AW">
            <xs:annotation>
              <xs:documentation>297</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AX">
            <xs:annotation>
              <xs:documentation>358</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AZ">
            <xs:annotation>
              <xs:documentation>994</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BA">
            <xs:annotation>
              <xs:documentation>387</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BB">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BD">
            <xs:annotation>
              <xs:documentation>880</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BE">
            <xs:annotation>
              <xs:documentation>32</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BF">
            <xs:annotation>
              <xs:documentation>226</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BG">
            <xs:annotation>
              <xs:documentation>359</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BH">
            <xs:annotation>
              <xs:documentation>973</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BI">
            <xs:annotation>
              <xs:documentation>257</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BJ">
            <xs:annotation>
              <xs:documentation>229</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BL">
            <xs:annotation>
              <xs:documentation>590</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BM">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BN">
            <xs:annotation>
              <xs:documentation>673</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BO">
            <xs:annotation>
              <xs:documentation>591</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BQ">
            <xs:annotation>
              <xs:documentation>599</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BR">
            <xs:annotation>
              <xs:documentation>55</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BS">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BT">
            <xs:annotation>
              <xs:documentation>975</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BW">
            <xs:annotation>
              <xs:documentation>267</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BY">
            <xs:annotation>
              <xs:documentation>375</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BZ">
            <xs:annotation>
              <xs:documentation>501</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CC">
            <xs:annotation>
              <xs:documentation>61</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CD">
            <xs:annotation>
              <xs:documentation>243</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CF">
            <xs:annotation>
              <xs:documentation>236</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CG">
            <xs:annotation>
              <xs:documentation>242</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CH">
            <xs:annotation>
              <xs:documentation>41</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CI">
            <xs:annotation>
              <xs:documentation>225</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CK">
            <xs:annotation>
              <xs:documentation>682</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CL">
            <xs:annotation>
              <xs:documentation>56</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CM">
            <xs:annotation>
              <xs:documentation>237</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CN">
            <xs:annotation>
              <xs:documentation>86</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>57</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CR">
            <xs:annotation>
              <xs:documentation>506</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CU">
            <xs:annotation>
              <xs:documentation>53</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CV">
            <xs:annotation>
              <xs:documentation>238</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CW">
            <xs:annotation>
              <xs:documentation>599</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CX">
            <xs:annotation>
              <xs:documentation>61</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CY">
            <xs:annotation>
              <xs:documentation>357</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CZ">
            <xs:annotation>
              <xs:documentation>420</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE">
            <xs:annotation>
              <xs:documentation>49</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DJ">
            <xs:annotation>
              <xs:documentation>253</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DK">
            <xs:annotation>
              <xs:documentation>45</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DM">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DO">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DZ">
            <xs:annotation>
              <xs:documentation>213</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EC">
            <xs:annotation>
              <xs:documentation>593</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EE">
            <xs:annotation>
              <xs:documentation>372</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EG">
            <xs:annotation>
              <xs:documentation>20</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ER">
            <xs:annotation>
              <xs:documentation>291</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ES">
            <xs:annotation>
              <xs:documentation>34</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ET">
            <xs:annotation>
              <xs:documentation>251</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FI">
            <xs:annotation>
              <xs:documentation>358</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FJ">
            <xs:annotation>
              <xs:documentation>679</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FK">
            <xs:annotation>
              <xs:documentation>500</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FM">
            <xs:annotation>
              <xs:documentation>691</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FO">
            <xs:annotation>
              <xs:documentation>298</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FR">
            <xs:annotation>
              <xs:documentation>33</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GA">
            <xs:annotation>
              <xs:documentation>241</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GB">
            <xs:annotation>
              <xs:documentation>44</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GD">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GE">
            <xs:annotation>
              <xs:documentation>995</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GF">
            <xs:annotation>
              <xs:documentation>594</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GG">
            <xs:annotation>
              <xs:documentation>44</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GH">
            <xs:annotation>
              <xs:documentation>233</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GI">
            <xs:annotation>
              <xs:documentation>350</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GL">
            <xs:annotation>
              <xs:documentation>299</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GM">
            <xs:annotation>
              <xs:documentation>220</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GN">
            <xs:annotation>
              <xs:documentation>224</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GP">
            <xs:annotation>
              <xs:documentation>590</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GQ">
            <xs:annotation>
              <xs:documentation>240</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GR">
            <xs:annotation>
              <xs:documentation>30</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GT">
            <xs:annotation>
              <xs:documentation>502</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GU">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GW">
            <xs:annotation>
              <xs:documentation>245</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GY">
            <xs:annotation>
              <xs:documentation>592</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HK">
            <xs:annotation>
              <xs:documentation>852</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HN">
            <xs:annotation>
              <xs:documentation>504</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HR">
            <xs:annotation>
              <xs:documentation>385</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HT">
            <xs:annotation>
              <xs:documentation>509</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HU">
            <xs:annotation>
              <xs:documentation>36</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ID">
            <xs:annotation>
              <xs:documentation>62</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IE">
            <xs:annotation>
              <xs:documentation>353</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IL">
            <xs:annotation>
              <xs:documentation>972</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IM">
            <xs:annotation>
              <xs:documentation>44</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IN">
            <xs:annotation>
              <xs:documentation>91</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IO">
            <xs:annotation>
              <xs:documentation>246</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IQ">
            <xs:annotation>
              <xs:documentation>964</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IR">
            <xs:annotation>
              <xs:documentation>98</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IS">
            <xs:annotation>
              <xs:documentation>354</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IT">
            <xs:annotation>
              <xs:documentation>39</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JE">
            <xs:annotation>
              <xs:documentation>44</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JM">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JO">
            <xs:annotation>
              <xs:documentation>962</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JP">
            <xs:annotation>
              <xs:documentation>81</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KE">
            <xs:annotation>
              <xs:documentation>254</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KG">
            <xs:annotation>
              <xs:documentation>996</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KH">
            <xs:annotation>
              <xs:documentation>855</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KI">
            <xs:annotation>
              <xs:documentation>686</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KM">
            <xs:annotation>
              <xs:documentation>269</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KN">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KP">
            <xs:annotation>
              <xs:documentation>850</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KR">
            <xs:annotation>
              <xs:documentation>82</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KW">
            <xs:annotation>
              <xs:documentation>965</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KY">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KZ">
            <xs:annotation>
              <xs:documentation>7</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LA">
            <xs:annotation>
              <xs:documentation>856</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LB">
            <xs:annotation>
              <xs:documentation>961</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LC">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LI">
            <xs:annotation>
              <xs:documentation>423</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LK">
            <xs:annotation>
              <xs:documentation>94</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LR">
            <xs:annotation>
              <xs:documentation>231</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LS">
            <xs:annotation>
              <xs:documentation>266</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LT">
            <xs:annotation>
              <xs:documentation>370</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LU">
            <xs:annotation>
              <xs:documentation>352</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LV">
            <xs:annotation>
              <xs:documentation>371</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LY">
            <xs:annotation>
              <xs:documentation>218</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MA">
            <xs:annotation>
              <xs:documentation>212</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MC">
            <xs:annotation>
              <xs:documentation>377</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MD">
            <xs:annotation>
              <xs:documentation>373</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ME">
            <xs:annotation>
              <xs:documentation>382</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MF">
            <xs:annotation>
              <xs:documentation>590</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MG">
            <xs:annotation>
              <xs:documentation>261</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MH">
            <xs:annotation>
              <xs:documentation>692</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MK">
            <xs:annotation>
              <xs:documentation>389</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ML">
            <xs:annotation>
              <xs:documentation>223</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MM">
            <xs:annotation>
              <xs:documentation>95</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MN">
            <xs:annotation>
              <xs:documentation>976</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MO">
            <xs:annotation>
              <xs:documentation>853</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MP">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MQ">
            <xs:annotation>
              <xs:documentation>596</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MR">
            <xs:annotation>
              <xs:documentation>222</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MS">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MT">
            <xs:annotation>
              <xs:documentation>356</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MU">
            <xs:annotation>
              <xs:documentation>230</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MV">
            <xs:annotation>
              <xs:documentation>960</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MW">
            <xs:annotation>
              <xs:documentation>265</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MX">
            <xs:annotation>
              <xs:documentation>52</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MY">
            <xs:annotation>
              <xs:documentation>60</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MZ">
            <xs:annotation>
              <xs:documentation>258</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NA">
            <xs:annotation>
              <xs:documentation>264</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NC">
            <xs:annotation>
              <xs:documentation>687</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NE">
            <xs:annotation>
              <xs:documentation>227</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NF">
            <xs:annotation>
              <xs:documentation>672</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NG">
            <xs:annotation>
              <xs:documentation>234</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NI">
            <xs:annotation>
              <xs:documentation>505</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NL">
            <xs:annotation>
              <xs:documentation>31</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NO">
            <xs:annotation>
              <xs:documentation>47</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NP">
            <xs:annotation>
              <xs:documentation>977</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NR">
            <xs:annotation>
              <xs:documentation>674</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NU">
            <xs:annotation>
              <xs:documentation>683</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NZ">
            <xs:annotation>
              <xs:documentation>64</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OM">
            <xs:annotation>
              <xs:documentation>968</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PA">
            <xs:annotation>
              <xs:documentation>507</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PE">
            <xs:annotation>
              <xs:documentation>51</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PF">
            <xs:annotation>
              <xs:documentation>689</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PG">
            <xs:annotation>
              <xs:documentation>675</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PH">
            <xs:annotation>
              <xs:documentation>63</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PK">
            <xs:annotation>
              <xs:documentation>92</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PL">
            <xs:annotation>
              <xs:documentation>48</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PM">
            <xs:annotation>
              <xs:documentation>508</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PR">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PS">
            <xs:annotation>
              <xs:documentation>970</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PT">
            <xs:annotation>
              <xs:documentation>351</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PW">
            <xs:annotation>
              <xs:documentation>680</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PY">
            <xs:annotation>
              <xs:documentation>595</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QA">
            <xs:annotation>
              <xs:documentation>974</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RE">
            <xs:annotation>
              <xs:documentation>262</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RO">
            <xs:annotation>
              <xs:documentation>40</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RS">
            <xs:annotation>
              <xs:documentation>381</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RU">
            <xs:annotation>
              <xs:documentation>7</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RW">
            <xs:annotation>
              <xs:documentation>250</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SA">
            <xs:annotation>
              <xs:documentation>966</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SB">
            <xs:annotation>
              <xs:documentation>677</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SC">
            <xs:annotation>
              <xs:documentation>248</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SD">
            <xs:annotation>
              <xs:documentation>249</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SE">
            <xs:annotation>
              <xs:documentation>46</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SG">
            <xs:annotation>
              <xs:documentation>65</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SH">
            <xs:annotation>
              <xs:documentation>290</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SI">
            <xs:annotation>
              <xs:documentation>386</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SJ">
            <xs:annotation>
              <xs:documentation>47</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SK">
            <xs:annotation>
              <xs:documentation>421</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SL">
            <xs:annotation>
              <xs:documentation>232</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SM">
            <xs:annotation>
              <xs:documentation>378</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SN">
            <xs:annotation>
              <xs:documentation>221</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SO">
            <xs:annotation>
              <xs:documentation>252</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SR">
            <xs:annotation>
              <xs:documentation>597</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SS">
            <xs:annotation>
              <xs:documentation>211</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ST">
            <xs:annotation>
              <xs:documentation>239</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SV">
            <xs:annotation>
              <xs:documentation>503</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SX">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SY">
            <xs:annotation>
              <xs:documentation>963</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SZ">
            <xs:annotation>
              <xs:documentation>268</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TC">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TD">
            <xs:annotation>
              <xs:documentation>235</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TG">
            <xs:annotation>
              <xs:documentation>228</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TH">
            <xs:annotation>
              <xs:documentation>66</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TJ">
            <xs:annotation>
              <xs:documentation>992</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TK">
            <xs:annotation>
              <xs:documentation>690</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TL">
            <xs:annotation>
              <xs:documentation>670</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TM">
            <xs:annotation>
              <xs:documentation>993</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TN">
            <xs:annotation>
              <xs:documentation>216</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TO">
            <xs:annotation>
              <xs:documentation>676</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TR">
            <xs:annotation>
              <xs:documentation>90</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TT">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TV">
            <xs:annotation>
              <xs:documentation>688</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TW">
            <xs:annotation>
              <xs:documentation>886</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TZ">
            <xs:annotation>
              <xs:documentation>255</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UA">
            <xs:annotation>
              <xs:documentation>380</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UG">
            <xs:annotation>
              <xs:documentation>256</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UNPARSEABLE">
            <xs:annotation>
              <xs:documentation>Unparseable Phone Numbers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UY">
            <xs:annotation>
              <xs:documentation>598</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UZ">
            <xs:annotation>
              <xs:documentation>998</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VA">
            <xs:annotation>
              <xs:documentation>379</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VC">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VE">
            <xs:annotation>
              <xs:documentation>58</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VG">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VI">
            <xs:annotation>
              <xs:documentation>1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VN">
            <xs:annotation>
              <xs:documentation>84</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VU">
            <xs:annotation>
              <xs:documentation>678</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WF">
            <xs:annotation>
              <xs:documentation>681</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WS">
            <xs:annotation>
              <xs:documentation>685</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YE">
            <xs:annotation>
              <xs:documentation>967</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YT">
            <xs:annotation>
              <xs:documentation>262</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZA">
            <xs:annotation>
              <xs:documentation>27</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZM">
            <xs:annotation>
              <xs:documentation>260</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZW">
            <xs:annotation>
              <xs:documentation>263</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZZ">
            <xs:annotation>
              <xs:documentation>0</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="GenderType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Gender</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_F">
            <xs:annotation>
              <xs:documentation>Female</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_M">
            <xs:annotation>
              <xs:documentation>Male</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Jurisdiction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The list of jurisdictions regulating insurance and other licensing within this deployment. This is similar to the State typelist, which is used for addresses and locations. In many deployments, the State and Jurisdiction typelists will be equal</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AB">
            <xs:annotation>
              <xs:documentation>Alberta</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AK">
            <xs:annotation>
              <xs:documentation>Alaska</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AL">
            <xs:annotation>
              <xs:documentation>Alabama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AR">
            <xs:annotation>
              <xs:documentation>Arkansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_ACT">
            <xs:annotation>
              <xs:documentation>Australian Capital Territory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_NSW">
            <xs:annotation>
              <xs:documentation>New South Wales</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_NT">
            <xs:annotation>
              <xs:documentation>Northern Territory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_QLD">
            <xs:annotation>
              <xs:documentation>Queensland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_SA">
            <xs:annotation>
              <xs:documentation>South Australia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_TAS">
            <xs:annotation>
              <xs:documentation>Tasmania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_VIC">
            <xs:annotation>
              <xs:documentation>Victoria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_WA">
            <xs:annotation>
              <xs:documentation>Western Australia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AZ">
            <xs:annotation>
              <xs:documentation>Arizona</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BC">
            <xs:annotation>
              <xs:documentation>British Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>California</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>Colorado</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CT">
            <xs:annotation>
              <xs:documentation>Connecticut</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DC">
            <xs:annotation>
              <xs:documentation>District of Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE">
            <xs:annotation>
              <xs:documentation>Delaware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BB">
            <xs:annotation>
              <xs:documentation>Brandenburg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BE">
            <xs:annotation>
              <xs:documentation>Berlin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BW">
            <xs:annotation>
              <xs:documentation>Baden-Wuerttemberg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BY">
            <xs:annotation>
              <xs:documentation>Bavaria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HB">
            <xs:annotation>
              <xs:documentation>Bremen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HE">
            <xs:annotation>
              <xs:documentation>Hesse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HH">
            <xs:annotation>
              <xs:documentation>Hamburg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_MV">
            <xs:annotation>
              <xs:documentation>Mecklenburg-Vorpommern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_NI">
            <xs:annotation>
              <xs:documentation>Lower Saxony</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_NW">
            <xs:annotation>
              <xs:documentation>North Rhine-Westphalia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_RP">
            <xs:annotation>
              <xs:documentation>Rhineland-Palatinate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SH">
            <xs:annotation>
              <xs:documentation>Schleswig-Holstein</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SL">
            <xs:annotation>
              <xs:documentation>Saarland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SN">
            <xs:annotation>
              <xs:documentation>Saxony</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_ST">
            <xs:annotation>
              <xs:documentation>Saxony-Anhalt</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_TH">
            <xs:annotation>
              <xs:documentation>Thuringia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FL">
            <xs:annotation>
              <xs:documentation>Florida</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FM">
            <xs:annotation>
              <xs:documentation>Federated States of Micronesia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FR">
            <xs:annotation>
              <xs:documentation>France</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GA">
            <xs:annotation>
              <xs:documentation>Georgia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GB">
            <xs:annotation>
              <xs:documentation>United Kingdom</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GU">
            <xs:annotation>
              <xs:documentation>Guam</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HI">
            <xs:annotation>
              <xs:documentation>Hawaii</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IA">
            <xs:annotation>
              <xs:documentation>Iowa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ID">
            <xs:annotation>
              <xs:documentation>Idaho</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IL">
            <xs:annotation>
              <xs:documentation>Illinois</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IN">
            <xs:annotation>
              <xs:documentation>Indiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JP">
            <xs:annotation>
              <xs:documentation>Japan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KS">
            <xs:annotation>
              <xs:documentation>Kansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KY">
            <xs:annotation>
              <xs:documentation>Kentucky</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LA">
            <xs:annotation>
              <xs:documentation>Louisiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MA">
            <xs:annotation>
              <xs:documentation>Massachusetts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MB">
            <xs:annotation>
              <xs:documentation>Manitoba</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MD">
            <xs:annotation>
              <xs:documentation>Maryland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ME">
            <xs:annotation>
              <xs:documentation>Maine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MH">
            <xs:annotation>
              <xs:documentation>Marshall Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MI">
            <xs:annotation>
              <xs:documentation>Michigan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MN">
            <xs:annotation>
              <xs:documentation>Minnesota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MO">
            <xs:annotation>
              <xs:documentation>Missouri</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MP">
            <xs:annotation>
              <xs:documentation>Northern Mariana Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MS">
            <xs:annotation>
              <xs:documentation>Mississippi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MT">
            <xs:annotation>
              <xs:documentation>Montana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NB">
            <xs:annotation>
              <xs:documentation>New Brunswick</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NC">
            <xs:annotation>
              <xs:documentation>North Carolina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ND">
            <xs:annotation>
              <xs:documentation>North Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NE">
            <xs:annotation>
              <xs:documentation>Nebraska</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NH">
            <xs:annotation>
              <xs:documentation>New Hampshire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NJ">
            <xs:annotation>
              <xs:documentation>New Jersey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NL">
            <xs:annotation>
              <xs:documentation>Newfoundland and Labrador</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NM">
            <xs:annotation>
              <xs:documentation>New Mexico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NS">
            <xs:annotation>
              <xs:documentation>Nova Scotia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NT">
            <xs:annotation>
              <xs:documentation>Northwest Territories</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NU">
            <xs:annotation>
              <xs:documentation>Nunavut</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NV">
            <xs:annotation>
              <xs:documentation>Nevada</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NY">
            <xs:annotation>
              <xs:documentation>New York</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OH">
            <xs:annotation>
              <xs:documentation>Ohio</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OK">
            <xs:annotation>
              <xs:documentation>Oklahoma</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ON">
            <xs:annotation>
              <xs:documentation>Ontario</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OR">
            <xs:annotation>
              <xs:documentation>Oregon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PA">
            <xs:annotation>
              <xs:documentation>Pennsylvania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PE">
            <xs:annotation>
              <xs:documentation>Prince Edward Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PR">
            <xs:annotation>
              <xs:documentation>Puerto Rico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QC">
            <xs:annotation>
              <xs:documentation>Quebec</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RI">
            <xs:annotation>
              <xs:documentation>Rhode Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SC">
            <xs:annotation>
              <xs:documentation>South Carolina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SD">
            <xs:annotation>
              <xs:documentation>South Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SK">
            <xs:annotation>
              <xs:documentation>Saskatchewan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TN">
            <xs:annotation>
              <xs:documentation>Tennessee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TX">
            <xs:annotation>
              <xs:documentation>Texas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UT">
            <xs:annotation>
              <xs:documentation>Utah</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VA">
            <xs:annotation>
              <xs:documentation>Virginia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VI">
            <xs:annotation>
              <xs:documentation>Virgin Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VT">
            <xs:annotation>
              <xs:documentation>Vermont</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WA">
            <xs:annotation>
              <xs:documentation>Washington</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WI">
            <xs:annotation>
              <xs:documentation>Wisconsin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WV">
            <xs:annotation>
              <xs:documentation>West Virginia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WY">
            <xs:annotation>
              <xs:documentation>Wyoming</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YT">
            <xs:annotation>
              <xs:documentation>Yukon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MaritalStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An individual's marital status</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_common">
            <xs:annotation>
              <xs:documentation>Common law spouse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_divorced">
            <xs:annotation>
              <xs:documentation>Divorced</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_married">
            <xs:annotation>
              <xs:documentation>Married</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_separated">
            <xs:annotation>
              <xs:documentation>Separated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_single">
            <xs:annotation>
              <xs:documentation>Single</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unknown">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_widowed">
            <xs:annotation>
              <xs:documentation>Spouse deceased</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NamePrefix" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_dr">
            <xs:annotation>
              <xs:documentation>Dr.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mr">
            <xs:annotation>
              <xs:documentation>Mr.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mrs">
            <xs:annotation>
              <xs:documentation>Mrs.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ms">
            <xs:annotation>
              <xs:documentation>Ms.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NameSuffix" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_c_II">
            <xs:annotation>
              <xs:documentation>II</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_III">
            <xs:annotation>
              <xs:documentation>III</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_IV">
            <xs:annotation>
              <xs:documentation>IV</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_Ir">
            <xs:annotation>
              <xs:documentation>I</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_do">
            <xs:annotation>
              <xs:documentation>D.O.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_md">
            <xs:annotation>
              <xs:documentation>M.D.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_c_phd">
            <xs:annotation>
              <xs:documentation>PhD.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_esq">
            <xs:annotation>
              <xs:documentation>Esquire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_jr">
            <xs:annotation>
              <xs:documentation>Jr.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sr">
            <xs:annotation>
              <xs:documentation>Sr.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TaxFilingStatusType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>type of employee</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_headofhousehold">
            <xs:annotation>
              <xs:documentation>Head of household</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_married$45$joint">
            <xs:annotation>
              <xs:documentation>Married filing jointly</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_married$45$separate">
            <xs:annotation>
              <xs:documentation>Married filing separately</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_single">
            <xs:annotation>
              <xs:documentation>Single</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_widow">
            <xs:annotation>
              <xs:documentation>Qualifying widow(er) with dependent child</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AutoSync" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The status code for auto-sync</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Allow">
            <xs:annotation>
              <xs:documentation>Allow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Disallow">
            <xs:annotation>
              <xs:documentation>Disallow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Suspended">
            <xs:annotation>
              <xs:documentation>Suspended</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReviewCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Category for Service Provider Management Review questions and categories; generally, this will be extended by customers</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_accuracy">
            <xs:annotation>
              <xs:documentation>Accuracy of Quote</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_adjuster">
            <xs:annotation>
              <xs:documentation>Section for adjusters to add comments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_communication">
            <xs:annotation>
              <xs:documentation>Communication</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>A default category for general questions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_officestaff">
            <xs:annotation>
              <xs:documentation>Office Personnel.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_quality">
            <xs:annotation>
              <xs:documentation>Quality of Work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_technicians">
            <xs:annotation>
              <xs:documentation>Technicians</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_timeliness">
            <xs:annotation>
              <xs:documentation>Timeliness</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Address" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Address</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Address">
            <xs:annotation>
              <xs:documentation>Address</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AddressType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of mailing addresses</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_billing">
            <xs:annotation>
              <xs:documentation>Billing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_business">
            <xs:annotation>
              <xs:documentation>Business</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_home">
            <xs:annotation>
              <xs:documentation>Home</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Country" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>List of regions, or countries</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AD">
            <xs:annotation>
              <xs:documentation>Andorra</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AE">
            <xs:annotation>
              <xs:documentation>United Arab Emirates</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AF">
            <xs:annotation>
              <xs:documentation>Afghanistan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AG">
            <xs:annotation>
              <xs:documentation>Antigua and Barbuda</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AI">
            <xs:annotation>
              <xs:documentation>Anguilla</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AL">
            <xs:annotation>
              <xs:documentation>Albania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AM">
            <xs:annotation>
              <xs:documentation>Armenia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AN">
            <xs:annotation>
              <xs:documentation>Netherlands Antilles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AO">
            <xs:annotation>
              <xs:documentation>Angola</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AQ">
            <xs:annotation>
              <xs:documentation>Antarctica</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AR">
            <xs:annotation>
              <xs:documentation>Argentina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AS">
            <xs:annotation>
              <xs:documentation>American Samoa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AT">
            <xs:annotation>
              <xs:documentation>Austria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU">
            <xs:annotation>
              <xs:documentation>Australia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AW">
            <xs:annotation>
              <xs:documentation>Aruba</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AZ">
            <xs:annotation>
              <xs:documentation>Azerbaijan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BA">
            <xs:annotation>
              <xs:documentation>Bosnia and Herzegovina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BB">
            <xs:annotation>
              <xs:documentation>Barbados</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BD">
            <xs:annotation>
              <xs:documentation>Bangladesh</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BE">
            <xs:annotation>
              <xs:documentation>Belgium</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BF">
            <xs:annotation>
              <xs:documentation>Burkina Faso</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BG">
            <xs:annotation>
              <xs:documentation>Bulgaria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BH">
            <xs:annotation>
              <xs:documentation>Bahrain</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BI">
            <xs:annotation>
              <xs:documentation>Burundi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BJ">
            <xs:annotation>
              <xs:documentation>Benin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BL">
            <xs:annotation>
              <xs:documentation>Saint Barthelemy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BM">
            <xs:annotation>
              <xs:documentation>Bermuda</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BN">
            <xs:annotation>
              <xs:documentation>Brunei</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BO">
            <xs:annotation>
              <xs:documentation>Bolivia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BR">
            <xs:annotation>
              <xs:documentation>Brazil</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BS">
            <xs:annotation>
              <xs:documentation>Bahamas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BT">
            <xs:annotation>
              <xs:documentation>Bhutan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BV">
            <xs:annotation>
              <xs:documentation>Bouvet Island (Bouvetoya)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BW">
            <xs:annotation>
              <xs:documentation>Botswana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BY">
            <xs:annotation>
              <xs:documentation>Belarus</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BZ">
            <xs:annotation>
              <xs:documentation>Belize</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>Canada</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CC">
            <xs:annotation>
              <xs:documentation>Cocos (Keeling) Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CD">
            <xs:annotation>
              <xs:documentation>Congo - Kinshasa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CF">
            <xs:annotation>
              <xs:documentation>Central African Republic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CG">
            <xs:annotation>
              <xs:documentation>Congo - Brazzaville</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CH">
            <xs:annotation>
              <xs:documentation>Switzerland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CI">
            <xs:annotation>
              <xs:documentation>Ivory Coast</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CK">
            <xs:annotation>
              <xs:documentation>Cook Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CL">
            <xs:annotation>
              <xs:documentation>Chile</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CM">
            <xs:annotation>
              <xs:documentation>Cameroon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CN">
            <xs:annotation>
              <xs:documentation>China</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>Colombia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CR">
            <xs:annotation>
              <xs:documentation>Costa Rica</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CU">
            <xs:annotation>
              <xs:documentation>Cuba</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CV">
            <xs:annotation>
              <xs:documentation>Cape Verde</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CX">
            <xs:annotation>
              <xs:documentation>Christmas Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CY">
            <xs:annotation>
              <xs:documentation>Cyprus</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CZ">
            <xs:annotation>
              <xs:documentation>Czech Republic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE">
            <xs:annotation>
              <xs:documentation>Germany</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DJ">
            <xs:annotation>
              <xs:documentation>Djibouti</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DK">
            <xs:annotation>
              <xs:documentation>Denmark</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DM">
            <xs:annotation>
              <xs:documentation>Dominica</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DO">
            <xs:annotation>
              <xs:documentation>Dominican Republic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DZ">
            <xs:annotation>
              <xs:documentation>Algeria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EC">
            <xs:annotation>
              <xs:documentation>Ecuador</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EE">
            <xs:annotation>
              <xs:documentation>Estonia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EG">
            <xs:annotation>
              <xs:documentation>Egypt</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EH">
            <xs:annotation>
              <xs:documentation>Western Sahara</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ER">
            <xs:annotation>
              <xs:documentation>Eritrea</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ES">
            <xs:annotation>
              <xs:documentation>Spain</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ET">
            <xs:annotation>
              <xs:documentation>Ethiopia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FI">
            <xs:annotation>
              <xs:documentation>Finland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FJ">
            <xs:annotation>
              <xs:documentation>Fiji, Republic of the Fiji Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FK">
            <xs:annotation>
              <xs:documentation>Falkland Islands (Malvinas)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FM">
            <xs:annotation>
              <xs:documentation>Micronesia, Federated States of</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FO">
            <xs:annotation>
              <xs:documentation>Faroe Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FR">
            <xs:annotation>
              <xs:documentation>France</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GA">
            <xs:annotation>
              <xs:documentation>Gabon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GB">
            <xs:annotation>
              <xs:documentation>United Kingdom</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GD">
            <xs:annotation>
              <xs:documentation>Grenada</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GE">
            <xs:annotation>
              <xs:documentation>Georgia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GF">
            <xs:annotation>
              <xs:documentation>French Guiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GH">
            <xs:annotation>
              <xs:documentation>Ghana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GI">
            <xs:annotation>
              <xs:documentation>Gibraltar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GL">
            <xs:annotation>
              <xs:documentation>Greenland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GM">
            <xs:annotation>
              <xs:documentation>Gambia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GN">
            <xs:annotation>
              <xs:documentation>Guinea</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GP">
            <xs:annotation>
              <xs:documentation>Guadeloupe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GQ">
            <xs:annotation>
              <xs:documentation>Equatorial Guinea</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GR">
            <xs:annotation>
              <xs:documentation>Greece</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GS">
            <xs:annotation>
              <xs:documentation>South Georgia and the South Sandwich Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GT">
            <xs:annotation>
              <xs:documentation>Guatemala</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GU">
            <xs:annotation>
              <xs:documentation>Guam</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GW">
            <xs:annotation>
              <xs:documentation>Guinea-Bissau</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GY">
            <xs:annotation>
              <xs:documentation>Guyana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HK">
            <xs:annotation>
              <xs:documentation>Hong Kong SAR China</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HM">
            <xs:annotation>
              <xs:documentation>Heard and McDonald Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HN">
            <xs:annotation>
              <xs:documentation>Honduras</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HR">
            <xs:annotation>
              <xs:documentation>Croatia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HT">
            <xs:annotation>
              <xs:documentation>Haiti</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HU">
            <xs:annotation>
              <xs:documentation>Hungary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ID">
            <xs:annotation>
              <xs:documentation>Indonesia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IE">
            <xs:annotation>
              <xs:documentation>Ireland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IL">
            <xs:annotation>
              <xs:documentation>Israel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IN">
            <xs:annotation>
              <xs:documentation>India</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IO">
            <xs:annotation>
              <xs:documentation>British Indian Ocean Territory (Chagos Archipelago)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IQ">
            <xs:annotation>
              <xs:documentation>Iraq</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IR">
            <xs:annotation>
              <xs:documentation>Iran</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IS">
            <xs:annotation>
              <xs:documentation>Iceland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IT">
            <xs:annotation>
              <xs:documentation>Italy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JM">
            <xs:annotation>
              <xs:documentation>Jamaica</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JO">
            <xs:annotation>
              <xs:documentation>Jordan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JP">
            <xs:annotation>
              <xs:documentation>Japan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KE">
            <xs:annotation>
              <xs:documentation>Kenya</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KG">
            <xs:annotation>
              <xs:documentation>Kyrgyz Republic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KH">
            <xs:annotation>
              <xs:documentation>Cambodia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KI">
            <xs:annotation>
              <xs:documentation>Kiribati</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KM">
            <xs:annotation>
              <xs:documentation>Comoros</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KN">
            <xs:annotation>
              <xs:documentation>St. Kitts and Nevis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KP">
            <xs:annotation>
              <xs:documentation>Korea, North</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KR">
            <xs:annotation>
              <xs:documentation>Korea, South</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KW">
            <xs:annotation>
              <xs:documentation>Kuwait</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KY">
            <xs:annotation>
              <xs:documentation>Cayman Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KZ">
            <xs:annotation>
              <xs:documentation>Kazakhstan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LA">
            <xs:annotation>
              <xs:documentation>Laos</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LB">
            <xs:annotation>
              <xs:documentation>Lebanon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LC">
            <xs:annotation>
              <xs:documentation>St. Lucia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LI">
            <xs:annotation>
              <xs:documentation>Liechtenstein</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LK">
            <xs:annotation>
              <xs:documentation>Sri Lanka</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LR">
            <xs:annotation>
              <xs:documentation>Liberia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LS">
            <xs:annotation>
              <xs:documentation>Lesotho</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LT">
            <xs:annotation>
              <xs:documentation>Lithuania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LU">
            <xs:annotation>
              <xs:documentation>Luxembourg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LV">
            <xs:annotation>
              <xs:documentation>Latvia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LY">
            <xs:annotation>
              <xs:documentation>Libya</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MA">
            <xs:annotation>
              <xs:documentation>Morocco</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MC">
            <xs:annotation>
              <xs:documentation>Monaco</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MD">
            <xs:annotation>
              <xs:documentation>Moldova</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ME">
            <xs:annotation>
              <xs:documentation>Montenegro</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MF">
            <xs:annotation>
              <xs:documentation>Saint Martin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MG">
            <xs:annotation>
              <xs:documentation>Madagascar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MH">
            <xs:annotation>
              <xs:documentation>Marshall Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MK">
            <xs:annotation>
              <xs:documentation>Macedonia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ML">
            <xs:annotation>
              <xs:documentation>Mali</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MM">
            <xs:annotation>
              <xs:documentation>Myanmar [Burma]</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MN">
            <xs:annotation>
              <xs:documentation>Mongolia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MO">
            <xs:annotation>
              <xs:documentation>Macau SAR China</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MP">
            <xs:annotation>
              <xs:documentation>Northern Mariana Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MQ">
            <xs:annotation>
              <xs:documentation>Martinique</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MR">
            <xs:annotation>
              <xs:documentation>Mauritania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MS">
            <xs:annotation>
              <xs:documentation>Montserrat</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MT">
            <xs:annotation>
              <xs:documentation>Malta</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MU">
            <xs:annotation>
              <xs:documentation>Mauritius</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MV">
            <xs:annotation>
              <xs:documentation>Maldives</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MW">
            <xs:annotation>
              <xs:documentation>Malawi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MX">
            <xs:annotation>
              <xs:documentation>Mexico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MY">
            <xs:annotation>
              <xs:documentation>Malaysia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MZ">
            <xs:annotation>
              <xs:documentation>Mozambique</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NA">
            <xs:annotation>
              <xs:documentation>Namibia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NC">
            <xs:annotation>
              <xs:documentation>New Caledonia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NE">
            <xs:annotation>
              <xs:documentation>Niger</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NF">
            <xs:annotation>
              <xs:documentation>Norfolk Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NG">
            <xs:annotation>
              <xs:documentation>Nigeria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NI">
            <xs:annotation>
              <xs:documentation>Nicaragua</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NL">
            <xs:annotation>
              <xs:documentation>Netherlands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NO">
            <xs:annotation>
              <xs:documentation>Norway</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NP">
            <xs:annotation>
              <xs:documentation>Nepal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NR">
            <xs:annotation>
              <xs:documentation>Nauru</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NU">
            <xs:annotation>
              <xs:documentation>Niue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NZ">
            <xs:annotation>
              <xs:documentation>New Zealand</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OM">
            <xs:annotation>
              <xs:documentation>Oman</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PA">
            <xs:annotation>
              <xs:documentation>Panama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PE">
            <xs:annotation>
              <xs:documentation>Peru</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PF">
            <xs:annotation>
              <xs:documentation>French Polynesia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PG">
            <xs:annotation>
              <xs:documentation>Papua New Guinea</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PH">
            <xs:annotation>
              <xs:documentation>Philippines</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PK">
            <xs:annotation>
              <xs:documentation>Pakistan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PL">
            <xs:annotation>
              <xs:documentation>Poland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PM">
            <xs:annotation>
              <xs:documentation>St. Pierre and Miquelon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PN">
            <xs:annotation>
              <xs:documentation>Pitcairn Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PR">
            <xs:annotation>
              <xs:documentation>Puerto Rico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PS">
            <xs:annotation>
              <xs:documentation>Palestinian Interim Self-Government Authority</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PT">
            <xs:annotation>
              <xs:documentation>Portugal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PW">
            <xs:annotation>
              <xs:documentation>Palau</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PY">
            <xs:annotation>
              <xs:documentation>Paraguay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QA">
            <xs:annotation>
              <xs:documentation>Qatar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RE">
            <xs:annotation>
              <xs:documentation>Reunion</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RO">
            <xs:annotation>
              <xs:documentation>Romania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RS">
            <xs:annotation>
              <xs:documentation>Serbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RU">
            <xs:annotation>
              <xs:documentation>Russia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RW">
            <xs:annotation>
              <xs:documentation>Rwanda</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SA">
            <xs:annotation>
              <xs:documentation>Saudi Arabia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SB">
            <xs:annotation>
              <xs:documentation>Solomon Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SC">
            <xs:annotation>
              <xs:documentation>Seychelles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SD">
            <xs:annotation>
              <xs:documentation>Sudan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SE">
            <xs:annotation>
              <xs:documentation>Sweden</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SG">
            <xs:annotation>
              <xs:documentation>Singapore</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SH">
            <xs:annotation>
              <xs:documentation>St. Helena</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SI">
            <xs:annotation>
              <xs:documentation>Slovenia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SJ">
            <xs:annotation>
              <xs:documentation>Svalbard and Jan Mayen Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SK">
            <xs:annotation>
              <xs:documentation>Slovakia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SL">
            <xs:annotation>
              <xs:documentation>Sierra Leone</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SM">
            <xs:annotation>
              <xs:documentation>San Marino</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SN">
            <xs:annotation>
              <xs:documentation>Senegal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SO">
            <xs:annotation>
              <xs:documentation>Somalia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SR">
            <xs:annotation>
              <xs:documentation>Suriname</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ST">
            <xs:annotation>
              <xs:documentation>Sao Tome and Principe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SV">
            <xs:annotation>
              <xs:documentation>El Salvador</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SY">
            <xs:annotation>
              <xs:documentation>Syria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SZ">
            <xs:annotation>
              <xs:documentation>Swaziland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TC">
            <xs:annotation>
              <xs:documentation>Turks and Caicos Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TD">
            <xs:annotation>
              <xs:documentation>Chad</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TF">
            <xs:annotation>
              <xs:documentation>French Southern Territories</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TG">
            <xs:annotation>
              <xs:documentation>Togo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TH">
            <xs:annotation>
              <xs:documentation>Thailand</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TJ">
            <xs:annotation>
              <xs:documentation>Tajikistan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TK">
            <xs:annotation>
              <xs:documentation>Tokelau (Tokelau Islands)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TL">
            <xs:annotation>
              <xs:documentation>Timor-Leste</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TM">
            <xs:annotation>
              <xs:documentation>Turkmenistan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TN">
            <xs:annotation>
              <xs:documentation>Tunisia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TO">
            <xs:annotation>
              <xs:documentation>Tonga</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TR">
            <xs:annotation>
              <xs:documentation>Turkey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TT">
            <xs:annotation>
              <xs:documentation>Trinidad and Tobago</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TV">
            <xs:annotation>
              <xs:documentation>Tuvalu</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TW">
            <xs:annotation>
              <xs:documentation>Taiwan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TZ">
            <xs:annotation>
              <xs:documentation>Tanzania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UA">
            <xs:annotation>
              <xs:documentation>Ukraine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UG">
            <xs:annotation>
              <xs:documentation>Uganda</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UM">
            <xs:annotation>
              <xs:documentation>U.S. Minor Outlying Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US">
            <xs:annotation>
              <xs:documentation>United States</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UY">
            <xs:annotation>
              <xs:documentation>Uruguay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UZ">
            <xs:annotation>
              <xs:documentation>Uzbekistan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VA">
            <xs:annotation>
              <xs:documentation>Vatican City</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VC">
            <xs:annotation>
              <xs:documentation>St. Vincent and the Grenadines</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VE">
            <xs:annotation>
              <xs:documentation>Venezuela</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VG">
            <xs:annotation>
              <xs:documentation>British Virgin Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VI">
            <xs:annotation>
              <xs:documentation>U.S. Virgin Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VN">
            <xs:annotation>
              <xs:documentation>Vietnam</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VU">
            <xs:annotation>
              <xs:documentation>Vanuatu</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WF">
            <xs:annotation>
              <xs:documentation>Wallis and Futuna Islands</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WS">
            <xs:annotation>
              <xs:documentation>Samoa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YE">
            <xs:annotation>
              <xs:documentation>Yemen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YT">
            <xs:annotation>
              <xs:documentation>Mayotte</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZA">
            <xs:annotation>
              <xs:documentation>South Africa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZM">
            <xs:annotation>
              <xs:documentation>Zambia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZW">
            <xs:annotation>
              <xs:documentation>Zimbabwe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unknown">
            <xs:annotation>
              <xs:documentation>Placeholder typecode for fields that should be populated with another Country</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="GeocodeStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes the status of a geocode on an Address: customers may modify it for different geocoding providers.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_city">
            <xs:annotation>
              <xs:documentation>The Geocoding service was only able to locate the city from the supplied address.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exact">
            <xs:annotation>
              <xs:documentation>The Geocoding service was able to find an exact match for the supplied address.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_failure">
            <xs:annotation>
              <xs:documentation>The Geocoding service was unable to geocode the address.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_none">
            <xs:annotation>
              <xs:documentation>An Address has never been submitted for geocoding.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_postalcode">
            <xs:annotation>
              <xs:documentation>The Geocoding service was only able to locate the postal code from the supplied address.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_street">
            <xs:annotation>
              <xs:documentation>The Geocoding service was only able to locate the street from the supplied address.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="State" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AB">
            <xs:annotation>
              <xs:documentation>Alberta</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AK">
            <xs:annotation>
              <xs:documentation>Alaska</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AL">
            <xs:annotation>
              <xs:documentation>Alabama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AR">
            <xs:annotation>
              <xs:documentation>Arkansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_ACT">
            <xs:annotation>
              <xs:documentation>Australian Capital Territory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_JBT">
            <xs:annotation>
              <xs:documentation>Jervis Bay Territory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_NSW">
            <xs:annotation>
              <xs:documentation>New South Wales</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_NT">
            <xs:annotation>
              <xs:documentation>Northern Territory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_QLD">
            <xs:annotation>
              <xs:documentation>Queensland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_SA">
            <xs:annotation>
              <xs:documentation>South Australia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_TAS">
            <xs:annotation>
              <xs:documentation>Tasmania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_VIC">
            <xs:annotation>
              <xs:documentation>Victoria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AU_WA">
            <xs:annotation>
              <xs:documentation>Western Australia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AZ">
            <xs:annotation>
              <xs:documentation>Arizona</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Aichi">
            <xs:annotation>
              <xs:documentation>Aichi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Akita">
            <xs:annotation>
              <xs:documentation>Akita</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Aomori">
            <xs:annotation>
              <xs:documentation>Aomori</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BC">
            <xs:annotation>
              <xs:documentation>British Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>California</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>Colorado</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CT">
            <xs:annotation>
              <xs:documentation>Connecticut</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Chiba">
            <xs:annotation>
              <xs:documentation>Chiba</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DC">
            <xs:annotation>
              <xs:documentation>District of Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE">
            <xs:annotation>
              <xs:documentation>Delaware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BB">
            <xs:annotation>
              <xs:documentation>Brandenburg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BE">
            <xs:annotation>
              <xs:documentation>Berlin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BW">
            <xs:annotation>
              <xs:documentation>Baden-Wuerttemberg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_BY">
            <xs:annotation>
              <xs:documentation>Bavaria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HB">
            <xs:annotation>
              <xs:documentation>Bremen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HE">
            <xs:annotation>
              <xs:documentation>Hesse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_HH">
            <xs:annotation>
              <xs:documentation>Hamburg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_MV">
            <xs:annotation>
              <xs:documentation>Mecklenburg-Vorpommern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_NI">
            <xs:annotation>
              <xs:documentation>Lower Saxony</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_NW">
            <xs:annotation>
              <xs:documentation>North Rhine-Westphalia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_RP">
            <xs:annotation>
              <xs:documentation>Rhineland-Palatinate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SH">
            <xs:annotation>
              <xs:documentation>Schleswig-Holstein</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SL">
            <xs:annotation>
              <xs:documentation>Saarland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_SN">
            <xs:annotation>
              <xs:documentation>Saxony</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_ST">
            <xs:annotation>
              <xs:documentation>Saxony-Anhalt</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE_TH">
            <xs:annotation>
              <xs:documentation>Thuringia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Ehime">
            <xs:annotation>
              <xs:documentation>Ehime</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FL">
            <xs:annotation>
              <xs:documentation>Florida</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Fukui">
            <xs:annotation>
              <xs:documentation>Fukui</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Fukuoka">
            <xs:annotation>
              <xs:documentation>Fukuoka</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Fukushima">
            <xs:annotation>
              <xs:documentation>Fukushima</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GA">
            <xs:annotation>
              <xs:documentation>Georgia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Gifu">
            <xs:annotation>
              <xs:documentation>Gifu</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Gumma">
            <xs:annotation>
              <xs:documentation>Gumma</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HI">
            <xs:annotation>
              <xs:documentation>Hawaii</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Hiroshima">
            <xs:annotation>
              <xs:documentation>Hiroshima</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Hokkaido">
            <xs:annotation>
              <xs:documentation>Hokkaido</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Hyogo">
            <xs:annotation>
              <xs:documentation>Hyogo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IA">
            <xs:annotation>
              <xs:documentation>Iowa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ID">
            <xs:annotation>
              <xs:documentation>Idaho</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IL">
            <xs:annotation>
              <xs:documentation>Illinois</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IN">
            <xs:annotation>
              <xs:documentation>Indiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Ibaraki">
            <xs:annotation>
              <xs:documentation>Ibaraki</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Ishikawa">
            <xs:annotation>
              <xs:documentation>Ishikawa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Iwate">
            <xs:annotation>
              <xs:documentation>Iwate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KS">
            <xs:annotation>
              <xs:documentation>Kansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KY">
            <xs:annotation>
              <xs:documentation>Kentucky</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kagawa">
            <xs:annotation>
              <xs:documentation>Kagawa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kagoshima">
            <xs:annotation>
              <xs:documentation>Kagoshima</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kanagawa">
            <xs:annotation>
              <xs:documentation>Kanagawa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kochi">
            <xs:annotation>
              <xs:documentation>Kochi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kumamoto">
            <xs:annotation>
              <xs:documentation>Kumamoto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kyoto">
            <xs:annotation>
              <xs:documentation>Kyoto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LA">
            <xs:annotation>
              <xs:documentation>Louisiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MA">
            <xs:annotation>
              <xs:documentation>Massachusetts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MB">
            <xs:annotation>
              <xs:documentation>Manitoba</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MD">
            <xs:annotation>
              <xs:documentation>Maryland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ME">
            <xs:annotation>
              <xs:documentation>Maine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MI">
            <xs:annotation>
              <xs:documentation>Michigan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MN">
            <xs:annotation>
              <xs:documentation>Minnesota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MO">
            <xs:annotation>
              <xs:documentation>Missouri</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MS">
            <xs:annotation>
              <xs:documentation>Mississippi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MT">
            <xs:annotation>
              <xs:documentation>Montana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Mie">
            <xs:annotation>
              <xs:documentation>Mie</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Miyagi">
            <xs:annotation>
              <xs:documentation>Miyagi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Miyazaki">
            <xs:annotation>
              <xs:documentation>Miyazaki</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NB">
            <xs:annotation>
              <xs:documentation>New Brunswick</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NC">
            <xs:annotation>
              <xs:documentation>North Carolina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ND">
            <xs:annotation>
              <xs:documentation>North Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NE">
            <xs:annotation>
              <xs:documentation>Nebraska</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NH">
            <xs:annotation>
              <xs:documentation>New Hampshire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NJ">
            <xs:annotation>
              <xs:documentation>New Jersey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NL">
            <xs:annotation>
              <xs:documentation>Newfoundland and Labrador</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NM">
            <xs:annotation>
              <xs:documentation>New Mexico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NS">
            <xs:annotation>
              <xs:documentation>Nova Scotia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NT">
            <xs:annotation>
              <xs:documentation>Northwest Territories</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NU">
            <xs:annotation>
              <xs:documentation>Nunavut</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NV">
            <xs:annotation>
              <xs:documentation>Nevada</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NY">
            <xs:annotation>
              <xs:documentation>New York</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Nagano">
            <xs:annotation>
              <xs:documentation>Nagano</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Nagasaki">
            <xs:annotation>
              <xs:documentation>Nagasaki</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Nara">
            <xs:annotation>
              <xs:documentation>Nara</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Niigata">
            <xs:annotation>
              <xs:documentation>Niigata</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OH">
            <xs:annotation>
              <xs:documentation>Ohio</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OK">
            <xs:annotation>
              <xs:documentation>Oklahoma</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ON">
            <xs:annotation>
              <xs:documentation>Ontario</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OR">
            <xs:annotation>
              <xs:documentation>Oregon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Oita">
            <xs:annotation>
              <xs:documentation>Oita</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Okayama">
            <xs:annotation>
              <xs:documentation>Okayama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Okinawa">
            <xs:annotation>
              <xs:documentation>Okinawa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Osaka">
            <xs:annotation>
              <xs:documentation>Osaka</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PA">
            <xs:annotation>
              <xs:documentation>Pennsylvania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PE">
            <xs:annotation>
              <xs:documentation>Prince Edward Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PR">
            <xs:annotation>
              <xs:documentation>Puerto Rico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QC">
            <xs:annotation>
              <xs:documentation>Quebec</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RI">
            <xs:annotation>
              <xs:documentation>Rhode Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SC">
            <xs:annotation>
              <xs:documentation>South Carolina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SD">
            <xs:annotation>
              <xs:documentation>South Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SK">
            <xs:annotation>
              <xs:documentation>Saskatchewan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Saga">
            <xs:annotation>
              <xs:documentation>Saga</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Saitama">
            <xs:annotation>
              <xs:documentation>Saitama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Shiga">
            <xs:annotation>
              <xs:documentation>Shiga</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Shimane">
            <xs:annotation>
              <xs:documentation>Shimane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Shizuoka">
            <xs:annotation>
              <xs:documentation>Shizuoka</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TN">
            <xs:annotation>
              <xs:documentation>Tennessee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TX">
            <xs:annotation>
              <xs:documentation>Texas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Tochigi">
            <xs:annotation>
              <xs:documentation>Tochigi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Tokushima">
            <xs:annotation>
              <xs:documentation>Tokushima</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Tokyo">
            <xs:annotation>
              <xs:documentation>Tokyo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Tottori">
            <xs:annotation>
              <xs:documentation>Tottori</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Toyama">
            <xs:annotation>
              <xs:documentation>Toyama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UT">
            <xs:annotation>
              <xs:documentation>Utah</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VA">
            <xs:annotation>
              <xs:documentation>Virginia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VT">
            <xs:annotation>
              <xs:documentation>Vermont</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WA">
            <xs:annotation>
              <xs:documentation>Washington</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WI">
            <xs:annotation>
              <xs:documentation>Wisconsin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WV">
            <xs:annotation>
              <xs:documentation>West Virginia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WY">
            <xs:annotation>
              <xs:documentation>Wyoming</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Wakayama">
            <xs:annotation>
              <xs:documentation>Wakayama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YT">
            <xs:annotation>
              <xs:documentation>Yukon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Yamagata">
            <xs:annotation>
              <xs:documentation>Yamagata</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Yamaguchi">
            <xs:annotation>
              <xs:documentation>Yamaguchi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Yamanashi">
            <xs:annotation>
              <xs:documentation>Yamanashi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OfficialID" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity OfficialID</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_OfficialID">
            <xs:annotation>
              <xs:documentation>OfficialID</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OfficialIDType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of official ID (for example, SSN, FEIN, state tax, state unemployment, and so on)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BureauID">
            <xs:annotation>
              <xs:documentation>Bureau ID</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DOLID">
            <xs:annotation>
              <xs:documentation>Dept of Labor ID</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DUNS">
            <xs:annotation>
              <xs:documentation>Dun &amp; Bradstreet Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FEIN">
            <xs:annotation>
              <xs:documentation>Federal Employer Identification Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NCCIID">
            <xs:annotation>
              <xs:documentation>Bureau ID</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NCCIintrastate">
            <xs:annotation>
              <xs:documentation>NCCI Intrastate ID</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SSN">
            <xs:annotation>
              <xs:documentation>Social Security Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STAX">
            <xs:annotation>
              <xs:documentation>State Tax Identification Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STUN">
            <xs:annotation>
              <xs:documentation>State Unemployment Identification Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TUNS">
            <xs:annotation>
              <xs:documentation>Temporary Dun &amp; Bradstreet Number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OrganizationType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>type of organization for attorneys, doctors, and government authorities</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_city">
            <xs:annotation>
              <xs:documentation>City</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_corporation">
            <xs:annotation>
              <xs:documentation>Corporation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_county">
            <xs:annotation>
              <xs:documentation>County</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_federal">
            <xs:annotation>
              <xs:documentation>Federal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_partnership">
            <xs:annotation>
              <xs:documentation>Partnership</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_solepropship">
            <xs:annotation>
              <xs:documentation>Sole Proprietorship</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_state">
            <xs:annotation>
              <xs:documentation>State</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LanguageType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Users' preferred languages</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_en_US">
            <xs:annotation>
              <xs:documentation>English (US)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LocaleType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Users' preferred languages</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_de_DE">
            <xs:annotation>
              <xs:documentation>Germany (German)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_en_AU">
            <xs:annotation>
              <xs:documentation>Australia (English)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_en_CA">
            <xs:annotation>
              <xs:documentation>Canada (English)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_en_GB">
            <xs:annotation>
              <xs:documentation>Great Britain (English)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_en_US">
            <xs:annotation>
              <xs:documentation>United States (English)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fr_CA">
            <xs:annotation>
              <xs:documentation>Canada (French)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fr_FR">
            <xs:annotation>
              <xs:documentation>France (French)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ja_JP">
            <xs:annotation>
              <xs:documentation>Japan (Japanese)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PrimaryPhoneType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of phone numbers</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_home">
            <xs:annotation>
              <xs:documentation>Home</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mobile">
            <xs:annotation>
              <xs:documentation>Mobile</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_work">
            <xs:annotation>
              <xs:documentation>Work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccidentType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_01">
            <xs:annotation>
              <xs:documentation>Contact with chemicals</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_02">
            <xs:annotation>
              <xs:documentation>Contact with hot objects or substances</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_03">
            <xs:annotation>
              <xs:documentation>Contact with temperature extremes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_04">
            <xs:annotation>
              <xs:documentation>Contact with fire or flame</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_05">
            <xs:annotation>
              <xs:documentation>Contact with steam or hot fluids</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_06">
            <xs:annotation>
              <xs:documentation>Contact with dust, gases, fumes, or vapors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_07">
            <xs:annotation>
              <xs:documentation>Contact with welding operation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_09">
            <xs:annotation>
              <xs:documentation>Contact with radiation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_10">
            <xs:annotation>
              <xs:documentation>Caught in, under, or between machine or machinery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_11">
            <xs:annotation>
              <xs:documentation>Contact with miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_12">
            <xs:annotation>
              <xs:documentation>Caught in, under, or between object handled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_13">
            <xs:annotation>
              <xs:documentation>Caught in, under, or between miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_14">
            <xs:annotation>
              <xs:documentation>Contact with abnormal air pressure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_15">
            <xs:annotation>
              <xs:documentation>Cut, puncture, scrape, injured by broken glass</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_16">
            <xs:annotation>
              <xs:documentation>Cut, puncture, scrape, injured by hand tool, utensil; not powered</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_17">
            <xs:annotation>
              <xs:documentation>Cut, puncture, scrape, injured by object being lifted or handled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_18">
            <xs:annotation>
              <xs:documentation>Cut, puncture, scrape, injured by powered hand tool, appliance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_19">
            <xs:annotation>
              <xs:documentation>Cut, puncture, scrape, injured by miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_20">
            <xs:annotation>
              <xs:documentation>Caught in, under, or between collapsing materials (slides of earth) - either man made or natural</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_25">
            <xs:annotation>
              <xs:documentation>Fall, slip or trip injury from different level (elevation) - off wall, catwalk, bridge, etc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_26">
            <xs:annotation>
              <xs:documentation>Fall, slip, or trip injury from ladder or scaffolding</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_27">
            <xs:annotation>
              <xs:documentation>Fall, slip, or trip injury from liquid or grease spills</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_28">
            <xs:annotation>
              <xs:documentation>Fall, slip, or trip injury into openings (shafts, excavations, floor openings, etc.)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_29">
            <xs:annotation>
              <xs:documentation>Fall, slip, or trip injury on same level</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_30">
            <xs:annotation>
              <xs:documentation>Fall, slip or trip injury from ladder or scaffolding</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_31">
            <xs:annotation>
              <xs:documentation>Fall, slip, or trip injury, miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_32">
            <xs:annotation>
              <xs:documentation>Fall, slip, or trip injury on ice or snow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_33">
            <xs:annotation>
              <xs:documentation>Fall, slip, or trip injury on stairs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_40">
            <xs:annotation>
              <xs:documentation>Crash of water vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_41">
            <xs:annotation>
              <xs:documentation>Crash of rail vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_45">
            <xs:annotation>
              <xs:documentation>Collision or sideswipe with another vehicle (both vehicles in motion)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_46">
            <xs:annotation>
              <xs:documentation>Collision with a fixed object (standing vehicle or stationary object)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_47">
            <xs:annotation>
              <xs:documentation>Crash of airplane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_48">
            <xs:annotation>
              <xs:documentation>Vehicle upset (overturned or jackknifed)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_50">
            <xs:annotation>
              <xs:documentation>Motor vehicle, miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_52">
            <xs:annotation>
              <xs:documentation>Strain or injury by continual noise</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_53">
            <xs:annotation>
              <xs:documentation>Strain or injury by twisting</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_54">
            <xs:annotation>
              <xs:documentation>Strain or injury by jumping</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_55">
            <xs:annotation>
              <xs:documentation>Strain or injury by holding or carrying</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_56">
            <xs:annotation>
              <xs:documentation>Strain or injury by lifting</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_57">
            <xs:annotation>
              <xs:documentation>Strain or injury by pushing or pulling</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_58">
            <xs:annotation>
              <xs:documentation>Strain or injury by Reaching</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_59">
            <xs:annotation>
              <xs:documentation>Strain or injury by using tool or machinery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_60">
            <xs:annotation>
              <xs:documentation>Strain or injury by miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_61">
            <xs:annotation>
              <xs:documentation>Strain or injury by wielding or throwing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_65">
            <xs:annotation>
              <xs:documentation>Striking against or stepping on moving part of machine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_66">
            <xs:annotation>
              <xs:documentation>Striking against or stepping on object being lifted or handled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_67">
            <xs:annotation>
              <xs:documentation>Striking against or stepping on sanding, scraping, cleaning operation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_68">
            <xs:annotation>
              <xs:documentation>Striking against or stepping on stationary object</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_69">
            <xs:annotation>
              <xs:documentation>Stepping on sharp object</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_70">
            <xs:annotation>
              <xs:documentation>Striking against or stepping on miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_74">
            <xs:annotation>
              <xs:documentation>Struck or injured by fellow worker; patient (not in act of a crime)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_75">
            <xs:annotation>
              <xs:documentation>Struck or injured by falling or flying object</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_76">
            <xs:annotation>
              <xs:documentation>Struck or injured by hand tool or machine in use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_77">
            <xs:annotation>
              <xs:documentation>Struck or injured by motor vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_78">
            <xs:annotation>
              <xs:documentation>Struck or injured by moving parts of machine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_79">
            <xs:annotation>
              <xs:documentation>Struck or injured by object being lifted or handled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_80">
            <xs:annotation>
              <xs:documentation>Struck or injured by object handled by others</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_81">
            <xs:annotation>
              <xs:documentation>Struck or injured, miscellaneous (includes kicked, stabbed, bit, etc.)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_82">
            <xs:annotation>
              <xs:documentation>Absorption, ingestion, or inhalation, miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_84">
            <xs:annotation>
              <xs:documentation>Contact with electrical current</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_85">
            <xs:annotation>
              <xs:documentation>Struck or injured by animal or insect</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_86">
            <xs:annotation>
              <xs:documentation>Struck or injured by explosion or flare back</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_87">
            <xs:annotation>
              <xs:documentation>Foreign matter (body) in eye(s)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_88">
            <xs:annotation>
              <xs:documentation>Natural disasters (earthquake, hurricane, tornado, etc.)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_89">
            <xs:annotation>
              <xs:documentation>Person in act of a crime (robbery or criminal assault)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_90">
            <xs:annotation>
              <xs:documentation>Miscellaneous - other than physical cause of injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_91">
            <xs:annotation>
              <xs:documentation>Mold</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_94">
            <xs:annotation>
              <xs:documentation>Rubbed or abraded by repetitive motion (callous, blister, etc.)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_95">
            <xs:annotation>
              <xs:documentation>Rubbed or abraded, miscellaneous</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_96">
            <xs:annotation>
              <xs:documentation>Terrorism</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_97">
            <xs:annotation>
              <xs:documentation>Strain or injury by repetitive motion (carpal tunnel syndrome)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_98">
            <xs:annotation>
              <xs:documentation>Miscellaneous - cumulative, miscellaneous (all other)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_99">
            <xs:annotation>
              <xs:documentation>Miscellaneous - other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Activity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Activity</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Activity">
            <xs:annotation>
              <xs:documentation>Activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ActivityClass" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The class of the activity</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_event">
            <xs:annotation>
              <xs:documentation>Event</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_task">
            <xs:annotation>
              <xs:documentation>Task</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DocumentSection" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_bills">
            <xs:annotation>
              <xs:documentation>Bills</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_correspondence">
            <xs:annotation>
              <xs:documentation>Correspondence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_indemnity">
            <xs:annotation>
              <xs:documentation>Indemnity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_legal">
            <xs:annotation>
              <xs:documentation>Legal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medical">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_misc">
            <xs:annotation>
              <xs:documentation>Misc</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rehab">
            <xs:annotation>
              <xs:documentation>Rehab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DocumentSecurityType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of the document for access-restriction purposes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_sensitive">
            <xs:annotation>
              <xs:documentation>Document that is sensitive in nature</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unrestricted">
            <xs:annotation>
              <xs:documentation>Document that does not require access restriction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DocumentStatusType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Status of the document</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approved">
            <xs:annotation>
              <xs:documentation>Approved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_approving">
            <xs:annotation>
              <xs:documentation>Approving</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_draft">
            <xs:annotation>
              <xs:documentation>Draft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_filed">
            <xs:annotation>
              <xs:documentation>Filed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_final">
            <xs:annotation>
              <xs:documentation>Final</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DocumentType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_diagram">
            <xs:annotation>
              <xs:documentation>Diagram</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_email">
            <xs:annotation>
              <xs:documentation>Email</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_email_sent">
            <xs:annotation>
              <xs:documentation>Email Sent by CreateEmail</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fnol">
            <xs:annotation>
              <xs:documentation>First notice of loss (original report)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_iso">
            <xs:annotation>
              <xs:documentation>ISO match report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_letter_received">
            <xs:annotation>
              <xs:documentation>Letter received</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_letter_sent">
            <xs:annotation>
              <xs:documentation>Letter sent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_metro">
            <xs:annotation>
              <xs:documentation>Metro report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policereport">
            <xs:annotation>
              <xs:documentation>Police report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_repairestimate">
            <xs:annotation>
              <xs:documentation>Repair estimate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_statement">
            <xs:annotation>
              <xs:documentation>Statement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ImportanceLevel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_high">
            <xs:annotation>
              <xs:documentation>High importance level</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_low">
            <xs:annotation>
              <xs:documentation>Low importance level</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medium">
            <xs:annotation>
              <xs:documentation>Medium importance level</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notOnCalendar">
            <xs:annotation>
              <xs:documentation>Not Showing on Calendar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_top">
            <xs:annotation>
              <xs:documentation>Top importance level</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Priority" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Basic priority typelist</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_high">
            <xs:annotation>
              <xs:documentation>High priority - should be addressed before normal activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_low">
            <xs:annotation>
              <xs:documentation>Low - needs to be addressed eventually but there is no urgency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_normal">
            <xs:annotation>
              <xs:documentation>Normal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_urgent">
            <xs:annotation>
              <xs:documentation>Highest priority - must be addressed immediately</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ActivityType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of activity</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approval">
            <xs:annotation>
              <xs:documentation>Approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_approvaldenied">
            <xs:annotation>
              <xs:documentation>Approval Denied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assignmentreview">
            <xs:annotation>
              <xs:documentation>Assignment Review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fnol">
            <xs:annotation>
              <xs:documentation>FNOL</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_litigation">
            <xs:annotation>
              <xs:documentation>Litigation related activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Workflow" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Workflow</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ClaimWorkflow">
            <xs:annotation>
              <xs:documentation>Claim Workflow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MetroReportWorkflow">
            <xs:annotation>
              <xs:documentation>MetroReportWorkflow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Workflow">
            <xs:annotation>
              <xs:documentation>Workflow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LossType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>All available types of claims</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AUTO">
            <xs:annotation>
              <xs:documentation>Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GL">
            <xs:annotation>
              <xs:documentation>Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PR">
            <xs:annotation>
              <xs:documentation>Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TRAV">
            <xs:annotation>
              <xs:documentation>General loss during travel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WC">
            <xs:annotation>
              <xs:documentation>Workers' Comp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MetroAgencyType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of Investigating Agency for metro report</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BVS">
            <xs:annotation>
              <xs:documentation>Bureau of Vital Stats</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CORON">
            <xs:annotation>
              <xs:documentation>Coroner</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO_FD">
            <xs:annotation>
              <xs:documentation>County Fire Department</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO_PD">
            <xs:annotation>
              <xs:documentation>County Police</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO_SO">
            <xs:annotation>
              <xs:documentation>County Sheriff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DMV">
            <xs:annotation>
              <xs:documentation>Dept of Motor Veh.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPS">
            <xs:annotation>
              <xs:documentation>Dept of Public Safety</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EMS">
            <xs:annotation>
              <xs:documentation>Emergency Med Serv</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FD">
            <xs:annotation>
              <xs:documentation>Fire Department</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HP">
            <xs:annotation>
              <xs:documentation>Highway Patrol/State Police</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MP">
            <xs:annotation>
              <xs:documentation>Military Police</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PD">
            <xs:annotation>
              <xs:documentation>Police Department</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SEC">
            <xs:annotation>
              <xs:documentation>Private Security</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TWP_FD">
            <xs:annotation>
              <xs:documentation>Township Fire Department</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TWP_PD">
            <xs:annotation>
              <xs:documentation>Township Police</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MetroReportType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Metro Reports</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_A">
            <xs:annotation>
              <xs:documentation>Auto Accident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_B">
            <xs:annotation>
              <xs:documentation>Auto Theft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_C">
            <xs:annotation>
              <xs:documentation>Auto Theft Recovery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_D">
            <xs:annotation>
              <xs:documentation>Driving History</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_E">
            <xs:annotation>
              <xs:documentation>Coroner Reports</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_F">
            <xs:annotation>
              <xs:documentation>Fire Home</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_G">
            <xs:annotation>
              <xs:documentation>Burglary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_H">
            <xs:annotation>
              <xs:documentation>Death Certificate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_I">
            <xs:annotation>
              <xs:documentation>Incident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_J">
            <xs:annotation>
              <xs:documentation>Locate Defendant/Witness</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_K">
            <xs:annotation>
              <xs:documentation>EMS/Rescue Squad</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_L">
            <xs:annotation>
              <xs:documentation>Supplemental/Addendum</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_M">
            <xs:annotation>
              <xs:documentation>MV-104 (NY Only)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_N">
            <xs:annotation>
              <xs:documentation>OSHA</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_O">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_P">
            <xs:annotation>
              <xs:documentation>Activities Fixed Rate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Q">
            <xs:annotation>
              <xs:documentation>Property and Judgments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_R">
            <xs:annotation>
              <xs:documentation>Registration Check/DMV</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_S">
            <xs:annotation>
              <xs:documentation>Insurance Check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_T">
            <xs:annotation>
              <xs:documentation>Title History</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_U">
            <xs:annotation>
              <xs:documentation>Subrogation Financial/Assets</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_V">
            <xs:annotation>
              <xs:documentation>Vandalism/Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_W">
            <xs:annotation>
              <xs:documentation>Weather Report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_X">
            <xs:annotation>
              <xs:documentation>Fire-Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Y">
            <xs:annotation>
              <xs:documentation>Photo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Z">
            <xs:annotation>
              <xs:documentation>Disposition of Charges</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MetroReportStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_accepted">
            <xs:annotation>
              <xs:documentation>The Report Order File is sent and accepted by Metro</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_closed">
            <xs:annotation>
              <xs:documentation>The Report is Closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_deferred">
            <xs:annotation>
              <xs:documentation>An image was returned with a notice that the data source will take some additional time to provide the requested information</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_downloadingreport">
            <xs:annotation>
              <xs:documentation>The system is in the process of downloading the report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_duplicate">
            <xs:annotation>
              <xs:documentation>The Report request failed due to a duplicate request</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_error">
            <xs:annotation>
              <xs:documentation>The Report request has errors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hasreport">
            <xs:annotation>
              <xs:documentation>The Report is ready on the external server</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hold">
            <xs:annotation>
              <xs:documentation>The order is awaiting additional information from the customer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inquiryfailed">
            <xs:annotation>
              <xs:documentation>The inquiry request is failed based on the result sent back from Metro</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_insufficientdata">
            <xs:annotation>
              <xs:documentation>Some of the required fields are missing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_new">
            <xs:annotation>
              <xs:documentation>The initial status of the report request</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orderfailed">
            <xs:annotation>
              <xs:documentation>The order request is failed based on the result sent back from Metro</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pending">
            <xs:annotation>
              <xs:documentation>The order was received and in process</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_received">
            <xs:annotation>
              <xs:documentation>The Report is received (download) to our server</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sendinginquiry">
            <xs:annotation>
              <xs:documentation>The Report Inquiry File is sent and waiting for the response from Metro</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sendingorder">
            <xs:annotation>
              <xs:documentation>The request is sent and waiting for the response from Metro</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_validated">
            <xs:annotation>
              <xs:documentation>The request is validated and ready to be sent out</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Incident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Incident</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BaggageIncident">
            <xs:annotation>
              <xs:documentation>BaggageIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DwellingIncident">
            <xs:annotation>
              <xs:documentation>DwellingIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FixedPropertyIncident">
            <xs:annotation>
              <xs:documentation>FixedPropertyIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Incident">
            <xs:annotation>
              <xs:documentation>Incident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InjuryIncident">
            <xs:annotation>
              <xs:documentation>InjuryIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LivingExpensesIncident">
            <xs:annotation>
              <xs:documentation>LivingExpensesIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MobilePropertyIncident">
            <xs:annotation>
              <xs:documentation>MobilePropertyIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OtherStructureIncident">
            <xs:annotation>
              <xs:documentation>OtherStructureIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PropertyContentsIncident">
            <xs:annotation>
              <xs:documentation>PropertyContentsIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PropertyIncident">
            <xs:annotation>
              <xs:documentation>PropertyIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TripIncident">
            <xs:annotation>
              <xs:documentation>TripIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VehicleIncident">
            <xs:annotation>
              <xs:documentation>VehicleIncident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BaggageType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>BaggageType</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_backpack">
            <xs:annotation>
              <xs:documentation>A small shoulderbag</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_documents">
            <xs:annotation>
              <xs:documentation>Passport, visa, ticket, drivers License etc</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_duffel">
            <xs:annotation>
              <xs:documentation>A barrel-shaped bag</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_laptopbag">
            <xs:annotation>
              <xs:documentation>A laptop bag or backpack</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_suitcase">
            <xs:annotation>
              <xs:documentation>A general term that may refer to wheeled or non-wheeled luggage, as well as soft or hard side luggage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tote">
            <xs:annotation>
              <xs:documentation>A small shoulder bag</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_trunk">
            <xs:annotation>
              <xs:documentation>A wooden box larger than other kinds of luggage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wallet_purse">
            <xs:annotation>
              <xs:documentation>A wallet or purse for personal belongings</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RiskUnit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity RiskUnit</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BuildingRU">
            <xs:annotation>
              <xs:documentation>Building Risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GeneralLiabilityRU">
            <xs:annotation>
              <xs:documentation>General Liability Risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InlandMarineRU">
            <xs:annotation>
              <xs:documentation>Inland Marine Risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LocationBasedRU">
            <xs:annotation>
              <xs:documentation>Location Risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LocationMiscRU">
            <xs:annotation>
              <xs:documentation>Other Risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PropertyRU">
            <xs:annotation>
              <xs:documentation>Property Risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RiskUnit">
            <xs:annotation>
              <xs:documentation>Risk Unit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TripRU">
            <xs:annotation>
              <xs:documentation>Trip Risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VehicleRU">
            <xs:annotation>
              <xs:documentation>Vehicle Risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCCovEmpRU">
            <xs:annotation>
              <xs:documentation>Workers Comp Risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BoatType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AI">
            <xs:annotation>
              <xs:documentation>Airboat</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>Commercial</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CR">
            <xs:annotation>
              <xs:documentation>Cruiser</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HO">
            <xs:annotation>
              <xs:documentation>Hovercraft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HR">
            <xs:annotation>
              <xs:documentation>Hydroplane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HS">
            <xs:annotation>
              <xs:documentation>Houseboat</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HY">
            <xs:annotation>
              <xs:documentation>Hydrofoil</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RU">
            <xs:annotation>
              <xs:documentation>Runabout</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SA">
            <xs:annotation>
              <xs:documentation>Sailboat</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UT">
            <xs:annotation>
              <xs:documentation>Utility</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YA">
            <xs:annotation>
              <xs:documentation>Yacht</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YY">
            <xs:annotation>
              <xs:documentation>Other (jetski, canoe, kayak, johnboat, rowboat, etc.) </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OwnerType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of owners / lienholders</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_partial_owner">
            <xs:annotation>
              <xs:documentation>Partial owner</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sole_owner">
            <xs:annotation>
              <xs:documentation>Sole owner / lienholder</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VehicleManufacturer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The company that manufactured the vehicle. Uses NCIC Vehicle Make codes as required for ISO</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ACUR">
            <xs:annotation>
              <xs:documentation>Acura</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ALFA">
            <xs:annotation>
              <xs:documentation>Alfa Romeo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ALIE">
            <xs:annotation>
              <xs:documentation>Allied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ALIS">
            <xs:annotation>
              <xs:documentation>Allis-Chalmers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ALKO">
            <xs:annotation>
              <xs:documentation>Alois Kober (AL-KO)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ALUE">
            <xs:annotation>
              <xs:documentation>Alouette Recreational Products, Ltd.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AMGN">
            <xs:annotation>
              <xs:documentation>AM General Corp (Hummer)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ARCA">
            <xs:annotation>
              <xs:documentation>Arctic Cat</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ARCC">
            <xs:annotation>
              <xs:documentation>Arctic Enterprises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ARLB">
            <xs:annotation>
              <xs:documentation>Arlberg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ASTO">
            <xs:annotation>
              <xs:documentation>Aston Martin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ATV">
            <xs:annotation>
              <xs:documentation>Other ATV</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AUDI">
            <xs:annotation>
              <xs:documentation>Audi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AUTS">
            <xs:annotation>
              <xs:documentation>Auto Ski, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BENT">
            <xs:annotation>
              <xs:documentation>Bentley</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BMBR">
            <xs:annotation>
              <xs:documentation>Bombardier, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BMW">
            <xs:annotation>
              <xs:documentation>BMW</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOAS">
            <xs:annotation>
              <xs:documentation>Boa-Ski Airport, Ltd.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOAT">
            <xs:annotation>
              <xs:documentation>Boatel Ski</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOMB">
            <xs:annotation>
              <xs:documentation>Bombardier</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BRUZ">
            <xs:annotation>
              <xs:documentation>Brutanza Engineering, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BUIC">
            <xs:annotation>
              <xs:documentation>Buick</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CADI">
            <xs:annotation>
              <xs:documentation>Cadillac</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CHEV">
            <xs:annotation>
              <xs:documentation>Chevrolet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CHOC">
            <xs:annotation>
              <xs:documentation>Chrysler Outboard Corp.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CHPR">
            <xs:annotation>
              <xs:documentation>Chaparral Inds., Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CHRY">
            <xs:annotation>
              <xs:documentation>Chrysler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CITR">
            <xs:annotation>
              <xs:documentation>Citroen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CSHM">
            <xs:annotation>
              <xs:documentation>Cushman</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DAEW">
            <xs:annotation>
              <xs:documentation>Daewoo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DAIH">
            <xs:annotation>
              <xs:documentation>Daihatsu</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DATS">
            <xs:annotation>
              <xs:documentation>Datsun</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DAUP">
            <xs:annotation>
              <xs:documentation>Dauphin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DODG">
            <xs:annotation>
              <xs:documentation>Dodge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FEMC">
            <xs:annotation>
              <xs:documentation>Feldman Engineering &amp; Mfg., Co.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FERR">
            <xs:annotation>
              <xs:documentation>Ferrari</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FIAT">
            <xs:annotation>
              <xs:documentation>Fiat</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FORD">
            <xs:annotation>
              <xs:documentation>Ford</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FRED">
            <xs:annotation>
              <xs:documentation>Frederick-Willys</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GBCO">
            <xs:annotation>
              <xs:documentation>Gilson Brothers Co.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GEO">
            <xs:annotation>
              <xs:documentation>GEO</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GM">
            <xs:annotation>
              <xs:documentation>General Motors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GMC">
            <xs:annotation>
              <xs:documentation>General Motors Corp.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HDMC">
            <xs:annotation>
              <xs:documentation>Harley-Davidson Motor Co., Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOND">
            <xs:annotation>
              <xs:documentation>Honda</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HRTI">
            <xs:annotation>
              <xs:documentation>Herters, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HURU">
            <xs:annotation>
              <xs:documentation>Hustler-Rustler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HYUN">
            <xs:annotation>
              <xs:documentation>Hyundai</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_INFI">
            <xs:annotation>
              <xs:documentation>Infiniti</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ISU">
            <xs:annotation>
              <xs:documentation>Isuzu</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JACC">
            <xs:annotation>
              <xs:documentation>Jac-Trac, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JAGU">
            <xs:annotation>
              <xs:documentation>Jaguar</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_JDER">
            <xs:annotation>
              <xs:documentation>Deere &amp; Co.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KAWK">
            <xs:annotation>
              <xs:documentation>Kawasaki</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KIA">
            <xs:annotation>
              <xs:documentation>Kia Motors Corp.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KMCU">
            <xs:annotation>
              <xs:documentation>Kawasaki Motors Corp., USA</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KOME">
            <xs:annotation>
              <xs:documentation>Moto Kometik, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LAMO">
            <xs:annotation>
              <xs:documentation>Lamborghini</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LARV">
            <xs:annotation>
              <xs:documentation>Larvin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LEXS">
            <xs:annotation>
              <xs:documentation>Lexus</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LINC">
            <xs:annotation>
              <xs:documentation>Lincoln-Continental</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LIOL">
            <xs:annotation>
              <xs:documentation>Lional Enterprises, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LNDR">
            <xs:annotation>
              <xs:documentation>Land Rover </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LOTU">
            <xs:annotation>
              <xs:documentation>Lotus</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LSKP">
            <xs:annotation>
              <xs:documentation>Lori Engineering Corp.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MALR">
            <xs:annotation>
              <xs:documentation>Mallard</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MASE">
            <xs:annotation>
              <xs:documentation>Maserati</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MAYB">
            <xs:annotation>
              <xs:documentation>Maybach</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MAZD">
            <xs:annotation>
              <xs:documentation>Mazda</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MERC">
            <xs:annotation>
              <xs:documentation>Mercury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MERZ">
            <xs:annotation>
              <xs:documentation>Mercedes-Benz</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MG">
            <xs:annotation>
              <xs:documentation>MG</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MITS">
            <xs:annotation>
              <xs:documentation>Mitsubishi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MNTA">
            <xs:annotation>
              <xs:documentation>Three R Inds., Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MOWA">
            <xs:annotation>
              <xs:documentation>Montgomery Ward</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MRCU">
            <xs:annotation>
              <xs:documentation>Mercury Marine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MSFI">
            <xs:annotation>
              <xs:documentation>Massey-Ferguson, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NISS">
            <xs:annotation>
              <xs:documentation>Nissan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NRTS">
            <xs:annotation>
              <xs:documentation>Northway Snowmobiles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OCKE">
            <xs:annotation>
              <xs:documentation>Ockelbo Ind. AB</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ODGL">
            <xs:annotation>
              <xs:documentation>Ontario Drive &amp; Gear, Ltd.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OLDS">
            <xs:annotation>
              <xs:documentation>Oldsmobile</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ORIG">
            <xs:annotation>
              <xs:documentation>Original Equipment Mfg., Ltd.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OTPE">
            <xs:annotation>
              <xs:documentation>Outdoor Power Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OUTM">
            <xs:annotation>
              <xs:documentation>Outboard Marine Corp.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PANH">
            <xs:annotation>
              <xs:documentation>Panhard</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PEUG">
            <xs:annotation>
              <xs:documentation>Peugeot</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PLRN">
            <xs:annotation>
              <xs:documentation>Poloron</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PLYC">
            <xs:annotation>
              <xs:documentation>Playcat Inds., Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PLYM">
            <xs:annotation>
              <xs:documentation>Plymouth</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_POLB">
            <xs:annotation>
              <xs:documentation>Raybon Mfg. Co.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_POLS">
            <xs:annotation>
              <xs:documentation>Polaris Inds., Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PONT">
            <xs:annotation>
              <xs:documentation>Pontiac</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PORS">
            <xs:annotation>
              <xs:documentation>Porsche</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RAID">
            <xs:annotation>
              <xs:documentation>Leisure Vehicles, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RENA">
            <xs:annotation>
              <xs:documentation>Renault</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ROL">
            <xs:annotation>
              <xs:documentation>Rolls-Royce</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ROLF">
            <xs:annotation>
              <xs:documentation>Roll-O-Flex, Ltd.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RPII">
            <xs:annotation>
              <xs:documentation>H &amp; H Snowmobiles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SAA">
            <xs:annotation>
              <xs:documentation>Saab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SCRP">
            <xs:annotation>
              <xs:documentation>Scorpion, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SKIR">
            <xs:annotation>
              <xs:documentation>Skiroule, Ltd.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SNOJ">
            <xs:annotation>
              <xs:documentation>Sno*Jet, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SNOW">
            <xs:annotation>
              <xs:documentation>Snowmobile</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SPPI">
            <xs:annotation>
              <xs:documentation>Speedway Products, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SRCO">
            <xs:annotation>
              <xs:documentation>Sears</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STCO">
            <xs:annotation>
              <xs:documentation>Starcraft Corp.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STRN">
            <xs:annotation>
              <xs:documentation>Saturn </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SUBA">
            <xs:annotation>
              <xs:documentation>Subaru</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SUZI">
            <xs:annotation>
              <xs:documentation>Suzuki</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SUZU">
            <xs:annotation>
              <xs:documentation>Suzulight Su</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TOYT">
            <xs:annotation>
              <xs:documentation>Toyota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TRIU">
            <xs:annotation>
              <xs:documentation>Triumph</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TSCC">
            <xs:annotation>
              <xs:documentation>Tucker Sno-Cat Corp.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TTII">
            <xs:annotation>
              <xs:documentation>T &amp; T Inds., Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_USSM">
            <xs:annotation>
              <xs:documentation>U.S. Suzuki Motor Corp., Ltd.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VKNG">
            <xs:annotation>
              <xs:documentation>Viking Snowmobiles, Inc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VOLK">
            <xs:annotation>
              <xs:documentation>Volkswagen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VOLV">
            <xs:annotation>
              <xs:documentation>Volvo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YAMA">
            <xs:annotation>
              <xs:documentation>Yamaha</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_YMCL">
            <xs:annotation>
              <xs:documentation>Yamaha Motor Co., Ltd.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ZCZY">
            <xs:annotation>
              <xs:documentation>Zastavia (ZCZ-Yugoslavia)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OffRoadVehicleStyle" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Style of snowmobile or ATV (wheels, tracks etc.). Used by ISO</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CYL">
            <xs:annotation>
              <xs:documentation>Cycle only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SKT">
            <xs:annotation>
              <xs:documentation>Skis and tracks</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SKW">
            <xs:annotation>
              <xs:documentation>Skis and wheels</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TRA">
            <xs:annotation>
              <xs:documentation>Tracks only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TRW">
            <xs:annotation>
              <xs:documentation>Tracks and wheels</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WHE">
            <xs:annotation>
              <xs:documentation>Wheels only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VehicleStyle" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Car, bus, truck etc.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ATV">
            <xs:annotation>
              <xs:documentation>ATV</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_boat">
            <xs:annotation>
              <xs:documentation>Boat</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bus">
            <xs:annotation>
              <xs:documentation>Bus</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_car_transporter">
            <xs:annotation>
              <xs:documentation>Car transporter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cement_mixer">
            <xs:annotation>
              <xs:documentation>Cement mixer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_construction_vehicle">
            <xs:annotation>
              <xs:documentation>Construction vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_crane">
            <xs:annotation>
              <xs:documentation>Crane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dump_truck">
            <xs:annotation>
              <xs:documentation>Dump truck</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_garbage_truck">
            <xs:annotation>
              <xs:documentation>Garbage truck</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mobile_home">
            <xs:annotation>
              <xs:documentation>Mobile home</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_motorcycle">
            <xs:annotation>
              <xs:documentation>Motorcycle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_passengercar">
            <xs:annotation>
              <xs:documentation>Passenger car</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pick_up">
            <xs:annotation>
              <xs:documentation>Pickup</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rv">
            <xs:annotation>
              <xs:documentation>RV</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_snowmobile">
            <xs:annotation>
              <xs:documentation>Snowmobile</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_straight_truck">
            <xs:annotation>
              <xs:documentation>Straight truck</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tractor_only">
            <xs:annotation>
              <xs:documentation>Tractor only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tractor_trailer">
            <xs:annotation>
              <xs:documentation>Tractor trailer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_trailer">
            <xs:annotation>
              <xs:documentation>Trailer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_van">
            <xs:annotation>
              <xs:documentation>Van</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OtherRiskType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of location based miscellaneous risk unit</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_acctrecvbloffpremise">
            <xs:annotation>
              <xs:documentation>Accounts Receivable Off Premise</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acctrecvblonpremise">
            <xs:annotation>
              <xs:documentation>Accounts Receivable On Premise</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_schequipment">
            <xs:annotation>
              <xs:documentation>Scheduled Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_signs">
            <xs:annotation>
              <xs:documentation>Signs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Coverage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Coverage</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Coverage">
            <xs:annotation>
              <xs:documentation>Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicyCoverage">
            <xs:annotation>
              <xs:documentation>PolicyCoverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PropertyCoverage">
            <xs:annotation>
              <xs:documentation>PropertyCoverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RUCoverage">
            <xs:annotation>
              <xs:documentation>RUCoverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VehicleCoverage">
            <xs:annotation>
              <xs:documentation>VehicleCoverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CoverageBasis" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ACV">
            <xs:annotation>
              <xs:documentation>Actual cash value</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Replacement">
            <xs:annotation>
              <xs:documentation>Replacement cost</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LineCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>User-defined categories for line items of financial transactions</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CourtCosts">
            <xs:annotation>
              <xs:documentation>Court costs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Deposition">
            <xs:annotation>
              <xs:documentation>Deposition</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Discovery">
            <xs:annotation>
              <xs:documentation>Discovery/Research</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DraftAppeal">
            <xs:annotation>
              <xs:documentation>Draft Appeal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Experts">
            <xs:annotation>
              <xs:documentation>Experts (Private, CPA, Reconstruction)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FileReview">
            <xs:annotation>
              <xs:documentation>File review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Hearing">
            <xs:annotation>
              <xs:documentation>Hearing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Investigation">
            <xs:annotation>
              <xs:documentation>Investigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Meeting">
            <xs:annotation>
              <xs:documentation>Meeting</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PhoneCall">
            <xs:annotation>
              <xs:documentation>Phone call</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReviewCorrespond">
            <xs:annotation>
              <xs:documentation>Review correspondence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chiro">
            <xs:annotation>
              <xs:documentation>Chiropractor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_deductible">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_diagnostic">
            <xs:annotation>
              <xs:documentation>X-ray/diagnostic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_doctor">
            <xs:annotation>
              <xs:documentation>Doctor's care</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_drugs">
            <xs:annotation>
              <xs:documentation>Prescription drugs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_formerdeductible">
            <xs:annotation>
              <xs:documentation>Former Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hospital">
            <xs:annotation>
              <xs:documentation>Hospital</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mileage">
            <xs:annotation>
              <xs:documentation>Mileage reimbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nurse">
            <xs:annotation>
              <xs:documentation>Nursing care</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pt">
            <xs:annotation>
              <xs:documentation>Physical therapy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CovTerm" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity CovTerm</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ClassificationCovTerm">
            <xs:annotation>
              <xs:documentation>Classification Coverage Term</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CovTerm">
            <xs:annotation>
              <xs:documentation>CovTerm</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FinancialCovTerm">
            <xs:annotation>
              <xs:documentation>Financial Coverage Term</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NumericCovTerm">
            <xs:annotation>
              <xs:documentation>Numeric Coverage Term</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CovTermModelVal" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Coverage term model value type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_count">
            <xs:annotation>
              <xs:documentation>Integer number of things (e.g., people, etc.)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_days">
            <xs:annotation>
              <xs:documentation>Days</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hours">
            <xs:annotation>
              <xs:documentation>Hours</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_money">
            <xs:annotation>
              <xs:documentation>Money</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_percent">
            <xs:annotation>
              <xs:documentation>Percent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CovTermPattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The types of coverage terms for each coverage type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AccountsRecOffPremisesPropertyDescription">
            <xs:annotation>
              <xs:documentation>Description of Off Premises Account Receivables Records</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AccountsRecOffPremisesPropertyLimit">
            <xs:annotation>
              <xs:documentation>Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAAudVisDataEquipDed">
            <xs:annotation>
              <xs:documentation>Audio Visual Data Equipment Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAAudVisDataEquipLim">
            <xs:annotation>
              <xs:documentation>Audio, Visual, Electronic Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BACollisionBroad">
            <xs:annotation>
              <xs:documentation>Collision Broadened</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BACollisionDeduct">
            <xs:annotation>
              <xs:documentation>Collision Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAComprehensiveDdct">
            <xs:annotation>
              <xs:documentation>Comprehensive Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCCollisionDeduct">
            <xs:annotation>
              <xs:documentation>Collision Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCCompDeduct">
            <xs:annotation>
              <xs:documentation>Comprehensive Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCLiabilityLiab">
            <xs:annotation>
              <xs:documentation>Auto Liability Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCMedPayLimit">
            <xs:annotation>
              <xs:documentation>Medical Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCUnderinsBI">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist Bodily Injury Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCUninsuredBI">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist Bodily Injury Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADealerLimitLiabClass1">
            <xs:annotation>
              <xs:documentation>Class 1 Employees</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADealerLimitLiabClass2"/>
          <xs:enumeration value="TC_BADealerLimitLiabCustomer"/>
          <xs:enumeration value="TC_BADealerLimitLiabLimit"/>
          <xs:enumeration value="TC_BADealerLimitLiabTotalEmp"/>
          <xs:enumeration value="TC_BAHiredCollDeduct">
            <xs:annotation>
              <xs:documentation>Hired Auto Collision Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredCompDeduct">
            <xs:annotation>
              <xs:documentation>Hired Auto Comprehensive Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredLiabilityBI">
            <xs:annotation>
              <xs:documentation>Liability BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredSpecPerilCovHiredCauseOfLoss">
            <xs:annotation>
              <xs:documentation>Cause of loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredSpecPerilDdct">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BALiabilityTort"/>
          <xs:enumeration value="TC_BALimitedPropDamLmt">
            <xs:annotation>
              <xs:documentation>Limited Property Damage Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BANonownedLiabBI">
            <xs:annotation>
              <xs:documentation>Liability Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedLiabilityLimit">
            <xs:annotation>
              <xs:documentation>Liability Limit - BI and PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedMedPayCoordinate">
            <xs:annotation>
              <xs:documentation>Coordinate Benefilts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedMedPayLimit">
            <xs:annotation>
              <xs:documentation>Medical Payment Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUIMBI">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist Bodily Injury Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMBI">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist Bodily Injury Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMBISuppBI">
            <xs:annotation>
              <xs:documentation>Liability BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMConversion">
            <xs:annotation>
              <xs:documentation>UIM Conversion</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMStack">
            <xs:annotation>
              <xs:documentation>Stack UM Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMStackUIM">
            <xs:annotation>
              <xs:documentation>Stack UM / UIM Coveages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPIP_AR_Med">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPIP_AR_WorkLoss">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPIP_DC_Funeral">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPIP_DC_Medical">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPIP_DC_WorkLoss">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPIP_DE_LIM">
            <xs:annotation>
              <xs:documentation>PIP  Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPropProtectLimit">
            <xs:annotation>
              <xs:documentation>Property protection limits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BARental">
            <xs:annotation>
              <xs:documentation>Rental Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASeasonTrailerLiabCount">
            <xs:annotation>
              <xs:documentation>Trailer Count</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASeasonTrailerLiabEndDate">
            <xs:annotation>
              <xs:documentation>End Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASeasonTrailerLiabLimit">
            <xs:annotation>
              <xs:documentation>Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASeasonTrailerLiabProdTransp">
            <xs:annotation>
              <xs:documentation>Produce Transported</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASeasonTrailerLiabStartDate">
            <xs:annotation>
              <xs:documentation>Start Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASeasonalTrailerLiabDesc">
            <xs:annotation>
              <xs:documentation>Description of Trailers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASpecCausesLossCovSpecifiedCauseOfLoss">
            <xs:annotation>
              <xs:documentation>Specified Cause of Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASpecCausesLossDdct">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BATapeDiscLimit">
            <xs:annotation>
              <xs:documentation>Tape Disc Record Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BATow"/>
          <xs:enumeration value="TC_BAUIMPDLimit">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist - Property Damage Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAUMEconomicOnly">
            <xs:annotation>
              <xs:documentation>Economic Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAUMPDLimit">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Property Damage Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAZeroGlass">
            <xs:annotation>
              <xs:documentation>No Deductible for Glass</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPARonPremLim">
            <xs:annotation>
              <xs:documentation>AR On Premises Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPAlaskaAFGLLim">
            <xs:annotation>
              <xs:documentation>Alaska Attorney Fees Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBIDepPropLim">
            <xs:annotation>
              <xs:documentation>Dependent Prop. Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBPPBldgLim">
            <xs:annotation>
              <xs:documentation>Business Personal Property Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBPPValuation">
            <xs:annotation>
              <xs:documentation>Valuation Method</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBarberBeautNum">
            <xs:annotation>
              <xs:documentation>Licensed Individuals - Count</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBaseDed">
            <xs:annotation>
              <xs:documentation>Property Base Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBldgAnnualIncrease"/>
          <xs:enumeration value="TC_BOPBldgLim">
            <xs:annotation>
              <xs:documentation>Building Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBldgValuation">
            <xs:annotation>
              <xs:documentation>Valuation Method</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBreakContam">
            <xs:annotation>
              <xs:documentation>Breakdown or Contamination</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBuildingCoin">
            <xs:annotation>
              <xs:documentation>Coinsurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBurgRobLim">
            <xs:annotation>
              <xs:documentation>Burglary and Robbery Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCAEqBldgRecLimit">
            <xs:annotation>
              <xs:documentation>CA Earthquake Reconstruction Cost  Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCAEqBldgSubDed">
            <xs:annotation>
              <xs:documentation>CA Earthquake - Building Sublimits Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCAEqBldgSubLim">
            <xs:annotation>
              <xs:documentation>CA Earthquake - Building Sublimits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCertTerrorCapLimit">
            <xs:annotation>
              <xs:documentation>Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPComputerFraudLim">
            <xs:annotation>
              <xs:documentation>Computer &amp; Funds Transfer Fraud Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPElectricalSchedLimit">
            <xs:annotation>
              <xs:documentation>Electrical Equipment - Scheduled Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpBenAggLim">
            <xs:annotation>
              <xs:documentation>Employees Benefits Agg Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpBenEachEmpDed">
            <xs:annotation>
              <xs:documentation>Employees Benefits Each Employee Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpBenEachEmpLim">
            <xs:annotation>
              <xs:documentation>Employees Benefits Each Employee Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpBenRetroDate">
            <xs:annotation>
              <xs:documentation>Retroactive Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpDisLimit">
            <xs:annotation>
              <xs:documentation>Employee Dishonesty Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpDisNumEmp">
            <xs:annotation>
              <xs:documentation>Number of Covered Employees</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpDisNumLoc">
            <xs:annotation>
              <xs:documentation>Number of Covered Locations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFoodContamAdvLim">
            <xs:annotation>
              <xs:documentation>Food Contamination Adv. Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFoodContamLim">
            <xs:annotation>
              <xs:documentation>Food Contamination Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPForgeAltLimit">
            <xs:annotation>
              <xs:documentation>Forgery and Alteration Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFridgeMaintenance">
            <xs:annotation>
              <xs:documentation>Refrigeration Maintenance Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFuncPerPropLim">
            <xs:annotation>
              <xs:documentation>Functional Business Personal Property Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFuneralDirNum">
            <xs:annotation>
              <xs:documentation>Licensed Individuals - Count</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFungiAggLevel">
            <xs:annotation>
              <xs:documentation>Agg Limit Level</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFungiPropLim">
            <xs:annotation>
              <xs:documentation>Fungi Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFungiTimeCov">
            <xs:annotation>
              <xs:documentation>Time Element Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPGlassDed">
            <xs:annotation>
              <xs:documentation>Glass Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPGuestSafeDepLimit">
            <xs:annotation>
              <xs:documentation>Guest Property - Safe Deposit Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPHearingAidSales">
            <xs:annotation>
              <xs:documentation>Gross Sales</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPInstallationLim">
            <xs:annotation>
              <xs:documentation>PerJob/All Jobs Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiabDeductType">
            <xs:annotation>
              <xs:documentation>PD Deductible Type</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiabPDDeductible">
            <xs:annotation>
              <xs:documentation>PD Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiability">
            <xs:annotation>
              <xs:documentation>Limits: Occurrence / Prod Agg / Gen Agg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorAggLim">
            <xs:annotation>
              <xs:documentation>Liquor Liability Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorCauseBILim">
            <xs:annotation>
              <xs:documentation>Liquor Liability Each Common Cause BI Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorCauseLim">
            <xs:annotation>
              <xs:documentation>Liquor Liability Common Cause Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorCauseMSLim">
            <xs:annotation>
              <xs:documentation>Liquor Liability Each Comon Cause Loss of Means of Support Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorMSLim">
            <xs:annotation>
              <xs:documentation>Liquor Liability Loss Of Means Of Support Or Loss Of Society Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorPersonBILim">
            <xs:annotation>
              <xs:documentation>Liquor Liability Each Person BI Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorPersonLim">
            <xs:annotation>
              <xs:documentation>Liquor Liability Each Person Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorPersonMSLim">
            <xs:annotation>
              <xs:documentation>Liquor Liability Each Person Loss of Means of Support Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorPersonPDLim">
            <xs:annotation>
              <xs:documentation>Liquor Liability Each Person PD Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMechBreakdownDeduct">
            <xs:annotation>
              <xs:documentation>Breakdown Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMechBreakdownIncomeDeduct">
            <xs:annotation>
              <xs:documentation>Business Income Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMechBreakdownLim">
            <xs:annotation>
              <xs:documentation>Breakdown Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMedExpenseLimit">
            <xs:annotation>
              <xs:documentation>Premises Medical Expense Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMineSubLim">
            <xs:annotation>
              <xs:documentation>Mine Subsidence Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMoneyOffPremLim">
            <xs:annotation>
              <xs:documentation>Money &amp; Securities Off Premise Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMoneyOnPremLim">
            <xs:annotation>
              <xs:documentation>Money &amp; Securities On Premise Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOptCovDed">
            <xs:annotation>
              <xs:documentation>Optional Coverages Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOrdLawCov1yesno">
            <xs:annotation>
              <xs:documentation>BOP Ordinance or Law Coverage 1 Election</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOrdLawCov23Lim">
            <xs:annotation>
              <xs:documentation>BOP Ordinance or Law Combined 2,3 Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOrdLawCov2Lim">
            <xs:annotation>
              <xs:documentation>Ordinance or Law Coverage 2 Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOrdLawCov3Lim">
            <xs:annotation>
              <xs:documentation>BOP Ordinance or Law Coverage 3 Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOrdLawIncomeExpense">
            <xs:annotation>
              <xs:documentation>Ordinance or Law - Income/Expense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOrdLawIncomeExpenseDeduct">
            <xs:annotation>
              <xs:documentation>BOP Ordinance or Law - Income/Expense Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOutdoorPropLim">
            <xs:annotation>
              <xs:documentation>Outdoor Property Limit(Per Item/Agg)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOutdoorSignLim">
            <xs:annotation>
              <xs:documentation>Outdoor Sign Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOverflowLim">
            <xs:annotation>
              <xs:documentation>Backup/Overflow Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPerPropOffPremLim">
            <xs:annotation>
              <xs:documentation>Off Premises Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPersEffectsLim">
            <xs:annotation>
              <xs:documentation>Personal Effects Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPersonalPropCoin">
            <xs:annotation>
              <xs:documentation>Coinsurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPhamacistSales">
            <xs:annotation>
              <xs:documentation>Gross Sales</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPollutionLim">
            <xs:annotation>
              <xs:documentation>Limited Pollution Liability Agg Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPowerOutage">
            <xs:annotation>
              <xs:documentation>Power Outage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPrinterSales">
            <xs:annotation>
              <xs:documentation>Gross Sales</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPropBuildDed">
            <xs:annotation>
              <xs:documentation>Property Optional Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPropertyCovCauseOfLoss">
            <xs:annotation>
              <xs:documentation>Building Coverage Form</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPReceivablesOffPremLim">
            <xs:annotation>
              <xs:documentation>AR Off Premises Limi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPSpoilageCovDescription">
            <xs:annotation>
              <xs:documentation>Description of Coverage or Schedule of Covered items</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPSpoilageDed">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPSpoilageLim">
            <xs:annotation>
              <xs:documentation>Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPSprinklerLeak">
            <xs:annotation>
              <xs:documentation>Sprinkler Leakage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPTenantsFireLiabBaseLimit">
            <xs:annotation>
              <xs:documentation>Tenants Fire Liability Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPTenantsLiabLim">
            <xs:annotation>
              <xs:documentation>Tenants Liability Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPToolsBlanketLim">
            <xs:annotation>
              <xs:documentation>Contractors Tools Blanket</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPToolsEmployees">
            <xs:annotation>
              <xs:documentation>Contractors Employees Tools</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPToolsNonOwnedLim">
            <xs:annotation>
              <xs:documentation>Contractors NonOwned Tools</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPToolsSchedLim">
            <xs:annotation>
              <xs:documentation>Contractors Tools - Scheduled Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilDirectComm">
            <xs:annotation>
              <xs:documentation>Communications (not O/H lines)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilDirectCommOH">
            <xs:annotation>
              <xs:documentation>Communications (inc O/H lines)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilDirectLim">
            <xs:annotation>
              <xs:documentation>Direct Loss Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilDirectPower">
            <xs:annotation>
              <xs:documentation>Power (not O/H lines)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilDirectPowerOH">
            <xs:annotation>
              <xs:documentation>Power (inc O/H lines)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilDirectWater">
            <xs:annotation>
              <xs:documentation>Water Supply</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilTimeComm">
            <xs:annotation>
              <xs:documentation>Communications (not O/H lines)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilTimeCommOH">
            <xs:annotation>
              <xs:documentation>Communications (inc O/H lines)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilTimeLim">
            <xs:annotation>
              <xs:documentation>Utilities Time Element Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilTimePower">
            <xs:annotation>
              <xs:documentation>Power (not O/H lines)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilTimePowerOH">
            <xs:annotation>
              <xs:documentation>Power (inc O/H lines)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilTimeWater">
            <xs:annotation>
              <xs:documentation>Water Supply</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVacancyChange">
            <xs:annotation>
              <xs:documentation>Vacancy Change - Pct Occupied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVacancyCovFromDate">
            <xs:annotation>
              <xs:documentation>From</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVacancyCovToDate">
            <xs:annotation>
              <xs:documentation>To Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPValPaperOnPremLim">
            <xs:annotation>
              <xs:documentation>Papers On Premises Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPValPapersOffPremLimit">
            <xs:annotation>
              <xs:documentation>Papers Off Premises Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVandalism">
            <xs:annotation>
              <xs:documentation>Vandalism</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVetNum">
            <xs:annotation>
              <xs:documentation>Licensed Individuals - Count</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPWindHailDed">
            <xs:annotation>
              <xs:documentation>Windstorm/Hail  % Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPWindHailMoneyDed">
            <xs:annotation>
              <xs:documentation>Windstorm/Hail $ Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPY2KIncomeExpenseLim">
            <xs:annotation>
              <xs:documentation>Location Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusIncWaitingPeriod">
            <xs:annotation>
              <xs:documentation>Waiting Period</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusIncomeExtended">
            <xs:annotation>
              <xs:documentation>Business Income - Extended Period</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusIncomeMfgLimit">
            <xs:annotation>
              <xs:documentation>Money Limit for Business Income - Mfg Income only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusIncomeOrdPayroll">
            <xs:annotation>
              <xs:documentation>Business Income - Ordinary Payroll</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusIncomeOtherLimit">
            <xs:annotation>
              <xs:documentation>Money limit for Business Income - other than mfg or rental</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusIncomeRentalLimit">
            <xs:annotation>
              <xs:documentation>Money Limit for Business Income - Rental Income only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_FL_ApplyDeductible">
            <xs:annotation>
              <xs:documentation>Apply PIP Deductible to</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_FL_Deductible">
            <xs:annotation>
              <xs:documentation>PIP Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_FL_LIMIT">
            <xs:annotation>
              <xs:documentation>PIP Limit1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_FL_WorkWaiver">
            <xs:annotation>
              <xs:documentation>Waive Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_ND_INCOME">
            <xs:annotation>
              <xs:documentation>PIP Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_ND_MEDICAL">
            <xs:annotation>
              <xs:documentation>PIP Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_NY_AGGREGATE"/>
          <xs:enumeration value="TC_CGLProdCompOpBIAgg">
            <xs:annotation>
              <xs:documentation>Products/Comp. Ops BI Agg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CGLProdCompOpsPDAgg">
            <xs:annotation>
              <xs:documentation>Products/Comp. Ops PD Agg</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CGLProductsAggLim">
            <xs:annotation>
              <xs:documentation>Products/Comp.Ops Aggregate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCovCauseOfLoss">
            <xs:annotation>
              <xs:documentation>Cause Of Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCovCoinsurance">
            <xs:annotation>
              <xs:documentation>Coinsurance %</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCovDeductible">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCovExcludeSprinkler">
            <xs:annotation>
              <xs:documentation>Exclude Sprinkler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCovExcludeTheft">
            <xs:annotation>
              <xs:documentation>Exclude Theft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCovExcludeVandalism">
            <xs:annotation>
              <xs:documentation>Exclude Vandalism</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCovLimit">
            <xs:annotation>
              <xs:documentation>Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCovReportingForm">
            <xs:annotation>
              <xs:documentation>Reporting Form</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCovWindDeductible">
            <xs:annotation>
              <xs:documentation>Wind Deductible %</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPValuationMethod">
            <xs:annotation>
              <xs:documentation>Valuation Method</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBlanketCoinsurance">
            <xs:annotation>
              <xs:documentation>Coinsurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBlanketDeductible">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBlanketLimit">
            <xs:annotation>
              <xs:documentation>Blanket Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgBusIncomeCovCauseOfLoss">
            <xs:annotation>
              <xs:documentation>Cause Of Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgBusIncomeCovCoinsurance">
            <xs:annotation>
              <xs:documentation>Coinsurance %</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgBusIncomeCovPeriod">
            <xs:annotation>
              <xs:documentation>Period of Coverage (in days)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgBusIncomeCovWaiting">
            <xs:annotation>
              <xs:documentation>Waiting Period (in hours)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCovAutoIncrease">
            <xs:annotation>
              <xs:documentation>Auto Increase %</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCovCauseOfLoss">
            <xs:annotation>
              <xs:documentation>Cause Of Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCovCoinsurance">
            <xs:annotation>
              <xs:documentation>Coinsurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCovDeductible">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCovExcludeSprinkler">
            <xs:annotation>
              <xs:documentation>Exclude Sprinkler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCovExcludeTheft">
            <xs:annotation>
              <xs:documentation>Exclude Theft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCovExcludeVandalism">
            <xs:annotation>
              <xs:documentation>Exclude Vandalism</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCovLimit">
            <xs:annotation>
              <xs:documentation>Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCovValuationMethod">
            <xs:annotation>
              <xs:documentation>Valuation Method</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCovWindDeductible">
            <xs:annotation>
              <xs:documentation>Wind % Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgExtraExpenseCovLimit">
            <xs:annotation>
              <xs:documentation>Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgExtraExpenseCovMonthLimit">
            <xs:annotation>
              <xs:documentation>Monthly Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCovCauseOfLoss">
            <xs:annotation>
              <xs:documentation>Cause Of Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCovCoinsurance">
            <xs:annotation>
              <xs:documentation>Coinsurance %</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCovDeductible">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCovExcludeSprinkler">
            <xs:annotation>
              <xs:documentation>Exclude Sprinkler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCovExcludeTheft">
            <xs:annotation>
              <xs:documentation>Exclude Theft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCovExcludeVandalism">
            <xs:annotation>
              <xs:documentation>Exclude Vandalism</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCovLimit">
            <xs:annotation>
              <xs:documentation>Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCovReportingForm"/>
          <xs:enumeration value="TC_CPBldgStockCovValuationMethod">
            <xs:annotation>
              <xs:documentation>Valuation Method</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCovWindDeductible">
            <xs:annotation>
              <xs:documentation>Wind Deductible%</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClaimBasis">
            <xs:annotation>
              <xs:documentation>Deductible Basis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CondoLossAssessment">
            <xs:annotation>
              <xs:documentation>CondoLossAssessment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CondoMiscProp">
            <xs:annotation>
              <xs:documentation>Condo Unit owner</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CondoMiscPropDed">
            <xs:annotation>
              <xs:documentation>CondoMiscPropDed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CondoOwnerLimit">
            <xs:annotation>
              <xs:documentation>CondoOwnerLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipEmployeesToolsDeductible">
            <xs:annotation>
              <xs:documentation>Employees' Tools Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipEmployeesToolsLimit">
            <xs:annotation>
              <xs:documentation>Employees' Tools Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipEmployeesToolsMaxIndivItemVal">
            <xs:annotation>
              <xs:documentation>Max Individual Item Value</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipMiscUnschItemMaxItemVal">
            <xs:annotation>
              <xs:documentation>Maximum limit per unscheduled item</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipMiscUnscheduledDeductible">
            <xs:annotation>
              <xs:documentation>Unscheduled Items Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipMiscUnscheduledLimit"/>
          <xs:enumeration value="TC_ContractorsEquipRentalPolicyLimit">
            <xs:annotation>
              <xs:documentation>Per Policy Aggregate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipRentalReibursementDeductible"/>
          <xs:enumeration value="TC_ContractorsEquipRentalReibursementOccurrenceLimit">
            <xs:annotation>
              <xs:documentation>Contractors Rental Reimbursemet - Per Occurrence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipRentedEquipmentDeductible"/>
          <xs:enumeration value="TC_ContractorsEquipRentedEquipmentLimit"/>
          <xs:enumeration value="TC_ContractorsEquipRentedEquipmentMaxIndivItemVal">
            <xs:annotation>
              <xs:documentation>Rented Equipment, maximum item value</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipSchedCovDeductible">
            <xs:annotation>
              <xs:documentation>Contractors Scheduled Equipment Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipSchedCovLimit">
            <xs:annotation>
              <xs:documentation>Contractors Scheduled Equipment Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipSchedCovValuation">
            <xs:annotation>
              <xs:documentation>Contractors Scheduled Equipment Valuation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DeathBenefit">
            <xs:annotation>
              <xs:documentation>Death Benefit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DeathBenefitLimit">
            <xs:annotation>
              <xs:documentation>Death Benefit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DesignatedPollutants">
            <xs:annotation>
              <xs:documentation>Designated Pollutants</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DisabilityBenefit">
            <xs:annotation>
              <xs:documentation>Disability Benefit - weekly</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DisabilityBenefitLimit">
            <xs:annotation>
              <xs:documentation>Disability Benefit / weekly</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DismembermentBenefitLimit">
            <xs:annotation>
              <xs:documentation>Dismemberment and Fracture Benefit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EQDeductible">
            <xs:annotation>
              <xs:documentation>EQ % Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FELADisease">
            <xs:annotation>
              <xs:documentation>Disease Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FedEmpLiabAct">
            <xs:annotation>
              <xs:documentation>WC Federal Liability Act</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLBIDeductible">
            <xs:annotation>
              <xs:documentation>BI Deductible when policy uses split limits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLAggLimit">
            <xs:annotation>
              <xs:documentation>Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLBIAggLimit">
            <xs:annotation>
              <xs:documentation>Bodily Injury Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLBILimit">
            <xs:annotation>
              <xs:documentation>Bodily Injury Occurrence Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLMedPayLimit">
            <xs:annotation>
              <xs:documentation>Medical Payments per person</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLOccLimit">
            <xs:annotation>
              <xs:documentation>Occurrence Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLPDAggLimit">
            <xs:annotation>
              <xs:documentation>Property Damage Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLPDLimit">
            <xs:annotation>
              <xs:documentation>Property Damage Occurrence Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLPersAdLimit">
            <xs:annotation>
              <xs:documentation>Personal &amp; Advertising Injury Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLRentedPropLimit">
            <xs:annotation>
              <xs:documentation>Damage to Rented Premises Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCSLDeductible">
            <xs:annotation>
              <xs:documentation>Optional Deductible - not for split limit policies</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLContractualLiabRRDescription">
            <xs:annotation>
              <xs:documentation>Description of Contracted Work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLElectronicDataLimit">
            <xs:annotation>
              <xs:documentation>Electronic Data Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLEmpBenefitsAggLimit">
            <xs:annotation>
              <xs:documentation>Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLEmpBenefitsLiabDeduct">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLEmpBenefitsLiabilityCovRetroactiveDate">
            <xs:annotation>
              <xs:documentation>Retroactive date of employee benefits liability coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLEmpBenefitsPerEmpLimit">
            <xs:annotation>
              <xs:documentation>Per Employee Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLimitedPAandInjuryCovDescription">
            <xs:annotation>
              <xs:documentation>Description of Contracts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLiquorEvent">
            <xs:annotation>
              <xs:documentation>Boolean restricts coverage to specified events</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLiquorEventDesc">
            <xs:annotation>
              <xs:documentation>Event Description</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLitdFungiBacteriaLimit">
            <xs:annotation>
              <xs:documentation>Fungi or Bacteria Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPDDeductible">
            <xs:annotation>
              <xs:documentation>PD deductible used when policy has split limits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLUndergroundResourceLimit">
            <xs:annotation>
              <xs:documentation>Underground Resource Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GuestPropClaimLim">
            <xs:annotation>
              <xs:documentation>Guest Property - limit per Guest</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GuestPropOccLim">
            <xs:annotation>
              <xs:documentation>Guests Property Occurrence Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HI_Death">
            <xs:annotation>
              <xs:documentation>Death</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IMAccountsReceivableLimit">
            <xs:annotation>
              <xs:documentation>Accounts Receivable Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IMSignDeductible">
            <xs:annotation>
              <xs:documentation>Inland Marine Sign Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IMSignLimit">
            <xs:annotation>
              <xs:documentation>Inland Marine Sign Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KYPIP_Motorcylce">
            <xs:annotation>
              <xs:documentation>Motorcycle Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LiqLiabEventDate"/>
          <xs:enumeration value="TC_LiqLiabEventsDescription">
            <xs:annotation>
              <xs:documentation>Event Description</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NYPIP_EXPENSE"/>
          <xs:enumeration value="TC_NamedPerilsOnly"/>
          <xs:enumeration value="TC_PACollDeductible">
            <xs:annotation>
              <xs:documentation>Collision Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PACollisionBroad">
            <xs:annotation>
              <xs:documentation>Broadened Collision</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PACompDeductible">
            <xs:annotation>
              <xs:documentation>Comprehensive Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PACompZeroGlass">
            <xs:annotation>
              <xs:documentation>No deductible for glass</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAExcessElectronicsLimit">
            <xs:annotation>
              <xs:documentation>Electronic Equipment Increased Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAFullLimitedTort">
            <xs:annotation>
              <xs:documentation>Full / Limited Tort</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PALiability">
            <xs:annotation>
              <xs:documentation>Auto Liability Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAMedLimit">
            <xs:annotation>
              <xs:documentation>Medical Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAMedPayCoordinateBene">
            <xs:annotation>
              <xs:documentation>Coordinate Medical Benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKS_FUNERAL">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKS_MED">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKS_REHAB">
            <xs:annotation>
              <xs:documentation>Rehabilitation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKS_SERVICES">
            <xs:annotation>
              <xs:documentation>Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKS_SURVIVOR">
            <xs:annotation>
              <xs:documentation>Survivor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKS_WORK">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKYWEEKLY">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKY_AggLimit">
            <xs:annotation>
              <xs:documentation>PIP Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKY_Funeral">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKY_GuestONLY">
            <xs:annotation>
              <xs:documentation>Guest Coverage Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPKY_Motorcycle">
            <xs:annotation>
              <xs:documentation>Motorcycle Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMA_AIRBAG">
            <xs:annotation>
              <xs:documentation>Passive Restraint Discount</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMA_DEDUCTIBLE">
            <xs:annotation>
              <xs:documentation>PIP Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMA_LIMIT">
            <xs:annotation>
              <xs:documentation>PIP Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMA_WC">
            <xs:annotation>
              <xs:documentation>WC Discount</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMD_GUEST">
            <xs:annotation>
              <xs:documentation>Guest PIP Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMD_LIMIT">
            <xs:annotation>
              <xs:documentation>PIP Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMD_WAIVER">
            <xs:annotation>
              <xs:documentation>Waived Individuals</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMI_DEDUCTIBLE">
            <xs:annotation>
              <xs:documentation>PIP Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMI_FUNERAL">
            <xs:annotation>
              <xs:documentation>PIP Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMI_INCOME">
            <xs:annotation>
              <xs:documentation>PIP Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMI_MED">
            <xs:annotation>
              <xs:documentation>PIP Medical - Unlimited</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMI_OtherProvider">
            <xs:annotation>
              <xs:documentation>COORDINATE PIP</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMI_SERVICES">
            <xs:annotation>
              <xs:documentation>PIP Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMI_SURVIVOR">
            <xs:annotation>
              <xs:documentation>PIP Survivor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMN_CYCLE">
            <xs:annotation>
              <xs:documentation>Extend PIP coverage to Motorcycles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMN_EXC_WORK">
            <xs:annotation>
              <xs:documentation>Exclude Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMN_MEDICAL">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMN_MED_DEDUCT">
            <xs:annotation>
              <xs:documentation>Medical Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMN_OTHER">
            <xs:annotation>
              <xs:documentation>Other Than Med PIP Benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMN_OTH_DEDUCT">
            <xs:annotation>
              <xs:documentation>Deductible for all PIP coverages other than Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMN_SERVICES">
            <xs:annotation>
              <xs:documentation>Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMN_STACK">
            <xs:annotation>
              <xs:documentation>Stack Pip Limits - requires 2+ vehicles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMN_SURVIVOR">
            <xs:annotation>
              <xs:documentation>Survivor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPMN_WORK">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPND_AGG"/>
          <xs:enumeration value="TC_PAPIPND_FUNERAL">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPND_SERVICE">
            <xs:annotation>
              <xs:documentation>Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPND_SURVIVOR">
            <xs:annotation>
              <xs:documentation>NORTH DAKOTA ;</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNJ_MEDDEDUCT">
            <xs:annotation>
              <xs:documentation>Medical Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNJ_MEDDEDUCTappliesto">
            <xs:annotation>
              <xs:documentation>Medical Deductible applies to</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNJ_MEDLIMIT">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNJ_MEDONLY">
            <xs:annotation>
              <xs:documentation>Med Only option</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNJ_MED_COPAY">
            <xs:annotation>
              <xs:documentation>Medical Copay Option</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNJ_MEDsecondary">
            <xs:annotation>
              <xs:documentation>PIP Med is secondary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNJ_OTHER_LIMS">
            <xs:annotation>
              <xs:documentation>NON-Medical Benefits (weekly income/max income |daily services/max services | funeral / death)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNY_DEATH">
            <xs:annotation>
              <xs:documentation>Death</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNY_DEDUCTIBLE">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNY_EXMED">
            <xs:annotation>
              <xs:documentation>Exclude Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNY_EXPENSE">
            <xs:annotation>
              <xs:documentation>PIP Expense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNY_INCOME">
            <xs:annotation>
              <xs:documentation>PIP Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNY_MOTORCYCLE">
            <xs:annotation>
              <xs:documentation>Motorcycle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPNY_OBEL">
            <xs:annotation>
              <xs:documentation>Opt. Basic Econ. Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPOR_CHILDCARE">
            <xs:annotation>
              <xs:documentation>PIP Childcare</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPOR_DEDUCT">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPOR_DEDUCTIBLEappliesto">
            <xs:annotation>
              <xs:documentation>Deductible Applies To</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPOR_FUNERAL">
            <xs:annotation>
              <xs:documentation>PIP Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPOR_INCOME">
            <xs:annotation>
              <xs:documentation>PIP Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPOR_MED">
            <xs:annotation>
              <xs:documentation>PIP Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPOR_SERVICES">
            <xs:annotation>
              <xs:documentation>PIP Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPPA_COMBINED">
            <xs:annotation>
              <xs:documentation>COMBINED Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPPA_DEATH">
            <xs:annotation>
              <xs:documentation>Death</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPPA_EXTRAMED">
            <xs:annotation>
              <xs:documentation>Extraordinary Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPPA_FUNERAL">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPPA_INCOME">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPPA_MEDICAL">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPTX_LIMIT">
            <xs:annotation>
              <xs:documentation>PIP Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPUT_FUNERAL">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPUT_MEDICAL">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPUT_SURVIVOR">
            <xs:annotation>
              <xs:documentation>Survivor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPUT_WORK">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPWA_FUNERAL">
            <xs:annotation>
              <xs:documentation>PIP Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPWA_INCOME">
            <xs:annotation>
              <xs:documentation>PIP Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPWA_MED">
            <xs:annotation>
              <xs:documentation>PIP Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIPWA_SERVICES">
            <xs:annotation>
              <xs:documentation>PIP Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_AR_Death">
            <xs:annotation>
              <xs:documentation>Death</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_AR_Med">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_AR_WorkLoss">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_DC_Funeral">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_DC_Medical">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_DC_WorkLoss">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_DE_Deduct_WhoApplies">
            <xs:annotation>
              <xs:documentation>Apply PIP Deductible to</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_DE_Deductible">
            <xs:annotation>
              <xs:documentation>PIP Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_DE_LIM">
            <xs:annotation>
              <xs:documentation>PIP  Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_FL_ApplyDeductible">
            <xs:annotation>
              <xs:documentation>Apply PIP Deductible to</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_FL_Deductible">
            <xs:annotation>
              <xs:documentation>PIP Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_FL_LIMIT">
            <xs:annotation>
              <xs:documentation>PIP Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_FL_WorkWaiver">
            <xs:annotation>
              <xs:documentation>Waive Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_HI_AltTreatment">
            <xs:annotation>
              <xs:documentation>Alternative Expenses</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_HI_DEDUCTIBLE">
            <xs:annotation>
              <xs:documentation>PIP Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_HI_Death">
            <xs:annotation>
              <xs:documentation>Death</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_HI_Funeral">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_HI_MANAGED_CARE">
            <xs:annotation>
              <xs:documentation>Managed Care</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_HI_MGDCARE_COPAY_DEDUCT">
            <xs:annotation>
              <xs:documentation>Managed Care Copays / Deductibles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_HI_MedRehab">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_HI_WageLoss">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_ND_INCOME">
            <xs:annotation>
              <xs:documentation>PIP Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_ND_MEDICAL">
            <xs:annotation>
              <xs:documentation>PIP Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_NY_AGGREGATE">
            <xs:annotation>
              <xs:documentation>PIP Aggregate </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPropProtectLimit">
            <xs:annotation>
              <xs:documentation>Property protection limits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PARental">
            <xs:annotation>
              <xs:documentation>Rental Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PARentalLossOfUseLimit">
            <xs:annotation>
              <xs:documentation>Rental Car Loss of Use Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PATapeDiscMediaLimit">
            <xs:annotation>
              <xs:documentation>Tape / Disc Media Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUIMBI">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist Bodily Injury Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUIMBIstacked">
            <xs:annotation>
              <xs:documentation>Stacked Limits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUIMPDlimit">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist - Property Damage Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUIMPDstack">
            <xs:annotation>
              <xs:documentation>Stacked Limits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUMBI">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - BI Limits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUMBIIncludeUIM"/>
          <xs:enumeration value="TC_PAUMBIstacked">
            <xs:annotation>
              <xs:documentation>Stacked Limits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUMPDLimit">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Property Damage Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUMPDstacked">
            <xs:annotation>
              <xs:documentation>Stacked Limits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPAltTreatment">
            <xs:annotation>
              <xs:documentation>Alternative Expenses</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPHI_DEDUCTIBLE">
            <xs:annotation>
              <xs:documentation>PIP Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPHI_MANAGED_CARE">
            <xs:annotation>
              <xs:documentation>Managed Care</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPHI_MGDCARE_COPAY_DEDUCT">
            <xs:annotation>
              <xs:documentation>Managed Care Copays / Deductibles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPKS_FUNERAL">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPKS_MED">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPKS_REHAB">
            <xs:annotation>
              <xs:documentation>Rehabilitation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPKS_SERVICES">
            <xs:annotation>
              <xs:documentation>Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPKS_SURVIVOR">
            <xs:annotation>
              <xs:documentation>Survivor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPKS_WORK">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPKYWEEKLY">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPKY_AggLimit">
            <xs:annotation>
              <xs:documentation>PIP Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPKY_Funeral">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPKY_GuestONLY">
            <xs:annotation>
              <xs:documentation>Guest Coverage Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMA_AIRBAG">
            <xs:annotation>
              <xs:documentation>Passive Restraint Discount</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMA_DEDUCTIBLE">
            <xs:annotation>
              <xs:documentation>PIP Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMA_PIP">
            <xs:annotation>
              <xs:documentation>PIP Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMA_WC">
            <xs:annotation>
              <xs:documentation>WC Discount</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMD_GUEST">
            <xs:annotation>
              <xs:documentation>Guest Pip Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMD_PIP">
            <xs:annotation>
              <xs:documentation>PIP Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMD_WAIVER">
            <xs:annotation>
              <xs:documentation>Waived Individuals</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMI_DEDUCTIBLE">
            <xs:annotation>
              <xs:documentation>PIP Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMI_FUNERAL">
            <xs:annotation>
              <xs:documentation>PIP Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMI_INCOME">
            <xs:annotation>
              <xs:documentation>PIP Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMI_MED">
            <xs:annotation>
              <xs:documentation>PIP Medical - Unlimited</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMI_OtherProvider">
            <xs:annotation>
              <xs:documentation>Coordinate PIP</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMI_SERVICES">
            <xs:annotation>
              <xs:documentation>PIP Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMI_SURVIVOR">
            <xs:annotation>
              <xs:documentation>PIP Survivor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMN_CYCLE">
            <xs:annotation>
              <xs:documentation>Extend PIP coverage to Motorcycles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMN_EXC_WORK">
            <xs:annotation>
              <xs:documentation>Exclude Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMN_MEDICAL">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMN_MED_DEDUCT">
            <xs:annotation>
              <xs:documentation>Medical Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMN_OTHER">
            <xs:annotation>
              <xs:documentation>Other Than Med PIP Benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMN_OTH_DEDUCT">
            <xs:annotation>
              <xs:documentation>Deductible for all PIP coverages other than Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMN_SERVICES">
            <xs:annotation>
              <xs:documentation>Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMN_STACK">
            <xs:annotation>
              <xs:documentation>Stack PIP Limits - requires 2+ vehicles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMN_SURVIVOR">
            <xs:annotation>
              <xs:documentation>Survivor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPMN_WORK">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPND_AGG"/>
          <xs:enumeration value="TC_PIPND_FUNERAL"/>
          <xs:enumeration value="TC_PIPND_SERVICE"/>
          <xs:enumeration value="TC_PIPND_SURVIVOR">
            <xs:annotation>
              <xs:documentation>North Dakota ;</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNJ_MEDDEDUCT">
            <xs:annotation>
              <xs:documentation>Medical Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNJ_MEDDEDUCTappliesto">
            <xs:annotation>
              <xs:documentation>Medical Deductible applies to</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNJ_MEDLIMIT">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNJ_MEDONLY">
            <xs:annotation>
              <xs:documentation>Med Only Option</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNJ_MED_COPAY">
            <xs:annotation>
              <xs:documentation>Medical Copay Option</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNJ_MEDsecondary">
            <xs:annotation>
              <xs:documentation>PIP Med is secondary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNJ_OTHER_LIMS">
            <xs:annotation>
              <xs:documentation>Non-Medical Benefits (weekly income/max income |daily services/max services | funeral / death)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNY_DEATH">
            <xs:annotation>
              <xs:documentation>Death</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNY_DEDUCTIBLE"/>
          <xs:enumeration value="TC_PIPNY_EXMED">
            <xs:annotation>
              <xs:documentation>Exclude Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNY_INCOME">
            <xs:annotation>
              <xs:documentation>PIP Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNY_MOTORCYCLE">
            <xs:annotation>
              <xs:documentation>Motorcycle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPNY_OBEL">
            <xs:annotation>
              <xs:documentation>Opt. Basic Econ. Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPOR_CHILDCARE">
            <xs:annotation>
              <xs:documentation>PIP Childcare</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPOR_DEDUCT">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPOR_DEDUCTIBLEappliesto">
            <xs:annotation>
              <xs:documentation>Deductible Applies To</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPOR_FUNERAL">
            <xs:annotation>
              <xs:documentation>PIP Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPOR_INCOME"/>
          <xs:enumeration value="TC_PIPOR_MED">
            <xs:annotation>
              <xs:documentation>PIP Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPOR_SERVICES">
            <xs:annotation>
              <xs:documentation>PIP Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPPA_COMBINED"/>
          <xs:enumeration value="TC_PIPPA_DEATH">
            <xs:annotation>
              <xs:documentation>Death</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPPA_EXTRAMED"/>
          <xs:enumeration value="TC_PIPPA_FUNERAL"/>
          <xs:enumeration value="TC_PIPPA_INCOME">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPPA_MEDICAL">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPTX_PIP"/>
          <xs:enumeration value="TC_PIPUT_FUNERAL"/>
          <xs:enumeration value="TC_PIPUT_MEDICAL">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPUT_SURVIVOR"/>
          <xs:enumeration value="TC_PIPUT_WORK">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPWA_FUNERAL"/>
          <xs:enumeration value="TC_PIPWA_INCOME"/>
          <xs:enumeration value="TC_PIPWA_MED">
            <xs:annotation>
              <xs:documentation>PIP Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPWA_SERVICES">
            <xs:annotation>
              <xs:documentation>PIP Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIP_AR_Death">
            <xs:annotation>
              <xs:documentation>Death</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIP_DE_Deduct_WhoApplies">
            <xs:annotation>
              <xs:documentation>Apply PIP Deductible to</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIP_DE_Deductible">
            <xs:annotation>
              <xs:documentation>PIP Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIP_HI_Funeral">
            <xs:annotation>
              <xs:documentation>Funeral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIP_HI_MedRehab">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PollutionLimitType">
            <xs:annotation>
              <xs:documentation>Pollution Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PollutionSubLimit">
            <xs:annotation>
              <xs:documentation>Pollution Sub Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProdWithdrawAgg">
            <xs:annotation>
              <xs:documentation>Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProductWithdrawCutOffDate">
            <xs:annotation>
              <xs:documentation>Cut Off Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProductWithdrawDeduct">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProductWithdrawPercent">
            <xs:annotation>
              <xs:documentation>Participating Percent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SBSpecialPacks">
            <xs:annotation>
              <xs:documentation>Special Coverages Packages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TowingAndLaborLimit">
            <xs:annotation>
              <xs:documentation>Towing and Labor Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCDeductible">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCEmpLiabLimit">
            <xs:annotation>
              <xs:documentation>Employer's Liability Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCExcludedStates">
            <xs:annotation>
              <xs:documentation>Excluded States</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCFedEmpLiabCovProgram">
            <xs:annotation>
              <xs:documentation>WC Fed Liability Program Type I / II</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCFedEmpLiabLimit">
            <xs:annotation>
              <xs:documentation>Per Accident Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCFedEmpLiabilityLaw">
            <xs:annotation>
              <xs:documentation>WC Fed Liab Law</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCIncludedMonopolisticStates">
            <xs:annotation>
              <xs:documentation>Included Monopolistic States</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCIncludedStates">
            <xs:annotation>
              <xs:documentation>Included States</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCOtherStatesOpt">
            <xs:annotation>
              <xs:documentation>Covered States</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCStopGapOpt">
            <xs:annotation>
              <xs:documentation>Stop Gap</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WageLoss">
            <xs:annotation>
              <xs:documentation>Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_XCULocOpsHazBasis">
            <xs:annotation>
              <xs:documentation>XCU Locations/Ops/Hazard/Basis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Y2KBILimit">
            <xs:annotation>
              <xs:documentation>BI Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Y2KDescription"/>
          <xs:enumeration value="TC_Y2KPDLimit">
            <xs:annotation>
              <xs:documentation>PD Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Y2KPersAdvrtInjuryLimit">
            <xs:annotation>
              <xs:documentation>Personal &amp; Advertising Injury Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pc_custom_blanket">
            <xs:annotation>
              <xs:documentation>Blanket Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pc_custom_coinsurance">
            <xs:annotation>
              <xs:documentation>Coinsurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pc_custom_occurLimit">
            <xs:annotation>
              <xs:documentation>Occurrence Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CovTermModelAgg" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Coverage term model aggregation</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ag">
            <xs:annotation>
              <xs:documentation>Annual aggregate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cc">
            <xs:annotation>
              <xs:documentation>Each common cause</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ea">
            <xs:annotation>
              <xs:documentation>Each accident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ei">
            <xs:annotation>
              <xs:documentation>Each incident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pc">
            <xs:annotation>
              <xs:documentation>Per claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pi">
            <xs:annotation>
              <xs:documentation>Per item</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_po">
            <xs:annotation>
              <xs:documentation>Per occurence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pp">
            <xs:annotation>
              <xs:documentation>Per person</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CovTermModelRest" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Coverage term model restriction</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_acc">
            <xs:annotation>
              <xs:documentation>Accident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bi">
            <xs:annotation>
              <xs:documentation>Bodily injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bia">
            <xs:annotation>
              <xs:documentation>Bodily injury by accident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bid">
            <xs:annotation>
              <xs:documentation>Bodily injury by disease</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bipd">
            <xs:annotation>
              <xs:documentation>Bodily injury/property damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bld">
            <xs:annotation>
              <xs:documentation>Building</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_edi">
            <xs:annotation>
              <xs:documentation>Employee dishonesty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exp">
            <xs:annotation>
              <xs:documentation>Expense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ind">
            <xs:annotation>
              <xs:documentation>Indemnity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_med">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mni">
            <xs:annotation>
              <xs:documentation>Medical and indemnity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pd">
            <xs:annotation>
              <xs:documentation>Property damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_per">
            <xs:annotation>
              <xs:documentation>Personal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pip">
            <xs:annotation>
              <xs:documentation>PIP</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pip$45$death">
            <xs:annotation>
              <xs:documentation>PIP Death Benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pip$45$medical">
            <xs:annotation>
              <xs:documentation>PIP Medical Benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pip$45$services">
            <xs:annotation>
              <xs:documentation>PIP Replacement Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pip$45$voc">
            <xs:annotation>
              <xs:documentation>PIP Rehab Benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pip$45$wage">
            <xs:annotation>
              <xs:documentation>PIP Wage Loss Benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prd">
            <xs:annotation>
              <xs:documentation>Product</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prp">
            <xs:annotation>
              <xs:documentation>Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LimitsIndicator" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_No">
            <xs:annotation>
              <xs:documentation>No</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Unknown">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Yes">
            <xs:annotation>
              <xs:documentation>Yes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CoverageForm" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ClmsMdNoRtr">
            <xs:annotation>
              <xs:documentation>Claims-made coverage - basic no retroactive coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClmsMdNoRtrExt">
            <xs:annotation>
              <xs:documentation>Claims-made coverage - extended reporting period (no retroactive coverage)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClmsMdRtr">
            <xs:annotation>
              <xs:documentation>Claims-made coverage - basic with retroactive coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClmsMdRtrExt">
            <xs:annotation>
              <xs:documentation>Claims-made coverage - extended reporting period (with retroactive coverage)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Occurrence">
            <xs:annotation>
              <xs:documentation>Occurrence coverage (default)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PriorActs">
            <xs:annotation>
              <xs:documentation>Occurrence coverage (prior acts)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CustomerServiceTier" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the customer service associated with a claim. Used for special account handling.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_gold">
            <xs:annotation>
              <xs:documentation>The service tier for Gold customers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_platinum">
            <xs:annotation>
              <xs:documentation>The service tier for Platinum customers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_silver">
            <xs:annotation>
              <xs:documentation>The service tier for Silver customers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyRatingPlan" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Deductible">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GuaranteedCost">
            <xs:annotation>
              <xs:documentation>Guaranteed cost</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IncurredLossRat">
            <xs:annotation>
              <xs:documentation>Incurred loss ratio</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NonPar">
            <xs:annotation>
              <xs:documentation>Non-par (CA only)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PaidLossRetro">
            <xs:annotation>
              <xs:documentation>Paid loss retroactive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Par">
            <xs:annotation>
              <xs:documentation>Par (CA only)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SlidingScaleDiv">
            <xs:annotation>
              <xs:documentation>Sliding scale dividend</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicySource" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Automated">
            <xs:annotation>
              <xs:documentation>Automated entry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Manual">
            <xs:annotation>
              <xs:documentation>Manual entry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of policies</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BusinessAuto">
            <xs:annotation>
              <xs:documentation>Commercial Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusinessOwners">
            <xs:annotation>
              <xs:documentation>Business Owners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommercialPackage">
            <xs:annotation>
              <xs:documentation>Commercial Package</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CommercialProperty">
            <xs:annotation>
              <xs:documentation>Commercial Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_D_and_O">
            <xs:annotation>
              <xs:documentation>Directors and officers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GeneralLiability">
            <xs:annotation>
              <xs:documentation>General Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Homeowners">
            <xs:annotation>
              <xs:documentation>Homeowners and Dwelling Fire coverage forms</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InlandMarine">
            <xs:annotation>
              <xs:documentation>Inland Marine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PersonalAuto">
            <xs:annotation>
              <xs:documentation>Personal Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PersonalUmbrella">
            <xs:annotation>
              <xs:documentation>Personal Umbrella</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WorkersComp">
            <xs:annotation>
              <xs:documentation>Workers' Compensation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_farmowners">
            <xs:annotation>
              <xs:documentation>Farmowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prof_liability">
            <xs:annotation>
              <xs:documentation>Professional liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_travel_per">
            <xs:annotation>
              <xs:documentation>Personal travel includes a single person and families, not group travel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CoveredPartyType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_addinsured">
            <xs:annotation>
              <xs:documentation>Additional insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_addnamedinsured">
            <xs:annotation>
              <xs:documentation>Additional named insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tbd">
            <xs:annotation>
              <xs:documentation>TBD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LostWagesBenefitType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_death">
            <xs:annotation>
              <xs:documentation>Death benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ppd">
            <xs:annotation>
              <xs:documentation>Permanent Partial Disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ptd">
            <xs:annotation>
              <xs:documentation>Permanent Total Disability </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tpd">
            <xs:annotation>
              <xs:documentation>Temporary Partial Disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ttd">
            <xs:annotation>
              <xs:documentation>Temporary Total Disability </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_voc">
            <xs:annotation>
              <xs:documentation>Vocational benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimantType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Categorizes claimant relative to the policyholder</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_bystander">
            <xs:annotation>
              <xs:documentation>Pedestrian or bystander</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_contractor">
            <xs:annotation>
              <xs:documentation>Contractor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_customer">
            <xs:annotation>
              <xs:documentation>Customer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_employee">
            <xs:annotation>
              <xs:documentation>Employee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_householdmember">
            <xs:annotation>
              <xs:documentation>Member of the insured's household</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_insured">
            <xs:annotation>
              <xs:documentation>Insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other third party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_propertyowner">
            <xs:annotation>
              <xs:documentation>Owner of the lost/damaged property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subcontractor">
            <xs:annotation>
              <xs:documentation>Subcontractor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_veh_ins_driver">
            <xs:annotation>
              <xs:documentation>Driver of insured's vehicle (not insured or household member)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_veh_ins_occupant">
            <xs:annotation>
              <xs:documentation>Occupant of insured's vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_veh_other_driver">
            <xs:annotation>
              <xs:documentation>Driver of other vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_veh_other_occ">
            <xs:annotation>
              <xs:documentation>Occupant of other vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_veh_other_owner">
            <xs:annotation>
              <xs:documentation>Owner of other vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExposureClosedOutcomeType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The possible outcomes of an exposure when it is closed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_completed">
            <xs:annotation>
              <xs:documentation>Completed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_duplicate">
            <xs:annotation>
              <xs:documentation>Duplicate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fraud">
            <xs:annotation>
              <xs:documentation>Fraud</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mistake">
            <xs:annotation>
              <xs:documentation>Mistake</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentscomplete">
            <xs:annotation>
              <xs:documentation>Payments complete</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unnecessary">
            <xs:annotation>
              <xs:documentation>Unnecessary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaidOnTime" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_attendexam">
            <xs:annotation>
              <xs:documentation>Payment to attend exam</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_latenotice">
            <xs:annotation>
              <xs:documentation>Late because of late notice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_latetechnical">
            <xs:annotation>
              <xs:documentation>Late because of technical processing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_moconvert">
            <xs:annotation>
              <xs:documentation>First payment after claim converting from MO to Indemnity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notapplicable">
            <xs:annotation>
              <xs:documentation>Not applicable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ontime">
            <xs:annotation>
              <xs:documentation>First TTD payment on time</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payafterdelay">
            <xs:annotation>
              <xs:documentation>First payment after claim in delay/deny status</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payaward">
            <xs:annotation>
              <xs:documentation>Payment for award</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payedd">
            <xs:annotation>
              <xs:documentation>Payment to EDD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentFrequencyType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_daily">
            <xs:annotation>
              <xs:documentation>Employee to be paid on a daily basis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_everytwoweeks">
            <xs:annotation>
              <xs:documentation>Employee to be paid every two weeks</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_monthly">
            <xs:annotation>
              <xs:documentation>Employee to be paid on a monthly basis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_twiceamonth">
            <xs:annotation>
              <xs:documentation>Employee to be paid twice a month</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_weekly">
            <xs:annotation>
              <xs:documentation>Employee to be paid on a weekly basis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ProviderType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_familymember">
            <xs:annotation>
              <xs:documentation>Family member</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_thirdparty">
            <xs:annotation>
              <xs:documentation>Third party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RetroPeriodType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_seven">
            <xs:annotation>
              <xs:documentation>Seven calendar days</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ten">
            <xs:annotation>
              <xs:documentation>Ten calendar days</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SettleMethod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_cacompromise">
            <xs:annotation>
              <xs:documentation>CA Compromise and release</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dismissal">
            <xs:annotation>
              <xs:documentation>Dismissal or take nothing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lumpsum">
            <xs:annotation>
              <xs:documentation>Lump sum</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lumpsumother">
            <xs:annotation>
              <xs:documentation>Other than lump sum</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stipaward">
            <xs:annotation>
              <xs:documentation>Stipulated award (carrier/claimant settlement)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WaitingPeriodType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_three_business">
            <xs:annotation>
              <xs:documentation>3 business days</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_three_calendar">
            <xs:annotation>
              <xs:documentation>3 calendar days</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unknown">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CoverageSubtype" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype of coverage, filtered by CoverageType</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AccountsRecOffPremisesProperty">
            <xs:annotation>
              <xs:documentation>Off Premises Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAAudVisDataEqip2Cov">
            <xs:annotation>
              <xs:documentation>Audio Visual Data Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BABobtailLiabCov_bi">
            <xs:annotation>
              <xs:documentation>Bobtail Liability - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BABobtailLiabCov_pd">
            <xs:annotation>
              <xs:documentation>Bobtail Liability - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BABobtailLiabCov_vd">
            <xs:annotation>
              <xs:documentation>Bobtail Liability - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BACollisionCov">
            <xs:annotation>
              <xs:documentation>Collision</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BACollisionLimited_MAMI">
            <xs:annotation>
              <xs:documentation>Collision - Limited Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAComprehensiveCov">
            <xs:annotation>
              <xs:documentation>Comprehensive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCCollisionCov">
            <xs:annotation>
              <xs:documentation>Collision for Drive Other Car</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCCompCov">
            <xs:annotation>
              <xs:documentation>Comprehensive for Drive Other Car</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCLiabilityCovBI">
            <xs:annotation>
              <xs:documentation>Liability (Drive Other Car) - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCLiabilityCovPD">
            <xs:annotation>
              <xs:documentation>Liability DOC - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCLiabilityCovVEH">
            <xs:annotation>
              <xs:documentation>Liability DOC - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCMedPayCov">
            <xs:annotation>
              <xs:documentation>Medical Payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCUnderinsCov">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist for Drive Other Car</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCUninsuredBI">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - DOC - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCUninsuredPD">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - DOC - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCUninsuredVEH">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - DOC - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADealerLimitLiabCov_bi">
            <xs:annotation>
              <xs:documentation>Auto Dealer Limited Liability - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADealerLimitLiabCov_pd">
            <xs:annotation>
              <xs:documentation>Auto Dealer Limited Liability - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADealerLimitLiabCov_vd">
            <xs:annotation>
              <xs:documentation>Auto Dealer Limited Liability - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAFellowEmployeesCov">
            <xs:annotation>
              <xs:documentation>Fellow Employees</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredCollisionCov">
            <xs:annotation>
              <xs:documentation>Hired Auto Collision</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredCompCov">
            <xs:annotation>
              <xs:documentation>Hired Auto Comprehensive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredLiabilityCovBI">
            <xs:annotation>
              <xs:documentation>Hired Auto Liability - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredLiabilityCovPD">
            <xs:annotation>
              <xs:documentation>Hired Auto Liability - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredLiabilityCovVEH">
            <xs:annotation>
              <xs:documentation>Hired Auto Liability - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredSpecPerilCov">
            <xs:annotation>
              <xs:documentation>Hired Auto Specified Causes of Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredUIMBI">
            <xs:annotation>
              <xs:documentation>Hired Auto Underinsured Motorist - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredUIMPD">
            <xs:annotation>
              <xs:documentation>Hired Auto Underinsured Motorist - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredUIMVEH">
            <xs:annotation>
              <xs:documentation>Hired Auto Underinsured Motorist - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredUMCovBI">
            <xs:annotation>
              <xs:documentation>Hired Auto Uninsured Motorist - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredUMCovPD">
            <xs:annotation>
              <xs:documentation>Hired Auto Uninsured Motorist - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredUMCovVEH">
            <xs:annotation>
              <xs:documentation>Hired Auto Uninsured Motorist - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BALimitedPropDamCov">
            <xs:annotation>
              <xs:documentation>Limited Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BALoanLeaseGapCov">
            <xs:annotation>
              <xs:documentation>Loan Lease Gap</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BALossOfUseCov">
            <xs:annotation>
              <xs:documentation>Loss of Use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BANonOwnSSExtendCovVEH">
            <xs:annotation>
              <xs:documentation>Non-owned Social Srv Extended - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BANonOwndSSExtendedBI">
            <xs:annotation>
              <xs:documentation>Non-owned Social Srv Extended - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BANonOwndSSExtendedPD">
            <xs:annotation>
              <xs:documentation>Non-owned Social Srv Extended - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BANonownedLiabCov_bi">
            <xs:annotation>
              <xs:documentation>Non-Owned Auto Liability - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BANonownedLiabCov_pd">
            <xs:annotation>
              <xs:documentation>Non-Owned Auto Liability - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BANonownedLiabCov_vd">
            <xs:annotation>
              <xs:documentation>Non-Owned Auto Liability - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedLiabilityCov_bi">
            <xs:annotation>
              <xs:documentation>Liability - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedLiabilityCov_pd">
            <xs:annotation>
              <xs:documentation>Liability - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedLiabilityCov_vd">
            <xs:annotation>
              <xs:documentation>Liability - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedMedPayCov">
            <xs:annotation>
              <xs:documentation>Medical Payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUIMBICov">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUIMPDCov">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMBICov">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMBISuppCov">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Supplemental BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMPDCovPD">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist -PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMPDCovVEH">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPollutLiabBasicBI">
            <xs:annotation>
              <xs:documentation>Pollution Liability Basic- BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPollutLiabBasicGEN">
            <xs:annotation>
              <xs:documentation>Pollution Liability Basic - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPollutLiabBasicPD">
            <xs:annotation>
              <xs:documentation>Pollution Liability Basic - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPollutLiabBoardBI">
            <xs:annotation>
              <xs:documentation>Pollution Liability Broad - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPollutLiabBoardGEN">
            <xs:annotation>
              <xs:documentation>Pollution Liability Broad - General Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPollutLiabBoardPD">
            <xs:annotation>
              <xs:documentation>Pollution Liability Broad - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPropProtectionCov">
            <xs:annotation>
              <xs:documentation>Property Protection Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BARentalCov">
            <xs:annotation>
              <xs:documentation>Rental Reimbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASeasonTrailerLiabCov_bi">
            <xs:annotation>
              <xs:documentation>Seasonal Trailer Liability - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASeasonTrailerLiabCov_pd">
            <xs:annotation>
              <xs:documentation>Seasonal Trailer Liability - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASeasonTrailerLiabCov_vd">
            <xs:annotation>
              <xs:documentation>Seasonal Trailer Liability - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASpecCausesLossCov">
            <xs:annotation>
              <xs:documentation>Specified Causes of Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BATapeDiscRecordCov">
            <xs:annotation>
              <xs:documentation>Tape Disc Record</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BATowingLaborCov">
            <xs:annotation>
              <xs:documentation>Towing and Labor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPAdditionalCov">
            <xs:annotation>
              <xs:documentation>Special Coverage Packages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPAggLimitProjCov">
            <xs:annotation>
              <xs:documentation>Aggregate Limits of Insurance - Projects</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPAlaskaAFGLCov">
            <xs:annotation>
              <xs:documentation>Alaska Attorney Fees - GL</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBarberCovBI">
            <xs:annotation>
              <xs:documentation>Barber/Beautician Liability - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBarberCovGEN">
            <xs:annotation>
              <xs:documentation>Barber/Beautician Liability - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBuildingCov">
            <xs:annotation>
              <xs:documentation>Building</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBurgRobCov">
            <xs:annotation>
              <xs:documentation>Burglary and Robbery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBusIncDepPrpCov">
            <xs:annotation>
              <xs:documentation>Business Income - Dependent Prop</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBusIncExtCov">
            <xs:annotation>
              <xs:documentation>Business Income - Extended Period</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBusIncPayrollCov">
            <xs:annotation>
              <xs:documentation>BOP Business Income - Ordinary Payroll</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCAEqBldgRecCov">
            <xs:annotation>
              <xs:documentation>CA - EQ Reconstruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCAEqBldgSubCov">
            <xs:annotation>
              <xs:documentation>CA Earthquake - Building Sublimits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCertTerrorCap">
            <xs:annotation>
              <xs:documentation>Terror - Cap on Cert. Acts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPComputerFraudCov">
            <xs:annotation>
              <xs:documentation>Computer/Funds Transfer Fraud</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCondoAssnCov">
            <xs:annotation>
              <xs:documentation>Condo Association Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCondoUnitOwnCov">
            <xs:annotation>
              <xs:documentation>Condo Unit Owner</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPDesigPremProj">
            <xs:annotation>
              <xs:documentation>Designated Premises or Project Limitation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEQSpLeakBPP">
            <xs:annotation>
              <xs:documentation>EQ Sprinkler Leakage - Contents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEQSpLeakBuilding">
            <xs:annotation>
              <xs:documentation>EQ Sprinkler Leakage - Building</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPElectricalSchedCov">
            <xs:annotation>
              <xs:documentation>Electrical Equipment - Scheduled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpBenExtRpting">
            <xs:annotation>
              <xs:documentation>Employee Benefits Extended Reporting</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpBenefits">
            <xs:annotation>
              <xs:documentation>Employee Benefits Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpDisCov">
            <xs:annotation>
              <xs:documentation>Employee Dishonesty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEqBldgCov">
            <xs:annotation>
              <xs:documentation>Earthquake</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFDService">
            <xs:annotation>
              <xs:documentation>FD Service Contract</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFoodContamCovGEN">
            <xs:annotation>
              <xs:documentation>Food Contamination Cov - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFoodContamCovINCOME">
            <xs:annotation>
              <xs:documentation>Food Contamination Cov - Bus. Income</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPForgeAltCov">
            <xs:annotation>
              <xs:documentation>Forgery and Alteration</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFuncPerPropCov">
            <xs:annotation>
              <xs:documentation>Functional Business Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFuneralDirCov">
            <xs:annotation>
              <xs:documentation>Funeral Director Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFungiPropCov">
            <xs:annotation>
              <xs:documentation>Limited Fungi Coverage (Property)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPGuestPropCov">
            <xs:annotation>
              <xs:documentation>Guest's Property Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPGuestSafeDepCov">
            <xs:annotation>
              <xs:documentation>Guests Property In Safe Deposit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPHearingAidCov">
            <xs:annotation>
              <xs:documentation>Hearing Aid / Optician Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPHiredAutoBI">
            <xs:annotation>
              <xs:documentation>Hired Auto - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPHiredAutoGEN">
            <xs:annotation>
              <xs:documentation>Hired Auto - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPHiredAutoVEH">
            <xs:annotation>
              <xs:documentation>Hired Auto - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLeasedWorkerInjBI">
            <xs:annotation>
              <xs:documentation>Leased Workers Injury - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLeasedWorkerInjCovGEN">
            <xs:annotation>
              <xs:documentation>Leased Workers Injury - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiabilityBI">
            <xs:annotation>
              <xs:documentation>Liability - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiabilityGEN">
            <xs:annotation>
              <xs:documentation>Liability - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiabilityPD">
            <xs:annotation>
              <xs:documentation>Liability - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorCovBI">
            <xs:annotation>
              <xs:documentation>Liquor Liability Cov - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorCovGEN">
            <xs:annotation>
              <xs:documentation>Liquor Liability Cov - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorEventsBI">
            <xs:annotation>
              <xs:documentation>Liquor Liability - Events - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorEventsGEN">
            <xs:annotation>
              <xs:documentation>Liquor Liability - Events - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorRemoveExc">
            <xs:annotation>
              <xs:documentation>Liquor Liability - Remove Exclusion</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLocWindHailCov">
            <xs:annotation>
              <xs:documentation>Windstorm/Hail</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMALeadPoisonCov">
            <xs:annotation>
              <xs:documentation>MA -  Lead Poisoning</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMATenantReloCov">
            <xs:annotation>
              <xs:documentation>MA - Apartment Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMechBreakdownCov">
            <xs:annotation>
              <xs:documentation>Mechanical Breakdown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMedExpCov">
            <xs:annotation>
              <xs:documentation>Premises Medical Expense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMineSubCov">
            <xs:annotation>
              <xs:documentation>Mine Subsidence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMoneySecCov">
            <xs:annotation>
              <xs:documentation>Money and Securities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMotelCov">
            <xs:annotation>
              <xs:documentation>BOP Motel Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPNewAcquiredOrgCov">
            <xs:annotation>
              <xs:documentation>Newly Acquired Organization Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPNonOwnedAutoCovBI">
            <xs:annotation>
              <xs:documentation>Non owned auto - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPNonOwnedAutoCovGEN">
            <xs:annotation>
              <xs:documentation>Non owned auto - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPNonOwnedAutoVEH">
            <xs:annotation>
              <xs:documentation>Non owned auto - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOrdinanceCov">
            <xs:annotation>
              <xs:documentation>Ordinance or Law</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOutSignCov">
            <xs:annotation>
              <xs:documentation>Outdoor Signs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOutdoorProp">
            <xs:annotation>
              <xs:documentation>Outdoor Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOverflowCovCON">
            <xs:annotation>
              <xs:documentation>Water Backup/Sump Overflow - Contents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOverflowCovPD">
            <xs:annotation>
              <xs:documentation>Water Backup/Sump Overflow - Building</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPersAdvertInj">
            <xs:annotation>
              <xs:documentation>Personal and Advertising Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPersPropOffPrem">
            <xs:annotation>
              <xs:documentation>Personal Property Off Premises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPersonalEffects">
            <xs:annotation>
              <xs:documentation>Personal Effects</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPersonalPropCov">
            <xs:annotation>
              <xs:documentation>Business Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPesticideApplicaorCovBI">
            <xs:annotation>
              <xs:documentation>Pesticide Applicator Cov - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPesticideApplicatorCovGEN">
            <xs:annotation>
              <xs:documentation>Pesticide Applicator Cov - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPharmacistCov">
            <xs:annotation>
              <xs:documentation>Pharmacist Limited Liability Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPollutionCov">
            <xs:annotation>
              <xs:documentation>Limited Pollution Liability Extension</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPrinterCov">
            <xs:annotation>
              <xs:documentation>Printers Errors and Omissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPropertyCov">
            <xs:annotation>
              <xs:documentation>Policywide Property Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPReceivablesCov">
            <xs:annotation>
              <xs:documentation>Accounts Receivable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPSelfStorCov">
            <xs:annotation>
              <xs:documentation>Self Storage Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPSpoilageCov">
            <xs:annotation>
              <xs:documentation>Spoilage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPTenantFireCov">
            <xs:annotation>
              <xs:documentation>Tenants Fire Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPTenantsLiabilityCovGEN">
            <xs:annotation>
              <xs:documentation>Tenant's Liability - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPTenantsLiabilityCovPD">
            <xs:annotation>
              <xs:documentation>Tenant's Liability - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPToolsInstallUnschedCov">
            <xs:annotation>
              <xs:documentation>Contractors Tools/Installation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPToolsSchedCov">
            <xs:annotation>
              <xs:documentation>Contractors Tools - Scheduled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilDirectCovCON">
            <xs:annotation>
              <xs:documentation>Utilities Direct Damage - Contents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilDirectCovPD">
            <xs:annotation>
              <xs:documentation>Utilities Direct Damage - Building</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilTimeCov">
            <xs:annotation>
              <xs:documentation>Utilities - Time Element</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVacancyChangeCov">
            <xs:annotation>
              <xs:documentation>Vacancy Changes/Conditions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVacancyCov">
            <xs:annotation>
              <xs:documentation>Vacancy Permit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPValuablePapersCov">
            <xs:annotation>
              <xs:documentation>Valuable Papers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVetCov">
            <xs:annotation>
              <xs:documentation>Veterinarian Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPY2KIncomeExpenseCov">
            <xs:annotation>
              <xs:documentation>Income/Expense - Electronic Equip.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPY2KLimitedCov">
            <xs:annotation>
              <xs:documentation>Computer Limited Liability Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPY2KPremOnlyCov">
            <xs:annotation>
              <xs:documentation>Computer Liability-Premises Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusIncChangeCov">
            <xs:annotation>
              <xs:documentation>Bus. Inc. Waiting Period Change</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CADeathDisabilityCov">
            <xs:annotation>
              <xs:documentation>Auto Death and Disability Benefit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_DE">
            <xs:annotation>
              <xs:documentation>PIP - Delaware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_FL">
            <xs:annotation>
              <xs:documentation>PIP - Florida</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_HI">
            <xs:annotation>
              <xs:documentation>PIP - Hawaii</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_KS">
            <xs:annotation>
              <xs:documentation>PIP - Kansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_KY">
            <xs:annotation>
              <xs:documentation>PIP - Kentucky</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_MA">
            <xs:annotation>
              <xs:documentation>PIP - Massachusetts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_MD">
            <xs:annotation>
              <xs:documentation>PIP - Maryland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_MI">
            <xs:annotation>
              <xs:documentation>PIP - Michigan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_MN">
            <xs:annotation>
              <xs:documentation>PIP - Minnesota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_ND">
            <xs:annotation>
              <xs:documentation>PIP - North Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_NJ">
            <xs:annotation>
              <xs:documentation>PIP - New Jersey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_NY">
            <xs:annotation>
              <xs:documentation>PIP - New York</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_OR">
            <xs:annotation>
              <xs:documentation>PIP - Oregon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_PA">
            <xs:annotation>
              <xs:documentation>PIP - Pennsylvania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_TX">
            <xs:annotation>
              <xs:documentation>PIP - Texas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_UT">
            <xs:annotation>
              <xs:documentation>PIP - Utah</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_WA">
            <xs:annotation>
              <xs:documentation>PIP - Washington</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA_PIP_AR">
            <xs:annotation>
              <xs:documentation>PIP - Arkansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA_PIP_DC">
            <xs:annotation>
              <xs:documentation>PIP - District Of Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCov">
            <xs:annotation>
              <xs:documentation>Business Personal Property Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBlanketCov">
            <xs:annotation>
              <xs:documentation>CPBlanket Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgBusIncomeCov">
            <xs:annotation>
              <xs:documentation>Business Income Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCov">
            <xs:annotation>
              <xs:documentation>Building Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgExtraExpenseCov">
            <xs:annotation>
              <xs:documentation>Extra Expense Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCov">
            <xs:annotation>
              <xs:documentation>Business Personal Property - Separation of Coverage (Stock)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractLiabRRGEN">
            <xs:annotation>
              <xs:documentation>Contract Liability - RR -Gen Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipAdditionallyAcquiredProperty">
            <xs:annotation>
              <xs:documentation>Additionally Acquired Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipDebrisRemoval">
            <xs:annotation>
              <xs:documentation>Debris Removal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipEmployeesTools">
            <xs:annotation>
              <xs:documentation>Employees Tools - per occurrence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipMiscUnscheduledCov">
            <xs:annotation>
              <xs:documentation>Misc Unscheduled Items - per occurrence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipPollutionCleanup">
            <xs:annotation>
              <xs:documentation>Pollution Cleanup</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipPreservationOfProperty">
            <xs:annotation>
              <xs:documentation>Preservation Of Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipRentalReibursement">
            <xs:annotation>
              <xs:documentation>Rental Reimbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipRentedEquipment">
            <xs:annotation>
              <xs:documentation>Rented Equipment - per occurrence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipSchedCov">
            <xs:annotation>
              <xs:documentation>Scheduled Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDWDwellingDWLG">
            <xs:annotation>
              <xs:documentation>Dwelling Fire - Dwelling</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDWLossOfUse">
            <xs:annotation>
              <xs:documentation>Dwelling Fire - Loss of Use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDWOrdinanceLaw">
            <xs:annotation>
              <xs:documentation>Dwelling - Ordinance or Law</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDWOtherStructures">
            <xs:annotation>
              <xs:documentation>Dwelling - Other Structures</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDWPersonalProperty">
            <xs:annotation>
              <xs:documentation>Dwelling - Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDWTheft_Contents">
            <xs:annotation>
              <xs:documentation>Dwelling Theft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPLIMedPay">
            <xs:annotation>
              <xs:documentation>Dwelling Med Pay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPLIPersonalLiabilityBI">
            <xs:annotation>
              <xs:documentation>Personal Liability - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPLIPersonalLiabilityGEN">
            <xs:annotation>
              <xs:documentation>Personal Liability - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPLIPersonalLiabilityPD">
            <xs:annotation>
              <xs:documentation>Personal Liability - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLAddCondoCovBI">
            <xs:annotation>
              <xs:documentation>Condominium - B</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLAddCondoCovGEN">
            <xs:annotation>
              <xs:documentation>Condominium - Gen Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLAddCondoCovPD">
            <xs:annotation>
              <xs:documentation>Condominium PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLAddInjuryLeasedWorkers">
            <xs:annotation>
              <xs:documentation>Coverage for Injury to Leased Workers: CG 04 24</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLCov_adv_gd">
            <xs:annotation>
              <xs:documentation>General Liability Personal/Advertising Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLCov_ops_bi">
            <xs:annotation>
              <xs:documentation>General Liability Premises/Operations - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLCov_ops_gd">
            <xs:annotation>
              <xs:documentation>General Liability Premises/Operations - General Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLCov_ops_mp">
            <xs:annotation>
              <xs:documentation>General Liability Premises/Operations - Med Pay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLCov_ops_pd">
            <xs:annotation>
              <xs:documentation>General Liability Premises/Operations - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLCov_prod_bi">
            <xs:annotation>
              <xs:documentation>General Liability Products/Completed Operations - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLCov_prod_gd">
            <xs:annotation>
              <xs:documentation>General Liability Products/Completed Operations - General Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLCov_prod_mp">
            <xs:annotation>
              <xs:documentation>General Liability Products/Completed Operations - Med Pay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLCov_prod_pd">
            <xs:annotation>
              <xs:documentation>General Liability Products/Completed Operations - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLContracdtLiabRRPD">
            <xs:annotation>
              <xs:documentation>Contract Liability - RR -PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLContractLiabRRBI">
            <xs:annotation>
              <xs:documentation>Contract Liability - RR -BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLDeductible$45$BI">
            <xs:annotation>
              <xs:documentation>Optional GL Deductible - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLDeductible$45$GEN">
            <xs:annotation>
              <xs:documentation>Optional GL Deductible - Gen. Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLDeductible$45$PD">
            <xs:annotation>
              <xs:documentation>Optional GL Deductible - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLElectronicDataLiability">
            <xs:annotation>
              <xs:documentation>Electronic Data Liability: CG 04 37</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLEmpBenefitsLiabilityCov">
            <xs:annotation>
              <xs:documentation>Employee Benefits Liability: CG 04 35</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLGovSubdivisionsBI">
            <xs:annotation>
              <xs:documentation>Gov't. Subdivisions - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLGovSubdivisionsGEN">
            <xs:annotation>
              <xs:documentation>Gov't. Subdivisions Gen. Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLGovSubdivisionsPD">
            <xs:annotation>
              <xs:documentation>Gov't. Subdivisions - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLawnCareBI">
            <xs:annotation>
              <xs:documentation>Lawn Care - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLawnCareGEN">
            <xs:annotation>
              <xs:documentation>Lawn Care - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLawnCarePD">
            <xs:annotation>
              <xs:documentation>Lawn Care - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLimitedPAandInjuryCov">
            <xs:annotation>
              <xs:documentation>Ltd Contractual Liab for Personal Advertising and Injury: CG 22 74</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLiquorLiabilityCovBI">
            <xs:annotation>
              <xs:documentation>Liquor Liability Cov - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLiquorLiabilityCovGEN">
            <xs:annotation>
              <xs:documentation>Liquor Liability Cov - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLiquorLiabilityCovPD">
            <xs:annotation>
              <xs:documentation>Liquor Liability Cov - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLtdFungiCovBI">
            <xs:annotation>
              <xs:documentation>Limited Fungi Cov - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLtdFungiCovGEN">
            <xs:annotation>
              <xs:documentation>Limited Fungi Cov - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLtdFungiCovPD">
            <xs:annotation>
              <xs:documentation>Limited Fungi Cov - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPestHerbicideApplicatorSchedule">
            <xs:annotation>
              <xs:documentation>Pesticide Or Herbicide Applicator Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionBI">
            <xs:annotation>
              <xs:documentation>Pollution Coverage - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionDesignatedCovBI">
            <xs:annotation>
              <xs:documentation>Designated Pollutant Cov - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionDesignatedCovGEN">
            <xs:annotation>
              <xs:documentation>Designated Pollutant Cov - General Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionDesignatedCovPD">
            <xs:annotation>
              <xs:documentation>Designated Pollutant Cov - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionGEN">
            <xs:annotation>
              <xs:documentation>Pollution Coverage - Gen. Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionPD">
            <xs:annotation>
              <xs:documentation>Pollution Coverage - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionShortTermCovBI">
            <xs:annotation>
              <xs:documentation>Short Term Pollution - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionShortTermCovGEN">
            <xs:annotation>
              <xs:documentation>Short Term Pollution - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionShortTermCovPD">
            <xs:annotation>
              <xs:documentation>Short Term Pollution - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLUGResourcesCovBI">
            <xs:annotation>
              <xs:documentation>Underground Resources Cov - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLUGResourcesCovGEN">
            <xs:annotation>
              <xs:documentation>Underground Resources Cov - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLUGResourcesCovPD">
            <xs:annotation>
              <xs:documentation>Underground Resources Cov - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWDwelling">
            <xs:annotation>
              <xs:documentation>HO - Dwelling</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWEarthQuake_OS">
            <xs:annotation>
              <xs:documentation>Earthquake - Other Structures</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWEarthQuake_PD">
            <xs:annotation>
              <xs:documentation>Earthquake - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWEarthQuake_PPD">
            <xs:annotation>
              <xs:documentation>Earthquake - Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWFungi">
            <xs:annotation>
              <xs:documentation>HO Fungi etal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWInflation">
            <xs:annotation>
              <xs:documentation>HO Inflation Guard</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWLossOfUse">
            <xs:annotation>
              <xs:documentation>HO  Loss of Use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWOrdinanceLaw">
            <xs:annotation>
              <xs:documentation>HO - Ordinance or Law</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWOtherStructureOffPremises">
            <xs:annotation>
              <xs:documentation>HO Off Premises Structures</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWOtherStructureOnPremises">
            <xs:annotation>
              <xs:documentation>HO Other Structures on Premises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWOtherStructures">
            <xs:annotation>
              <xs:documentation>HO  Other Structures</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWPersPropAtOthResidences">
            <xs:annotation>
              <xs:documentation>HO Personal Prop at Other Residences</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWPersonalProp">
            <xs:annotation>
              <xs:documentation>HO Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWSchedPersProperty">
            <xs:annotation>
              <xs:documentation>HO Scheduled Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWSecIDeduct">
            <xs:annotation>
              <xs:documentation>HO Property Deductibles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWSpecLimitsCovC">
            <xs:annotation>
              <xs:documentation>HO Special Limits - Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODWSpecStrucOffPremises">
            <xs:annotation>
              <xs:documentation>HO Specific Structures Off Premises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOFungi">
            <xs:annotation>
              <xs:documentation>HO Fungi - FL cov</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLIFungi">
            <xs:annotation>
              <xs:documentation>HO Ltd. Fungi Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLILtdComputerLiability">
            <xs:annotation>
              <xs:documentation>HO Ltd. Computer Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLIMed">
            <xs:annotation>
              <xs:documentation>HO - Med Pay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLIOtherInsuredRes">
            <xs:annotation>
              <xs:documentation>HO Other Insured Residences</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLIPersonalInjury">
            <xs:annotation>
              <xs:documentation>HO Personal/Advertising  Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLIPersonalLiabBI">
            <xs:annotation>
              <xs:documentation>HO Liability - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLIPersonalLiabGEN">
            <xs:annotation>
              <xs:documentation>HO Liability - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLIPersonalLiabPD">
            <xs:annotation>
              <xs:documentation>HO Liability PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IMAccountReceivableCov">
            <xs:annotation>
              <xs:documentation>Accounts Receivable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IMSignCov">
            <xs:annotation>
              <xs:documentation>Inland Marine Sign</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PACollisionCov">
            <xs:annotation>
              <xs:documentation>Collision</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PACollision_MA_MI_Limited">
            <xs:annotation>
              <xs:documentation>Collision - Limited Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAComprehensiveCov">
            <xs:annotation>
              <xs:documentation>Comprehensive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PADeathDisabilityCov">
            <xs:annotation>
              <xs:documentation>Auto Death and Disability Benefit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAExcessElectronicsCov">
            <xs:annotation>
              <xs:documentation>Electronic Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PALiabilityCov_bi">
            <xs:annotation>
              <xs:documentation>Liability - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PALiabilityCov_pd">
            <xs:annotation>
              <xs:documentation>Liability - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PALiabilityCov_vd">
            <xs:annotation>
              <xs:documentation>Liability - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PALossOfUseCov">
            <xs:annotation>
              <xs:documentation>Rental Car Loss of Use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAMedPayCov">
            <xs:annotation>
              <xs:documentation>Medical Payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAMexicoCovBI">
            <xs:annotation>
              <xs:documentation>Mexico Cov - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAMexicoCovGEN">
            <xs:annotation>
              <xs:documentation>Mexico Coverage - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAMexicoCovPD">
            <xs:annotation>
              <xs:documentation>Mexico Cov - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAMexicoCovVEH">
            <xs:annotation>
              <xs:documentation>Mexico Cov - Vehicle Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_AR">
            <xs:annotation>
              <xs:documentation>PIP - Arkansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_DC">
            <xs:annotation>
              <xs:documentation>PIP - District of Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_DE">
            <xs:annotation>
              <xs:documentation>PIP - Delaware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_FL">
            <xs:annotation>
              <xs:documentation>PIP - Florida</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_HI">
            <xs:annotation>
              <xs:documentation>PIP - Hawaii</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_KS">
            <xs:annotation>
              <xs:documentation>PIP - Kansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_KY">
            <xs:annotation>
              <xs:documentation>PIP - Kentucky</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_MA">
            <xs:annotation>
              <xs:documentation>PIP - Massachusetts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_MD">
            <xs:annotation>
              <xs:documentation>PIP - Maryland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_MI">
            <xs:annotation>
              <xs:documentation>PIP - Michigan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_MN">
            <xs:annotation>
              <xs:documentation>PIP - Minnesota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_ND">
            <xs:annotation>
              <xs:documentation>PIP - North Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_NJ">
            <xs:annotation>
              <xs:documentation>PIP - New Jersey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_NY">
            <xs:annotation>
              <xs:documentation>PIP - New York</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_OR">
            <xs:annotation>
              <xs:documentation>PIP - Oregon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_PA">
            <xs:annotation>
              <xs:documentation>PIP - Pennsylvania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_TX">
            <xs:annotation>
              <xs:documentation>PIP - Texas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_UT">
            <xs:annotation>
              <xs:documentation>PIP - Utah</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_WA">
            <xs:annotation>
              <xs:documentation>PIP - Washington</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPropProtectionCov">
            <xs:annotation>
              <xs:documentation>Property Protection Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PARentalCov">
            <xs:annotation>
              <xs:documentation>Rental Reimbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PATapeDiscMediaCov">
            <xs:annotation>
              <xs:documentation>Tape / Disc Media</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PATowingLaborCov">
            <xs:annotation>
              <xs:documentation>Towing and Labor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUIMBICov">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUIMPDCov">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUMBICov">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUMPDCov">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PUPLiabilityBI">
            <xs:annotation>
              <xs:documentation>Personal Umbrella - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PUPLiabilityGEN">
            <xs:annotation>
              <xs:documentation>Personal Umbrella - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PUPLiabilityPD">
            <xs:annotation>
              <xs:documentation>Personal Umbrella - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PUPWorldWide">
            <xs:annotation>
              <xs:documentation>Personal Umbrella - Worldwide Cov</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProductWithdrawalLtd">
            <xs:annotation>
              <xs:documentation>Limited Coverage for Product Withdrawal: CG 04 36</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TripCancelDelay">
            <xs:annotation>
              <xs:documentation>Trip - Cancellation or Delay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCEmpLiabCov">
            <xs:annotation>
              <xs:documentation>Workers' Comp Employer's Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCFedEmpLiabCov">
            <xs:annotation>
              <xs:documentation>Federal Employer's Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCOtherStatesMED">
            <xs:annotation>
              <xs:documentation>Other States Insurance - Med Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCOtherStatesWAGES">
            <xs:annotation>
              <xs:documentation>Other States Insurance - Other than Med</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCWorkCompDeductMED">
            <xs:annotation>
              <xs:documentation>State Specific Deductible - Med Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCWorkCompDeductNOTMED">
            <xs:annotation>
              <xs:documentation>State Specific Deductible - Other than Med</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCWorkersCompMED">
            <xs:annotation>
              <xs:documentation>WC Coverage -Med Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCWorkersCompWAGES">
            <xs:annotation>
              <xs:documentation>WC Coverage - Other than Med</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_XCUSpecifiedBI">
            <xs:annotation>
              <xs:documentation>XCU - Specified - BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_XCUSpecifiedGEN">
            <xs:annotation>
              <xs:documentation>XCU - Specified - Gen. Damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_XCUSpecifiedPD">
            <xs:annotation>
              <xs:documentation>XCU - Specified - PD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Y2KLimitedCov">
            <xs:annotation>
              <xs:documentation>Y2K / Computer Limited Cov: CG 04 31</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bag_loss_damg_dly">
            <xs:annotation>
              <xs:documentation>Loss, damage or delay of baggage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dando_gd">
            <xs:annotation>
              <xs:documentation>Directors and Officers - General Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_eando_gd">
            <xs:annotation>
              <xs:documentation>E and O - General Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_farm_bid">
            <xs:annotation>
              <xs:documentation>Farmowners - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_farm_pd">
            <xs:annotation>
              <xs:documentation>Farmowners - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gl_gd2">
            <xs:annotation>
              <xs:documentation>General Liability - General Damage 2</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hiredauto_dmg_travel">
            <xs:annotation>
              <xs:documentation>Hired or rented auto damages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liab_trav_ad">
            <xs:annotation>
              <xs:documentation>Auto damage liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liab_trav_bi">
            <xs:annotation>
              <xs:documentation>Bodily injury damage liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liab_trav_gd">
            <xs:annotation>
              <xs:documentation>General damage liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liab_trav_pr">
            <xs:annotation>
              <xs:documentation>Property damage liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_malp_bid">
            <xs:annotation>
              <xs:documentation>General liability - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mpay_travel">
            <xs:annotation>
              <xs:documentation>Medical expenses for the travel line</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DaysInWeekType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_five">
            <xs:annotation>
              <xs:documentation>Five</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_seven">
            <xs:annotation>
              <xs:documentation>Seven</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExposureTier" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>ExposureTier</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_1p_content_high">
            <xs:annotation>
              <xs:documentation>1st Party Contents - High Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_1p_content_low">
            <xs:annotation>
              <xs:documentation>1st Party Contents - Low Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_1p_med_high">
            <xs:annotation>
              <xs:documentation>1st Party Medical - High Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_1p_med_low">
            <xs:annotation>
              <xs:documentation>1st Party Medical - Low Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_1p_pd_high">
            <xs:annotation>
              <xs:documentation>1st Party Physical Damage - High Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_1p_pd_low">
            <xs:annotation>
              <xs:documentation>1st Party Physical Damage - Low Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_1p_sd_high">
            <xs:annotation>
              <xs:documentation>1st Party Structural Damage - High Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_1p_sd_low">
            <xs:annotation>
              <xs:documentation>1st Party Structural Damage - Low Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_3p_med_high">
            <xs:annotation>
              <xs:documentation>3rd Party Medical - High Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_3p_med_low">
            <xs:annotation>
              <xs:documentation>3rd Party Medical - Low Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_3p_pd_high">
            <xs:annotation>
              <xs:documentation>3rd Party Physical Damagel - High Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_3p_pd_low">
            <xs:annotation>
              <xs:documentation>3rd Party Physical Damage - Low Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_el">
            <xs:annotation>
              <xs:documentation>Employer's Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_high">
            <xs:annotation>
              <xs:documentation>High Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_indemnity">
            <xs:annotation>
              <xs:documentation>Indemnity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lossofuse">
            <xs:annotation>
              <xs:documentation>Loss of Use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_low">
            <xs:annotation>
              <xs:documentation>Low Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medical">
            <xs:annotation>
              <xs:documentation>Medical Exposure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medium">
            <xs:annotation>
              <xs:documentation>Medium Complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rental">
            <xs:annotation>
              <xs:documentation>Rental</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_towing">
            <xs:annotation>
              <xs:documentation>Towing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExposureType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The different types of available exposure screens, filtered by coverage type and coverage subtype</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Baggage">
            <xs:annotation>
              <xs:documentation>Baggage </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BodilyInjuryDamage">
            <xs:annotation>
              <xs:documentation>Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Content">
            <xs:annotation>
              <xs:documentation>Content</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Dwelling">
            <xs:annotation>
              <xs:documentation>Dwelling</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EmployerLiability">
            <xs:annotation>
              <xs:documentation>Employer Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GeneralDamage">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LivingExpenses">
            <xs:annotation>
              <xs:documentation>Living Expenses</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LossOfUseDamage">
            <xs:annotation>
              <xs:documentation>Loss Of Use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LostWages">
            <xs:annotation>
              <xs:documentation>Time Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MedPay">
            <xs:annotation>
              <xs:documentation>Med Pay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OtherStructure">
            <xs:annotation>
              <xs:documentation>Other Structure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PIPDamages">
            <xs:annotation>
              <xs:documentation>PIP</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PersonalPropertyDamage">
            <xs:annotation>
              <xs:documentation>Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PropertyDamage">
            <xs:annotation>
              <xs:documentation>Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Theft">
            <xs:annotation>
              <xs:documentation>Theft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TowOnly">
            <xs:annotation>
              <xs:documentation>Towing and Labor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TripCancellationDelay">
            <xs:annotation>
              <xs:documentation>Trip cancellation or delay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VehicleDamage">
            <xs:annotation>
              <xs:documentation>Vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCInjuryDamage">
            <xs:annotation>
              <xs:documentation>Medical Details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IMEType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Chiropractic">
            <xs:annotation>
              <xs:documentation>Chiropractic independent medical examiner report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Neurological">
            <xs:annotation>
              <xs:documentation>Neurological independent medical examiner report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Orthopedic">
            <xs:annotation>
              <xs:documentation>Orthopedic independent medical examiner report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Other">
            <xs:annotation>
              <xs:documentation>Other independent medical examiner report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ISOStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Status of exposure with ISO ClaimSearch</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_None">
            <xs:annotation>
              <xs:documentation>Not checked by ISO</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NotOfInterest">
            <xs:annotation>
              <xs:documentation>Not of interest to ISO</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ResendPending">
            <xs:annotation>
              <xs:documentation>Request has been made to resend to ISO</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Sent">
            <xs:annotation>
              <xs:documentation>Sent to ISO database</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AssessmentAction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of assessment</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Deny">
            <xs:annotation>
              <xs:documentation>Denied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Review">
            <xs:annotation>
              <xs:documentation>Reviewing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_approve">
            <xs:annotation>
              <xs:documentation>Approved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TransportType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>TransportType</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_airline">
            <xs:annotation>
              <xs:documentation>Airline</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bus">
            <xs:annotation>
              <xs:documentation>Bus</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cruise_ship">
            <xs:annotation>
              <xs:documentation>Cruise ship</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rental_car">
            <xs:annotation>
              <xs:documentation>Rental car</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_taxi">
            <xs:annotation>
              <xs:documentation>Taxi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CompensabilityDecision" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_accepted">
            <xs:annotation>
              <xs:documentation>Accepted</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_denied">
            <xs:annotation>
              <xs:documentation>Denied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pending">
            <xs:annotation>
              <xs:documentation>Pending</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DetailedBodyPartType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_10">
            <xs:annotation>
              <xs:documentation>Multiple head injuries - Any combination of head injuries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_11">
            <xs:annotation>
              <xs:documentation>Skull</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_12">
            <xs:annotation>
              <xs:documentation>Brain</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_13">
            <xs:annotation>
              <xs:documentation>Ear(s) - includes: hearing, inside eardrum</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_14">
            <xs:annotation>
              <xs:documentation>Eye(s) - includes: optic nerves, vision, eye lids</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_15">
            <xs:annotation>
              <xs:documentation>Nose - includes: nasal passage, sinus, sense of smell</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_16">
            <xs:annotation>
              <xs:documentation>Teeth</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_17">
            <xs:annotation>
              <xs:documentation>Mouth - includes: lips, tongue, throat, taste</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_18">
            <xs:annotation>
              <xs:documentation>Soft tissue (head)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_19">
            <xs:annotation>
              <xs:documentation>Facial bones - includes: jaw</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_20">
            <xs:annotation>
              <xs:documentation>Multiple neck injuries - any combination of neck injuries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_21">
            <xs:annotation>
              <xs:documentation>Vertebrae - includes: spinal column bone, cervical segment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_22">
            <xs:annotation>
              <xs:documentation>Disc (neck) - includes: spinal column cartilage, cervical segment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_23">
            <xs:annotation>
              <xs:documentation>Spinal cord (neck) - includes: nerve tissue, cervical segment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_24">
            <xs:annotation>
              <xs:documentation>Larynx - includes: cartilage, vocal cords</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_25">
            <xs:annotation>
              <xs:documentation>Soft tissue (neck) - Other than larynx or trachea</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_26">
            <xs:annotation>
              <xs:documentation>Trachea</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_30">
            <xs:annotation>
              <xs:documentation>Multiple upper extremities - any combination of arm and hand injuries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_31">
            <xs:annotation>
              <xs:documentation>Upper arm - humerus and corresponding muscles, excluding clavicle and scapula</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_32">
            <xs:annotation>
              <xs:documentation>Elbow - radial head</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_33">
            <xs:annotation>
              <xs:documentation>Lower arm - forearm: radius, ulna, and corresponding muscle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_34">
            <xs:annotation>
              <xs:documentation>Wrist - carpals and corresponding muscles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_35">
            <xs:annotation>
              <xs:documentation>Hand - metacarpals and corresponding muscles, excluding wrists and fingers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_36">
            <xs:annotation>
              <xs:documentation>Finger(s) - other than thumb and corresponding muscles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_37">
            <xs:annotation>
              <xs:documentation>Thumb</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_38">
            <xs:annotation>
              <xs:documentation>Shoulder(s) - armpit, rotator cuff, trapezius, clavicle, scapula</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_39">
            <xs:annotation>
              <xs:documentation>Wrist(s) and hand(s)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_40">
            <xs:annotation>
              <xs:documentation>Multiple trunk injuries - any combination of trunk injuries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_41">
            <xs:annotation>
              <xs:documentation>Upper back area - (thoracic area) upper back muscles, excluding vertebrae, disc, spinal cord</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_42">
            <xs:annotation>
              <xs:documentation>Lower back area - (lumbar area) lower back muscles, excluding sacrum, coccyx, pelvis, vertebrae, disc, spinal cord</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_43">
            <xs:annotation>
              <xs:documentation>Disc (back) - spinal column cartilage other than cervical segment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_44">
            <xs:annotation>
              <xs:documentation>Chest - including: ribs, sternum, soft tissue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_45">
            <xs:annotation>
              <xs:documentation>Sacrum and coccyx - first nine vertebrae</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_46">
            <xs:annotation>
              <xs:documentation>Pelvis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_47">
            <xs:annotation>
              <xs:documentation>Spinal cord (back) - nerve tissue other than cervical segment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_48">
            <xs:annotation>
              <xs:documentation>Internal organs - other than heart and lungs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_49">
            <xs:annotation>
              <xs:documentation>Heart</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_50">
            <xs:annotation>
              <xs:documentation>Multiple lower appendages - any combination of leg and foot injuries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_51">
            <xs:annotation>
              <xs:documentation>Hip</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_52">
            <xs:annotation>
              <xs:documentation>Upper leg - femur and corresponding muscles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_53">
            <xs:annotation>
              <xs:documentation>Knee - Patella</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_54">
            <xs:annotation>
              <xs:documentation>Lower leg - tibia, fibula and corresponding muscles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_55">
            <xs:annotation>
              <xs:documentation>Ankle - tarsals</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_56">
            <xs:annotation>
              <xs:documentation>Foot - metatarsals, heel, Achilles tendon and corresponding muscles, excluding ankle or toes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_57">
            <xs:annotation>
              <xs:documentation>Toes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_58">
            <xs:annotation>
              <xs:documentation>Great toe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_60">
            <xs:annotation>
              <xs:documentation>Lungs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_61">
            <xs:annotation>
              <xs:documentation>Abdomen including groin - excluding injury to internal organs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_62">
            <xs:annotation>
              <xs:documentation>Buttocks - soft tissue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_63">
            <xs:annotation>
              <xs:documentation>Lumbar or sacral vertebrae - bone portion of the spinal column</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_64">
            <xs:annotation>
              <xs:documentation>Artificial appliance - braces, etc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_65">
            <xs:annotation>
              <xs:documentation>Unclassified - insufficient info to properly identify</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_66">
            <xs:annotation>
              <xs:documentation>No physical injury - mental disorder</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_67">
            <xs:annotation>
              <xs:documentation>Ribs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_68">
            <xs:annotation>
              <xs:documentation>Stomach</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_90">
            <xs:annotation>
              <xs:documentation>Multiple body parts - applies when more than one major body part has been affect (such as an arm and a leg)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_91">
            <xs:annotation>
              <xs:documentation>Body systems (with no external injury) - applies to the functioning of an entire body system without external injury (e.g. poisoning, inflammation)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BodyPartType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_head">
            <xs:annotation>
              <xs:documentation>Head</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lower">
            <xs:annotation>
              <xs:documentation>Lower extremities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_multiple">
            <xs:annotation>
              <xs:documentation>Multiple body parts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_neck">
            <xs:annotation>
              <xs:documentation>Neck</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_trunk">
            <xs:annotation>
              <xs:documentation>Trunk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_upper">
            <xs:annotation>
              <xs:documentation>Upper extremities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DetailedInjuryType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_01">
            <xs:annotation>
              <xs:documentation>No Physical Injury - Glasses, contacts, artificial appliance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_02">
            <xs:annotation>
              <xs:documentation>Amputation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_03">
            <xs:annotation>
              <xs:documentation>Angina pectoris (chest pain)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_04">
            <xs:annotation>
              <xs:documentation>Burn - heat (burn or scald) or chemical (corrosive damage)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_07">
            <xs:annotation>
              <xs:documentation>Concussion - brain, cerebral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_10">
            <xs:annotation>
              <xs:documentation>Contusion - bruise with intact skin surface, hematoma</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_13">
            <xs:annotation>
              <xs:documentation>Crushing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_16">
            <xs:annotation>
              <xs:documentation>Dislocation - pinched nerve, slipped or ruptured disc, herniated disc, complete tear, MD dislocation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_19">
            <xs:annotation>
              <xs:documentation>Electric shock</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_22">
            <xs:annotation>
              <xs:documentation>Enucleation - removal of organ or tumor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_25">
            <xs:annotation>
              <xs:documentation>Foreign body</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_28">
            <xs:annotation>
              <xs:documentation>Fracture - breaking of a bone or a cartilage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_30">
            <xs:annotation>
              <xs:documentation>Freezing - frostbite</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_31">
            <xs:annotation>
              <xs:documentation>Hearing loss or impairment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_32">
            <xs:annotation>
              <xs:documentation>Heat prostration - heat stroke, sun stroke, excluding sun burn</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_34">
            <xs:annotation>
              <xs:documentation>Hernia - abnormal protrusion of an organ through its containing wall</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_36">
            <xs:annotation>
              <xs:documentation>Infection</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_37">
            <xs:annotation>
              <xs:documentation>Inflammation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_40">
            <xs:annotation>
              <xs:documentation>Laceration - cuts, scratches, abrasions, superficial wounds</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_41">
            <xs:annotation>
              <xs:documentation>Myocardial infarction - heart attack, heart conditions, hypertension</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_42">
            <xs:annotation>
              <xs:documentation>Poisoning (not overdose or cumulative injury)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_43">
            <xs:annotation>
              <xs:documentation>Puncture</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_46">
            <xs:annotation>
              <xs:documentation>Rupture</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_47">
            <xs:annotation>
              <xs:documentation>Severance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_49">
            <xs:annotation>
              <xs:documentation>Sprain</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_52">
            <xs:annotation>
              <xs:documentation>Strain</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_53">
            <xs:annotation>
              <xs:documentation>Syncope - fainting, passing out</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_54">
            <xs:annotation>
              <xs:documentation>Asphyxiation - strangulation, drowning</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_55">
            <xs:annotation>
              <xs:documentation>Vascular - strokes, varicose veins, other circulatory injuries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_58">
            <xs:annotation>
              <xs:documentation>Vision Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_59">
            <xs:annotation>
              <xs:documentation>Other specific injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_60">
            <xs:annotation>
              <xs:documentation>Dust disease - all other lung disease</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_61">
            <xs:annotation>
              <xs:documentation>Asbestosis - lung disease from asbestos</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_62">
            <xs:annotation>
              <xs:documentation>Black lung - lung disease from coal mining</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_63">
            <xs:annotation>
              <xs:documentation>Byssinosis - lung disease from cotton, flax, hemp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_64">
            <xs:annotation>
              <xs:documentation>Silicosis - lung disease from inhalation of silica (quartz) dust</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_65">
            <xs:annotation>
              <xs:documentation>Respiratory disorders (gases, fumes, chemicals)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_66">
            <xs:annotation>
              <xs:documentation>Poisoning (chemical)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_67">
            <xs:annotation>
              <xs:documentation>Poisoning (metal)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_68">
            <xs:annotation>
              <xs:documentation>Dermatitis - from repeated contact with irritants</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_69">
            <xs:annotation>
              <xs:documentation>Mental disorder</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_70">
            <xs:annotation>
              <xs:documentation>Radiation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_71">
            <xs:annotation>
              <xs:documentation>All other occupational disease injuries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_72">
            <xs:annotation>
              <xs:documentation>Loss of hearing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_73">
            <xs:annotation>
              <xs:documentation>Contagious disease</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_74">
            <xs:annotation>
              <xs:documentation>Cancer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_75">
            <xs:annotation>
              <xs:documentation>AIDS</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_76">
            <xs:annotation>
              <xs:documentation>Video display terminal diseases - excluding carpal tunnel syndrome</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_77">
            <xs:annotation>
              <xs:documentation>Mental stress</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_78">
            <xs:annotation>
              <xs:documentation>Carpal Tunnel Syndrome</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_79">
            <xs:annotation>
              <xs:documentation>Hepatitis C</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_80">
            <xs:annotation>
              <xs:documentation>All other cumulative injuries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_90">
            <xs:annotation>
              <xs:documentation>Multiple physical injuries only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_91">
            <xs:annotation>
              <xs:documentation>Multiple injuries including both physical and psychological</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DisabledDueToAccident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>For non-WC, to characterize the disability.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_notdisabled">
            <xs:annotation>
              <xs:documentation>Not Disabled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_partdisabled">
            <xs:annotation>
              <xs:documentation>Partially Disabled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_totaldisabled">
            <xs:annotation>
              <xs:documentation>Totally Disabled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InjuryType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_multiple">
            <xs:annotation>
              <xs:documentation>Multiple injuries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_occupational">
            <xs:annotation>
              <xs:documentation>Occupational disease or cumulative injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_specific">
            <xs:annotation>
              <xs:documentation>Specific injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ICDBodySystem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents broad classifications of ICD codes used for categorization</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_1">
            <xs:annotation>
              <xs:documentation>Infectious And Parasitic Diseases (001-139)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_10">
            <xs:annotation>
              <xs:documentation>Diseases Of The Genitourinary System (580-629)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_11">
            <xs:annotation>
              <xs:documentation>Complications Of Pregnancy, Childbirth, And The Puerperium (630-676)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_12">
            <xs:annotation>
              <xs:documentation>Diseases Of The Skin And Subcutaneous Tissue (680-709)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_13">
            <xs:annotation>
              <xs:documentation>Diseases Of The Musculoskeletal System And Connective Tissue (710-739)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_14">
            <xs:annotation>
              <xs:documentation>Congenital Anomalies (740-759)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_15">
            <xs:annotation>
              <xs:documentation>Certain Conditions Originating In The Perinatal Period (760-779)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_16">
            <xs:annotation>
              <xs:documentation>Symptoms, Signs, And Ill-Defined Conditions (780-799)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_17">
            <xs:annotation>
              <xs:documentation>Injury And Poisoning (800-999)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_18">
            <xs:annotation>
              <xs:documentation>External Causes Of Injury (E800-E999)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_19">
            <xs:annotation>
              <xs:documentation>Plementary Classification Of Factors Influencing Health Status And Contact With Health Services (V01-V82)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_2">
            <xs:annotation>
              <xs:documentation>Neoplasms (140-239)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_3">
            <xs:annotation>
              <xs:documentation>Endocrine, Nutritional And Metabolic Diseases, And Immunity Disorders (240-279)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_4">
            <xs:annotation>
              <xs:documentation>Diseases Of The Blood And Blood-Forming Organs (280-289)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_5">
            <xs:annotation>
              <xs:documentation>Mental Disorders (290-319)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_6">
            <xs:annotation>
              <xs:documentation>Diseases Of The Nervous System And Sense Organs (320-389)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_7">
            <xs:annotation>
              <xs:documentation>Diseases Of The Circulatory System (390-459)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_8">
            <xs:annotation>
              <xs:documentation>Diseases Of The Respiratory System (460-519)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_9">
            <xs:annotation>
              <xs:documentation>Diseases Of The Digestive System (520-579)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_1">
            <xs:annotation>
              <xs:documentation>Certain infectious and parasitic diseases (ICD10 A00-B99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_10">
            <xs:annotation>
              <xs:documentation>Diseases of the respiratory system (ICD10 J00-J99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_11">
            <xs:annotation>
              <xs:documentation>Diseases of the digestive system (ICD10 K00-K95)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_12">
            <xs:annotation>
              <xs:documentation>Diseases of the skin and subcutaneous tissue (ICD10 L00-L99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_13">
            <xs:annotation>
              <xs:documentation>Diseases of the musculoskeletal system and connective tissue (ICD10 M00-M99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_14">
            <xs:annotation>
              <xs:documentation>Diseases of the genitourinary system (ICD10 N00-N99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_15">
            <xs:annotation>
              <xs:documentation>Pregnancy, childbirth and the puerperium (ICD10 O00-O9A)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_16">
            <xs:annotation>
              <xs:documentation>Certain conditions originating in the perinatal period (ICD10 P00-P96)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_17">
            <xs:annotation>
              <xs:documentation>Congenital malformations, deformations and chromosomal abnormalities (ICD10 Q00-Q99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_18">
            <xs:annotation>
              <xs:documentation>Symptoms, signs and abnormal clinical and laboratory findings, not elsewhere classified (ICD10 R00-R99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_19">
            <xs:annotation>
              <xs:documentation>Injury, poisoning and certain other consequences of external causes (ICD10 S00-T88)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_2">
            <xs:annotation>
              <xs:documentation>Neoplasms (ICD10 C00-D49)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_20">
            <xs:annotation>
              <xs:documentation>External causes of morbidity (ICD10 V00-Y99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_21">
            <xs:annotation>
              <xs:documentation>Factors influencing health status and contact with health services (ICD10 Z00-Z99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_3">
            <xs:annotation>
              <xs:documentation>Diseases of the blood and blood-forming organs and certain disorders involving the immune mechanism (ICD10 D50-D89)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_4">
            <xs:annotation>
              <xs:documentation>Endocrine, nutritional and metabolic diseases (ICD10 E00-E89)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_5">
            <xs:annotation>
              <xs:documentation>Mental, Behavioral and Neurodevelopmental disorders (ICD10 F01-F99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_6">
            <xs:annotation>
              <xs:documentation>Diseases of the nervous system (ICD10 G00-G99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_7">
            <xs:annotation>
              <xs:documentation>Diseases of the eye and adnexa (ICD10 H00-H59)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_8">
            <xs:annotation>
              <xs:documentation>Diseases of the ear and mastoid process (ICD10 H60-H95)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icd10_9">
            <xs:annotation>
              <xs:documentation>Diseases of the circulatory system (ICD10 I00-I99)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MedicalTreatmentType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_acup">
            <xs:annotation>
              <xs:documentation>Acupuncture</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chir">
            <xs:annotation>
              <xs:documentation>Chiropractor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_counsel">
            <xs:annotation>
              <xs:documentation>Psych counseling</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_emer_care">
            <xs:annotation>
              <xs:documentation>Emergency care</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_er">
            <xs:annotation>
              <xs:documentation>ER treated &amp; released</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hospital">
            <xs:annotation>
              <xs:documentation>Hospitalized</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inject">
            <xs:annotation>
              <xs:documentation>Injections</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_major_surgery">
            <xs:annotation>
              <xs:documentation>Major surgery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_minor_surgery">
            <xs:annotation>
              <xs:documentation>Minor surgery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mri">
            <xs:annotation>
              <xs:documentation>MRI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mult_doctors">
            <xs:annotation>
              <xs:documentation>Multiple doctors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mult_treatments">
            <xs:annotation>
              <xs:documentation>Multiple treatments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_neuro">
            <xs:annotation>
              <xs:documentation>Neurologic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_none">
            <xs:annotation>
              <xs:documentation>No treatment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_one_doctor">
            <xs:annotation>
              <xs:documentation>Only one doctor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ortho">
            <xs:annotation>
              <xs:documentation>Orthopedic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_oth">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pcp">
            <xs:annotation>
              <xs:documentation>Primary care physician</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pt">
            <xs:annotation>
              <xs:documentation>Physical therapy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rehab">
            <xs:annotation>
              <xs:documentation>Rehab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_xray">
            <xs:annotation>
              <xs:documentation>X-ray</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RoomType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of rooms in a property</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_bathroom">
            <xs:annotation>
              <xs:documentation>Bathroom</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bedroom">
            <xs:annotation>
              <xs:documentation>Bedroom</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_garage">
            <xs:annotation>
              <xs:documentation>Garage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_kitchen">
            <xs:annotation>
              <xs:documentation>Kitchen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_livingroom">
            <xs:annotation>
              <xs:documentation>Living Room</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AlarmType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of alarms: Automatic, Manual, None, or Unknown</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Automatic">
            <xs:annotation>
              <xs:documentation>Automatic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Manual">
            <xs:annotation>
              <xs:documentation>Manual</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_None">
            <xs:annotation>
              <xs:documentation>None</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Unknown">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClassType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>class type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_allmetal">
            <xs:annotation>
              <xs:documentation>All metal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_allwoodframed">
            <xs:annotation>
              <xs:documentation>All wood and wood framed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_masonwall">
            <xs:annotation>
              <xs:documentation>Masonry walls, wood roof</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_maswallmetal">
            <xs:annotation>
              <xs:documentation>Masonry walls, metal roof</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_protmetal">
            <xs:annotation>
              <xs:documentation>Protected metal to 2hrs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reinconcrete">
            <xs:annotation>
              <xs:documentation>Reinforced concrete greater than 2hrs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExtWallMat" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Exterior wall covering material of property</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BrickVeneer">
            <xs:annotation>
              <xs:documentation>Brick veneer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EIFS">
            <xs:annotation>
              <xs:documentation>Exterior insulating fastening system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Masonry">
            <xs:annotation>
              <xs:documentation>Masonry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Metal">
            <xs:annotation>
              <xs:documentation>Metal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Stucco">
            <xs:annotation>
              <xs:documentation>Stucco</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Vinyl">
            <xs:annotation>
              <xs:documentation>Vinyl</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Wood">
            <xs:annotation>
              <xs:documentation>Wood</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="YesNo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Yes, no or unknown</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_No">
            <xs:annotation>
              <xs:documentation>No</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Unknown">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Yes">
            <xs:annotation>
              <xs:documentation>Yes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LossArea" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Loss area of property</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_manufArea">
            <xs:annotation>
              <xs:documentation>Manufacturing area</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_office">
            <xs:annotation>
              <xs:documentation>Office</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_warehouse">
            <xs:annotation>
              <xs:documentation>Warehouse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OccupancyType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>where the property in question is occupied</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_occupied">
            <xs:annotation>
              <xs:documentation>Occupied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_underConst">
            <xs:annotation>
              <xs:documentation>Under Construction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vacant">
            <xs:annotation>
              <xs:documentation>Vacant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RoofMaterial" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Roof covering material of property</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Builtup">
            <xs:annotation>
              <xs:documentation>Built up</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Membrane">
            <xs:annotation>
              <xs:documentation>Membrane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_None">
            <xs:annotation>
              <xs:documentation>None</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Shingles">
            <xs:annotation>
              <xs:documentation>Shingles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SprinkRetServ" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Sprinklers returned to service</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Fully">
            <xs:annotation>
              <xs:documentation>Fully</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Notatall">
            <xs:annotation>
              <xs:documentation>None</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Partially">
            <xs:annotation>
              <xs:documentation>Partially</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SprinklerType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Loss Area of property</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Dry">
            <xs:annotation>
              <xs:documentation>Dry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_None">
            <xs:annotation>
              <xs:documentation>None</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Open">
            <xs:annotation>
              <xs:documentation>Open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Unknown">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Wet">
            <xs:annotation>
              <xs:documentation>Wet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EstDamageType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Estimate of damage from Iexprs</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_1">
            <xs:annotation>
              <xs:documentation>$ 0 - 5,000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_10">
            <xs:annotation>
              <xs:documentation>€ 25 001 - 50 000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_11">
            <xs:annotation>
              <xs:documentation>€ 50 001 - 100 000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_12">
            <xs:annotation>
              <xs:documentation>&gt; € 100 000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_2">
            <xs:annotation>
              <xs:documentation>$ 5,001 - 15,000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_3">
            <xs:annotation>
              <xs:documentation>$ 15,001 - 25,000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_4">
            <xs:annotation>
              <xs:documentation>$ 25,001 - 50,000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_5">
            <xs:annotation>
              <xs:documentation>$ 50,001 - 100,000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_6">
            <xs:annotation>
              <xs:documentation>&gt; $ 100,000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_7">
            <xs:annotation>
              <xs:documentation>€ 0 - 5000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_8">
            <xs:annotation>
              <xs:documentation>€ 5001 - 15 000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_9">
            <xs:annotation>
              <xs:documentation>€ 15 001 - 25 000</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Unknown">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LodgingProvider" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity LodgingProvider</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_LodgingProvider">
            <xs:annotation>
              <xs:documentation>LodgingProvider</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TypeofProperty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of Property</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Building">
            <xs:annotation>
              <xs:documentation>Building</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Cargo">
            <xs:annotation>
              <xs:documentation>Cargo</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Contents">
            <xs:annotation>
              <xs:documentation>Contents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Equipment">
            <xs:annotation>
              <xs:documentation>Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AssessmentStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Assessment Status</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Closed">
            <xs:annotation>
              <xs:documentation>Closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Open">
            <xs:annotation>
              <xs:documentation>Open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AssessmentType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Assessment Status</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Auto">
            <xs:annotation>
              <xs:documentation>Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Contents">
            <xs:annotation>
              <xs:documentation>Contents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Property">
            <xs:annotation>
              <xs:documentation>Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AssessmentContentAction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of assessment</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Deny">
            <xs:annotation>
              <xs:documentation>Deny</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Review">
            <xs:annotation>
              <xs:documentation>Review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_approve">
            <xs:annotation>
              <xs:documentation>Approve</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_depreciate">
            <xs:annotation>
              <xs:documentation>Approved, yet to be Depreciated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContentLineItemCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>ContentItemCategory</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_appliances">
            <xs:annotation>
              <xs:documentation>Major Appliances</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_arts">
            <xs:annotation>
              <xs:documentation>Fine Arts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bedding">
            <xs:annotation>
              <xs:documentation>Bedding/Drapes/Linens</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bookcases">
            <xs:annotation>
              <xs:documentation>Bookcases</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_books">
            <xs:annotation>
              <xs:documentation>Books</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_calculator">
            <xs:annotation>
              <xs:documentation>Calculator</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_calendars">
            <xs:annotation>
              <xs:documentation>Calendars</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cameras">
            <xs:annotation>
              <xs:documentation>Cameras</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cash">
            <xs:annotation>
              <xs:documentation>Cash</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_chairs">
            <xs:annotation>
              <xs:documentation>Chairs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_china">
            <xs:annotation>
              <xs:documentation>Fine China/Dishes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_clocks">
            <xs:annotation>
              <xs:documentation>Clocks</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_clothing">
            <xs:annotation>
              <xs:documentation>Clothing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_collectibles">
            <xs:annotation>
              <xs:documentation>Collectibles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_computers">
            <xs:annotation>
              <xs:documentation>Computers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cooking">
            <xs:annotation>
              <xs:documentation>Cooking</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_copiers">
            <xs:annotation>
              <xs:documentation>Copiers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_correctionfluid">
            <xs:annotation>
              <xs:documentation>Correction Fluid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_decorations">
            <xs:annotation>
              <xs:documentation>Decorations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_desks">
            <xs:annotation>
              <xs:documentation>Desks</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dvd">
            <xs:annotation>
              <xs:documentation>DVD Player</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dvds">
            <xs:annotation>
              <xs:documentation>DVD's/Tapes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_electronics">
            <xs:annotation>
              <xs:documentation>Electronics</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_envelopes">
            <xs:annotation>
              <xs:documentation>Envelopes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fax">
            <xs:annotation>
              <xs:documentation>Fax Machine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_filecabinet">
            <xs:annotation>
              <xs:documentation>File Cabinets</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_folders">
            <xs:annotation>
              <xs:documentation>Folders</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_furniture">
            <xs:annotation>
              <xs:documentation>Furniture</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gardening">
            <xs:annotation>
              <xs:documentation>Gardening</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_glass">
            <xs:annotation>
              <xs:documentation>Glass/Crystal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_glue">
            <xs:annotation>
              <xs:documentation>glue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_instruments">
            <xs:annotation>
              <xs:documentation>Musical Instruments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_jewelry">
            <xs:annotation>
              <xs:documentation>Jewelry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_keyboard">
            <xs:annotation>
              <xs:documentation>keyboard</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lamps">
            <xs:annotation>
              <xs:documentation>Lamps</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_microwave">
            <xs:annotation>
              <xs:documentation>Microwave</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_monitors">
            <xs:annotation>
              <xs:documentation>Monitors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mouse">
            <xs:annotation>
              <xs:documentation>Mouse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paper">
            <xs:annotation>
              <xs:documentation>Paper</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_partitions">
            <xs:annotation>
              <xs:documentation>Partitions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pencilpen">
            <xs:annotation>
              <xs:documentation>Pencils and Pens</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_personal_effects">
            <xs:annotation>
              <xs:documentation>Personal Effects</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_printers">
            <xs:annotation>
              <xs:documentation>Printers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_radio">
            <xs:annotation>
              <xs:documentation>Radio</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rugs">
            <xs:annotation>
              <xs:documentation>Rugs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_safe">
            <xs:annotation>
              <xs:documentation>Safe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_scissors">
            <xs:annotation>
              <xs:documentation>Scissors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_servers">
            <xs:annotation>
              <xs:documentation>Servers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_shredder">
            <xs:annotation>
              <xs:documentation>Paper Shredders</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_silverware">
            <xs:annotation>
              <xs:documentation>Silverware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sofas">
            <xs:annotation>
              <xs:documentation>Sofas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sports">
            <xs:annotation>
              <xs:documentation>Sports Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stapler">
            <xs:annotation>
              <xs:documentation>Stapler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_staples">
            <xs:annotation>
              <xs:documentation>Staplers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tables">
            <xs:annotation>
              <xs:documentation>Tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_telephone">
            <xs:annotation>
              <xs:documentation>Telephone</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_television">
            <xs:annotation>
              <xs:documentation>Television</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContentLineItemSchedule" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>ContentItemSchedule</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_equip">
            <xs:annotation>
              <xs:documentation>Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_homeowners">
            <xs:annotation>
              <xs:documentation>Household items</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_infosys">
            <xs:annotation>
              <xs:documentation>Information Systems</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_officefix">
            <xs:annotation>
              <xs:documentation>Furniture and Fixtures</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_officesup">
            <xs:annotation>
              <xs:documentation>Office Supplies</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_travel">
            <xs:annotation>
              <xs:documentation>Items schedule for Travel line</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VehicleLineItemCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Vehicle Incident Assessment Line Item Category</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_body">
            <xs:annotation>
              <xs:documentation>Body</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_brakes">
            <xs:annotation>
              <xs:documentation>Brakes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_electrical">
            <xs:annotation>
              <xs:documentation>Electrical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_engine">
            <xs:annotation>
              <xs:documentation>Engine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fuel">
            <xs:annotation>
              <xs:documentation>Fuel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_interior">
            <xs:annotation>
              <xs:documentation>Interior</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_roof">
            <xs:annotation>
              <xs:documentation>Roof</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_suspension">
            <xs:annotation>
              <xs:documentation>Suspension</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wheels">
            <xs:annotation>
              <xs:documentation>Wheels</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PropertyLineItemCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>AssessmentItemCategory</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Fence">
            <xs:annotation>
              <xs:documentation>Fence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acu">
            <xs:annotation>
              <xs:documentation>Air Conditioning</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_building">
            <xs:annotation>
              <xs:documentation>building</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_generator">
            <xs:annotation>
              <xs:documentation>Generators</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_heating">
            <xs:annotation>
              <xs:documentation>Heating System</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lighting">
            <xs:annotation>
              <xs:documentation>Lighting Systems</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plumbing">
            <xs:annotation>
              <xs:documentation>Plumbing System</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_roof">
            <xs:annotation>
              <xs:documentation>Roof</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SeverityType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The severity of the exposure</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_contract$45$medical">
            <xs:annotation>
              <xs:documentation>Contract medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fatal">
            <xs:annotation>
              <xs:documentation>Fatal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_major$45$auto">
            <xs:annotation>
              <xs:documentation>Major (not drivable)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_major$45$gen">
            <xs:annotation>
              <xs:documentation>Major</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_major$45$injury">
            <xs:annotation>
              <xs:documentation>Major (hospitalization)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_major$45$prop">
            <xs:annotation>
              <xs:documentation>Major (not usable)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medical_only">
            <xs:annotation>
              <xs:documentation>Became medical only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_minor">
            <xs:annotation>
              <xs:documentation>Minor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_moderate$45$auto">
            <xs:annotation>
              <xs:documentation>Moderate (drivable)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_moderate$45$gen">
            <xs:annotation>
              <xs:documentation>Moderate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_moderate$45$prop">
            <xs:annotation>
              <xs:documentation>Moderate (usable)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pd">
            <xs:annotation>
              <xs:documentation>Permanent disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_perm$45$total">
            <xs:annotation>
              <xs:documentation>Permanent total</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_severe$45$auto">
            <xs:annotation>
              <xs:documentation>Possible total loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_severe$45$gen">
            <xs:annotation>
              <xs:documentation>Severe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_severe$45$injury">
            <xs:annotation>
              <xs:documentation>Life-threatening</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_td">
            <xs:annotation>
              <xs:documentation>Temporary disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_temporary">
            <xs:annotation>
              <xs:documentation>Temporary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc$45$ell">
            <xs:annotation>
              <xs:documentation>Employer liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AssessmentSource" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of negotiation.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ApprovedVendor">
            <xs:annotation>
              <xs:documentation>Approved Vendor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Claimant">
            <xs:annotation>
              <xs:documentation>Claimant (Third Party)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DeskReview">
            <xs:annotation>
              <xs:documentation>Desk Review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Insured">
            <xs:annotation>
              <xs:documentation>Insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InternalAppraiser">
            <xs:annotation>
              <xs:documentation>Internal Appraiser</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AssessmentEvent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of assessment</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_assignaccept">
            <xs:annotation>
              <xs:documentation>Assignment Accepted</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assigncanceled">
            <xs:annotation>
              <xs:documentation>Assignment Canceled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_estaccepted">
            <xs:annotation>
              <xs:documentation>Estimate Accepted</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_estcomplete">
            <xs:annotation>
              <xs:documentation>Estimate Complete</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_estdate">
            <xs:annotation>
              <xs:documentation>Estimate Date Set</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_newrepairdate">
            <xs:annotation>
              <xs:documentation>Repair Date Re-Set</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reinspect">
            <xs:annotation>
              <xs:documentation>Re-inspection Requested</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reinspectcomplete">
            <xs:annotation>
              <xs:documentation>Re-inspection Complete</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_repair">
            <xs:annotation>
              <xs:documentation>Repair In-Progress</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_repaircomplete">
            <xs:annotation>
              <xs:documentation>Repair Complete</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_repairdate">
            <xs:annotation>
              <xs:documentation>Repair Date Set</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LossCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_default">
            <xs:annotation>
              <xs:documentation>default</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LossPartyType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Generally either first- or third-party loss</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_insured">
            <xs:annotation>
              <xs:documentation>Insured's loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_third_party">
            <xs:annotation>
              <xs:documentation>Third-party liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LostPropertyType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>ISO category of lost property, for theft losses</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Art">
            <xs:annotation>
              <xs:documentation>Art/antique</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AudioVisual">
            <xs:annotation>
              <xs:documentation>Audio/visual</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Cash">
            <xs:annotation>
              <xs:documentation>Cash</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Clothing">
            <xs:annotation>
              <xs:documentation>Clothing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ComputerEquip">
            <xs:annotation>
              <xs:documentation>Computer equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Engine">
            <xs:annotation>
              <xs:documentation>Engine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Furs">
            <xs:annotation>
              <xs:documentation>Furs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Guns">
            <xs:annotation>
              <xs:documentation>Guns</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Jewelry">
            <xs:annotation>
              <xs:documentation>Jewelry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MoblEquip">
            <xs:annotation>
              <xs:documentation>Mobile equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OfficeEquip">
            <xs:annotation>
              <xs:documentation>Office equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Other">
            <xs:annotation>
              <xs:documentation>Other or multiple</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Outdrive">
            <xs:annotation>
              <xs:documentation>Outdrive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Silverware">
            <xs:annotation>
              <xs:documentation>Silverware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SportsEquip">
            <xs:annotation>
              <xs:documentation>Sports equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Tools">
            <xs:annotation>
              <xs:documentation>Tools</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FutureMedicalActionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_continuing">
            <xs:annotation>
              <xs:documentation>Continuing medical treatment required</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_investigating">
            <xs:annotation>
              <xs:documentation>Ordered tests/x-rays other medical investigations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ps_mmi">
            <xs:annotation>
              <xs:documentation>Reached P&amp;S/MMI status (Permanent &amp; Stationary / Maximum Medical Improvement)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_referred">
            <xs:annotation>
              <xs:documentation>Referring to different provider for opinion/treatment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_released">
            <xs:annotation>
              <xs:documentation>Released from care no further treatment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_surgery">
            <xs:annotation>
              <xs:documentation>Requires surgery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MedicalActionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_imevisit">
            <xs:annotation>
              <xs:documentation>IME visit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_intlvisit">
            <xs:annotation>
              <xs:documentation>Initial visit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mmi">
            <xs:annotation>
              <xs:documentation>MMI visit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stateimevisit">
            <xs:annotation>
              <xs:documentation>State-designated IME visit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EmploymentStatusType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Status of employment</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_disabled">
            <xs:annotation>
              <xs:documentation>Disabled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ft_apprentice">
            <xs:annotation>
              <xs:documentation>Full-time apprentice (not valid in TX)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fulltime">
            <xs:annotation>
              <xs:documentation>Full-time employee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_minor">
            <xs:annotation>
              <xs:documentation>Minor child</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_onstrike">
            <xs:annotation>
              <xs:documentation>On strike</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_parttime">
            <xs:annotation>
              <xs:documentation>Part-time employee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pieceworker">
            <xs:annotation>
              <xs:documentation>Pieceworker (not valid in TX)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pt_apprentice">
            <xs:annotation>
              <xs:documentation>Part-time apprentice (not valid in TX)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retired">
            <xs:annotation>
              <xs:documentation>Retired</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_seasonal">
            <xs:annotation>
              <xs:documentation>Seasonal (not valid in TX)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_student">
            <xs:annotation>
              <xs:documentation>Student</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_temporary">
            <xs:annotation>
              <xs:documentation>Temporary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unemployed">
            <xs:annotation>
              <xs:documentation>Unemployed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_volunteer">
            <xs:annotation>
              <xs:documentation>Volunteer (not valid in TX)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PayPeriodType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Pay period type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_daily">
            <xs:annotation>
              <xs:documentation>Employee paid on a daily basis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_everytwoweeks">
            <xs:annotation>
              <xs:documentation>Employee paid every two weeks</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_monthly">
            <xs:annotation>
              <xs:documentation>Employee paid on a monthly basis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_twiceamonth">
            <xs:annotation>
              <xs:documentation>Employee paid twice a month</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_weekly">
            <xs:annotation>
              <xs:documentation>Employee paid on a weekly basis</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkCapacity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Capacity in which employee returned to work</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_estimatedrtw">
            <xs:annotation>
              <xs:documentation>Estimated return to work date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fullduty">
            <xs:annotation>
              <xs:documentation>Working - No Restrictions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lastdateworked">
            <xs:annotation>
              <xs:documentation>Last date worked prior to injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_modifiedduty">
            <xs:annotation>
              <xs:documentation>Modified duty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_restricted_work">
            <xs:annotation>
              <xs:documentation>Working with restrictions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stopped_work">
            <xs:annotation>
              <xs:documentation>Stopped work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteSecurityType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of the note for access-restriction purposes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_medical">
            <xs:annotation>
              <xs:documentation>Medical note, viewable by internal users with medical note view/edit permissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_private">
            <xs:annotation>
              <xs:documentation>Note viewable by internal users only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_public">
            <xs:annotation>
              <xs:documentation>Note viewable by any user in the system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sensitive">
            <xs:annotation>
              <xs:documentation>Confidential note, viewable by select internal users only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NoteTopicType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Topic to which this note belongs</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_coverage">
            <xs:annotation>
              <xs:documentation>Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_denial">
            <xs:annotation>
              <xs:documentation>Denial</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_evaluation">
            <xs:annotation>
              <xs:documentation>Evaluation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fnol">
            <xs:annotation>
              <xs:documentation>First notice of loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_investigation">
            <xs:annotation>
              <xs:documentation>Investigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_litigation">
            <xs:annotation>
              <xs:documentation>Litigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medical">
            <xs:annotation>
              <xs:documentation>Medical issues</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reinsurance">
            <xs:annotation>
              <xs:documentation>Reinsurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_salvage">
            <xs:annotation>
              <xs:documentation>Salvage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_settlement">
            <xs:annotation>
              <xs:documentation>Settlement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subrogation">
            <xs:annotation>
              <xs:documentation>Subrogation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CoverageType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of coverage</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AccountsRecOffPremisesProperty">
            <xs:annotation>
              <xs:documentation>Accts Receivable - Off Premises Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAAudVisDataEqip2Cov">
            <xs:annotation>
              <xs:documentation>Audio Visual Data Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BABobtailLiabCov">
            <xs:annotation>
              <xs:documentation>Bobtail Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BACollisionCov">
            <xs:annotation>
              <xs:documentation>Collision</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BACollisionLimited_MAMI">
            <xs:annotation>
              <xs:documentation>Collision - Limited Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAComprehensiveCov">
            <xs:annotation>
              <xs:documentation>Comprehensive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCCollisionCov">
            <xs:annotation>
              <xs:documentation>Collision for Drive Other Car</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCCompCov">
            <xs:annotation>
              <xs:documentation>Comprehensive for Drive Other Car</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCLiabilityCov">
            <xs:annotation>
              <xs:documentation>Liability - Bodily Injury and Property Damage - DOC</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCMedPayCov">
            <xs:annotation>
              <xs:documentation>Medical Payments  for Drive Other Car</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCUnderinsCov">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist for Drive Other Car</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADOCUninsuredCov">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist for Drive Other Car</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BADealerLimitLiabCov">
            <xs:annotation>
              <xs:documentation>Auto Dealer Limited Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAFellowEmployeesCov">
            <xs:annotation>
              <xs:documentation>Fellow Employees</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredCollisionCov">
            <xs:annotation>
              <xs:documentation>Hired Auto Collision</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredCompCov">
            <xs:annotation>
              <xs:documentation>Hired Auto Comprehensive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredLiabilityCov">
            <xs:annotation>
              <xs:documentation>Hired Auto Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredSpecPerilCov">
            <xs:annotation>
              <xs:documentation>Hired Auto Specified Causes of Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredUIMCov">
            <xs:annotation>
              <xs:documentation>Hired Auto Underinsured Motorist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAHiredUMCov">
            <xs:annotation>
              <xs:documentation>Hired Auto Uninsured Motorist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BALimitedPropDamCov">
            <xs:annotation>
              <xs:documentation>Limited Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BALoanLeaseGapCov">
            <xs:annotation>
              <xs:documentation>Loan Lease Gap</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BALossOfUseCov">
            <xs:annotation>
              <xs:documentation>Loss of Use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BANonOwndSSExtendCov">
            <xs:annotation>
              <xs:documentation>Non-Owned Social Services Extended</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BANonownedLiabCov">
            <xs:annotation>
              <xs:documentation>Non-Owned Auto Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedLiabilityCov">
            <xs:annotation>
              <xs:documentation>Liability - Bodily Injury and Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedMedPayCov">
            <xs:annotation>
              <xs:documentation>Medical Payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUIMBICov">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUIMPDCov">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMBICov">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMBISuppCov">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Supplemental BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAOwnedUMPDCov">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPollutLiabBasicCov">
            <xs:annotation>
              <xs:documentation>Pollution Liability Basic</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPollutLiabBoardCov">
            <xs:annotation>
              <xs:documentation>Pollution Liability Broad</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BAPropProtectionCov">
            <xs:annotation>
              <xs:documentation>Property Protection Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BARentalCov">
            <xs:annotation>
              <xs:documentation>Rental Reimbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASeasonTrailerLiabCov">
            <xs:annotation>
              <xs:documentation>Seasonal Trailer Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BASpecCausesLossCov">
            <xs:annotation>
              <xs:documentation>Specified Causes of Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BATapeDiscRecordCov">
            <xs:annotation>
              <xs:documentation>Tape Disc Record</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BATowingLaborCov">
            <xs:annotation>
              <xs:documentation>Towing and Labor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPAdditionalCov">
            <xs:annotation>
              <xs:documentation>Special Coverage Packages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPAggLimitProjCov">
            <xs:annotation>
              <xs:documentation>Aggregate Limits of Insurance - Projects</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPAlaskaAFGLCov">
            <xs:annotation>
              <xs:documentation>Alaska Attorney Fees - GL</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBarberCov">
            <xs:annotation>
              <xs:documentation>Barber/Beautician Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBuildingCov">
            <xs:annotation>
              <xs:documentation>Building</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBurgRobCov">
            <xs:annotation>
              <xs:documentation>Burglary and Robbery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBusIncDepPrpCov">
            <xs:annotation>
              <xs:documentation>Business Income - Dependent Prop</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBusIncExtCov">
            <xs:annotation>
              <xs:documentation>Business Income - Extended Period</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPBusIncPayrollCov">
            <xs:annotation>
              <xs:documentation>BOP Business Income - Ordinary Payroll</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCAEqBldgRecCov">
            <xs:annotation>
              <xs:documentation>CA - EQ Reconstruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCAEqBldgSubCov">
            <xs:annotation>
              <xs:documentation>CA Earthquake - Building Sublimits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCertTerrorCap">
            <xs:annotation>
              <xs:documentation>Terror - Cap on Cert. Acts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPComputerFraudCov">
            <xs:annotation>
              <xs:documentation>Computer/Funds Transfer Fraud</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCondoAssnCov">
            <xs:annotation>
              <xs:documentation>Condo Association Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPCondoUnitOwnCov">
            <xs:annotation>
              <xs:documentation>Condo Unit Owner</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPDesigPremProj">
            <xs:annotation>
              <xs:documentation>Designated Premises or Project Limitation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPElectricalSchedCov">
            <xs:annotation>
              <xs:documentation>Electrical Equipment - Scheduled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpBenExtRpting">
            <xs:annotation>
              <xs:documentation>Employee Benefits Extended Reporting</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpBenefits">
            <xs:annotation>
              <xs:documentation>Employee Benefits Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEmpDisCov">
            <xs:annotation>
              <xs:documentation>Employee Dishonesty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEqBldgCov">
            <xs:annotation>
              <xs:documentation>Earthquake</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPEqSpBldgCov">
            <xs:annotation>
              <xs:documentation>Earthquake - Sprinkler Leakage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFDService">
            <xs:annotation>
              <xs:documentation>FD Service Contract</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFoodContamCov">
            <xs:annotation>
              <xs:documentation>Food Contamination Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPForgeAltCov">
            <xs:annotation>
              <xs:documentation>Forgery and Alteration</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFuncPerPropCov">
            <xs:annotation>
              <xs:documentation>Functional Business Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFuneralDirCov">
            <xs:annotation>
              <xs:documentation>Funeral Director Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPFungiPropCov">
            <xs:annotation>
              <xs:documentation>Limited Fungi Coverage (Property)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPGuestPropCov">
            <xs:annotation>
              <xs:documentation>Guest's Property Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPGuestSafeDepCov">
            <xs:annotation>
              <xs:documentation>Guests Property In Safe Deposit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPHearingAidCov">
            <xs:annotation>
              <xs:documentation>Hearing Aid / Optician Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPHiredAuto">
            <xs:annotation>
              <xs:documentation>Hired Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLeasedWorkerInjCov">
            <xs:annotation>
              <xs:documentation>Leased Workers - Injury Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiabilityCov">
            <xs:annotation>
              <xs:documentation>Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorCov">
            <xs:annotation>
              <xs:documentation>Liquor Liability Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorEvents">
            <xs:annotation>
              <xs:documentation>Liquor Liability - Event Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLiquorRemoveExc">
            <xs:annotation>
              <xs:documentation>Liquor Liability - Remove Exclusion</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPLocWindHailCov">
            <xs:annotation>
              <xs:documentation>Windstorm/Hail</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMALeadPoisonCov">
            <xs:annotation>
              <xs:documentation>MA -  Lead Poisoning</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMATenantReloCov">
            <xs:annotation>
              <xs:documentation>MA - Apartment Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMechBreakdownCov">
            <xs:annotation>
              <xs:documentation>Mechanical Breakdown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMedExpCov">
            <xs:annotation>
              <xs:documentation>Premises Medical Expense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMineSubCov">
            <xs:annotation>
              <xs:documentation>Mine Subsidence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMoneySecCov">
            <xs:annotation>
              <xs:documentation>Money and Securities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPMotelCov">
            <xs:annotation>
              <xs:documentation>BOP Motel Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPNewAcquiredOrgCov">
            <xs:annotation>
              <xs:documentation>Newly Acquired Organization Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPNonOwnedAutoCov">
            <xs:annotation>
              <xs:documentation>Non-owned Auto Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOrdinanceCov">
            <xs:annotation>
              <xs:documentation>Ordinance or Law</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOutSignCov">
            <xs:annotation>
              <xs:documentation>Outdoor Signs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOutdoorProp">
            <xs:annotation>
              <xs:documentation>Outdoor Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPOverflowCov">
            <xs:annotation>
              <xs:documentation>Water Backup and Sump Overflow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPersAdvertInj">
            <xs:annotation>
              <xs:documentation>Personal and Advertising Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPersPropOffPrem">
            <xs:annotation>
              <xs:documentation>Personal Property Off Premises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPersonalEffects">
            <xs:annotation>
              <xs:documentation>Personal Effects</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPersonalPropCov">
            <xs:annotation>
              <xs:documentation>Business Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPesticideApplicatorCov">
            <xs:annotation>
              <xs:documentation>Pesticide Applicator Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPharmacistCov">
            <xs:annotation>
              <xs:documentation>Pharmacist Limited Liability Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPollutionCov">
            <xs:annotation>
              <xs:documentation>Limited Pollution Liability Extension</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPrinterCov">
            <xs:annotation>
              <xs:documentation>Printers Errors and Omissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPPropertyCov">
            <xs:annotation>
              <xs:documentation>Policywide Property Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPReceivablesCov">
            <xs:annotation>
              <xs:documentation>Accounts Receivable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPSelfStorCov">
            <xs:annotation>
              <xs:documentation>Self Storage Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPSpoilageCov">
            <xs:annotation>
              <xs:documentation>Spoilage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPTenantFireCov">
            <xs:annotation>
              <xs:documentation>Tenants Fire Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPTenantsLiabilityCov">
            <xs:annotation>
              <xs:documentation>Tenants Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPToolsInstallUnschedCov">
            <xs:annotation>
              <xs:documentation>Contractors Tools/Installation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPToolsSchedCov">
            <xs:annotation>
              <xs:documentation>Contractors Tools - Scheduled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilDirectCov">
            <xs:annotation>
              <xs:documentation>Utilities - Direct Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPUtilTimeCov">
            <xs:annotation>
              <xs:documentation>Utilities - Time Element</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVacancyChangeCov">
            <xs:annotation>
              <xs:documentation>Vacancy Changes/Conditions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVacancyCov">
            <xs:annotation>
              <xs:documentation>Vacancy Permit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPValuablePapersCov">
            <xs:annotation>
              <xs:documentation>Valuable Papers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPVetCov">
            <xs:annotation>
              <xs:documentation>Veterinarian Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPY2KIncomeExpenseCov">
            <xs:annotation>
              <xs:documentation>Income/Expense - Electronic Equip.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPY2KLimitedCov">
            <xs:annotation>
              <xs:documentation>Computer Limited Liability Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BOPY2KPremOnlyCov">
            <xs:annotation>
              <xs:documentation>Computer Liability-Premises Only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusIncChangeCov">
            <xs:annotation>
              <xs:documentation>Bus. Inc. Waiting Period Change</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CADeathDisabilityCov">
            <xs:annotation>
              <xs:documentation>Death and Disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_DE">
            <xs:annotation>
              <xs:documentation>PIP - Delaware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_FL">
            <xs:annotation>
              <xs:documentation>PIP - Florida</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_HI">
            <xs:annotation>
              <xs:documentation>PIP - Hawaii</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_KS">
            <xs:annotation>
              <xs:documentation>PIP - Kansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_KY">
            <xs:annotation>
              <xs:documentation>PIP - Kentucky</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_MA">
            <xs:annotation>
              <xs:documentation>PIP - Massachusetts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_MD">
            <xs:annotation>
              <xs:documentation>PIP - Maryland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_MI">
            <xs:annotation>
              <xs:documentation>PIP - Michigan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_MN">
            <xs:annotation>
              <xs:documentation>PIP - Minnesota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_ND">
            <xs:annotation>
              <xs:documentation>PIP - North Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_NJ">
            <xs:annotation>
              <xs:documentation>PIP - New Jersey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_NY">
            <xs:annotation>
              <xs:documentation>PIP - New York</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_OR">
            <xs:annotation>
              <xs:documentation>PIP - Oregon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_PA">
            <xs:annotation>
              <xs:documentation>PIP - Pennsylvania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_TX">
            <xs:annotation>
              <xs:documentation>PIP - Texas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_UT">
            <xs:annotation>
              <xs:documentation>PIP - Utah</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CAPIP_WA">
            <xs:annotation>
              <xs:documentation>PIP - Washington</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA_PIP_AR">
            <xs:annotation>
              <xs:documentation>PIP - Arkansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA_PIP_DC">
            <xs:annotation>
              <xs:documentation>PIP - District Of Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBPPCov">
            <xs:annotation>
              <xs:documentation>Business Personal Property Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBlanketCov">
            <xs:annotation>
              <xs:documentation>CPBlanket Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgBusIncomeCov">
            <xs:annotation>
              <xs:documentation>Business Income Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgCov">
            <xs:annotation>
              <xs:documentation>Building Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgExtraExpenseCov">
            <xs:annotation>
              <xs:documentation>Extra Expense Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPBldgStockCov">
            <xs:annotation>
              <xs:documentation>Business Personal Property - Separation of Coverage (Stock)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipAdditionallyAcquiredProperty">
            <xs:annotation>
              <xs:documentation>Contractors Equipment - Additional Aquired Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipDebrisRemoval">
            <xs:annotation>
              <xs:documentation>Contractors Equipment - Debris Removal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipEmployeesTools">
            <xs:annotation>
              <xs:documentation>Employees Tools - per occurrence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipMiscUnscheduledCov">
            <xs:annotation>
              <xs:documentation>Misc Unscheduled Items - per occurrence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipPollutionCleanup">
            <xs:annotation>
              <xs:documentation>Contractors Equipment - Pollution Cleanup</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipPreservationOfProperty">
            <xs:annotation>
              <xs:documentation>Contractors Equipment - Preservation of Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipRentalReibursement">
            <xs:annotation>
              <xs:documentation>Contractors Rental Reimbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipRentedEquipment">
            <xs:annotation>
              <xs:documentation>Contractors Rented Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContractorsEquipSchedCov">
            <xs:annotation>
              <xs:documentation>Contractors Scheduled Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDW_Dwelling_Cov_HOE">
            <xs:annotation>
              <xs:documentation>Fire Dwelling</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDW_Loss_Of_Use_HOE">
            <xs:annotation>
              <xs:documentation>Fire Dwelling Loss Of Use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDW_OrdinanceCov_HOE">
            <xs:annotation>
              <xs:documentation>Fire Dwelling Ordinance Or Law</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDW_Other_Structures_HOE">
            <xs:annotation>
              <xs:documentation>Fire Dwelling Other Structures</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDW_Personal_Property_HOE">
            <xs:annotation>
              <xs:documentation>Fire Dwelling Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPDW_Theft_HOE">
            <xs:annotation>
              <xs:documentation>Dwelling Theft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPLI_Med_Pay_HOE">
            <xs:annotation>
              <xs:documentation>Fire Dwelling Medical Payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DPLI_Personal_Liability_HOE">
            <xs:annotation>
              <xs:documentation>Fire Dwelling Personal Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DandO">
            <xs:annotation>
              <xs:documentation>Directors and Officers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EANDO">
            <xs:annotation>
              <xs:documentation>Errors and omissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FARM">
            <xs:annotation>
              <xs:documentation>Farmowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLAddCondoCov">
            <xs:annotation>
              <xs:documentation>Condominiums</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLAddInjuryLeasedWorkers">
            <xs:annotation>
              <xs:documentation>Coverage for Injury to Leased Workers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLCGLCov">
            <xs:annotation>
              <xs:documentation>Comprehensive General Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLContractualLiabRR">
            <xs:annotation>
              <xs:documentation>Contractual Liability - Railroads</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLDeductible">
            <xs:annotation>
              <xs:documentation>GL Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLElectronicDataLiability">
            <xs:annotation>
              <xs:documentation>Electronic Data Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLEmpBenefitsLiabilityCov">
            <xs:annotation>
              <xs:documentation>Employee Benefits Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLGovSubdivisions">
            <xs:annotation>
              <xs:documentation>Governmental Subdivisions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLawnCare">
            <xs:annotation>
              <xs:documentation>Lawn Care Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLimitedPAandInjuryCov">
            <xs:annotation>
              <xs:documentation>Ltd Contractual Liab for Personal and Advertising</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLiquorEndorsement">
            <xs:annotation>
              <xs:documentation>Liquor Liability Endorsement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLtdFungiBacteriaCov">
            <xs:annotation>
              <xs:documentation>Limited Fungi or Bacteria Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPestHerbicideApplicatorSchedule">
            <xs:annotation>
              <xs:documentation>Pesticide Or Herbicide Applicator Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionDesignatedCov">
            <xs:annotation>
              <xs:documentation>Coverage for Designated Pollutants</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLPollutionShortTermCov">
            <xs:annotation>
              <xs:documentation>Short Term Pollution Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLUndergroundResourceCov">
            <xs:annotation>
              <xs:documentation>Underground Resources And Equip Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_Dwelling_Cov_HOE">
            <xs:annotation>
              <xs:documentation>Homeowners Dwelling</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_Earthquake_HOE">
            <xs:annotation>
              <xs:documentation>Earthquake Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_FungiCovFlorida_HOE">
            <xs:annotation>
              <xs:documentation>Limited Fungi, Wet Or Dry Rot Or Bacteria Florida</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_FungiCov_HOE">
            <xs:annotation>
              <xs:documentation>Limited Fungi, Wet or Dry Rot or Bacteria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_InflationGaurd_HOE">
            <xs:annotation>
              <xs:documentation>Inflation Guard</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_Loss_Of_Use_HOE">
            <xs:annotation>
              <xs:documentation>Homeowners Loss Of Use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_OrdinanceCov_HOE">
            <xs:annotation>
              <xs:documentation>Homeowners Ordinance Or Law</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_OtherStructuresOffPremise_HOE">
            <xs:annotation>
              <xs:documentation>Other Structures Off The Residence Premises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_OtherStructuresOnPremise_HOE">
            <xs:annotation>
              <xs:documentation>Other Structures On The Residence Premises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_Other_Structures_HOE">
            <xs:annotation>
              <xs:documentation>Homeowners Other Structures</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_PersonalPropertyOffResidence_HOE">
            <xs:annotation>
              <xs:documentation>Personal Property At Other Residences</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_Personal_Property_HOE">
            <xs:annotation>
              <xs:documentation>Homeowners Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_ScheduledProperty_HOE">
            <xs:annotation>
              <xs:documentation>Scheduled Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_SectionI_Ded_HOE">
            <xs:annotation>
              <xs:documentation>Section I Deductibles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_SpecialLimitsCovC_HOE">
            <xs:annotation>
              <xs:documentation>Special Limits Personal Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HODW_SpecificStructuresOffPremise_HOE">
            <xs:annotation>
              <xs:documentation>Specific Structures Away From The Residence Premises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLI_FungiCov_HOE">
            <xs:annotation>
              <xs:documentation>Section II Limited Fungi, Wet Or Dry Rot Or Bacteria</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLI_LimitedComputer_HOE">
            <xs:annotation>
              <xs:documentation>Section II - Limited Coverage For  Computer Related And Other Electronical Problem</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLI_Med_Pay_HOE">
            <xs:annotation>
              <xs:documentation>Homeowners Medical Payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLI_OtherInsuredResidence_HOE">
            <xs:annotation>
              <xs:documentation>Other Insured Locations Occupied By Named Insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLI_PersonalInjury_HOE">
            <xs:annotation>
              <xs:documentation>HO Personal/Advertising Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HOLI_Personal_Liability_HOE">
            <xs:annotation>
              <xs:documentation>Homeowners Personal Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IMAccountReceivableCov">
            <xs:annotation>
              <xs:documentation>Accounts Receivable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IMSignCov">
            <xs:annotation>
              <xs:documentation>Inland Marine Sign</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MALP">
            <xs:annotation>
              <xs:documentation>Malpractice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PACollisionCov">
            <xs:annotation>
              <xs:documentation>Collision</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PACollision_MA_MI_Limited">
            <xs:annotation>
              <xs:documentation>Collision - Limited Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAComprehensiveCov">
            <xs:annotation>
              <xs:documentation>Comprehensive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PADeathDisabilityCov">
            <xs:annotation>
              <xs:documentation>Death &amp; Disability Benefi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAExcessElectronicsCov">
            <xs:annotation>
              <xs:documentation>Excess Electronic Equipment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PALiabilityCov">
            <xs:annotation>
              <xs:documentation>Liability - Bodily Injury and Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PALimitedMexicoCov">
            <xs:annotation>
              <xs:documentation>Mexico Coverage - Limited</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PALossOfUseCov">
            <xs:annotation>
              <xs:documentation>Rental Car Loss of Use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAMedPayCov">
            <xs:annotation>
              <xs:documentation>Medical Payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_AR">
            <xs:annotation>
              <xs:documentation>PIP - Arkansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_DC">
            <xs:annotation>
              <xs:documentation>PIP - District of Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_DE">
            <xs:annotation>
              <xs:documentation>PIP - Delaware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_FL">
            <xs:annotation>
              <xs:documentation>PIP - Florida</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_HI">
            <xs:annotation>
              <xs:documentation>PIP - Hawaii</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_KS">
            <xs:annotation>
              <xs:documentation>PIP - Kansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_KY">
            <xs:annotation>
              <xs:documentation>PIP - Kentucky</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_MA">
            <xs:annotation>
              <xs:documentation>PIP - Massachusetts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_MD">
            <xs:annotation>
              <xs:documentation>PIP - Maryland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_MI">
            <xs:annotation>
              <xs:documentation>PIP - Michigan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_MN">
            <xs:annotation>
              <xs:documentation>PIP - Minnesota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_ND">
            <xs:annotation>
              <xs:documentation>PIP - North Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_NJ">
            <xs:annotation>
              <xs:documentation>PIP - New Jersey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_NY">
            <xs:annotation>
              <xs:documentation>PIP - New York</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_OR">
            <xs:annotation>
              <xs:documentation>PIP - Oregon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_PA">
            <xs:annotation>
              <xs:documentation>PIP - Pennsylvania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_TX">
            <xs:annotation>
              <xs:documentation>PIP - Texas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_UT">
            <xs:annotation>
              <xs:documentation>PIP - Utah</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPIP_WA">
            <xs:annotation>
              <xs:documentation>PIP - Washington</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAPropProtectionCov">
            <xs:annotation>
              <xs:documentation>Property Protection Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PARentalCov">
            <xs:annotation>
              <xs:documentation>Rental Reimbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PATapeDiscMediaCov">
            <xs:annotation>
              <xs:documentation>Tape / Disc Media</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PATowingLaborCov">
            <xs:annotation>
              <xs:documentation>Towing and Labor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUIMBICov">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUIMPDCov">
            <xs:annotation>
              <xs:documentation>Underinsured Motorist - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUMBICov">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Bodily Injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PAUMPDCov">
            <xs:annotation>
              <xs:documentation>Uninsured Motorist - Property Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PUP_Primary_LiabilityCov_PUE">
            <xs:annotation>
              <xs:documentation>Primary Personal Liability Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PUP_WorldWideCov_PUE">
            <xs:annotation>
              <xs:documentation>World Wide</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PollutionBroadLimited">
            <xs:annotation>
              <xs:documentation>Pollution Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProductWithdrawalLtd">
            <xs:annotation>
              <xs:documentation>Limited Coverage for Product Withdrawal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCEmpLiabCov">
            <xs:annotation>
              <xs:documentation>Workers' Comp Employer's Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCFedEmpLiabCov">
            <xs:annotation>
              <xs:documentation>Federal Employer's Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCOtherStatesInsurance">
            <xs:annotation>
              <xs:documentation>Other States Insurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCWorkCompDeductCov">
            <xs:annotation>
              <xs:documentation>Workers' Comp State-Specific Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WCWorkersCompCov">
            <xs:annotation>
              <xs:documentation>Statutory Workers' Comp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_XCUSpecified">
            <xs:annotation>
              <xs:documentation>XCU - Specified Locations, Operation, Hazard</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Y2KLimitedCov">
            <xs:annotation>
              <xs:documentation>Y2K / Computer Limited Coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_baggage">
            <xs:annotation>
              <xs:documentation>General coverage for baggage including suitcases and contents like personal items, electronics, wallet, passports, etc.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_health_travel">
            <xs:annotation>
              <xs:documentation>Heath coverage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hiredauto_travel">
            <xs:annotation>
              <xs:documentation>Excesses for hired/rented auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liab_travel">
            <xs:annotation>
              <xs:documentation>3rd party liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_trip">
            <xs:annotation>
              <xs:documentation>Trip coverage for travel and accommodations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RIAgreement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AnnualAggregateRITreaty">
            <xs:annotation>
              <xs:documentation>Annual Aggregate RI Treaty Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ExcessOfLossRITreaty">
            <xs:annotation>
              <xs:documentation>Excess Of Loss RI Treaty Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FacExcessOfLossRIAgreement">
            <xs:annotation>
              <xs:documentation>Excess Of Loss Fac Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FacNetExcessOfLossRIAgreement">
            <xs:annotation>
              <xs:documentation>Net Excess Of Loss Fac Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FacProportionalRIAgreement">
            <xs:annotation>
              <xs:documentation>Fac Proportional RI Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NetExcessOfLossRITreaty">
            <xs:annotation>
              <xs:documentation>Net Excess Of Loss RI Treaty Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NonProportionalRIAgreement">
            <xs:annotation>
              <xs:documentation>Non Proportional RI Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PerEventRITreaty">
            <xs:annotation>
              <xs:documentation>Per Event RI Treaty Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProportionalRIAgreement">
            <xs:annotation>
              <xs:documentation>Proportional RI Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QuotaShareRITreaty">
            <xs:annotation>
              <xs:documentation>Quota Share RI Treaty Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RIAgreement">
            <xs:annotation>
              <xs:documentation>RIAgreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SurplusRITreaty">
            <xs:annotation>
              <xs:documentation>Surplus RI Treaty Agreement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExposureReopenedReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The possible reasons for an exposure to be reopened</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_mistake">
            <xs:annotation>
              <xs:documentation>Mistake</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_newinfo">
            <xs:annotation>
              <xs:documentation>New information</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentdenied">
            <xs:annotation>
              <xs:documentation>Final Payment causing this exposure to close has been denied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExposureSecurityType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimSegment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of segments a claim can have</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_auto_glass">
            <xs:annotation>
              <xs:documentation>Auto - glass</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_auto_high">
            <xs:annotation>
              <xs:documentation>Auto - high complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_auto_low">
            <xs:annotation>
              <xs:documentation>Auto - low complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_auto_mid">
            <xs:annotation>
              <xs:documentation>Auto - mid complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_contents_high">
            <xs:annotation>
              <xs:documentation>Contents - high complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_contents_low">
            <xs:annotation>
              <xs:documentation>Contents - low complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_injury_high">
            <xs:annotation>
              <xs:documentation>Injury - high complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_injury_low">
            <xs:annotation>
              <xs:documentation>Injury - low complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_injury_mid">
            <xs:annotation>
              <xs:documentation>Injury - mid complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liab_high">
            <xs:annotation>
              <xs:documentation>Liability - high complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liab_low">
            <xs:annotation>
              <xs:documentation>Liability - low complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liab_mid">
            <xs:annotation>
              <xs:documentation>Liability - mid complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prop_high">
            <xs:annotation>
              <xs:documentation>Property - high complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prop_low">
            <xs:annotation>
              <xs:documentation>Property - low complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prop_mid">
            <xs:annotation>
              <xs:documentation>Property - mid complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_travel_high">
            <xs:annotation>
              <xs:documentation>Travel - high complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_travel_low">
            <xs:annotation>
              <xs:documentation>Travel - low complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_travel_mid">
            <xs:annotation>
              <xs:documentation>Travel - mid complexity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unknown">
            <xs:annotation>
              <xs:documentation>Unknown segment, or segment not automatically set by rules</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc_liability">
            <xs:annotation>
              <xs:documentation>Workers' Comp - employer's liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc_lost_time">
            <xs:annotation>
              <xs:documentation>Workers' Comp - lost time</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc_med_only">
            <xs:annotation>
              <xs:documentation>Workers' Comp - med only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InsuranceLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Insurance line (for stat coding)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_businessowners">
            <xs:annotation>
              <xs:documentation>Businessowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_comm_auto_liab">
            <xs:annotation>
              <xs:documentation>Commercial auto liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_comm_auto_noflt">
            <xs:annotation>
              <xs:documentation>Commercial auto no-fault</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_comm_auto_phys">
            <xs:annotation>
              <xs:documentation>Commercial auto physical damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_comm_property">
            <xs:annotation>
              <xs:documentation>Commercial property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_farmowners">
            <xs:annotation>
              <xs:documentation>Farmowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general_liab">
            <xs:annotation>
              <xs:documentation>General Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_glass">
            <xs:annotation>
              <xs:documentation>Glass</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_homeowners">
            <xs:annotation>
              <xs:documentation>Homeowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inland_marine">
            <xs:annotation>
              <xs:documentation>Inland marine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mobile_homeowns">
            <xs:annotation>
              <xs:documentation>Mobile homeowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pers_auto_liab">
            <xs:annotation>
              <xs:documentation>Personal auto liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pers_auto_noflt">
            <xs:annotation>
              <xs:documentation>Personal auto no-fault</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pers_auto_phys">
            <xs:annotation>
              <xs:documentation>Personal auto physical damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pers_liab">
            <xs:annotation>
              <xs:documentation>Personal liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc">
            <xs:annotation>
              <xs:documentation>Workers' compensation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InsuranceSubLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Insurance sub-line (for stat coding)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_assigned_risk">
            <xs:annotation>
              <xs:documentation>Assigned risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_auto_non_std">
            <xs:annotation>
              <xs:documentation>Auto non-standard</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_auto_std">
            <xs:annotation>
              <xs:documentation>Auto standard</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_basic_1">
            <xs:annotation>
              <xs:documentation>Basic group 1 causes of loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_basic_2">
            <xs:annotation>
              <xs:documentation>Basic group 2 causes of loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bo_nonsimplified">
            <xs:annotation>
              <xs:documentation>Businessowners - non simplified</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bo_simplified">
            <xs:annotation>
              <xs:documentation>Businessowners - simplified</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_farmowners">
            <xs:annotation>
              <xs:documentation>Farmowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fela">
            <xs:annotation>
              <xs:documentation>Federal Employers' Liability Act</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gl_other">
            <xs:annotation>
              <xs:documentation>All other general liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_glass">
            <xs:annotation>
              <xs:documentation>Glass</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_homeowners">
            <xs:annotation>
              <xs:documentation>Homeowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_homeowners_rc">
            <xs:annotation>
              <xs:documentation>Homeowners with replacement cost</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inland_marine">
            <xs:annotation>
              <xs:documentation>Inland marine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_jones">
            <xs:annotation>
              <xs:documentation>Jones Act/Maritime</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_med_pay">
            <xs:annotation>
              <xs:documentation>Medical payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mobile_homeowns">
            <xs:annotation>
              <xs:documentation>Mobile homeowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_owners_contracts">
            <xs:annotation>
              <xs:documentation>Owners and contractors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pers_auto_liab">
            <xs:annotation>
              <xs:documentation>Personal auto liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pers_auto_noflt">
            <xs:annotation>
              <xs:documentation>Personal auto no-fault</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pers_auto_phys">
            <xs:annotation>
              <xs:documentation>Personal auto physical damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pers_liability">
            <xs:annotation>
              <xs:documentation>Personal liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_premises">
            <xs:annotation>
              <xs:documentation>Premises/operations liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prof_liability">
            <xs:annotation>
              <xs:documentation>Professional liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_underinsured">
            <xs:annotation>
              <xs:documentation>Underinsured motorists</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uninsured">
            <xs:annotation>
              <xs:documentation>Uninsured motorists</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc_std">
            <xs:annotation>
              <xs:documentation>Workers' compensation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MajorPerils" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Major perils (for stat coding)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_bldg_1">
            <xs:annotation>
              <xs:documentation>Building basic group 1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bldg_2">
            <xs:annotation>
              <xs:documentation>Building Basic Group 2</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bodily_injury">
            <xs:annotation>
              <xs:documentation>Auto bodily injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_businessowners">
            <xs:annotation>
              <xs:documentation>Businessowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_collision">
            <xs:annotation>
              <xs:documentation>Collision</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_comprehensive">
            <xs:annotation>
              <xs:documentation>Comprehensive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_contents_1">
            <xs:annotation>
              <xs:documentation>Contents basic group 1</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_contents_2">
            <xs:annotation>
              <xs:documentation>Contents basic group 2</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_earthquake_bldg">
            <xs:annotation>
              <xs:documentation>Earthquake building</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_earthquake_cont">
            <xs:annotation>
              <xs:documentation>Earthquake contents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_farmowners">
            <xs:annotation>
              <xs:documentation>Farmowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gl_pers">
            <xs:annotation>
              <xs:documentation>General liability (personal umbrella)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gl_std">
            <xs:annotation>
              <xs:documentation>General liability - CPP  and GL</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_glass">
            <xs:annotation>
              <xs:documentation>Glass</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_homeowners">
            <xs:annotation>
              <xs:documentation>Homeowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_im_other">
            <xs:annotation>
              <xs:documentation>Inland marine watercraft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_im_watercraft">
            <xs:annotation>
              <xs:documentation>Inland marine watercraft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_med_pay">
            <xs:annotation>
              <xs:documentation>Medical payments</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mobile_homeowns">
            <xs:annotation>
              <xs:documentation>Mobile homeowners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pers_nofault">
            <xs:annotation>
              <xs:documentation>Auto no-fault</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pip">
            <xs:annotation>
              <xs:documentation>Personal injury protection</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prop_damage">
            <xs:annotation>
              <xs:documentation>Property damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rental">
            <xs:annotation>
              <xs:documentation>Rental reimbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_under_insured_bi">
            <xs:annotation>
              <xs:documentation>Under-insured motorist BI </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uninsured_bi">
            <xs:annotation>
              <xs:documentation>Uninsured motorist BI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_watercraft_liab">
            <xs:annotation>
              <xs:documentation>Watercraft liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc">
            <xs:annotation>
              <xs:documentation>Workers' compensation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimStrategy" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_auto_fast">
            <xs:annotation>
              <xs:documentation>Auto - Fast Track</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_auto_normal">
            <xs:annotation>
              <xs:documentation>Auto - Investigate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_contents_fast">
            <xs:annotation>
              <xs:documentation>Contents - Fast Track</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_contents_normal">
            <xs:annotation>
              <xs:documentation>Contents - Investigate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_injury_fast">
            <xs:annotation>
              <xs:documentation>Injury - Fast Track</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_injury_normal">
            <xs:annotation>
              <xs:documentation>Injury - Investigate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liab_fast">
            <xs:annotation>
              <xs:documentation>Liability - Fast Track</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_liab_normal">
            <xs:annotation>
              <xs:documentation>Liability - Investigate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prop_fast">
            <xs:annotation>
              <xs:documentation>Property - Fast Track</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prop_normal">
            <xs:annotation>
              <xs:documentation>Property - Investigate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unknown">
            <xs:annotation>
              <xs:documentation>Unknown strategy, or strategy not assigned by rules</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc_fast">
            <xs:annotation>
              <xs:documentation>Workers' Comp - Fast Track</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc_investigate">
            <xs:annotation>
              <xs:documentation>Workers' Comp - Investigate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc_normal">
            <xs:annotation>
              <xs:documentation>Workers' Comp - Manage Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExposureTextType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Text fields on exposure, stored in ExposureText array</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ISOErrorMessage">
            <xs:annotation>
              <xs:documentation>Error message if most recent ISO ClaimSearch request failed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ObjectiveFindings">
            <xs:annotation>
              <xs:documentation>Treatment provider's findings</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SubjectiveComplaints">
            <xs:annotation>
              <xs:documentation>Patient's subjective complaints</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TreatmentRendered">
            <xs:annotation>
              <xs:documentation>Treatment rendered</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ValidationLevel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_external">
            <xs:annotation>
              <xs:documentation>Send to external system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_iso">
            <xs:annotation>
              <xs:documentation>Valid for ISO ClaimSearch</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_loadsave">
            <xs:annotation>
              <xs:documentation>Load and save</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_newloss">
            <xs:annotation>
              <xs:documentation>New loss completion</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payment">
            <xs:annotation>
              <xs:documentation>Ability to pay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MatterCourtDistrict" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Court jurisdictional area</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AK">
            <xs:annotation>
              <xs:documentation>Alaska</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AL">
            <xs:annotation>
              <xs:documentation>Alabama</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AR">
            <xs:annotation>
              <xs:documentation>Arkansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AZ">
            <xs:annotation>
              <xs:documentation>Arizona</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>California</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>Colorado</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CT">
            <xs:annotation>
              <xs:documentation>Connecticut</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DC">
            <xs:annotation>
              <xs:documentation>District of Columbia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DE">
            <xs:annotation>
              <xs:documentation>Delaware</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FL">
            <xs:annotation>
              <xs:documentation>Florida</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GA">
            <xs:annotation>
              <xs:documentation>Georgia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HI">
            <xs:annotation>
              <xs:documentation>Hawaii</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IA">
            <xs:annotation>
              <xs:documentation>Iowa</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ID">
            <xs:annotation>
              <xs:documentation>Idaho</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IL">
            <xs:annotation>
              <xs:documentation>Illinois</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IN">
            <xs:annotation>
              <xs:documentation>Indiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KS">
            <xs:annotation>
              <xs:documentation>Kansas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_KY">
            <xs:annotation>
              <xs:documentation>Kentucky</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LA">
            <xs:annotation>
              <xs:documentation>Louisiana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MA">
            <xs:annotation>
              <xs:documentation>Massachusetts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MD">
            <xs:annotation>
              <xs:documentation>Maryland</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ME">
            <xs:annotation>
              <xs:documentation>Maine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MI">
            <xs:annotation>
              <xs:documentation>Michigan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MN">
            <xs:annotation>
              <xs:documentation>Minnesota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MO">
            <xs:annotation>
              <xs:documentation>Missouri</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MS">
            <xs:annotation>
              <xs:documentation>Mississippi</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MT">
            <xs:annotation>
              <xs:documentation>Montana</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NC">
            <xs:annotation>
              <xs:documentation>North Carolina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ND">
            <xs:annotation>
              <xs:documentation>North Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NE">
            <xs:annotation>
              <xs:documentation>Nebraska</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NH">
            <xs:annotation>
              <xs:documentation>New Hampshire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NJ">
            <xs:annotation>
              <xs:documentation>New Jersey</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NM">
            <xs:annotation>
              <xs:documentation>New Mexico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NV">
            <xs:annotation>
              <xs:documentation>Nevada</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NY">
            <xs:annotation>
              <xs:documentation>New York</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OH">
            <xs:annotation>
              <xs:documentation>Ohio</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OK">
            <xs:annotation>
              <xs:documentation>Oklahoma</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OR">
            <xs:annotation>
              <xs:documentation>Oregon</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PA">
            <xs:annotation>
              <xs:documentation>Pennsylvania</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PR">
            <xs:annotation>
              <xs:documentation>Puerto Rico</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RI">
            <xs:annotation>
              <xs:documentation>Rhode Island</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SC">
            <xs:annotation>
              <xs:documentation>South Carolina</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SD">
            <xs:annotation>
              <xs:documentation>South Dakota</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TN">
            <xs:annotation>
              <xs:documentation>Tennessee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TX">
            <xs:annotation>
              <xs:documentation>Texas</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UT">
            <xs:annotation>
              <xs:documentation>Utah</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VA">
            <xs:annotation>
              <xs:documentation>Virginia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VT">
            <xs:annotation>
              <xs:documentation>Vermont</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WA">
            <xs:annotation>
              <xs:documentation>Washington</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WI">
            <xs:annotation>
              <xs:documentation>Wisconsin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WV">
            <xs:annotation>
              <xs:documentation>West Virginia</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WY">
            <xs:annotation>
              <xs:documentation>Wyoming</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MatterCourtType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Court jurisdiction</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_county">
            <xs:annotation>
              <xs:documentation>County court.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_federal">
            <xs:annotation>
              <xs:documentation>Federal court.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_state">
            <xs:annotation>
              <xs:documentation>State court.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MatterType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Litigation status type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Arbitration">
            <xs:annotation>
              <xs:documentation>Arbitration</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_General">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Hearing">
            <xs:annotation>
              <xs:documentation>Hearing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Lawsuit">
            <xs:annotation>
              <xs:documentation>Lawsuit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Mediation">
            <xs:annotation>
              <xs:documentation>Mediation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MatterMethodServed" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Method served.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CertifiedMail">
            <xs:annotation>
              <xs:documentation>Mailed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Sheriff">
            <xs:annotation>
              <xs:documentation>Sheriff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PrimaryCauseType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Legal suit primary cause type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BS">
            <xs:annotation>
              <xs:documentation>Blind Suit/First Notice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>Court Approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Delay">
            <xs:annotation>
              <xs:documentation>Delay or insufficient claimant contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LowSettlement">
            <xs:annotation>
              <xs:documentation>Low settlement offer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NI">
            <xs:annotation>
              <xs:documentation>Negotiations at Impasse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Predetermined">
            <xs:annotation>
              <xs:documentation>Claimant always intended to file</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SL">
            <xs:annotation>
              <xs:documentation>Statute of Limitations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UD">
            <xs:annotation>
              <xs:documentation>Unreasonable Demand</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VD">
            <xs:annotation>
              <xs:documentation>Valuation Dispute (1st party) </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MatterReopenedReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Reason for reopening matter.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_mistake">
            <xs:annotation>
              <xs:documentation>Mistake</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_newinfo">
            <xs:annotation>
              <xs:documentation>New information</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retrial">
            <xs:annotation>
              <xs:documentation>Retrial</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ResolutionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Legal matter resolution type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AA">
            <xs:annotation>
              <xs:documentation>Award</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AD">
            <xs:annotation>
              <xs:documentation>Appeal dismissed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AL">
            <xs:annotation>
              <xs:documentation>Appeal lost</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AM">
            <xs:annotation>
              <xs:documentation>Appeal moot</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AP">
            <xs:annotation>
              <xs:documentation>Appealed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AR">
            <xs:annotation>
              <xs:documentation>Appeal remanded</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AW">
            <xs:annotation>
              <xs:documentation>Appeal withdrawn</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AWO">
            <xs:annotation>
              <xs:documentation>Appeal won</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Appeal">
            <xs:annotation>
              <xs:documentation>Appeal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CA">
            <xs:annotation>
              <xs:documentation>Coverage acknowledged</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CD">
            <xs:annotation>
              <xs:documentation>Coverage denied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CN">
            <xs:annotation>
              <xs:documentation>Conflict</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CO">
            <xs:annotation>
              <xs:documentation>Consolidation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CV">
            <xs:annotation>
              <xs:documentation>Change of venue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DJ">
            <xs:annotation>
              <xs:documentation>Default judgment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DM">
            <xs:annotation>
              <xs:documentation>Dismissed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DS">
            <xs:annotation>
              <xs:documentation>Discontinued</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DT">
            <xs:annotation>
              <xs:documentation>Defense tendered</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DVD">
            <xs:annotation>
              <xs:documentation>Directed verdict-defendant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DVP">
            <xs:annotation>
              <xs:documentation>Directed verdict-plaintiff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Judgment">
            <xs:annotation>
              <xs:documentation>Judgment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PMD">
            <xs:annotation>
              <xs:documentation>Petition/motion denied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PMG">
            <xs:annotation>
              <xs:documentation>Petition/motion granted</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PMW">
            <xs:annotation>
              <xs:documentation>Petition/motion withdrawn</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SA">
            <xs:annotation>
              <xs:documentation>Settled-ADR</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SAA">
            <xs:annotation>
              <xs:documentation>Settled-appraisal award</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SJ">
            <xs:annotation>
              <xs:documentation>Summary judgment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SO">
            <xs:annotation>
              <xs:documentation>Settled-other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SR">
            <xs:annotation>
              <xs:documentation>Settled-regular</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SS">
            <xs:annotation>
              <xs:documentation>Settled-structured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Settlement">
            <xs:annotation>
              <xs:documentation>Settlement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VD">
            <xs:annotation>
              <xs:documentation>Verdict for defendant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VO">
            <xs:annotation>
              <xs:documentation>Voided defense/matter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_VP">
            <xs:annotation>
              <xs:documentation>Verdict for plaintiff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MatterRiskType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes the overall risk on a matter.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_high">
            <xs:annotation>
              <xs:documentation>High</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_low">
            <xs:annotation>
              <xs:documentation>Low</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medium">
            <xs:annotation>
              <xs:documentation>Medium</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SuitType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Legal suit type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_FirstParty">
            <xs:annotation>
              <xs:documentation>First-party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Insured">
            <xs:annotation>
              <xs:documentation>Insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ThirdParty">
            <xs:annotation>
              <xs:documentation>Third-party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MatterVenueRating" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Venue type desc</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Favorable">
            <xs:annotation>
              <xs:documentation>Favorable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Unfavorable">
            <xs:annotation>
              <xs:documentation>Unfavorable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Unknown">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NegotiationType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of negotiation.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AcceptedSettlement">
            <xs:annotation>
              <xs:documentation>Accepted Settlement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Counter">
            <xs:annotation>
              <xs:documentation>Counteroffer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Demand">
            <xs:annotation>
              <xs:documentation>Demand</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Offer">
            <xs:annotation>
              <xs:documentation>Offer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Rejection">
            <xs:annotation>
              <xs:documentation>Rejection (going to trial)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MatterTextType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of matter text.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AltToSettlement">
            <xs:annotation>
              <xs:documentation>Describes the current alternative to settling; e.g., what is the cost of settling and the likelihood that the defense can win?</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DefenseArgument">
            <xs:annotation>
              <xs:documentation>The basics of the current defense argument. Allows busy adjusters to quickly see negotiating points while disrupted by outside plaintiff's counsel.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PlaintiffArgument">
            <xs:annotation>
              <xs:documentation>The corollary to the defense argument.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RecommendedActions">
            <xs:annotation>
              <xs:documentation>Actions currently recommended by ClaimCenter or by third-party decision support systems.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SettlementPlan">
            <xs:annotation>
              <xs:documentation>The current settlement plan.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The relationship a contact has with the claim</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AppraisalSource">
            <xs:annotation>
              <xs:documentation>Assessor utilized at notice of claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FirstIntakeDoctor">
            <xs:annotation>
              <xs:documentation>First Intake Physician</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InsuredRep">
            <xs:annotation>
              <xs:documentation>Insured Representative</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LawEnfcAgcy">
            <xs:annotation>
              <xs:documentation>Law Enforcement Agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OccTherapist">
            <xs:annotation>
              <xs:documentation>Occupational Therapist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PhysTherapist">
            <xs:annotation>
              <xs:documentation>Physical Therapist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PrimaryDoctor">
            <xs:annotation>
              <xs:documentation>Primary Doctor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TowingAgcy">
            <xs:annotation>
              <xs:documentation>Towing Agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_activityowner">
            <xs:annotation>
              <xs:documentation>The external owner of an activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_adverseparty">
            <xs:annotation>
              <xs:documentation>Responsible Party related to Subrogation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_agent">
            <xs:annotation>
              <xs:documentation>Agent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_altcontact">
            <xs:annotation>
              <xs:documentation>Alternate Contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_arbitrationvenue">
            <xs:annotation>
              <xs:documentation>Authority which handles arbitration legal matters e.g., a hearing office.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_arbitrator">
            <xs:annotation>
              <xs:documentation>Arbitrator</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assessor">
            <xs:annotation>
              <xs:documentation>Assessor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_attorney">
            <xs:annotation>
              <xs:documentation>Attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_casemgmtco">
            <xs:annotation>
              <xs:documentation>Case Management Company</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_casemgr">
            <xs:annotation>
              <xs:documentation>Case Manager</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_checkpayee">
            <xs:annotation>
              <xs:documentation>The payee on a check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimant">
            <xs:annotation>
              <xs:documentation>Claimant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimantdep">
            <xs:annotation>
              <xs:documentation>Claimant Dependent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_codefendant">
            <xs:annotation>
              <xs:documentation>Co-defendant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_collection">
            <xs:annotation>
              <xs:documentation>Collection Agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_coveredparty">
            <xs:annotation>
              <xs:documentation>Covered party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_debrisremoval">
            <xs:annotation>
              <xs:documentation>Debris removal service </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_defendant">
            <xs:annotation>
              <xs:documentation>Defendant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_defenseattorney">
            <xs:annotation>
              <xs:documentation>Primary Defense Attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_defensefirm">
            <xs:annotation>
              <xs:documentation>Primary Defense Law Firm</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disbenprovider">
            <xs:annotation>
              <xs:documentation>Disability Benefits Provider</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_doctor">
            <xs:annotation>
              <xs:documentation>Doctor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_doingbusinessas">
            <xs:annotation>
              <xs:documentation>Doing business as</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_driver">
            <xs:annotation>
              <xs:documentation>Driver</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_employer">
            <xs:annotation>
              <xs:documentation>Employer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ems">
            <xs:annotation>
              <xs:documentation>Emergency Management Service</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_excludedparty">
            <xs:annotation>
              <xs:documentation>Excluded party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_filedby">
            <xs:annotation>
              <xs:documentation>Filed by</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fnolassessor">
            <xs:annotation>
              <xs:documentation>Assessor utilized at notice of claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_formeragent">
            <xs:annotation>
              <xs:documentation>Former agent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_formercheckpayee">
            <xs:annotation>
              <xs:documentation>Former Check Payee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_formercoveredparty">
            <xs:annotation>
              <xs:documentation>Former covered party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_formerdoingbusinessas">
            <xs:annotation>
              <xs:documentation>Former doing business As</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_formerexcludedparty">
            <xs:annotation>
              <xs:documentation>Former excluded party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_formerinsured">
            <xs:annotation>
              <xs:documentation>Former insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_formerpolicyholder">
            <xs:annotation>
              <xs:documentation>Former policy holder</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_formerunderwriter">
            <xs:annotation>
              <xs:documentation>Former underwriter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hearingjudge">
            <xs:annotation>
              <xs:documentation>Hearing Adjudicator</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hearingvenue">
            <xs:annotation>
              <xs:documentation>Authority which handles hearing legal matters e.g., a hearing office.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hospital">
            <xs:annotation>
              <xs:documentation>Hospital - Medical Center</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_incidentowner">
            <xs:annotation>
              <xs:documentation>Owner of the Vehicle or Property.  Used for 3rd party incidents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_injured">
            <xs:annotation>
              <xs:documentation>Injured Party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_insured">
            <xs:annotation>
              <xs:documentation>Insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_judge">
            <xs:annotation>
              <xs:documentation>Judge</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_judges">
            <xs:annotation>
              <xs:documentation>Belongs to the pool of judges at a particular venue.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_leadparalegal">
            <xs:annotation>
              <xs:documentation>Lead Paralegal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lienholder">
            <xs:annotation>
              <xs:documentation>Lienholder</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lodgingprovider">
            <xs:annotation>
              <xs:documentation>Lodging Provider</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_maincontact">
            <xs:annotation>
              <xs:documentation>Main Contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mattermanager">
            <xs:annotation>
              <xs:documentation>Legal Case Manager</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mediationvenue">
            <xs:annotation>
              <xs:documentation>Authority which handles mediation legal matters e.g., a conference office.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mediator">
            <xs:annotation>
              <xs:documentation>Mediator</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_negcontact">
            <xs:annotation>
              <xs:documentation>Negotiation contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nursecasemgr">
            <xs:annotation>
              <xs:documentation>Nurse Case Manager</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_passenger">
            <xs:annotation>
              <xs:documentation>Passenger</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pedestrian">
            <xs:annotation>
              <xs:documentation>Pedestrian</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plaintiff">
            <xs:annotation>
              <xs:documentation>Plaintiff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plaintiffatt">
            <xs:annotation>
              <xs:documentation>Primary Plaintiff's Attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plaintifffirm">
            <xs:annotation>
              <xs:documentation>Primary Plaintiff Law Firm</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plaintiffs">
            <xs:annotation>
              <xs:documentation>Plaintiff's Attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policyholder">
            <xs:annotation>
              <xs:documentation>Policy Holder</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recoveryagent">
            <xs:annotation>
              <xs:documentation>The agent of a recovery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recoveryonbehalfof">
            <xs:annotation>
              <xs:documentation>The responsible party on a recovery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recoverypayer">
            <xs:annotation>
              <xs:documentation>The payer on a recovery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_repairshop">
            <xs:annotation>
              <xs:documentation>Repair Shop</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reporter">
            <xs:annotation>
              <xs:documentation>Reporter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rsbenprovider">
            <xs:annotation>
              <xs:documentation>Replacement Services Benefits Provider</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_salvagebuyer">
            <xs:annotation>
              <xs:documentation>Salvage buyer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_salvageservice">
            <xs:annotation>
              <xs:documentation>Salvage service</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_secdefattorney">
            <xs:annotation>
              <xs:documentation>Secondary Defense Attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_secdefensefirm">
            <xs:annotation>
              <xs:documentation>Secondary Defense Law Firm</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_secplaintiffatt">
            <xs:annotation>
              <xs:documentation>Secondary Plaintiff's Attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_secplaintifffirm">
            <xs:annotation>
              <xs:documentation>Secondary Plaintiff Law Firm</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_servicerequestparticipant">
            <xs:annotation>
              <xs:documentation>Participant in a Service, such as the customer contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_servicerequestspecialist">
            <xs:annotation>
              <xs:documentation>Vendor selected to perform the work for a Service</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subrogator">
            <xs:annotation>
              <xs:documentation>External Subrogation Firm</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_supervisor">
            <xs:annotation>
              <xs:documentation>Supervisor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_underwriter">
            <xs:annotation>
              <xs:documentation>Underwriter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vendor">
            <xs:annotation>
              <xs:documentation>Vendor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_venue">
            <xs:annotation>
              <xs:documentation>Authority which handles legal matters e.g., a court house.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wccarrier">
            <xs:annotation>
              <xs:documentation>WC Carrier</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_witness">
            <xs:annotation>
              <xs:documentation>Witness</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WitnessPosition" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_0">
            <xs:annotation>
              <xs:documentation>Inside vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_1">
            <xs:annotation>
              <xs:documentation>In the other vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_2">
            <xs:annotation>
              <xs:documentation>Pedestrian</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_3">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_archived">
            <xs:annotation>
              <xs:documentation>The policy has been archived by the policy system, so no details are available.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_canceled">
            <xs:annotation>
              <xs:documentation>The policy is canceled as of the requested effective date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expired">
            <xs:annotation>
              <xs:documentation>The policy term is expired as of the current date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inforce">
            <xs:annotation>
              <xs:documentation>The policy is in force as of the requested effective date.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentpastdue">
            <xs:annotation>
              <xs:documentation>Payment past due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pending_cancellation">
            <xs:annotation>
              <xs:documentation>The policy is pending cancellation because of non-payment or some other underwriting reason.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pending_confirmation">
            <xs:annotation>
              <xs:documentation>The policy term has been created in the policy system but is not yet considered binding, usually pending payment.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UnderwritingCompanyType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_child1">
            <xs:annotation>
              <xs:documentation>A separately branded book of business</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_child2">
            <xs:annotation>
              <xs:documentation>An acquired subsidiary company</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_parent">
            <xs:annotation>
              <xs:documentation>The main parent company</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UnderwritingGroupType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_acme_auto">
            <xs:annotation>
              <xs:documentation>Acme Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acme_fire">
            <xs:annotation>
              <xs:documentation>Acme Fire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acme_prop">
            <xs:annotation>
              <xs:documentation>Acme Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acme_wc">
            <xs:annotation>
              <xs:documentation>Acme Workers' Comp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_southwestern">
            <xs:annotation>
              <xs:documentation>Southwestern</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="GeographicalRegion" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>GeographicalRegion</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_australia_nz">
            <xs:annotation>
              <xs:documentation>Australia/New Zealand</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_europe">
            <xs:annotation>
              <xs:documentation>Europe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_worldwide">
            <xs:annotation>
              <xs:documentation>Worldwide</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_worldwide_ex_us_ca">
            <xs:annotation>
              <xs:documentation>Worldwide except USA &amp; Canada</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LossOccured" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AtPremisses">
            <xs:annotation>
              <xs:documentation>Loss occurred at premises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InTransit">
            <xs:annotation>
              <xs:documentation>Loss occurred in transit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CitationType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_controlfailure">
            <xs:annotation>
              <xs:documentation>Failure to maintain control of lane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dui_dwi">
            <xs:annotation>
              <xs:documentation>DUI/DWI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recklessdriving">
            <xs:annotation>
              <xs:documentation>Reckless driving</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_speeding">
            <xs:annotation>
              <xs:documentation>Speeding</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tooclose">
            <xs:annotation>
              <xs:documentation>Following too closely</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_yeildfailure">
            <xs:annotation>
              <xs:documentation>Failure to yield</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CollisionPoint" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_01">
            <xs:annotation>
              <xs:documentation>Right fender - side &amp; wheel area</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_02">
            <xs:annotation>
              <xs:documentation>Right fender - front (headlamp area)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_03">
            <xs:annotation>
              <xs:documentation>Front bumper, grille, hood &amp; radiator</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_04">
            <xs:annotation>
              <xs:documentation>Left fender - front (headlamp area)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_05">
            <xs:annotation>
              <xs:documentation>Left fender - side &amp; wheel area</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_06">
            <xs:annotation>
              <xs:documentation>Left front door</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_07">
            <xs:annotation>
              <xs:documentation>Left rear door</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_08">
            <xs:annotation>
              <xs:documentation>Left Quarter panel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_09">
            <xs:annotation>
              <xs:documentation>Rear bumper, rear body panel, trunk lid/liftgate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_10">
            <xs:annotation>
              <xs:documentation>Right quarter panel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_11">
            <xs:annotation>
              <xs:documentation>Right rear door</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_12">
            <xs:annotation>
              <xs:documentation>Right front door</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_13">
            <xs:annotation>
              <xs:documentation>Roof panel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_14">
            <xs:annotation>
              <xs:documentation>Point of impact unknown (collision loss)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_15">
            <xs:annotation>
              <xs:documentation>Total loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_16">
            <xs:annotation>
              <xs:documentation>Non-collision (comprehensive loss)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_17">
            <xs:annotation>
              <xs:documentation>Undercarriage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_front">
            <xs:annotation>
              <xs:documentation>Front</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_leftfront">
            <xs:annotation>
              <xs:documentation>Left front</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_leftrear">
            <xs:annotation>
              <xs:documentation>Left rear</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_leftside">
            <xs:annotation>
              <xs:documentation>Left side</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rear">
            <xs:annotation>
              <xs:documentation>Rear</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rightfront">
            <xs:annotation>
              <xs:documentation>Right front</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rightrear">
            <xs:annotation>
              <xs:documentation>Right rear</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rightside">
            <xs:annotation>
              <xs:documentation>Right side</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_top">
            <xs:annotation>
              <xs:documentation>Top / roof</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PersonRelationType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_agent">
            <xs:annotation>
              <xs:documentation>Agent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_attorney">
            <xs:annotation>
              <xs:documentation>Attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_child">
            <xs:annotation>
              <xs:documentation>Child</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimant">
            <xs:annotation>
              <xs:documentation>Claimant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimantatty">
            <xs:annotation>
              <xs:documentation>Claimant's attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimantinsco">
            <xs:annotation>
              <xs:documentation>Claimant's insurance co.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_domesticpartner">
            <xs:annotation>
              <xs:documentation>Domestic partner</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_employee">
            <xs:annotation>
              <xs:documentation>Employee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_friend">
            <xs:annotation>
              <xs:documentation>Friend</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_grandparent">
            <xs:annotation>
              <xs:documentation>Grandparent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_insco">
            <xs:annotation>
              <xs:documentation>Insurance co (typically would be third-party insurer)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_parent">
            <xs:annotation>
              <xs:documentation>Parent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_relative">
            <xs:annotation>
              <xs:documentation>Relative</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rentalrep">
            <xs:annotation>
              <xs:documentation>Rental representative</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_self">
            <xs:annotation>
              <xs:documentation>Self</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_spouse">
            <xs:annotation>
              <xs:documentation>Spouse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PercentageDriven" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>% of time vehicle driven by the minor</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_0">
            <xs:annotation>
              <xs:documentation>0 - 20%</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_1">
            <xs:annotation>
              <xs:documentation>20 - 40%</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_2">
            <xs:annotation>
              <xs:documentation>40-60%</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_3">
            <xs:annotation>
              <xs:documentation>&gt; 60%</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_4">
            <xs:annotation>
              <xs:documentation>Unsure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RecovClassType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Recovery Classification</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_dam">
            <xs:annotation>
              <xs:documentation>No major parts missing, but damaged</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nodam">
            <xs:annotation>
              <xs:documentation>Found</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_eng">
            <xs:annotation>
              <xs:documentation>Stripped of major parts - engine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_engoth">
            <xs:annotation>
              <xs:documentation>Stripped of major parts - engine&amp; other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_engtrans">
            <xs:annotation>
              <xs:documentation>Stripped of major parts - engine &amp; transmission</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_engtransoth">
            <xs:annotation>
              <xs:documentation>Stripped of major parts - engine, transmission, &amp; other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_oth">
            <xs:annotation>
              <xs:documentation>Stripped of major parts - other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_trans">
            <xs:annotation>
              <xs:documentation>Stripped of major parts - transmission</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_transoth">
            <xs:annotation>
              <xs:documentation>Stripped of major parts - transmission, &amp; other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RecovCondType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Vehicle condition (at recovery from theft)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_brn_vand">
            <xs:annotation>
              <xs:documentation>Burned and vandalized</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_burn">
            <xs:annotation>
              <xs:documentation>Burned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fld_vand">
            <xs:annotation>
              <xs:documentation>Flood and vandalized</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_flood">
            <xs:annotation>
              <xs:documentation>Flood</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_no_dam">
            <xs:annotation>
              <xs:documentation>No apparent damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_not_recov">
            <xs:annotation>
              <xs:documentation>Not recovered/condition unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str">
            <xs:annotation>
              <xs:documentation>Stripped</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_brn">
            <xs:annotation>
              <xs:documentation>Stripped and burned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_fl">
            <xs:annotation>
              <xs:documentation>Stripped and flood</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_vand">
            <xs:annotation>
              <xs:documentation>Stripped and vandalized</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_str_wrk">
            <xs:annotation>
              <xs:documentation>Stripped and wrecked</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vandal">
            <xs:annotation>
              <xs:documentation>Vandalized</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wreck">
            <xs:annotation>
              <xs:documentation>Wrecked</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wrk_brn">
            <xs:annotation>
              <xs:documentation>Wrecked and burned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wrk_vand">
            <xs:annotation>
              <xs:documentation>Wrecked and vandalized</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VehCondType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Vehicle condition</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_dr">
            <xs:annotation>
              <xs:documentation>Drivable (not total loss)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dr_tl">
            <xs:annotation>
              <xs:documentation>Drivable (total loss)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nd">
            <xs:annotation>
              <xs:documentation>Not Drivable (not total loss)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nd_tl">
            <xs:annotation>
              <xs:documentation>Not Drivable (total loss)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VehicleDirection" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_curve">
            <xs:annotation>
              <xs:documentation>Negotiating curve</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_disabled">
            <xs:annotation>
              <xs:documentation>Disabled in traffic lane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_forward">
            <xs:annotation>
              <xs:documentation>Forward</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_leave">
            <xs:annotation>
              <xs:documentation>Leaving parking space</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_merge">
            <xs:annotation>
              <xs:documentation>Merging/changing lanes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_oth">
            <xs:annotation>
              <xs:documentation>Other maneuver</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_park">
            <xs:annotation>
              <xs:documentation>Entering parking space</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pass">
            <xs:annotation>
              <xs:documentation>Passing other vehicle(s)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_passed">
            <xs:annotation>
              <xs:documentation>Being passed by other vehicle(s)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reverse">
            <xs:annotation>
              <xs:documentation>Backing up</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_start">
            <xs:annotation>
              <xs:documentation>Starting in traffic lane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stop_shoulder">
            <xs:annotation>
              <xs:documentation>Stopped on shoulder of road</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stop_traffic">
            <xs:annotation>
              <xs:documentation>Stopped in traffic lane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_straight">
            <xs:annotation>
              <xs:documentation>Going straight</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_turningleft">
            <xs:annotation>
              <xs:documentation>Turning left</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_turningright">
            <xs:annotation>
              <xs:documentation>Turning right</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uturn">
            <xs:annotation>
              <xs:documentation>Making U-turn</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VehiclePolicyStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_expired">
            <xs:annotation>
              <xs:documentation>Expired</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inforce">
            <xs:annotation>
              <xs:documentation>In force</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentpastdue">
            <xs:annotation>
              <xs:documentation>Payment past due</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VehicleType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_leased">
            <xs:annotation>
              <xs:documentation>Leased</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_listed">
            <xs:annotation>
              <xs:documentation>Listed on policy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_new">
            <xs:annotation>
              <xs:documentation>Newly acquired</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other_non_owned">
            <xs:annotation>
              <xs:documentation>Other non-owned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other_owned">
            <xs:annotation>
              <xs:documentation>Other owned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_owned">
            <xs:annotation>
              <xs:documentation>Owned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rental">
            <xs:annotation>
              <xs:documentation>Rented / hired</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_temp">
            <xs:annotation>
              <xs:documentation>Temporary substitute vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tow">
            <xs:annotation>
              <xs:documentation>Vehicle in tow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReasonForUse" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_business">
            <xs:annotation>
              <xs:documentation>Business</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pleasure">
            <xs:annotation>
              <xs:documentation>Pleasure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkflowActiveState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The possible states of an active workflow object</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_running">
            <xs:annotation>
              <xs:documentation>The workflow is currently running.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_waitactivity">
            <xs:annotation>
              <xs:documentation>The workflow is waiting for some activities to complete.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_waitmanual">
            <xs:annotation>
              <xs:documentation>The workflow is waiting for a trigger or timeout.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_waitmessage">
            <xs:annotation>
              <xs:documentation>The workflow is waiting for a message to be acked.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkflowActionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>What action is the Workflow currently trying to take?</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_activity">
            <xs:annotation>
              <xs:documentation>Creating Activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assert">
            <xs:annotation>
              <xs:documentation>Executing Assertions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_branch">
            <xs:annotation>
              <xs:documentation>Executing a Branch (or Timeout, Trigger, etc.)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_enter">
            <xs:annotation>
              <xs:documentation>Executing an Enter block</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exit">
            <xs:annotation>
              <xs:documentation>Executing an Exit block</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_finish">
            <xs:annotation>
              <xs:documentation>Executing a Finish block</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_selectBranch">
            <xs:annotation>
              <xs:documentation>Looking for one of the branches to be ready to execute</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_start">
            <xs:annotation>
              <xs:documentation>Executing a Start block</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkflowHandler" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>What infrastructure handles this Workflow?</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_internal">
            <xs:annotation>
              <xs:documentation>Handled by Guidewire's internal Workflow engine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_test">
            <xs:annotation>
              <xs:documentation>Handled by testing infrastructure (not for production!)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ErrorCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of error for messages that are in error</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UserAttributeType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Major categories of user attributes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Account">
            <xs:annotation>
              <xs:documentation>Named account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Expertise">
            <xs:annotation>
              <xs:documentation>Expertise</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Language">
            <xs:annotation>
              <xs:documentation>Language</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_default">
            <xs:annotation>
              <xs:documentation>Default</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CostType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>User-defined types of transaction costs.  Financial transactions can optionally be coded to a CostType for accounting purposes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_aoexpense">
            <xs:annotation>
              <xs:documentation>Adjusting and other expenses</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimcost">
            <xs:annotation>
              <xs:documentation>Loss payments to claimants or repairers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dccexpense">
            <xs:annotation>
              <xs:documentation>Defense and cost containment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unspecified">
            <xs:annotation>
              <xs:documentation>Unspecified Cost Type</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AuthorityLimitType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of authority limits</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_car">
            <xs:annotation>
              <xs:documentation>The available reserves for all exposures on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cptd">
            <xs:annotation>
              <xs:documentation>The total amount of payments to date for the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ctr">
            <xs:annotation>
              <xs:documentation>The total reserves for all exposures on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ear">
            <xs:annotation>
              <xs:documentation>The available reserves for a single exposure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_eptd">
            <xs:annotation>
              <xs:documentation>The total amount of payments to date for a single exposure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_etr">
            <xs:annotation>
              <xs:documentation>The total reserves for a single exposure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pa">
            <xs:annotation>
              <xs:documentation>The amount of a single payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_per">
            <xs:annotation>
              <xs:documentation>The amount by which payments are allowed to exceed reserves on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rcs">
            <xs:annotation>
              <xs:documentation>The size of a single reserve change</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UserExperienceType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>experience levels for users</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_high">
            <xs:annotation>
              <xs:documentation>Expert</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_low">
            <xs:annotation>
              <xs:documentation>Novice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mid">
            <xs:annotation>
              <xs:documentation>Average</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="QuickClaimDefault" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Default values for quick claims</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AutoFirstAndFinal">
            <xs:annotation>
              <xs:documentation>Auto first and final</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Glass">
            <xs:annotation>
              <xs:documentation>General liability incidents only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QuickClaimAuto">
            <xs:annotation>
              <xs:documentation>Quick claim auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QuickClaimProperty">
            <xs:annotation>
              <xs:documentation>Quick claim property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UserRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Roles users can have on an assignable object</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_attorney">
            <xs:annotation>
              <xs:documentation>Attorney associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_doctor">
            <xs:annotation>
              <xs:documentation>Doctor associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_indepappr">
            <xs:annotation>
              <xs:documentation>Independent Appraiser associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nursecasemgr">
            <xs:annotation>
              <xs:documentation>Nurse Case Manager associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_police">
            <xs:annotation>
              <xs:documentation>Police</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_primaryadjuster">
            <xs:annotation>
              <xs:documentation>Primary adjuster for the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_propinsp">
            <xs:annotation>
              <xs:documentation>Property Inspector associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reinsmgr">
            <xs:annotation>
              <xs:documentation>Reinsurance Manager associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_relateduser">
            <xs:annotation>
              <xs:documentation>Other user associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_repairshop">
            <xs:annotation>
              <xs:documentation>Repair Shop associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reporter">
            <xs:annotation>
              <xs:documentation>Reporter associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_salvgowner">
            <xs:annotation>
              <xs:documentation>Salvage Owner associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_siu">
            <xs:annotation>
              <xs:documentation>SIU associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_siuinvestigator">
            <xs:annotation>
              <xs:documentation>SIU Investigator associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subrogationowner">
            <xs:annotation>
              <xs:documentation>User in charge of subrogation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_supervisor">
            <xs:annotation>
              <xs:documentation>Supervisor associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vendor">
            <xs:annotation>
              <xs:documentation>Vendor associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vhcleinsp">
            <xs:annotation>
              <xs:documentation>Vehicle Inspector associated with the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SystemPermissionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines all permissions that can be granted to users via privileges and roles</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_StorageUpdate">
            <xs:annotation>
              <xs:documentation>Permission to edit claim storage information</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new contact in the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abcreatepref">
            <xs:annotation>
              <xs:documentation>Permission to add a preferred vendor to the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete an existing contact in the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abdeletepref">
            <xs:annotation>
              <xs:documentation>Permission to delete an existing preferred vendor address book entry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an existing contact in the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abeditpref">
            <xs:annotation>
              <xs:documentation>Permission to modify an existing preferred vendor address book entry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abview">
            <xs:annotation>
              <xs:documentation>Permission to view the details of contact entries in the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abviewsearch">
            <xs:annotation>
              <xs:documentation>Permission to search contact entries in the address book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountmng">
            <xs:annotation>
              <xs:documentation>Permission to add, edit, or delete accounts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_accountview">
            <xs:annotation>
              <xs:documentation>Permission to view accounts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actapproveany">
            <xs:annotation>
              <xs:documentation>Permission to approve any approval activity even if the activity is assigned to someone else; the approver is still subject to authority limit restrictions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actcreate">
            <xs:annotation>
              <xs:documentation>Permission to create new activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actcreateclsd">
            <xs:annotation>
              <xs:documentation>Permission to create a new activity associated with a closed claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_acteditunowned">
            <xs:annotation>
              <xs:documentation>Permission to modify (edit/skip/close) activities owned by other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actmakemand">
            <xs:annotation>
              <xs:documentation>Permission to set whether an activity is mandatory</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actown">
            <xs:annotation>
              <xs:documentation>Permission to own an activity and to see the Desktop Activities page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actpatcreate">
            <xs:annotation>
              <xs:documentation>Permission to create new activity patterns</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actpatdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete activity patterns</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actpatedit">
            <xs:annotation>
              <xs:documentation>Permission to edit activity patterns</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actpatview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of activity patterns or activity pattern details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actqueuenext">
            <xs:annotation>
              <xs:documentation>Permission to get the next activity off of a queue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actqueuepick">
            <xs:annotation>
              <xs:documentation>Permission to pick an activity from a queue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actraown">
            <xs:annotation>
              <xs:documentation>Permission to reassign your own activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actraunown">
            <xs:annotation>
              <xs:documentation>Permission to reassign activities owned by other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actreviewassign">
            <xs:annotation>
              <xs:documentation>Permission to review and approve manually-approved assignables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actview">
            <xs:annotation>
              <xs:documentation>Permission to view activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_actviewallqueues">
            <xs:annotation>
              <xs:documentation>Permission to view all activity queues, even those in other security zones</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_admindatachangeexec">
            <xs:annotation>
              <xs:documentation>Permission to execute the data change.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_admindatachangeview">
            <xs:annotation>
              <xs:documentation>Permission to view the data change page.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_alpmanage">
            <xs:annotation>
              <xs:documentation>Permission create, edit, or delete authority limit profiles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_alpview">
            <xs:annotation>
              <xs:documentation>Permission to view authority limit profiles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_anytagcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new contact regardless of which tag(s) it has</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_anytagdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete a contact regardless of which tag(s) it has</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_anytagedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the details of a contact regardless of which tag(s) it has</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_anytagview">
            <xs:annotation>
              <xs:documentation>Permission to view the details of a contact regardless of which tag(s) it has</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_archive">
            <xs:annotation>
              <xs:documentation>Permission to archive objects</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assocmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete claim associations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assocview">
            <xs:annotation>
              <xs:documentation>Permission to view claim associations on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_attrmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete user attributes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_attrview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of user attributes or attribute details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bulkinvcreate">
            <xs:annotation>
              <xs:documentation>Permission to create bulk invoices</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bulkinvdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete bulk invoices</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bulkinvedit">
            <xs:annotation>
              <xs:documentation>Permission to edit bulk invoices</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bulkinvview">
            <xs:annotation>
              <xs:documentation>Permission to view bulk invoices</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_buswkmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete business week</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_buswkview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of business week</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_catmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, and activate/deactivate catastrophes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_catview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of catastrophes and details of individual catastrophes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_changecontactsubtype">
            <xs:annotation>
              <xs:documentation>Permission to change contact subtype</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_checktransfer">
            <xs:annotation>
              <xs:documentation>Permission to transfer a check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimclose">
            <xs:annotation>
              <xs:documentation>Permission to close a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimedit">
            <xs:annotation>
              <xs:documentation>Permission to edit a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimeditclsd">
            <xs:annotation>
              <xs:documentation>Permission to edit a closed claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimintegadmin">
            <xs:annotation>
              <xs:documentation>Permission to perform integration admin functions on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimown">
            <xs:annotation>
              <xs:documentation>Permission to own a claim and see the Desktop Claims page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimprint">
            <xs:annotation>
              <xs:documentation>Permission to print a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimprtsmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete parties from a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimprtsmanclsd">
            <xs:annotation>
              <xs:documentation>Permission to manage parties involved on a closed claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimraown">
            <xs:annotation>
              <xs:documentation>Permission to reassign your own claims</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimraunown">
            <xs:annotation>
              <xs:documentation>Permission to reassign claims owned by other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimremflag">
            <xs:annotation>
              <xs:documentation>Permission to remove the flag from flagged claims</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimreopen">
            <xs:annotation>
              <xs:documentation>Permission to reopen a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimselectplcy">
            <xs:annotation>
              <xs:documentation>Permission to select a new policy for an existing claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimslplcyclsd">
            <xs:annotation>
              <xs:documentation>Permission to select a new policy for a closed claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimusermanage">
            <xs:annotation>
              <xs:documentation>Permission to manage claim users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimusermanclsd">
            <xs:annotation>
              <xs:documentation>Permission to manage claim users on a closed claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimvalidate">
            <xs:annotation>
              <xs:documentation>Permission to run validation rules on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimview">
            <xs:annotation>
              <xs:documentation>General permission to view a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimviewpay">
            <xs:annotation>
              <xs:documentation>Permission to view checks and payments (and derived information) on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimviewrec">
            <xs:annotation>
              <xs:documentation>Permission to view recoveries (and derived information) on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimviewrecres">
            <xs:annotation>
              <xs:documentation>Permission to view recovery reserves (and derived information) on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimviewres">
            <xs:annotation>
              <xs:documentation>Permission to view reserves (and derived information) on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_clearedpayvoid">
            <xs:annotation>
              <xs:documentation>Permission to void a cleared check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_covverifymanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, and delete Coverage Verification values</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_covverifyview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of Coverage Verification values</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ctccreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new local contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ctcedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an existing local contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ctcview">
            <xs:annotation>
              <xs:documentation>Permission to view and search local contact entries</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_custsvctiermng">
            <xs:annotation>
              <xs:documentation>Permission to add, edit, or delete service tiers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_custsvctierview">
            <xs:annotation>
              <xs:documentation>Permission to view service tiers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_debugtools">
            <xs:annotation>
              <xs:documentation>Permission to access debug tools, even when they are disabled by a configuration parameter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delmednote">
            <xs:annotation>
              <xs:documentation>Permission to delete a medical note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delprivnote">
            <xs:annotation>
              <xs:documentation>Permission to delete a private note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delsensdoc">
            <xs:annotation>
              <xs:documentation>Permission to delete a sensitive document</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delsensnote">
            <xs:annotation>
              <xs:documentation>Permission to delete a sensitive note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_doccreate">
            <xs:annotation>
              <xs:documentation>Permission to add documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_doccreateclsd">
            <xs:annotation>
              <xs:documentation>Permission to add documents to a closed claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docdelete">
            <xs:annotation>
              <xs:documentation>Permission to remove documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docdeleteclsd">
            <xs:annotation>
              <xs:documentation>Permission to remove documents from a closed claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docedit">
            <xs:annotation>
              <xs:documentation>Permission to edit documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docmodifyall">
            <xs:annotation>
              <xs:documentation>Permission to edit or delete all documents, regardless of the permissions set on the individual documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docview">
            <xs:annotation>
              <xs:documentation>Permission to view documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_docviewall">
            <xs:annotation>
              <xs:documentation>Permission to view all documents, regardless of the permissions set on the individual documents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_edbclaimact">
            <xs:annotation>
              <xs:documentation>Permission to view the Dashboard claim activity screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_edbclaimcounts">
            <xs:annotation>
              <xs:documentation>Permission to view the Dashboard claim counts screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_edbcurrfin">
            <xs:annotation>
              <xs:documentation>Permission to view the Dashboard current financials screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_edbpdfin">
            <xs:annotation>
              <xs:documentation>Permission to view the Dashboard period financials screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_editSensMCMdetails">
            <xs:annotation>
              <xs:documentation>Permission to edit sensitive Medical Case Management details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_editSensSIUdetails">
            <xs:annotation>
              <xs:documentation>Permission to edit sensitive SIU details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_editdeductible">
            <xs:annotation>
              <xs:documentation>Permission to edit Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_editmednote">
            <xs:annotation>
              <xs:documentation>Permission to edit a medical note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_editprivnote">
            <xs:annotation>
              <xs:documentation>Permission to edit a private note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_editrefdata">
            <xs:annotation>
              <xs:documentation>Permission to edit administration reference data</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_editsensdoc">
            <xs:annotation>
              <xs:documentation>Permission to edit a sensitive document</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_editsensnote">
            <xs:annotation>
              <xs:documentation>Permission to edit a sensitive note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_editsubrodetails">
            <xs:annotation>
              <xs:documentation>Permission to edit Subrogation-related information</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_evalcreate">
            <xs:annotation>
              <xs:documentation>Permission to create an evaluation on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_evaledit">
            <xs:annotation>
              <xs:documentation>Permission to edit an evaluation on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_evaleditclsd">
            <xs:annotation>
              <xs:documentation>Permission to edit an evaluation on a closed claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_evalview">
            <xs:annotation>
              <xs:documentation>Permission to view an evaluation on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_eventmessageview">
            <xs:annotation>
              <xs:documentation>Permission to view the event messages page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exchratemanual">
            <xs:annotation>
              <xs:documentation>Permission to override exchange rate with a custom exchange rate.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expclose">
            <xs:annotation>
              <xs:documentation>Permission to close an exposure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new exposure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an exposure on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expeditclsd">
            <xs:annotation>
              <xs:documentation>Permission to edit a closed exposure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expown">
            <xs:annotation>
              <xs:documentation>Permission to own an exposure and to see the Desktop Exposures page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expraown">
            <xs:annotation>
              <xs:documentation>Permission to reassign your own exposures</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expraunown">
            <xs:annotation>
              <xs:documentation>Permission to reassign exposures owned by other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expreopen">
            <xs:annotation>
              <xs:documentation>Permission to reopen an exposure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expvalidate">
            <xs:annotation>
              <xs:documentation>Permission to run validation rules on exposures</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expview">
            <xs:annotation>
              <xs:documentation>Permission to view exposures on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_groupcreate">
            <xs:annotation>
              <xs:documentation>Permission to create groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_groupdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_groupedit">
            <xs:annotation>
              <xs:documentation>Permission to edit groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_grouptreeview">
            <xs:annotation>
              <xs:documentation>Permission to see the user/group tree on the Administration tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_groupview">
            <xs:annotation>
              <xs:documentation>Permission to view details of a group</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_holidaymanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, and delete holidays</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_holidayview">
            <xs:annotation>
              <xs:documentation>Permission to view a list of holidays or holiday details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ignoreacl">
            <xs:annotation>
              <xs:documentation>Permission that grants the user permissions as if they were always on a claim's ACL with every possible ClaimAccessType</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_integadmin">
            <xs:annotation>
              <xs:documentation>Permission to administer integration events</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_internaltools">
            <xs:annotation>
              <xs:documentation>Permission to access all Internal Tools</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lvprint">
            <xs:annotation>
              <xs:documentation>Permission to print listviews</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_manageldfctrs">
            <xs:annotation>
              <xs:documentation>Permission to modify the load factors on all users and groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_manpaycreate">
            <xs:annotation>
              <xs:documentation>Permission to create manual payment transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_manpaydelete">
            <xs:annotation>
              <xs:documentation>Permission to delete manual payment transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_manpayedit">
            <xs:annotation>
              <xs:documentation>Permission to edit manual payment transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_metriclimitmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, and delete claim and exposure metric limits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mttrclose">
            <xs:annotation>
              <xs:documentation>Permission to close matters on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mttrcreate">
            <xs:annotation>
              <xs:documentation>Permission to create new matters on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mttredit">
            <xs:annotation>
              <xs:documentation>Permission to edit a matter on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mttreditclsd">
            <xs:annotation>
              <xs:documentation>Permission to edit a closed matter on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mttrown">
            <xs:annotation>
              <xs:documentation>Permission to own a matter and to see the Desktop Matters page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mttrraown">
            <xs:annotation>
              <xs:documentation>Permission to reassign your own matters</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mttrraunown">
            <xs:annotation>
              <xs:documentation>Permission to reassign matters owned by other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mttrreopen">
            <xs:annotation>
              <xs:documentation>Permission to reopen matters on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mttrview">
            <xs:annotation>
              <xs:documentation>Permission to view matters</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ngtncreate">
            <xs:annotation>
              <xs:documentation>Permission to create a negotiation on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ngtnedit">
            <xs:annotation>
              <xs:documentation>Permission to edit a negotiation on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ngtneditclsd">
            <xs:annotation>
              <xs:documentation>Permission to edit a negotiation on a closed claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ngtnview">
            <xs:annotation>
              <xs:documentation>Permission to view a negotiation on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notecreate">
            <xs:annotation>
              <xs:documentation>Permission to add notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notecreateclsd">
            <xs:annotation>
              <xs:documentation>Permission to add a note to a closed claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notedelete">
            <xs:annotation>
              <xs:documentation>Permission to remove notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_noteedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_noteeditbody">
            <xs:annotation>
              <xs:documentation>Permission to edit the body of notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_noteview">
            <xs:annotation>
              <xs:documentation>Permission to view notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_noteviewconf">
            <xs:annotation>
              <xs:documentation>Permission to view confidential notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orgcreate">
            <xs:annotation>
              <xs:documentation>Permission to create an organization.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orgdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete an organization.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orgeditbasic">
            <xs:annotation>
              <xs:documentation>Permission to edit an organization's basic info.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orgsearch">
            <xs:annotation>
              <xs:documentation>Permission to search for organizations.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_orgviewbasic">
            <xs:annotation>
              <xs:documentation>Permission to view an organization's basic info.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ownsensclaim">
            <xs:annotation>
              <xs:documentation>Permission to own sensitive claims</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ownsensclaimsub">
            <xs:annotation>
              <xs:documentation>Permission to own subobjects on sensitive claims</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paycreate">
            <xs:annotation>
              <xs:documentation>Permission to create payment transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paydelete">
            <xs:annotation>
              <xs:documentation>Permission to delete payment transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payedit">
            <xs:annotation>
              <xs:documentation>Permission to edit payment transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payrecode">
            <xs:annotation>
              <xs:documentation>Permission to recode a payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paystop">
            <xs:annotation>
              <xs:documentation>Permission to stop a check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payvoid">
            <xs:annotation>
              <xs:documentation>Permission to void a check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcyedit">
            <xs:annotation>
              <xs:documentation>Permission to edit an unverified policy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcymakeeditable">
            <xs:annotation>
              <xs:documentation>Permission to create an unverified policy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plcyview">
            <xs:annotation>
              <xs:documentation>Permission to view policy information</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_purge">
            <xs:annotation>
              <xs:documentation>Permission to purge objects from the database</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reccreate">
            <xs:annotation>
              <xs:documentation>Permission to create recovery transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete recovery transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recedit">
            <xs:annotation>
              <xs:documentation>Permission to edit recovery transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recrescreate">
            <xs:annotation>
              <xs:documentation>Permission to create recovery reserve transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recresdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete recovery reserve transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recresedit">
            <xs:annotation>
              <xs:documentation>Permission to edit recovery reserve transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recvoid">
            <xs:annotation>
              <xs:documentation>Permission to void recovery transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_regionmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, and delete regions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_regionview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of regions and region details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reinsthresholdedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the reinsurance reportable thresholds</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reinsthresholdview">
            <xs:annotation>
              <xs:documentation>Permission to view the reinsurance reportable thresholds</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reinsuranceedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the reinsurance reportable status on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_report_manager">
            <xs:annotation>
              <xs:documentation>Permission to view reports and dashboard in report server</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_report_user">
            <xs:annotation>
              <xs:documentation>Permission to view reports in report server</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reporting_view">
            <xs:annotation>
              <xs:documentation>Permission to view the Report tab, if the add-on reporting module is installed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rescreate">
            <xs:annotation>
              <xs:documentation>Permission to create reserve transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_resdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete reserve transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_resedit">
            <xs:annotation>
              <xs:documentation>Permission to edit reserve transactions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_resyncmessage">
            <xs:annotation>
              <xs:documentation>Permission to resync message</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retrymessage">
            <xs:annotation>
              <xs:documentation>Permission to try to resend the failed message</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reviewcreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new Review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reviewdeletecompleted">
            <xs:annotation>
              <xs:documentation>Permission to delete a Review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reviewdeleteincomplete">
            <xs:annotation>
              <xs:documentation>Permission to delete a Review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reviewedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the Review page where the scores are entered for each claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reviewviewdetail">
            <xs:annotation>
              <xs:documentation>Permission view the Review page to see the answers entered for each claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reviewviewlist">
            <xs:annotation>
              <xs:documentation>Permission to view the list of Reviews and the reviews tab on a Contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_riedit">
            <xs:annotation>
              <xs:documentation>Permission to edit RI transactions &amp; agreements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_riview">
            <xs:annotation>
              <xs:documentation>Permission to view RI transactions &amp; agreements </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rolemanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete roles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_roleview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of roles and role details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ruleadmin">
            <xs:annotation>
              <xs:documentation>Permission to run Guidewire Studio or import rules</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_scrprmmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete script parameters</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_scrprmview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of script parameters or details of an individual script parameter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_seczonemanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, and delete security zones</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sendemail">
            <xs:annotation>
              <xs:documentation>Permission to send Email</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_skipmessage">
            <xs:annotation>
              <xs:documentation>Permission to skip the failed message</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_soapadmin">
            <xs:annotation>
              <xs:documentation>Permission to use the SOAP APIs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsBatchProcessedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the BatchProcess Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsBatchProcessview">
            <xs:annotation>
              <xs:documentation>Permission to access the BatchProcess Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsCacheinfoview">
            <xs:annotation>
              <xs:documentation>Permission to view the CacheInfo Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsClusteredit">
            <xs:annotation>
              <xs:documentation>Permission to edit the Cluster Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsClusterview">
            <xs:annotation>
              <xs:documentation>Permission to access the Cluster Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsInfoview">
            <xs:annotation>
              <xs:documentation>Permission to access the Info Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsJMXBeansEdit">
            <xs:annotation>
              <xs:documentation>Permission to edit the ManagementBeans presented on Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsJMXBeansview">
            <xs:annotation>
              <xs:documentation>Permission to access the ManagementBeans Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsJProfileredit">
            <xs:annotation>
              <xs:documentation>Permission to edit the JProfiler Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsLogedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the Log Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsLogview">
            <xs:annotation>
              <xs:documentation>Permission to access the Log Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsPluginedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the StartablePlugin Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsPluginview">
            <xs:annotation>
              <xs:documentation>Permission to access the StartablePlugin Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsProfileredit">
            <xs:annotation>
              <xs:documentation>Permission to edit the Profiler Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsProfilerview">
            <xs:annotation>
              <xs:documentation>Permission to access the Profiler Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsWorkQueueedit">
            <xs:annotation>
              <xs:documentation>Permission to edit the WorkQueue Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_toolsWorkQueueview">
            <xs:annotation>
              <xs:documentation>Permission to access the WorkQueue Internal Tools page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unsetcovinquestion">
            <xs:annotation>
              <xs:documentation>Permission to allow user to set the coverage in question to no from yes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usercreate">
            <xs:annotation>
              <xs:documentation>Permission to create a new user</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_userdelete">
            <xs:annotation>
              <xs:documentation>Permission to delete a user (Note: if a user has had any activity it's recommended to make them non-active rather than delete)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_useredit">
            <xs:annotation>
              <xs:documentation>Permission to edit an existing user, except for roles, authority limits, or attributes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usereditattrs">
            <xs:annotation>
              <xs:documentation>Permission to edit attributes for a user</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usereditlang">
            <xs:annotation>
              <xs:documentation>Permission to edit language</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usergrantauth">
            <xs:annotation>
              <xs:documentation>Permission to grant or change an authority limit for a user</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_usergrantroles">
            <xs:annotation>
              <xs:documentation>Permission to grant or revoke roles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_userview">
            <xs:annotation>
              <xs:documentation>Permission to view details of a user</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_userviewall">
            <xs:annotation>
              <xs:documentation>Permission to see users in all visible groups</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_verifyFNOL">
            <xs:annotation>
              <xs:documentation>(Obsolete)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewSensMCMdetails">
            <xs:annotation>
              <xs:documentation>Permission to view sensitive Medical Case Management details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewSensSIUdetails">
            <xs:annotation>
              <xs:documentation>Permission to view sensitive SIU details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewactcal">
            <xs:annotation>
              <xs:documentation>Permission to view activity calendar of other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewadmin">
            <xs:annotation>
              <xs:documentation>Permission to view the Admin tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewassociations">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Associations subtab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewclaimbasics">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Loss Details page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewclaimevals">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Evaluations page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewclaimhistory">
            <xs:annotation>
              <xs:documentation>Permission to view audit trail (history) for a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewclaimngtns">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Negotiations page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewclaimnotes">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Notes page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewclaimparties">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Parties Involved page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewclaimsummary">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Summary page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewclaimsync">
            <xs:annotation>
              <xs:documentation>Permission to view claim sync screens</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewdesktop">
            <xs:annotation>
              <xs:documentation>Permission to view the Desktop</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewdocs">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Documents page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewexposures">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Exposures page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewfinsum">
            <xs:annotation>
              <xs:documentation>Permission to view the Financials Summary and Transaction subtabs on a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewmatters">
            <xs:annotation>
              <xs:documentation>Permission to view matters</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewmednote">
            <xs:annotation>
              <xs:documentation>Permission to view a medical note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewpolicy">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Policy page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewpolicysystem">
            <xs:annotation>
              <xs:documentation>Permission to view policy in policy system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewprivnote">
            <xs:annotation>
              <xs:documentation>Permission to view a private note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewrefdata">
            <xs:annotation>
              <xs:documentation>Permission to view administration reference data</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewsearch">
            <xs:annotation>
              <xs:documentation>Permission to view the Search tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewsensdoc">
            <xs:annotation>
              <xs:documentation>Permission to view a sensitive document</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewsensnote">
            <xs:annotation>
              <xs:documentation>Permission to view a sensitive note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewsnapshot">
            <xs:annotation>
              <xs:documentation>Permission to view the FNOL snapshot for a claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewsubrodetails">
            <xs:annotation>
              <xs:documentation>Permission to view Subrogation-related information</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewsupcalendar">
            <xs:annotation>
              <xs:documentation>Permission to view the supervisor calendar screen</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewteam">
            <xs:annotation>
              <xs:documentation>Permission to view the Team tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewvacation">
            <xs:annotation>
              <xs:documentation>Permission to view the Vacation tab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewworkload">
            <xs:annotation>
              <xs:documentation>Permission to view global workload statistics of other users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_viewworkplan">
            <xs:annotation>
              <xs:documentation>Permission to view the claim Workplan page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wcrefmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, and delete values on WC disability rate tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wcrefview">
            <xs:annotation>
              <xs:documentation>Permission to view the values on WC disability rate tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_workflowmanage">
            <xs:annotation>
              <xs:documentation>Permission to view the ManageWorkflow page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_workflowview">
            <xs:annotation>
              <xs:documentation>Permission to view the Workflow page</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wsdatachangeedit">
            <xs:annotation>
              <xs:documentation>Permission to add a data change gosu program.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wwlcmanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete weighted workload classifications</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wwlcview">
            <xs:annotation>
              <xs:documentation>Permission to view weighted workload classifications</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wwlmanage">
            <xs:annotation>
              <xs:documentation>Permission to edit supplemental weight</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wwlview">
            <xs:annotation>
              <xs:documentation>Permission to view classification and supplemental workload weight</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zonemanage">
            <xs:annotation>
              <xs:documentation>Permission to create, edit, or delete admin zones</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zoneview">
            <xs:annotation>
              <xs:documentation>Permission to view the list of admin zones</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RoleType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the role types</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_user">
            <xs:annotation>
              <xs:documentation>Roles associated with Users</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TimeZoneType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Users' timezones</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_US$46$Alaska">
            <xs:annotation>
              <xs:documentation>GMT -09:00</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US$46$Aleutian">
            <xs:annotation>
              <xs:documentation>GMT -10:00</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US$46$Arizona">
            <xs:annotation>
              <xs:documentation>GMT -07:00</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US$46$Central">
            <xs:annotation>
              <xs:documentation>GMT -06:00</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US$46$East$45$Indiana">
            <xs:annotation>
              <xs:documentation>GMT -05:00</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US$46$Eastern">
            <xs:annotation>
              <xs:documentation>GMT -05:00</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US$46$Hawaii">
            <xs:annotation>
              <xs:documentation>GMT -10:00</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US$46$Mountain">
            <xs:annotation>
              <xs:documentation>GMT -07:00</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_US$46$Pacific">
            <xs:annotation>
              <xs:documentation>GMT -08:00</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkflowState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The states a workflow object can be in</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_active">
            <xs:annotation>
              <xs:documentation>Active -- the workflow is running.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_completed">
            <xs:annotation>
              <xs:documentation>Completed -- the workflow reached one of its Outcomes.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_error">
            <xs:annotation>
              <xs:documentation>The workflow encountered an exception while running, so the it has been paused until the error is fixed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_suspended">
            <xs:annotation>
              <xs:documentation>Suspended -- execution of the workflow was manually suspended.  It can be resumed later.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkflowTriggerKey" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>What workflow Triggers are allowed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_EMPTY_TYPELIST">
            <xs:annotation>
              <xs:documentation>This typelist has no defined elements</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimSource" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Information about how Claim was entered into the System</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_autofirstandfinal">
            <xs:annotation>
              <xs:documentation>Claim entered as auto first and final</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ordinary">
            <xs:annotation>
              <xs:documentation>Ordinary Claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimTier" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Claim tier, used to decide which claim metric limits apply to the claim's metrics</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_el">
            <xs:annotation>
              <xs:documentation>A claim with Employer's Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_high">
            <xs:annotation>
              <xs:documentation>High Severity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_incidentreport">
            <xs:annotation>
              <xs:documentation>A reported incident; a claim is not anticipated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_indemnity">
            <xs:annotation>
              <xs:documentation>A claim with an indemnity component; may have medical as well</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_low">
            <xs:annotation>
              <xs:documentation>Low Severity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medicalonly">
            <xs:annotation>
              <xs:documentation>A claim with a medical component with no indemnity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medium">
            <xs:annotation>
              <xs:documentation>Medium Severity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimClosedOutcomeType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The possible outcomes of a claim when it is closed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_completed">
            <xs:annotation>
              <xs:documentation>Completed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_duplicate">
            <xs:annotation>
              <xs:documentation>Duplicate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fraud">
            <xs:annotation>
              <xs:documentation>Fraud</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mistake">
            <xs:annotation>
              <xs:documentation>Mistake</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentscomplete">
            <xs:annotation>
              <xs:documentation>Payments complete</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PriContributingFactors" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>First column of contributing factors array</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Commun">
            <xs:annotation>
              <xs:documentation>Communication</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Defect">
            <xs:annotation>
              <xs:documentation>Defect</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DriverFactors">
            <xs:annotation>
              <xs:documentation>Driver factors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Enviro">
            <xs:annotation>
              <xs:documentation>Environment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EnviroGL">
            <xs:annotation>
              <xs:documentation>Environment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Environment">
            <xs:annotation>
              <xs:documentation>Environmental conditions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HumanInvolve">
            <xs:annotation>
              <xs:documentation>Human involvement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HumanInvolveGL">
            <xs:annotation>
              <xs:documentation>Human involvement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProtectFactors">
            <xs:annotation>
              <xs:documentation>Protection factors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_contacts">
            <xs:annotation>
              <xs:documentation>Contracts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notapplic">
            <xs:annotation>
              <xs:documentation>Not applicable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ResContributingFactors" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Third column of Contributing factors array</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_1to4hours">
            <xs:annotation>
              <xs:documentation>One hour to 4 hours and 59 minutes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_5to9hours">
            <xs:annotation>
              <xs:documentation>Five hours to 9 hours and 59 minutes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Dawn">
            <xs:annotation>
              <xs:documentation>Dawn</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Daylight">
            <xs:annotation>
              <xs:documentation>Daylight</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Delayed">
            <xs:annotation>
              <xs:documentation>Delayed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Dry">
            <xs:annotation>
              <xs:documentation>Dry</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Dusk">
            <xs:annotation>
              <xs:documentation>Dusk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Fog">
            <xs:annotation>
              <xs:documentation>Fog</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Gravel">
            <xs:annotation>
              <xs:documentation>Gravel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GreaseFlameLiq">
            <xs:annotation>
              <xs:documentation>Grease/Flammable Liquid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Hail">
            <xs:annotation>
              <xs:documentation>Hail</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HighWind">
            <xs:annotation>
              <xs:documentation>High Wind/Wind Gust</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Ice">
            <xs:annotation>
              <xs:documentation>Ice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ImproperDucts">
            <xs:annotation>
              <xs:documentation>Improperly Spaced Ducts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Inappropriate">
            <xs:annotation>
              <xs:documentation>Inappropriate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IneffFireWalls">
            <xs:annotation>
              <xs:documentation>Ineffective Fire Walls/Doors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LintDust">
            <xs:annotation>
              <xs:documentation>Lint/Dust</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NightLight">
            <xs:annotation>
              <xs:documentation>Night lighted</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Oil">
            <xs:annotation>
              <xs:documentation>Oil</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OrdinaryComb">
            <xs:annotation>
              <xs:documentation>Ordinary Combustibles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OtherPhs">
            <xs:annotation>
              <xs:documentation>Other Physical Features</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Otherhouse">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Otherstore">
            <xs:annotation>
              <xs:documentation>Other Storage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Othervis">
            <xs:annotation>
              <xs:documentation>Other Visibility</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RDOther">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Racks">
            <xs:annotation>
              <xs:documentation>Racks</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Rain">
            <xs:annotation>
              <xs:documentation>Rain</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SandMudDirt">
            <xs:annotation>
              <xs:documentation>Sand / Mud / Dirt</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Sleet">
            <xs:annotation>
              <xs:documentation>Sleet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Smoke">
            <xs:annotation>
              <xs:documentation>Smoke</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Snow">
            <xs:annotation>
              <xs:documentation>Snow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SnowSlush">
            <xs:annotation>
              <xs:documentation>Snow or Slush</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SolidPiles">
            <xs:annotation>
              <xs:documentation>Solid Piles</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UnprotVertOpen">
            <xs:annotation>
              <xs:documentation>Unprotected Verticle Openings</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Wet">
            <xs:annotation>
              <xs:documentation>Wet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WthOther">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_addinsured">
            <xs:annotation>
              <xs:documentation>Additional Insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bacterial">
            <xs:annotation>
              <xs:documentation>Bacterial</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_blowdebris">
            <xs:annotation>
              <xs:documentation>Blowing debris</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bornchem">
            <xs:annotation>
              <xs:documentation>foodborne chemical toxin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bothinst">
            <xs:annotation>
              <xs:documentation>Both instructions and warnings were ignored</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_curb">
            <xs:annotation>
              <xs:documentation>Curb</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_defectinstr">
            <xs:annotation>
              <xs:documentation>Defective instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_design">
            <xs:annotation>
              <xs:documentation>Design</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_display">
            <xs:annotation>
              <xs:documentation>Display</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_divwbarrier">
            <xs:annotation>
              <xs:documentation>Divided with barrier</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_divwobarrier">
            <xs:annotation>
              <xs:documentation>Divided without barrier</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_elevcha">
            <xs:annotation>
              <xs:documentation>Elevation Change</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_encourage">
            <xs:annotation>
              <xs:documentation>Encouraged misuse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_failnotify">
            <xs:annotation>
              <xs:documentation>Failure to notify of defect/recall/retrofit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_failwarn">
            <xs:annotation>
              <xs:documentation>Failure to warn</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_floor">
            <xs:annotation>
              <xs:documentation>Floor Defect</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_foreign">
            <xs:annotation>
              <xs:documentation>Foreign substance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fourtoseven">
            <xs:annotation>
              <xs:documentation>4-7 days</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fourtyonesixty">
            <xs:annotation>
              <xs:documentation>41 to 60</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_furnfix">
            <xs:annotation>
              <xs:documentation>Furniture / Fixture</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_grmusa">
            <xs:annotation>
              <xs:documentation>Grass / Mud / Sand</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_guardtamp">
            <xs:annotation>
              <xs:documentation>Guarding was tampered with/ removed/bypassed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_holdharmless">
            <xs:annotation>
              <xs:documentation>Hold Harmless/Indemnity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_icesnow">
            <xs:annotation>
              <xs:documentation>Ice/Snow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inadequate">
            <xs:annotation>
              <xs:documentation>Inadequate warnings</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inadguard">
            <xs:annotation>
              <xs:documentation>Inadequate guarding/protection</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inapproplang">
            <xs:annotation>
              <xs:documentation>anguage inappropriate for foreign speaking market</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_incline">
            <xs:annotation>
              <xs:documentation>Incline</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_installation">
            <xs:annotation>
              <xs:documentation>Installation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_insuffinstr">
            <xs:annotation>
              <xs:documentation>Insufficient instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lessoneday">
            <xs:annotation>
              <xs:documentation>less than one day</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lessseven">
            <xs:annotation>
              <xs:documentation>greater than 7 days</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lessthan1">
            <xs:annotation>
              <xs:documentation>Less Than One Hour</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lgtOther">
            <xs:annotation>
              <xs:documentation>Other Light Condition</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_manufacture">
            <xs:annotation>
              <xs:documentation>Manufacture</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_misleading">
            <xs:annotation>
              <xs:documentation>Misleading warnings</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_misleadinstr">
            <xs:annotation>
              <xs:documentation>Misleading instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_misrep">
            <xs:annotation>
              <xs:documentation>Misrepresentation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nghtnolght">
            <xs:annotation>
              <xs:documentation>Night not lighted</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_noinstr">
            <xs:annotation>
              <xs:documentation>No instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notapplic">
            <xs:annotation>
              <xs:documentation>Not Applicable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notphysdiv">
            <xs:annotation>
              <xs:documentation>Not physically divided</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_offramp">
            <xs:annotation>
              <xs:documentation>off ramp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_onetothree">
            <xs:annotation>
              <xs:documentation>1-3 days</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_oneway">
            <xs:annotation>
              <xs:documentation>One way</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_onramp">
            <xs:annotation>
              <xs:documentation>on ramp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_otherdiscov">
            <xs:annotation>
              <xs:documentation>Other Discovery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_otherfood">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_otherhwy">
            <xs:annotation>
              <xs:documentation>Other Highway Type</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_othernon">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_othersub">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_othersurf">
            <xs:annotation>
              <xs:documentation>Other Surface</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_protrud">
            <xs:annotation>
              <xs:documentation>Protruding object</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_repairs">
            <xs:annotation>
              <xs:documentation>Repairs/Maintanence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sixtyoneplus">
            <xs:annotation>
              <xs:documentation>61 or greater</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_solarglare">
            <xs:annotation>
              <xs:documentation>Solar glare</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_spoiled">
            <xs:annotation>
              <xs:documentation>Spoiled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_surdef">
            <xs:annotation>
              <xs:documentation>Surface Defect</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tenhours">
            <xs:annotation>
              <xs:documentation>Ten hours or more</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tentwentyfive">
            <xs:annotation>
              <xs:documentation>10 to 25</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_twentyfivefourty">
            <xs:annotation>
              <xs:documentation>25 to 40</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uncontinter">
            <xs:annotation>
              <xs:documentation>uncontrolled intersection</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unguarded">
            <xs:annotation>
              <xs:documentation>Unguarded</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uservio">
            <xs:annotation>
              <xs:documentation>User violated instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_warnig">
            <xs:annotation>
              <xs:documentation>Warnings were ignored</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_warntrue">
            <xs:annotation>
              <xs:documentation>No instructions or warnings against this use</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_warranty">
            <xs:annotation>
              <xs:documentation>Warranty/Performance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_water">
            <xs:annotation>
              <xs:documentation>Water</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zerotonine">
            <xs:annotation>
              <xs:documentation>0 - 9</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SecContributingFactors" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Second column of Contributing factors array</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_DaysOnDuty">
            <xs:annotation>
              <xs:documentation>Days on duty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Discovery">
            <xs:annotation>
              <xs:documentation>Discovery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Food">
            <xs:annotation>
              <xs:documentation>Food</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HoursOnDuty">
            <xs:annotation>
              <xs:documentation>Hours on duty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Housekeeping">
            <xs:annotation>
              <xs:documentation>Housekeeping</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HwyType">
            <xs:annotation>
              <xs:documentation>Highway type</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Instructions">
            <xs:annotation>
              <xs:documentation>Instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegalOblig">
            <xs:annotation>
              <xs:documentation>Legal obligations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LightCond">
            <xs:annotation>
              <xs:documentation>Light conditions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MarketingSales">
            <xs:annotation>
              <xs:documentation>Marketing/sales</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Milesph">
            <xs:annotation>
              <xs:documentation>MPH over limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NonFood">
            <xs:annotation>
              <xs:documentation>Non-food</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NotApplic">
            <xs:annotation>
              <xs:documentation>Not applicable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ObjectSub">
            <xs:annotation>
              <xs:documentation>Object Substance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PhysFeatures">
            <xs:annotation>
              <xs:documentation>Physical features</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProtectFact">
            <xs:annotation>
              <xs:documentation>Protection factors</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RoadSurface">
            <xs:annotation>
              <xs:documentation>Road surface condition</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Storage">
            <xs:annotation>
              <xs:documentation>Storage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SurfaceArea">
            <xs:annotation>
              <xs:documentation>Surface area</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UseApp">
            <xs:annotation>
              <xs:documentation>Use/application</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Visibility">
            <xs:annotation>
              <xs:documentation>Visibility</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Warnings">
            <xs:annotation>
              <xs:documentation>Warnings</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Weather">
            <xs:annotation>
              <xs:documentation>Weather conditions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FaultRating" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_0">
            <xs:annotation>
              <xs:documentation>Fault unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_1">
            <xs:annotation>
              <xs:documentation>Insured at fault</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_2">
            <xs:annotation>
              <xs:documentation>Insured not at fault</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_3">
            <xs:annotation>
              <xs:documentation>Physical Damage only</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nofault">
            <xs:annotation>
              <xs:documentation>No fault - Insured not at fault</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_thirdparty">
            <xs:annotation>
              <xs:documentation>Insured not at fault</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FlaggedType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of flagged states a claim can be in</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_isflagged">
            <xs:annotation>
              <xs:documentation>Currently flagged</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_neverflagged">
            <xs:annotation>
              <xs:documentation>Never flagged</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wasflagged">
            <xs:annotation>
              <xs:documentation>Previously flagged</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="HowReportedType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>How the claim was reported</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_fax">
            <xs:annotation>
              <xs:documentation>Fax</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_internet">
            <xs:annotation>
              <xs:documentation>Internet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mail">
            <xs:annotation>
              <xs:documentation>Mail</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_phone">
            <xs:annotation>
              <xs:documentation>Phone</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_walkin">
            <xs:annotation>
              <xs:documentation>Walk-in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LOBCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Line of business</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BOPLine">
            <xs:annotation>
              <xs:documentation>BusinessOwners</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BusinessAutoLine">
            <xs:annotation>
              <xs:documentation>Commercial Auto Line</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CPLine">
            <xs:annotation>
              <xs:documentation>Commercial Property</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GLLine">
            <xs:annotation>
              <xs:documentation>General Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HomeownersLine_HOE">
            <xs:annotation>
              <xs:documentation>Homeowners Line</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IMLine">
            <xs:annotation>
              <xs:documentation>Inland Marine Line</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PersonalAutoLine">
            <xs:annotation>
              <xs:documentation>Personal Auto</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PersonalUmbrellaLine_PUE">
            <xs:annotation>
              <xs:documentation>Personal Umbrella Line</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WorkersCompLine">
            <xs:annotation>
              <xs:documentation>Workers' Comp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other_liab">
            <xs:annotation>
              <xs:documentation>Other Liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_travel">
            <xs:annotation>
              <xs:documentation>Travel line</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LargeLossNotificationStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The status of large loss notification messages.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_InQueue">
            <xs:annotation>
              <xs:documentation>Notification message created and waiting to be sent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_None">
            <xs:annotation>
              <xs:documentation>No notification sent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Sent">
            <xs:annotation>
              <xs:documentation>Notification successfully sent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LitigationStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_closed">
            <xs:annotation>
              <xs:documentation>Closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_complete">
            <xs:annotation>
              <xs:documentation>Litigation complete</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_discovery">
            <xs:annotation>
              <xs:documentation>Discovery complete</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_in_appeal">
            <xs:annotation>
              <xs:documentation>In appeal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_judge">
            <xs:annotation>
              <xs:documentation>Venue set, judge selected</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_litigated">
            <xs:annotation>
              <xs:documentation>In litigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_not_litigated">
            <xs:annotation>
              <xs:documentation>Not In litigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pending_appeal">
            <xs:annotation>
              <xs:documentation>Pending appeal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rep">
            <xs:annotation>
              <xs:documentation>Claimant represented by lawyer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_suit_filed">
            <xs:annotation>
              <xs:documentation>Suit filed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_trial_begun">
            <xs:annotation>
              <xs:documentation>Trial begun</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_trial_complete">
            <xs:annotation>
              <xs:documentation>Trial complete</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_verdict_returned">
            <xs:annotation>
              <xs:documentation>Verdict returned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LocationOfTheft" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Location where the property was stolen</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_commercial">
            <xs:annotation>
              <xs:documentation>Commercial</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_offPremises">
            <xs:annotation>
              <xs:documentation>Off Premises</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_residential">
            <xs:annotation>
              <xs:documentation>Residential</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LossCause" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Specific loss subtypes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_FallingObject">
            <xs:annotation>
              <xs:documentation>Falling or moving object</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_abandonment">
            <xs:annotation>
              <xs:documentation>Abandonment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_air_crash">
            <xs:annotation>
              <xs:documentation>Crash of airplane</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_animal">
            <xs:annotation>
              <xs:documentation>Animal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_animal_bite">
            <xs:annotation>
              <xs:documentation>Animal/insect bite/scratch/sting</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_animalcollision">
            <xs:annotation>
              <xs:documentation>Collision with animal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assault">
            <xs:annotation>
              <xs:documentation>Assault or battery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bikecollision">
            <xs:annotation>
              <xs:documentation>Collision with bicycle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_breach">
            <xs:annotation>
              <xs:documentation>Breach of contract</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_broken_glass">
            <xs:annotation>
              <xs:documentation>Broken glass</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_burglary">
            <xs:annotation>
              <xs:documentation>Burglary</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_burn_scald">
            <xs:annotation>
              <xs:documentation>Burn or scald - heat or cold exposures - contact with</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cancellation">
            <xs:annotation>
              <xs:documentation>Cancellation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_caught_in">
            <xs:annotation>
              <xs:documentation>Caught in, under, or between</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_construction">
            <xs:annotation>
              <xs:documentation>Faulty construction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cut">
            <xs:annotation>
              <xs:documentation>Cut, puncture, scrape, injured by</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_death">
            <xs:annotation>
              <xs:documentation>Death</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_delay">
            <xs:annotation>
              <xs:documentation>Delay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_documents">
            <xs:annotation>
              <xs:documentation>Loss of documents like passport, tickets, driver's license</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_earthquake">
            <xs:annotation>
              <xs:documentation>Earthquake</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_electrical_curr">
            <xs:annotation>
              <xs:documentation>Contact with electric current</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_errors">
            <xs:annotation>
              <xs:documentation>Errors and omissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_excess">
            <xs:annotation>
              <xs:documentation>Excess liability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_explosion">
            <xs:annotation>
              <xs:documentation>Explosion</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fall">
            <xs:annotation>
              <xs:documentation>Fall, slip, or trip injury</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fire">
            <xs:annotation>
              <xs:documentation>Fire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_firedamage">
            <xs:annotation>
              <xs:documentation>Fire damage to vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fixedobjcoll">
            <xs:annotation>
              <xs:documentation>Collision with fixed object</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_glassbreakage">
            <xs:annotation>
              <xs:documentation>Glass breakage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hail">
            <xs:annotation>
              <xs:documentation>Hail</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_leftcollision">
            <xs:annotation>
              <xs:documentation>Collision while turning left</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_loadingdamage">
            <xs:annotation>
              <xs:documentation>Damage in loading or unloading</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_med_error">
            <xs:annotation>
              <xs:documentation>Medical error</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_miscellaneous">
            <xs:annotation>
              <xs:documentation>Miscellaneous causes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_missed_departure">
            <xs:annotation>
              <xs:documentation>Missed departure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mold">
            <xs:annotation>
              <xs:documentation>Mold</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_motorvehicle">
            <xs:annotation>
              <xs:documentation>Motor vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_official_duty">
            <xs:annotation>
              <xs:documentation>Mandatory official duty (military, jury etc)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_otherobjcoll">
            <xs:annotation>
              <xs:documentation>Collision with other object</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pedcollision">
            <xs:annotation>
              <xs:documentation>Collision with pedestrian</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_personal_misconduct">
            <xs:annotation>
              <xs:documentation>Personal Misconduct</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_preex_med_condition">
            <xs:annotation>
              <xs:documentation>Pre existing medical condition</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_product">
            <xs:annotation>
              <xs:documentation>Product failure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_professional_sports">
            <xs:annotation>
              <xs:documentation>Professional or Organized Sports</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rail_crash">
            <xs:annotation>
              <xs:documentation>Crash of rail vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rearend">
            <xs:annotation>
              <xs:documentation>Rear-end collision</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_riotandcivil">
            <xs:annotation>
              <xs:documentation>Riot and civil commotion</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rollover">
            <xs:annotation>
              <xs:documentation>Rollover</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rubbed">
            <xs:annotation>
              <xs:documentation>Rubbed or abraded by</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_snowice">
            <xs:annotation>
              <xs:documentation>Snow/ice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_strain">
            <xs:annotation>
              <xs:documentation>Strain or injury by</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_striking">
            <xs:annotation>
              <xs:documentation>Striking against or stepping on</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_struck">
            <xs:annotation>
              <xs:documentation>Struck or injured by</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_structfailure">
            <xs:annotation>
              <xs:documentation>Structural failure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_terrorism_hijack">
            <xs:annotation>
              <xs:documentation>Terrorism or Hijack</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_theftentire">
            <xs:annotation>
              <xs:documentation>Theft of entire vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_theftparts">
            <xs:annotation>
              <xs:documentation>Theft Audio or other parts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_trainbuscoll">
            <xs:annotation>
              <xs:documentation>Collision with train or bus</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vandalism">
            <xs:annotation>
              <xs:documentation>Malicious mischief and vandalism</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vehcollision">
            <xs:annotation>
              <xs:documentation>Collision with motor vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_water_veh_crash">
            <xs:annotation>
              <xs:documentation>Crash of water vehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_waterdamage">
            <xs:annotation>
              <xs:documentation>Water Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wind">
            <xs:annotation>
              <xs:documentation>Wind</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InfoSource" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Medical info source - for use on MedCaseMgr Screen</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CallFromAttorney">
            <xs:annotation>
              <xs:documentation>Call from attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallFromCaseWrkr">
            <xs:annotation>
              <xs:documentation>Call from case worker</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallFromClaimant">
            <xs:annotation>
              <xs:documentation>Call from claimant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallFromDoctor">
            <xs:annotation>
              <xs:documentation>Call from doctor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallFromEmployer">
            <xs:annotation>
              <xs:documentation>Call from Employer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallFromGuardian">
            <xs:annotation>
              <xs:documentation>Call from parent or guardian</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallFromHospital">
            <xs:annotation>
              <xs:documentation>Call from hospital</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallFromOccTherapist">
            <xs:annotation>
              <xs:documentation>Call from occupational Therapist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallFromPhysTherapist">
            <xs:annotation>
              <xs:documentation>Call from physical therapist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallToAttorney">
            <xs:annotation>
              <xs:documentation>Call to attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallToCaseWrkr">
            <xs:annotation>
              <xs:documentation>Call to case worker</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallToClaimant">
            <xs:annotation>
              <xs:documentation>Call to claimant</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallToDoctor">
            <xs:annotation>
              <xs:documentation>Call to doctor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallToEmployer">
            <xs:annotation>
              <xs:documentation>Call to employer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallToGuardian">
            <xs:annotation>
              <xs:documentation>Call to parent or guardian</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallToHospital">
            <xs:annotation>
              <xs:documentation>Call to hospital</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallToOccTherapist">
            <xs:annotation>
              <xs:documentation>Call to occupational therapist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CallToPhysTherapist">
            <xs:annotation>
              <xs:documentation>Call to physical therapist</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HospitalReport">
            <xs:annotation>
              <xs:documentation>Hospital report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MedCertificate">
            <xs:annotation>
              <xs:documentation>Medical certificate</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MedReport">
            <xs:annotation>
              <xs:documentation>Medical report</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Other">
            <xs:annotation>
              <xs:documentation>Contact with party not listed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MedicalTreatmentStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Medical treatment status - for use on MedCaseMgr screen</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ActiveTreatment">
            <xs:annotation>
              <xs:documentation>Active treatment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContinuingTreatment">
            <xs:annotation>
              <xs:documentation>Continuing treatment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FollowUpVisit">
            <xs:annotation>
              <xs:documentation>Follow-up visit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Hospital">
            <xs:annotation>
              <xs:documentation>Hospital</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InitialReview">
            <xs:annotation>
              <xs:documentation>Initial review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LabXray">
            <xs:annotation>
              <xs:documentation>Laboratory or X-ray</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MedicalExam">
            <xs:annotation>
              <xs:documentation>Medical exam</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Other">
            <xs:annotation>
              <xs:documentation>Other Treatment not listed here</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PendingSurgery">
            <xs:annotation>
              <xs:documentation>Pending surgery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PhysicalTherapy">
            <xs:annotation>
              <xs:documentation>Physical therapy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PostSurgeryRecovery">
            <xs:annotation>
              <xs:documentation>Post surgical recovery period</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Released">
            <xs:annotation>
              <xs:documentation>Released</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RestMedication">
            <xs:annotation>
              <xs:documentation>Rest and medication</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SpecialistReferral">
            <xs:annotation>
              <xs:documentation>Specialist referral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SpecialistTest">
            <xs:annotation>
              <xs:documentation>Specialist Test such as MRI or CAT Scan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Surgery">
            <xs:annotation>
              <xs:documentation>Surgery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TreatmentOutcome" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Medical Treatment Outcome - for use on MedCaseMgr screen</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AW$45$RT">
            <xs:annotation>
              <xs:documentation>At work, but receiving treatment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RTW$45$FT$45$MD">
            <xs:annotation>
              <xs:documentation>Return-to-work full-time modified duties</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RTW$45$FT$45$PIO">
            <xs:annotation>
              <xs:documentation>Return-to-work full-time pre-injury ccupation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RTW$45$PT$45$MD">
            <xs:annotation>
              <xs:documentation>Return-to-work part-time modified duties</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RTW$45$PT$45$PIO">
            <xs:annotation>
              <xs:documentation>Return-to-work part-time pre-injury occupation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UnfitForWork">
            <xs:annotation>
              <xs:documentation>Still unfit for work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApprovedTreatment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Medical treatment outcome - for use on MedCaseMgr screen</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CATscan">
            <xs:annotation>
              <xs:documentation>CAT scan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Chiro">
            <xs:annotation>
              <xs:documentation>Chiropractor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Drug">
            <xs:annotation>
              <xs:documentation>Drug prescription</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_HealthClub">
            <xs:annotation>
              <xs:documentation>Health club membership</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LabXrayPath">
            <xs:annotation>
              <xs:documentation>Lab, x-ray or path work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MRI">
            <xs:annotation>
              <xs:documentation>MRI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Massage">
            <xs:annotation>
              <xs:documentation>Massage therapy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PT">
            <xs:annotation>
              <xs:documentation>Physical therapy</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SpecialistRef">
            <xs:annotation>
              <xs:documentation>Specialist referral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Surgery">
            <xs:annotation>
              <xs:documentation>Surgery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OfficialType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of official: police, fire, and so on</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ambulance">
            <xs:annotation>
              <xs:documentation>Ambulance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_civilagen">
            <xs:annotation>
              <xs:documentation>Civil agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_coroner">
            <xs:annotation>
              <xs:documentation>Coroner</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_depttrans">
            <xs:annotation>
              <xs:documentation>Dept. of Transportation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fema">
            <xs:annotation>
              <xs:documentation>FEMA</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fire">
            <xs:annotation>
              <xs:documentation>Fire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_healthdept">
            <xs:annotation>
              <xs:documentation>Health department</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_police">
            <xs:annotation>
              <xs:documentation>Police</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_regagency">
            <xs:annotation>
              <xs:documentation>Regulatory agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_security">
            <xs:annotation>
              <xs:documentation>Security officer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_seriff">
            <xs:annotation>
              <xs:documentation>Sheriff</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_trooper">
            <xs:annotation>
              <xs:documentation>State trooper</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_utilservprov">
            <xs:annotation>
              <xs:documentation>Utility service provider</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OtherRecoverableStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_closed">
            <xs:annotation>
              <xs:documentation>Salvage is closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_in_review">
            <xs:annotation>
              <xs:documentation>Salvage is in review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_open">
            <xs:annotation>
              <xs:documentation>Salvage is open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimSecurityType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Permissions to restrict access to claims</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_employeeclaim">
            <xs:annotation>
              <xs:documentation>Permission to see a claim involving an employee</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fraudriskclaim">
            <xs:annotation>
              <xs:documentation>Permission to see a claim with a high fraud risk</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sensitiveclaim">
            <xs:annotation>
              <xs:documentation>Permission to see a sensitive claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_underlitclaim">
            <xs:annotation>
              <xs:documentation>Permission to see a claim that is currently under litigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unsecuredclaim">
            <xs:annotation>
              <xs:documentation>Permission to view claims with no additional security specified</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WaterSource" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Source of water</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plumbing_appliances">
            <xs:annotation>
              <xs:documentation>Plumbing Or Appliances</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_roof">
            <xs:annotation>
              <xs:documentation>Roof</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReinsuranceFlaggedStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_SystemFlagged">
            <xs:annotation>
              <xs:documentation>Reinsurance reportable set by the system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SystemUnflagged">
            <xs:annotation>
              <xs:documentation>Reinsurance reportable set by the system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UserFlagged">
            <xs:annotation>
              <xs:documentation>Reinsurance reportable set by the user</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UserUnflagged">
            <xs:annotation>
              <xs:documentation>Reinsurance reportable unset by the user</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimReopenedReason" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The possible reasons for a claim to be reopened</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_mistake">
            <xs:annotation>
              <xs:documentation>Mistake</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_newinfo">
            <xs:annotation>
              <xs:documentation>New information</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paymentdenied">
            <xs:annotation>
              <xs:documentation>Final Payment causing this claim to close has been denied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="QuestionFormat" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>How the question should be rendered in PCF</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BooleanCheckbox">
            <xs:annotation>
              <xs:documentation>A boolean yes/no checkbox.  Default for Boolean questions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BooleanSelect">
            <xs:annotation>
              <xs:documentation>A boolean combo box.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChoiceRadio">
            <xs:annotation>
              <xs:documentation>A radio button of choices. An option for Choice questions with 2-3 choices</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ChoiceSelect">
            <xs:annotation>
              <xs:documentation>A combo box of choices.  Default for Choice questions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DateField">
            <xs:annotation>
              <xs:documentation>A Date picker.  Default for Date questions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IntegerField">
            <xs:annotation>
              <xs:documentation>A simple integer field.  Default for Integer questions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StringField">
            <xs:annotation>
              <xs:documentation>A simple 1-line text field.  Default for String questions.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StringTextArea">
            <xs:annotation>
              <xs:documentation>A simple multiline text field.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="QuestionSetType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A kind of question set</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_newclaim">
            <xs:annotation>
              <xs:documentation>New Claim Wizard Questionaire</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_siucar">
            <xs:annotation>
              <xs:documentation>Auto SIU questions - applicable for auto claims</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_siugen">
            <xs:annotation>
              <xs:documentation>General SIU questions - applicable to all.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_siuwork">
            <xs:annotation>
              <xs:documentation>Workers comp SIU questions - applicable for workers compensation claims.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_spmreview">
            <xs:annotation>
              <xs:documentation>Review for Service Provider Management</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="QuestionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A kind of question</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Boolean">
            <xs:annotation>
              <xs:documentation>A question whose answer is Yes or No</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Choice">
            <xs:annotation>
              <xs:documentation>A multiple-choice question whose answer is an entry in the QuestionChoice table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Date">
            <xs:annotation>
              <xs:documentation>A question whose answer is a Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Integer">
            <xs:annotation>
              <xs:documentation>A question whose answer is an Integer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_String">
            <xs:annotation>
              <xs:documentation>A question whose answer is a String</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimLifeCycleState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Provides a way to store a state value for extended lifecycle processing; for example, for SIU processing over time</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_step1">
            <xs:annotation>
              <xs:documentation>First step in the lifecycle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_step2">
            <xs:annotation>
              <xs:documentation>Second step in the lifecycle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_step3">
            <xs:annotation>
              <xs:documentation>Third step in the lifecycle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SIUStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Investigation_Closed">
            <xs:annotation>
              <xs:documentation>SIU closed investigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_No_Referral">
            <xs:annotation>
              <xs:documentation>No SIU referral</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Under_Investigation">
            <xs:annotation>
              <xs:documentation>Under investigation with SIU</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SalvageStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_closed">
            <xs:annotation>
              <xs:documentation>Salvage is closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_in_review">
            <xs:annotation>
              <xs:documentation>Salvage is in review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_open">
            <xs:annotation>
              <xs:documentation>Salvage is open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestStatement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ServiceRequestStatement</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ServiceRequestInvoice">
            <xs:annotation>
              <xs:documentation>ServiceRequestInvoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ServiceRequestQuote">
            <xs:annotation>
              <xs:documentation>ServiceRequestQuote</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ServiceRequestStatement">
            <xs:annotation>
              <xs:documentation>ServiceRequestStatement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestInvoiceStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Status of a service invoice</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approved">
            <xs:annotation>
              <xs:documentation>Invoice has been approved but not yet paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_checkcreated">
            <xs:annotation>
              <xs:documentation>Check was created and associated with the invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rejected">
            <xs:annotation>
              <xs:documentation>Invoice was rejected</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_waitingforapproval">
            <xs:annotation>
              <xs:documentation>Invoice received, waiting for approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_withdrawn">
            <xs:annotation>
              <xs:documentation>Invoice was withdrawn</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestInstructionService" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ServiceRequestInstructionService</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ServiceRequestInstructionService">
            <xs:annotation>
              <xs:documentation>ServiceRequestInstructionService</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestKind" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Kind of service</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_quoteandservice">
            <xs:annotation>
              <xs:documentation>Request Type for a Service that manages a quote, service performed, and invoices received.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_quoteonly">
            <xs:annotation>
              <xs:documentation>Request Type for a Service that manages only a quote.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_serviceonly">
            <xs:annotation>
              <xs:documentation>Request Type for a Service that manages the service performed and invoices received.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unmanaged">
            <xs:annotation>
              <xs:documentation>Request Type for a Service that manages only the invoices received.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestProgress" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Progress of a service</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_canceled">
            <xs:annotation>
              <xs:documentation>The service request has been canceled</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_declined">
            <xs:annotation>
              <xs:documentation>The vendor has declined to accept the service request</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_draft">
            <xs:annotation>
              <xs:documentation>The service is still being edited and has not yet been sent to the vendor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_expired">
            <xs:annotation>
              <xs:documentation>The service has expired</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inprogress">
            <xs:annotation>
              <xs:documentation>The vendor is authorized to perform the work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_requested">
            <xs:annotation>
              <xs:documentation>Service request has been sent to the selected vendor, and has been acknowledged</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_specialistwaiting">
            <xs:annotation>
              <xs:documentation>Vendor is blocked</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_workcomplete">
            <xs:annotation>
              <xs:documentation>The work has been completed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestQuoteStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Status of a service quote</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approved">
            <xs:annotation>
              <xs:documentation>Quote has been approved </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_noquote">
            <xs:annotation>
              <xs:documentation>Service does not have a quote</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_quoted">
            <xs:annotation>
              <xs:documentation>Quote has been received</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_waitingforapproval">
            <xs:annotation>
              <xs:documentation>Quote received and waiting for approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_waitingforquote">
            <xs:annotation>
              <xs:documentation>Service is waiting to be quoted</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestOperation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>State transitions for all kinds of service requests.   An operation is executed by calling serviceRequest.performOperation(OPERATION, context, commitInNewBundle) or invoice.performOperation(OPERATION, context, commitInNewBundle).  Each operation (as defined in the StateHandler classes) holds information about when it should be available, the Progress and QuoteStatus states to move to after the operation, a display name, and an optional action to take.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_addinvoice">
            <xs:annotation>
              <xs:documentation>Add Invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_addquote">
            <xs:annotation>
              <xs:documentation>Add Quote</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_approveinvoice">
            <xs:annotation>
              <xs:documentation>Approve Invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_approvequote">
            <xs:annotation>
              <xs:documentation>Approve Quote</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cancelservicerequest">
            <xs:annotation>
              <xs:documentation>Cancel Service</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payinvoice">
            <xs:annotation>
              <xs:documentation>Pay Invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rejectinvoice">
            <xs:annotation>
              <xs:documentation>Reject Invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_requestrequote">
            <xs:annotation>
              <xs:documentation>Request Requote</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_specialistacceptedwork">
            <xs:annotation>
              <xs:documentation>Vendor Accepted Work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_specialistcanceled">
            <xs:annotation>
              <xs:documentation>Vendor Canceled Service</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_specialistcompletedwork">
            <xs:annotation>
              <xs:documentation>Vendor Completed Work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_specialistdeclined">
            <xs:annotation>
              <xs:documentation>Vendor Declined</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_specialistresumedwork">
            <xs:annotation>
              <xs:documentation>Vendor Resumed Work</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_specialistwaiting">
            <xs:annotation>
              <xs:documentation>Vendor Waiting</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_submitinstruction">
            <xs:annotation>
              <xs:documentation>Submit Instruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unpayinvoice">
            <xs:annotation>
              <xs:documentation>Unpay Invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_updatequoteecd">
            <xs:annotation>
              <xs:documentation>Update Quote ECD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_updateserviceecd">
            <xs:annotation>
              <xs:documentation>Update Service ECD</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_withdrawinvoice">
            <xs:annotation>
              <xs:documentation>Withdraw Invoice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestMessageType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of the service message</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_info">
            <xs:annotation>
              <xs:documentation>Message that is informational</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_question">
            <xs:annotation>
              <xs:documentation>Message that requires a response answer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SpecialistCommMethod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A channel through which specialists can communicate with the carrier</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_fax">
            <xs:annotation>
              <xs:documentation>Fax</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_gwportal">
            <xs:annotation>
              <xs:documentation>Guidewire Portal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_otherportal">
            <xs:annotation>
              <xs:documentation>Third-party Portal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_phone">
            <xs:annotation>
              <xs:documentation>Phone</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestTier" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>ServiceRequestTier</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_high">
            <xs:annotation>
              <xs:documentation>High</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_low">
            <xs:annotation>
              <xs:documentation>Low</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medium">
            <xs:annotation>
              <xs:documentation>Medium</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StorageCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Storage category</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_health_acc">
            <xs:annotation>
              <xs:documentation>Health &amp; accident</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prop_cas">
            <xs:annotation>
              <xs:documentation>Property/casualty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tpa">
            <xs:annotation>
              <xs:documentation>Third-party administrator</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_work_comp">
            <xs:annotation>
              <xs:documentation>Workers' Compensation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StorageType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Storage type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_destroyed">
            <xs:annotation>
              <xs:documentation>Destroyed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inhouse">
            <xs:annotation>
              <xs:documentation>In house</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_storage">
            <xs:annotation>
              <xs:documentation>Storage facility</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SubrogationStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_closed">
            <xs:annotation>
              <xs:documentation>Closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_open">
            <xs:annotation>
              <xs:documentation>Pursuing recovery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_review">
            <xs:annotation>
              <xs:documentation>Evaluation recovery opportunity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StatuteLimitationsType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_City">
            <xs:annotation>
              <xs:documentation>City statute</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_damage">
            <xs:annotation>
              <xs:documentation>Damage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_federal">
            <xs:annotation>
              <xs:documentation>Federal statute</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medical">
            <xs:annotation>
              <xs:documentation>Medical</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_state">
            <xs:annotation>
              <xs:documentation>State statute</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SubroClassification" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_insured">
            <xs:annotation>
              <xs:documentation>Insured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uninsured">
            <xs:annotation>
              <xs:documentation>Uninsured</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SubroSchedRecoveryType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of scheduled but yet to be paid Recovery</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_arbsettlement">
            <xs:annotation>
              <xs:documentation>Arbitration Settlement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_promissory">
            <xs:annotation>
              <xs:documentation>Promissory Note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SubroStrategy" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_arbitrate">
            <xs:annotation>
              <xs:documentation>Arbitration</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_collection">
            <xs:annotation>
              <xs:documentation>Collection Agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_drop">
            <xs:annotation>
              <xs:documentation>Drop Pursuit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lawsuit">
            <xs:annotation>
              <xs:documentation>Lawsuit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_negotiate">
            <xs:annotation>
              <xs:documentation>Negotiate against Insurer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pursue">
            <xs:annotation>
              <xs:documentation>Pursue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pursueins">
            <xs:annotation>
              <xs:documentation>Pursue against Insurer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SubroGovernmentInvolved" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Used to track if governental entities are Subro Adverse Targets</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_gov">
            <xs:annotation>
              <xs:documentation>Applicable to Governental entities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nongov">
            <xs:annotation>
              <xs:documentation>Not applicable to governental entities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SubroClosedOutcome" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SubroCloseOutcome</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_compromised">
            <xs:annotation>
              <xs:documentation>Compromised</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_discontinued">
            <xs:annotation>
              <xs:documentation>Discontinued</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_full">
            <xs:annotation>
              <xs:documentation>Full Recovery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uncollectable">
            <xs:annotation>
              <xs:documentation>Uncollectable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimTextType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Text fields on claim, stored in the ClaimText array</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_BenefitsDecisionReason">
            <xs:annotation>
              <xs:documentation>Explanation of benefits decision</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ISOErrorMessage">
            <xs:annotation>
              <xs:documentation>Error message if most recent ISO ClaimSearch request failed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InjuryDescription">
            <xs:annotation>
              <xs:documentation>Description of injury for workers' comp claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MMInote">
            <xs:annotation>
              <xs:documentation>Maximum medical improvement notes for workers' comp claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MedicalDiagnosis">
            <xs:annotation>
              <xs:documentation>Medical Diagnosis for workers' comp claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ObjFindings">
            <xs:annotation>
              <xs:documentation>Objective description of condition for workers' comp claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PreexDisbltyInfo">
            <xs:annotation>
              <xs:documentation>Description of preexisting disability for workers' comp claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReinsuranceReason">
            <xs:annotation>
              <xs:documentation>Description of reason for marking or unmarking a claim for reinsurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SIEscalateSIUNote">
            <xs:annotation>
              <xs:documentation>Description of reason for decision on SIU escalation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StorageNotes">
            <xs:annotation>
              <xs:documentation>Claim storage notes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SubjComplaints">
            <xs:annotation>
              <xs:documentation>Subjective description of complaint for workers' comp claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TreatmentRend">
            <xs:annotation>
              <xs:documentation>Description of treatment rendered for workers' comp claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WeatherType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CL">
            <xs:annotation>
              <xs:documentation>Clear</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FG">
            <xs:annotation>
              <xs:documentation>Fog</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IC">
            <xs:annotation>
              <xs:documentation>Ice</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RA">
            <xs:annotation>
              <xs:documentation>Rain</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SN">
            <xs:annotation>
              <xs:documentation>Snow</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WI">
            <xs:annotation>
              <xs:documentation>Wind</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReviewServiceType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Service types list for Service Provider Management Reviews; generally, this will be extended by customers</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_body">
            <xs:annotation>
              <xs:documentation>Body</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_brakes">
            <xs:annotation>
              <xs:documentation>Brakes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_drivetrain">
            <xs:annotation>
              <xs:documentation>Transmission and Engine</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Indicates that no more specific service type is applicable.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_paint">
            <xs:annotation>
              <xs:documentation>Paint</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_suspension">
            <xs:annotation>
              <xs:documentation>Suspension</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactRel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of relationships a contact can have with another contact</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_collectionagency">
            <xs:annotation>
              <xs:documentation>Collection Agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_employer">
            <xs:annotation>
              <xs:documentation>Employer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_guardian">
            <xs:annotation>
              <xs:documentation>Parent of a child or Guardian of a ward.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_primarycontact">
            <xs:annotation>
              <xs:documentation>Primary contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_thirdpartyinsurer">
            <xs:annotation>
              <xs:documentation>Third-Party Insurer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactTagType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of contact tags</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_claimparty">
            <xs:annotation>
              <xs:documentation>Claim Party</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_client">
            <xs:annotation>
              <xs:documentation>Client</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vendor">
            <xs:annotation>
              <xs:documentation>Vendor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TaxStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The status of a vendor's tax ID</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_confirmed">
            <xs:annotation>
              <xs:documentation>Known and verified</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unconfirmed">
            <xs:annotation>
              <xs:documentation>Known, but not yet verified</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unknown">
            <xs:annotation>
              <xs:documentation>Unknown</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VendorType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_autoglass">
            <xs:annotation>
              <xs:documentation>Auto glass shop</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_autorental">
            <xs:annotation>
              <xs:documentation>Auto rental service</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_autorepair">
            <xs:annotation>
              <xs:documentation>Auto repair shop</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_bldingcontractor">
            <xs:annotation>
              <xs:documentation>Building contractor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_defenseatt">
            <xs:annotation>
              <xs:documentation>Defense attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_doctor">
            <xs:annotation>
              <xs:documentation>Doctor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_externaladjuster">
            <xs:annotation>
              <xs:documentation>External adjuster</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fireinspector">
            <xs:annotation>
              <xs:documentation>Fire inspector</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_government">
            <xs:annotation>
              <xs:documentation>Government authority</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hospital">
            <xs:annotation>
              <xs:documentation>Hospital</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_indautoinspector">
            <xs:annotation>
              <xs:documentation>Independent auto inspector</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_indpropinspector">
            <xs:annotation>
              <xs:documentation>Independent property inspector</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_insuranceagent">
            <xs:annotation>
              <xs:documentation>Insurance agent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nurse">
            <xs:annotation>
              <xs:documentation>Nurse - for medical management and rehab</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_plaintiffatt">
            <xs:annotation>
              <xs:documentation>Plaintiff attorney</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_towingservice">
            <xs:annotation>
              <xs:documentation>Towing service</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DependentType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of dependent - spouse, child etc.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_childunder18">
            <xs:annotation>
              <xs:documentation>Child under 18</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fulltimestudent">
            <xs:annotation>
              <xs:documentation>Full-time student</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_spouse">
            <xs:annotation>
              <xs:documentation>Spouse</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="EssentialServiceType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_insidehome">
            <xs:annotation>
              <xs:documentation>Inside home</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_outsidehome">
            <xs:annotation>
              <xs:documentation>Outside home</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_transportation">
            <xs:annotation>
              <xs:documentation>Transportation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DeductionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of deductions listed on a check</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_child_support">
            <xs:annotation>
              <xs:documentation>Child support</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dependent">
            <xs:annotation>
              <xs:documentation>Dependent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_health_insurer">
            <xs:annotation>
              <xs:documentation>Health benefits insurer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_irs">
            <xs:annotation>
              <xs:documentation>Backup withholding for the IRS</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lawyer">
            <xs:annotation>
              <xs:documentation>Lawyer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other_lien">
            <xs:annotation>
              <xs:documentation>Other lien</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retirement_plan">
            <xs:annotation>
              <xs:documentation>Retirement plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_union_dues">
            <xs:annotation>
              <xs:documentation>Union dues</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DeliveryMethod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_hold">
            <xs:annotation>
              <xs:documentation>Hold for adjuster</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_no_check_needed">
            <xs:annotation>
              <xs:documentation>No check needed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_send">
            <xs:annotation>
              <xs:documentation>Send</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TransactionSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity TransactionSet</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CheckSet">
            <xs:annotation>
              <xs:documentation>CheckSet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RecoveryReserveSet">
            <xs:annotation>
              <xs:documentation>RecoveryReserveSet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RecoverySet">
            <xs:annotation>
              <xs:documentation>RecoverySet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReserveSet">
            <xs:annotation>
              <xs:documentation>ReserveSet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TransactionSet">
            <xs:annotation>
              <xs:documentation>TransactionSet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Transaction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity Transaction</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Payment">
            <xs:annotation>
              <xs:documentation>Payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Recovery">
            <xs:annotation>
              <xs:documentation>Recovery</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RecoveryReserve">
            <xs:annotation>
              <xs:documentation>RecoveryReserve</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Reserve">
            <xs:annotation>
              <xs:documentation>Reserve</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Transaction">
            <xs:annotation>
              <xs:documentation>Transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of payment</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_final">
            <xs:annotation>
              <xs:documentation>Final</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_partial">
            <xs:annotation>
              <xs:documentation>Partial</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_supplement">
            <xs:annotation>
              <xs:documentation>Supplement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CostCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>User-defined categories for costs in financial transactions</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_addnl_living_expenses">
            <xs:annotation>
              <xs:documentation>Additional Living Expenses</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_autoglass">
            <xs:annotation>
              <xs:documentation>Glass</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_autoparts">
            <xs:annotation>
              <xs:documentation>Auto parts</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_baggage">
            <xs:annotation>
              <xs:documentation>Baggage loss or delay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_body">
            <xs:annotation>
              <xs:documentation>Auto body repair</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_burial">
            <xs:annotation>
              <xs:documentation>Burial expenses</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_casemgmt">
            <xs:annotation>
              <xs:documentation>Case management</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_contents">
            <xs:annotation>
              <xs:documentation>Contents</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_death">
            <xs:annotation>
              <xs:documentation>Death benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ems">
            <xs:annotation>
              <xs:documentation>Emergency Management Services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_indemnity">
            <xs:annotation>
              <xs:documentation>Indemnity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inspection">
            <xs:annotation>
              <xs:documentation>Vehicle inspection</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_labor">
            <xs:annotation>
              <xs:documentation>Labor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_legal">
            <xs:annotation>
              <xs:documentation>Legal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lifetime">
            <xs:annotation>
              <xs:documentation>Lifetime benefits</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lostwages">
            <xs:annotation>
              <xs:documentation>Lost wages</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medical">
            <xs:annotation>
              <xs:documentation>Medical care</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_mileage">
            <xs:annotation>
              <xs:documentation>Mileage reimbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ppd">
            <xs:annotation>
              <xs:documentation>Permanent partial disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_property_inspection">
            <xs:annotation>
              <xs:documentation>Property Inspection</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_property_repair">
            <xs:annotation>
              <xs:documentation>Property Repair </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ptd">
            <xs:annotation>
              <xs:documentation>Permanent total disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reimbursement">
            <xs:annotation>
              <xs:documentation>Reimbursement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rental">
            <xs:annotation>
              <xs:documentation>Rental</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_salvage">
            <xs:annotation>
              <xs:documentation>Salvage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_settlement">
            <xs:annotation>
              <xs:documentation>Settlement </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_supplemental">
            <xs:annotation>
              <xs:documentation>Supplemental earnings</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_towing">
            <xs:annotation>
              <xs:documentation>Towing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tpd">
            <xs:annotation>
              <xs:documentation>Temporary partial disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_trip_cancel_delay">
            <xs:annotation>
              <xs:documentation>Trip cancellation or delay</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ttd">
            <xs:annotation>
              <xs:documentation>Temporary total disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unspecified">
            <xs:annotation>
              <xs:documentation>Unspecified Cost Category</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vocational">
            <xs:annotation>
              <xs:documentation>Vocational</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wcmileage">
            <xs:annotation>
              <xs:documentation>Mileage reimbursement-WC</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RecoveryCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_credit_exp">
            <xs:annotation>
              <xs:documentation>Credit to expense</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_credit_loss">
            <xs:annotation>
              <xs:documentation>Credit to loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_deductible">
            <xs:annotation>
              <xs:documentation>Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_salvage">
            <xs:annotation>
              <xs:documentation>Salvage</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subro">
            <xs:annotation>
              <xs:documentation>Subrogation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TransactionStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The status of a transaction, from draft through approval to submission</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_awaitingsubmission">
            <xs:annotation>
              <xs:documentation>Awaiting for the send date to arrive, at which point the status will change to Submitting (applicable only to payments)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cleared">
            <xs:annotation>
              <xs:documentation>Check has cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_denied">
            <xs:annotation>
              <xs:documentation>Denied by the downstream system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_draft">
            <xs:annotation>
              <xs:documentation>Draft; not yet submitted to a back-end accounting system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_issued">
            <xs:annotation>
              <xs:documentation>Check has been issued</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notifying">
            <xs:annotation>
              <xs:documentation>In the process of notifying the accounting system of a new manual check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingapproval">
            <xs:annotation>
              <xs:documentation>Pending approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingrecode">
            <xs:annotation>
              <xs:documentation>Transaction that is pending recode</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingstop">
            <xs:annotation>
              <xs:documentation>A stop payment request is pending (applicable only to payments)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingtransfer">
            <xs:annotation>
              <xs:documentation>Transaction that is pending transfer from one claim to another claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingvoid">
            <xs:annotation>
              <xs:documentation>A void transaction request is pending (applicable only to payments and recoveries)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recoded">
            <xs:annotation>
              <xs:documentation>Transaction that is recoded</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rejected">
            <xs:annotation>
              <xs:documentation>Rejected by the user assigned to approve the transaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_requested">
            <xs:annotation>
              <xs:documentation>Requested of the accounting system (applicable only to checks)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_requesting">
            <xs:annotation>
              <xs:documentation>In the process of being requested from the accounting system (applicable only to checks)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stopped">
            <xs:annotation>
              <xs:documentation>A stop payment has been issued for this payment's check (applicable only to payments)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_submitted">
            <xs:annotation>
              <xs:documentation>Submitted to the accounting system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_submitting">
            <xs:annotation>
              <xs:documentation>In the process of being submitted to the accounting system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_transferred">
            <xs:annotation>
              <xs:documentation>Transaction that is transferred from one claim to another claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_voided">
            <xs:annotation>
              <xs:documentation>The transaction is voided (applicable only to payments and recoveries)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ApprovalStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The approval status of an approvable entity</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approved">
            <xs:annotation>
              <xs:documentation>The entity has been approved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rejected">
            <xs:annotation>
              <xs:documentation>The entity has been rejected</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unapproved">
            <xs:annotation>
              <xs:documentation>Pending approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PaymentMethod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Method in which a payment will be made.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_check">
            <xs:annotation>
              <xs:documentation>Check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_eft">
            <xs:annotation>
              <xs:documentation>Electronic funds transfer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_manual">
            <xs:annotation>
              <xs:documentation>Manual check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReportabilityType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_notreportable">
            <xs:annotation>
              <xs:documentation>Not reportable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reportable">
            <xs:annotation>
              <xs:documentation>Reportable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BulkInvoiceItemStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Possible statuses for BulkInvoiceItem entities</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approved">
            <xs:annotation>
              <xs:documentation>Bulk invoice item has passed the bulk invoice approval process</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_awaitingsubmission">
            <xs:annotation>
              <xs:documentation>Bulk invoice item and its check have passed approval and is ready to be escalated once the bulk invoice is ready to be escalated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_checkpendingapproval">
            <xs:annotation>
              <xs:documentation>Bulk invoice item has passed the bulk invoice approval process and is waiting for its check to be approved</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_draft">
            <xs:annotation>
              <xs:documentation>Bulk invoice item is possibly committed to the database, but is not yet ready for validation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inreview">
            <xs:annotation>
              <xs:documentation>Bulk invoice item requires action before it can be paid.  This value can be set when approving a bulk invoice.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_notvalid">
            <xs:annotation>
              <xs:documentation>Payment/check associated with the bulk invoice item failed validation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingstop">
            <xs:annotation>
              <xs:documentation>Bulk invoice item was stopped, and confirmation of stop is pending</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingtransfer">
            <xs:annotation>
              <xs:documentation>Check associated with bulk invoice item was transferred, and acknowledgement of the transfer event message is pending</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingvoid">
            <xs:annotation>
              <xs:documentation>Bulk invoice item was voided, and confirmation of void is pending</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rejected">
            <xs:annotation>
              <xs:documentation>Bulk invoice item was rejected by the bulk invoice approver</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stopped">
            <xs:annotation>
              <xs:documentation>Bulk invoice item was stopped</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_submitted">
            <xs:annotation>
              <xs:documentation>Bulk invoice item was submitted to the downstream system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_submitting">
            <xs:annotation>
              <xs:documentation>Bulk invoice item is being submitted to downsteam system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_transferred">
            <xs:annotation>
              <xs:documentation>Check associated with bulk invoice item was transferred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_voided">
            <xs:annotation>
              <xs:documentation>Bulk invoice item was voided</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BulkInvoiceStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Possible statuses for BulkInvoice entities</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_awaitingsubmission">
            <xs:annotation>
              <xs:documentation>Awaiting submission to the downstream system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cleared">
            <xs:annotation>
              <xs:documentation>Bulk invoice's associated bulk check has been cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_draft">
            <xs:annotation>
              <xs:documentation>Bulk invoice is possibly committed to DB, but not yet ready for validation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inreview">
            <xs:annotation>
              <xs:documentation>Bulk invoice is under review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_invaliditems">
            <xs:annotation>
              <xs:documentation>One or more approved items on the bulk invoice failed validation or had some problem with the associated check</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_issued">
            <xs:annotation>
              <xs:documentation>Bulk invoice's associated bulk check has been issued</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_onhold">
            <xs:annotation>
              <xs:documentation>Bulk invoice was put on hold by downstream system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingitemvalidation">
            <xs:annotation>
              <xs:documentation>Individual bulk invoice items are being validated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingstop">
            <xs:annotation>
              <xs:documentation>Bulk invoice was stopped, and confirmation of stop is pending</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendingvoid">
            <xs:annotation>
              <xs:documentation>Bulk invoice was voided, and confirmation of void is pending</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rejected">
            <xs:annotation>
              <xs:documentation>Bulk invoice rejected by assigned approver</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_requested">
            <xs:annotation>
              <xs:documentation>Sent to downstream system and acknowledged</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_requesting">
            <xs:annotation>
              <xs:documentation>Queued for submission to the downstream system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stopped">
            <xs:annotation>
              <xs:documentation>Bulk invoice was stopped</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_voided">
            <xs:annotation>
              <xs:documentation>Bulk invoice was voided</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BIValidationAlertType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of validation failures for a Bulk Invoice.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_itemwitharchivedclaim">
            <xs:annotation>
              <xs:documentation>One of the Bulk Invoice Items has been configured with an archived claim. The claim must be retrieved before it can be used.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unspecified">
            <xs:annotation>
              <xs:documentation>Unspecified</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CustomHistoryType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Custom history event types, used to add customer-defined events to a claim's history</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_DataChange">
            <xs:annotation>
              <xs:documentation>Data change</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Export">
            <xs:annotation>
              <xs:documentation>Integration: New claim exported to mainframe</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_a_n_f_r">
            <xs:annotation>
              <xs:documentation>Claim exception: Fault rating not set on auto claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_catastrophe">
            <xs:annotation>
              <xs:documentation>Change to catastrophe values</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_create_recovery_bill">
            <xs:annotation>
              <xs:documentation>Create recovery bill</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_e_w_n_r">
            <xs:annotation>
              <xs:documentation>Claim exception: No reserve set for exposure</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_email">
            <xs:annotation>
              <xs:documentation>Email sent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ArchiveState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>state of the data in archive process</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_archived">
            <xs:annotation>
              <xs:documentation>Graph has been archived</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_retrieving">
            <xs:annotation>
              <xs:documentation>Graph is marked for retrieving</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Standard states for a claim, such as open or closed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_archived">
            <xs:annotation>
              <xs:documentation>Archived</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_closed">
            <xs:annotation>
              <xs:documentation>Closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_draft">
            <xs:annotation>
              <xs:documentation>Draft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_open">
            <xs:annotation>
              <xs:documentation>Open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimAccessType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_edit">
            <xs:annotation>
              <xs:documentation>Edit permissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_view">
            <xs:annotation>
              <xs:documentation>View permissions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AssignmentCommand" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="GW_ASSIGN_ISSUE_OWNER"/>
          <xs:enumeration value="GW_ASSIGN_MANUALLY"/>
          <xs:enumeration value="GW_ASSIGN_NOT_FOUND"/>
          <xs:enumeration value="GW_ASSIGN_PRIOR_INVOLVEMENT"/>
          <xs:enumeration value="GW_ASSIGN_ROUND_ROBIN_USER"/>
          <xs:enumeration value="GW_ASSIGN_ROUND_ROBIN_WITHIN_GROUPS"/>
          <xs:enumeration value="GW_ASSIGN_USE_DEFAULT"/>
          <xs:enumeration value="GW_ASSIGN_VERBATIM"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicySummaryRiskUnit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity PolicySummaryRiskUnit</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_PolicySummaryProperty">
            <xs:annotation>
              <xs:documentation>PolicySummaryProperty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicySummaryRiskUnit">
            <xs:annotation>
              <xs:documentation>PolicySummaryRiskUnit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicySummaryVehicle">
            <xs:annotation>
              <xs:documentation>PolicySummaryVehicle</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TransactionSetApprovalType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the TransactionSet approval type for the approval request.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="GW_INVALID">
            <xs:annotation>
              <xs:documentation>Indicates that the TransactionSet failed validation.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GW_VALID_APPROVED">
            <xs:annotation>
              <xs:documentation>Indicates that the TransactionSet was approved.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GW_VALID_UNAPPROVED">
            <xs:annotation>
              <xs:documentation>Indicates that the TransactionSet was not approved.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FinancialsCalculationType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of pre-defined financials calculations.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_availablereserves">
            <xs:annotation>
              <xs:documentation>Financials calculation for available reserves.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_futurepayments">
            <xs:annotation>
              <xs:documentation>Financials calculation for future payments.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_grosstotalincurred">
            <xs:annotation>
              <xs:documentation>Financials calculation for gross total incurred.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_openrecoveryreserves">
            <xs:annotation>
              <xs:documentation>Financials calculation for open recover reserves.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_openreserves">
            <xs:annotation>
              <xs:documentation>Financials calculation for open reserves.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendapperodpaymnts">
            <xs:annotation>
              <xs:documentation>Financials calculation for pending approval eroding payments.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendappnonerodpaymnts">
            <xs:annotation>
              <xs:documentation>Financials calculation for pending approval noneroding payments.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendapppayments">
            <xs:annotation>
              <xs:documentation>Financials calculation for pending approval payments.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_pendappreserves">
            <xs:annotation>
              <xs:documentation>Financials calculation for pending approval reserves.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_remainingreserves">
            <xs:annotation>
              <xs:documentation>Financials calculation for remaining reserves.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_totalincurrednet">
            <xs:annotation>
              <xs:documentation>Financials calculation for total incurred net.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_totalpayments">
            <xs:annotation>
              <xs:documentation>Financials calculation for total payments.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_totalrecoveries">
            <xs:annotation>
              <xs:documentation>Financials calculation for total recoveries.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_totalrecoveryreserves">
            <xs:annotation>
              <xs:documentation>Financials calculation for total recovery reserves.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_totalreserves">
            <xs:annotation>
              <xs:documentation>Financials calculation for total reserves.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_totincnetminopnrecres">
            <xs:annotation>
              <xs:documentation>Financials calculation for total incurred net minus open recovery reserves.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_totpaymntwithpending">
            <xs:annotation>
              <xs:documentation>Financials calculation for total payments with pending.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_totreswithpending">
            <xs:annotation>
              <xs:documentation>Financials calculation for total reserves with pending</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SpecialHandling" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity SpecialHandling</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AccountSpecialHandling">
            <xs:annotation>
              <xs:documentation>AccountSpecialHandling</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CustomerServiceTierSpecialHandling">
            <xs:annotation>
              <xs:documentation>CustomerServiceTierSpecialHandling</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SpecialHandling">
            <xs:annotation>
              <xs:documentation>SpecialHandling</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AutomatedHandler" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity AutomatedHandler</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AutomatedActivityHandler">
            <xs:annotation>
              <xs:documentation>AutomatedActivityHandler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AutomatedHandler">
            <xs:annotation>
              <xs:documentation>AutomatedHandler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AutomatedNotificationHandler">
            <xs:annotation>
              <xs:documentation>AutomatedNotificationHandler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClaimIndicatorAutomatedActivityHandler">
            <xs:annotation>
              <xs:documentation>ClaimIndicatorAutomatedActivityHandler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClaimIndicatorAutomatedNotificationHandler">
            <xs:annotation>
              <xs:documentation>ClaimIndicatorAutomatedNotificationHandler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FinancialAutomatedActivityHandler">
            <xs:annotation>
              <xs:documentation>FinancialAutomatedActivityHandler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FinancialAutomatedNotificationHandler">
            <xs:annotation>
              <xs:documentation>FinancialAutomatedNotificationHandler</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FinancialThreshold" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of financial thresholds for which special handling can be triggered</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_NetTotalIncurred">
            <xs:annotation>
              <xs:documentation>Net Total Incurred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NetTotalPaid">
            <xs:annotation>
              <xs:documentation>Net Total Paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TotalPaid">
            <xs:annotation>
              <xs:documentation>Total Paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="FinancialTriggerCause" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of occurences that can trigger a financial threshold event</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_reached">
            <xs:annotation>
              <xs:documentation>Amount has reached or exceeded threshold</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimIndicator" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ClaimIndicator">
            <xs:annotation>
              <xs:documentation>ClaimIndicator</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CoverageInQuestionClaimIndicator">
            <xs:annotation>
              <xs:documentation>Coverage in Question</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FatalityClaimIndicator">
            <xs:annotation>
              <xs:documentation>Fatalities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FlagClaimIndicator">
            <xs:annotation>
              <xs:documentation>Flag Details</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LargeLossClaimIndicator">
            <xs:annotation>
              <xs:documentation>Large Loss</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LitigationClaimIndicator">
            <xs:annotation>
              <xs:documentation>Litigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SIUClaimIndicator">
            <xs:annotation>
              <xs:documentation>SIU</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="NotificationType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Special Handling Notification Type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_contactrole">
            <xs:annotation>
              <xs:documentation>Notify a contact based on his/her role</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_email">
            <xs:annotation>
              <xs:documentation>Notify a single email recipient</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_multi_email">
            <xs:annotation>
              <xs:documentation>Notify multiple email recipients</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ActivityCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approval">
            <xs:annotation>
              <xs:documentation>Approval</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_approvaldenied">
            <xs:annotation>
              <xs:documentation>Approval denied</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_assignmentreview">
            <xs:annotation>
              <xs:documentation>Assignment review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_correspondence">
            <xs:annotation>
              <xs:documentation>Correspondence</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_filereview">
            <xs:annotation>
              <xs:documentation>File Review</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fnol">
            <xs:annotation>
              <xs:documentation>FNOL</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_handlinginstructions">
            <xs:annotation>
              <xs:documentation>Handling Instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_interview">
            <xs:annotation>
              <xs:documentation>Interview</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_investigation">
            <xs:annotation>
              <xs:documentation>Investigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_iso">
            <xs:annotation>
              <xs:documentation>ISO</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_litigation">
            <xs:annotation>
              <xs:documentation>Litigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_newmail">
            <xs:annotation>
              <xs:documentation>New mail</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reminder">
            <xs:annotation>
              <xs:documentation>Reminder</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_request">
            <xs:annotation>
              <xs:documentation>Request</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_response">
            <xs:annotation>
              <xs:documentation>Response</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_servicerequestnotification">
            <xs:annotation>
              <xs:documentation>Service Notification</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tool">
            <xs:annotation>
              <xs:documentation>Tool</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_warning">
            <xs:annotation>
              <xs:documentation>Warning</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="HolidayTagCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The holiday tag code</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CompanyHolidays">
            <xs:annotation>
              <xs:documentation>Company Holidays</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FederalHolidays">
            <xs:annotation>
              <xs:documentation>Federal Holidays</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IncludeDaysType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Which days to include in the day count</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_businessdays">
            <xs:annotation>
              <xs:documentation>The number of business days since the starting point; does not include weekends and holidays</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_elapsed">
            <xs:annotation>
              <xs:documentation>The number of calendar days elapsed since the starting point; includes all weekends and holidays</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="StartPointType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The different fields on an activity or claim that could be used as the starting point for another date field</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_activitycreation">
            <xs:annotation>
              <xs:documentation>Creation date of the activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimnotice">
            <xs:annotation>
              <xs:documentation>Notice date on the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lossdate">
            <xs:annotation>
              <xs:documentation>Loss date on the claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_startdate">
            <xs:annotation>
              <xs:documentation>Start date on activity</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="OtherInstruction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity OtherInstruction</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_OtherInstruction">
            <xs:annotation>
              <xs:documentation>OtherInstruction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InstructionCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>InstructionCategory</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_assignment">
            <xs:annotation>
              <xs:documentation>Instructions related to assignment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_denial">
            <xs:annotation>
              <xs:documentation>Instructions related to claim denials</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_litigation">
            <xs:annotation>
              <xs:documentation>Instructions related to litigation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_newclaim">
            <xs:annotation>
              <xs:documentation>Instructions related to new claims </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_settlement">
            <xs:annotation>
              <xs:documentation>Instructions related to claims settlement</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sla">
            <xs:annotation>
              <xs:documentation>Service Level agreements for this account</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="InstructionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>InstructionType</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_authorization">
            <xs:annotation>
              <xs:documentation>Authorization</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_instructionsforsetup">
            <xs:annotation>
              <xs:documentation>New claim setup instructions </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_internal">
            <xs:annotation>
              <xs:documentation>Assignment instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lawfirms">
            <xs:annotation>
              <xs:documentation>Law Firms instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Other new claim instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_timeclose">
            <xs:annotation>
              <xs:documentation>Time to close</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_timefirstpayment">
            <xs:annotation>
              <xs:documentation>Time for first payment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_vendors">
            <xs:annotation>
              <xs:documentation>Vendors instructions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AggLimitCalcCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>AggLimitCalcCriteria defines the choices for limiting which costtypes and/or cost categories count towards aggregate limits.  Configured via aggregatelimitused-config.xml</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_all">
            <xs:annotation>
              <xs:documentation>All incurred costs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_costTypesExcludingExpenses">
            <xs:annotation>
              <xs:documentation>All incurred costs except expenses</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_costTypesExcludingLegalExpenses">
            <xs:annotation>
              <xs:documentation>All incurred costs except legal expenses</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="PolicyPeriodType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Policy grouping types</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_account">
            <xs:annotation>
              <xs:documentation>Policy grouping by account.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policy">
            <xs:annotation>
              <xs:documentation>Policy grouping by policy snapshot.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AggregateLimitType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Aggregate limit types</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_lossdate">
            <xs:annotation>
              <xs:documentation>Annual limit by loss date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_none">
            <xs:annotation>
              <xs:documentation>Annual limit without restrictions</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reporteddate">
            <xs:annotation>
              <xs:documentation>Annual limit by reported date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AggregateType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Aggregate types: limit, or deductible</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_deductible">
            <xs:annotation>
              <xs:documentation>Annual Aggregate Deductible</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_limit">
            <xs:annotation>
              <xs:documentation>Annual Aggregate Limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AllEscalatedActivitiesClaimMetric">
            <xs:annotation>
              <xs:documentation>Number of Escalated Activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClaimMetric">
            <xs:annotation>
              <xs:documentation>ClaimMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DaysInitialContactWithInsuredClaimMetric">
            <xs:annotation>
              <xs:documentation>Initial Contact with Insured (Days)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DaysLastViewedByAdjusterClaimMetric">
            <xs:annotation>
              <xs:documentation>Days Since Last View - Adjuster</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DaysLastViewedBySupervisorClaimMetric">
            <xs:annotation>
              <xs:documentation>Days Since Last View - Supervisor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DaysOpenClaimMetric">
            <xs:annotation>
              <xs:documentation>Days Open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DecimalClaimMetric">
            <xs:annotation>
              <xs:documentation>DecimalClaimMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IntegerClaimMetric">
            <xs:annotation>
              <xs:documentation>IntegerClaimMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MoneyClaimMetric">
            <xs:annotation>
              <xs:documentation>MoneyClaimMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NetTotalIncurredClaimMetric">
            <xs:annotation>
              <xs:documentation>Net Total Incurred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OpenEscalatedActivitiesClaimMetric">
            <xs:annotation>
              <xs:documentation>Open Escalated Activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OverdueActivitiesClaimMetric">
            <xs:annotation>
              <xs:documentation>Activities Past Due Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentClaimMetric">
            <xs:annotation>
              <xs:documentation>PercentClaimMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentEscalatedActivitiesClaimMetric">
            <xs:annotation>
              <xs:documentation>% of Escalated Activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentIncurredLossCostsClaimMetric">
            <xs:annotation>
              <xs:documentation>Incurred Loss Costs as % of Net Total Incurred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentPaidLossCostsClaimMetric">
            <xs:annotation>
              <xs:documentation>Paid Loss Costs as % of Total Paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentReserveChangeClaimMetric">
            <xs:annotation>
              <xs:documentation>% Reserve Change from Initial Reserve</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReserveChangeCountClaimMetric">
            <xs:annotation>
              <xs:documentation>Number of Reserve Changes</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TimeBasedClaimMetric">
            <xs:annotation>
              <xs:documentation>TimeBasedClaimMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TimeToFirstPaymentClaimMetric">
            <xs:annotation>
              <xs:documentation>Time to First Loss Payment (Days)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TotalPaidClaimMetric">
            <xs:annotation>
              <xs:documentation>Total Paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimMetricCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Category of the metric on a claim</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ClaimActivityMetrics">
            <xs:annotation>
              <xs:documentation>Claim Activity Metrics</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClaimFinancialsMetrics">
            <xs:annotation>
              <xs:documentation>Claim Financials Metrics</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OverallClaimMetrics">
            <xs:annotation>
              <xs:documentation>Overall Claim Metrics</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="GroupType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of groups</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_attorneys">
            <xs:annotation>
              <xs:documentation>Defense attorneys</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_auto_inspectors">
            <xs:annotation>
              <xs:documentation>Auto damage appraisers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_autocomplex">
            <xs:annotation>
              <xs:documentation>Complex auto team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_autofasttrack">
            <xs:annotation>
              <xs:documentation>Fast track auto team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_autonormal">
            <xs:annotation>
              <xs:documentation>Auto team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_cleanup">
            <xs:annotation>
              <xs:documentation>Clean-up services</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_clerical">
            <xs:annotation>
              <xs:documentation>Clerical support</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_drive_in">
            <xs:annotation>
              <xs:documentation>Drive-in centers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hq">
            <xs:annotation>
              <xs:documentation>Corporate headquarters</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_independent">
            <xs:annotation>
              <xs:documentation>Independent adjusters</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_injury_specs">
            <xs:annotation>
              <xs:documentation>Injury liability specialists</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_intake">
            <xs:annotation>
              <xs:documentation>New claim processing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lbltycomplex">
            <xs:annotation>
              <xs:documentation>Complex liability team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lbltyfasttrack">
            <xs:annotation>
              <xs:documentation>Fast track liability team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lbltynormal">
            <xs:annotation>
              <xs:documentation>Liability team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lbltyspecs">
            <xs:annotation>
              <xs:documentation>Specialists for highly complex liability claims</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_litigation">
            <xs:annotation>
              <xs:documentation>Litigation unit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_local">
            <xs:annotation>
              <xs:documentation>Local office</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_medical_mgmt">
            <xs:annotation>
              <xs:documentation>Medical management</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_police">
            <xs:annotation>
              <xs:documentation>Police</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_policy">
            <xs:annotation>
              <xs:documentation>Policy processing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_preferred">
            <xs:annotation>
              <xs:documentation>Preferred repair shops</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prop_inspectors">
            <xs:annotation>
              <xs:documentation>Property damage appraisers</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_propcomplex">
            <xs:annotation>
              <xs:documentation>Complex property team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_propfasttrack">
            <xs:annotation>
              <xs:documentation>Fast track property team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_propnormal">
            <xs:annotation>
              <xs:documentation>Property team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_regional">
            <xs:annotation>
              <xs:documentation>Regional service center</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rehab">
            <xs:annotation>
              <xs:documentation>Rehab/nursing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reinsurance">
            <xs:annotation>
              <xs:documentation>Reinsurance Unit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_root">
            <xs:annotation>
              <xs:documentation>This is the root group of an organization</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_salvage">
            <xs:annotation>
              <xs:documentation>Salvage unit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_siu">
            <xs:annotation>
              <xs:documentation>Special investigative unit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subro">
            <xs:annotation>
              <xs:documentation>Subrogration unit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_systemadmin">
            <xs:annotation>
              <xs:documentation>System administrators</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_travel">
            <xs:annotation>
              <xs:documentation>Travel</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_underwriting">
            <xs:annotation>
              <xs:documentation>Underwriting</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc_lost_time">
            <xs:annotation>
              <xs:documentation>Workers' comp lost time team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc_med_only">
            <xs:annotation>
              <xs:documentation>Workers' comp med only team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc_normal">
            <xs:annotation>
              <xs:documentation>Workers' comp team</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BusinessType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of external organizations</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_agency">
            <xs:annotation>
              <xs:documentation>Agency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_broker">
            <xs:annotation>
              <xs:documentation>Broker</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ZoneType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_city">
            <xs:annotation>
              <xs:documentation>City</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_citykanji">
            <xs:annotation>
              <xs:documentation>CityKanji</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_country">
            <xs:annotation>
              <xs:documentation>Country</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_county">
            <xs:annotation>
              <xs:documentation>County</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fsa">
            <xs:annotation>
              <xs:documentation>FSA</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_postalcode">
            <xs:annotation>
              <xs:documentation>PostalCode</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_postcodearea">
            <xs:annotation>
              <xs:documentation>Post Code Area</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_postcoderegion">
            <xs:annotation>
              <xs:documentation>Post Code Region</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prefecture">
            <xs:annotation>
              <xs:documentation>Prefecture</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_province">
            <xs:annotation>
              <xs:documentation>Province</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_state">
            <xs:annotation>
              <xs:documentation>State</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_unknown">
            <xs:annotation>
              <xs:documentation>Placeholder typecode for fields that should be populated with another ZoneType</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zip">
            <xs:annotation>
              <xs:documentation>Zip code</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CatastropheType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>the type of a given catastrophe</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_internal">
            <xs:annotation>
              <xs:documentation>Internal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_iso">
            <xs:annotation>
              <xs:documentation>ISO</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimAssocType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Type of claim association</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_eventrelated">
            <xs:annotation>
              <xs:documentation>Claims related to one event, including environmental claims</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_general">
            <xs:annotation>
              <xs:documentation>General claim association</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_parentchild">
            <xs:annotation>
              <xs:documentation>Where primary claim is the parent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_priorclaims">
            <xs:annotation>
              <xs:documentation>Prior claims related to the primary claim</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reinsurancerelated">
            <xs:annotation>
              <xs:documentation>Claims related by reinsurance</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ClaimMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ClaimMetricLimit</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ClaimMetricLimit">
            <xs:annotation>
              <xs:documentation>ClaimMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DecimalClaimMetricLimit">
            <xs:annotation>
              <xs:documentation>DecimalClaimMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IntegerClaimMetricLimit">
            <xs:annotation>
              <xs:documentation>IntegerClaimMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MoneyClaimMetricLimit">
            <xs:annotation>
              <xs:documentation>MoneyClaimMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentClaimMetricLimit">
            <xs:annotation>
              <xs:documentation>PercentClaimMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MetricUnit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Units for claim metrics, such as days, currency, percent etc.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_currency">
            <xs:annotation>
              <xs:documentation>Metric is measured in a particular currency</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_days">
            <xs:annotation>
              <xs:documentation>Metric is measured in days</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_hours">
            <xs:annotation>
              <xs:documentation>Metric is measured in hours</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_numeric">
            <xs:annotation>
              <xs:documentation>Metric is a simple number</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_percent">
            <xs:annotation>
              <xs:documentation>Metric is measured in percent</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactMatchResultType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the result of definitive match search.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CLOSE_MATCH">
            <xs:annotation>
              <xs:documentation>At least one contact in the Address Book closely matched a given contact.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IMPLAUSIBLE_MATCH">
            <xs:annotation>
              <xs:documentation>A definitive match was found, but the contact does not match in terms of potential match fields.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_INCOMPATIBLE_TYPE">
            <xs:annotation>
              <xs:documentation>A definitive match was found, but its type is incompatible with the type of the candidate contact. That is, the matched contact could not be cast to the type of the candidate contact.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NO_MATCH">
            <xs:annotation>
              <xs:documentation>No match was found.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PLAUSIBLE_MATCH">
            <xs:annotation>
              <xs:documentation>A definitive match was found that matches a contact in the Address Book in terms of potential match fields.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_POSSIBLE_MATCH">
            <xs:annotation>
              <xs:documentation>One or more contacts in the Address Book possibly matched a given contact.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UnitOfDistance" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Units of distance</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Foot">
            <xs:annotation>
              <xs:documentation>Foot</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Kilometer">
            <xs:annotation>
              <xs:documentation>Kilometer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Meter">
            <xs:annotation>
              <xs:documentation>Meter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Mile">
            <xs:annotation>
              <xs:documentation>International statute mile</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactSearchType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_internal">
            <xs:annotation>
              <xs:documentation>Address Book</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ContactSearchResultType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the result of definitive match search.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_SUCCESS">
            <xs:annotation>
              <xs:documentation>Address book search succeeded</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TOO_LOOSE_SEARCH">
            <xs:annotation>
              <xs:documentation>Search criteria is too loose and executing may require too much of the DB resources. Search not executed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ValidationIssue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ValidationIssue</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_FieldValidation">
            <xs:annotation>
              <xs:documentation>FieldValidation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GeneralValidation">
            <xs:annotation>
              <xs:documentation>GeneralValidation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ValidationIssue">
            <xs:annotation>
              <xs:documentation>ValidationIssue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ValidationIssueType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Validation issues can be errors or warning</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_error">
            <xs:annotation>
              <xs:documentation>A validation error</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_warning">
            <xs:annotation>
              <xs:documentation>A validation warning</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="UpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity UpdateOp</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CreateUpdateOp">
            <xs:annotation>
              <xs:documentation>CreateUpdateOp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DeleteUpdateOp">
            <xs:annotation>
              <xs:documentation>DeleteUpdateOp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FieldChangeUpdateOp">
            <xs:annotation>
              <xs:documentation>FieldChangeUpdateOp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UpdateOp">
            <xs:annotation>
              <xs:documentation>UpdateOp</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DataChangeStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Status of a DataChange.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Completed">
            <xs:annotation>
              <xs:documentation>The gosu was executed and did not throw an exception</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Discarded">
            <xs:annotation>
              <xs:documentation>The gosu was discarded without being run</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Executing">
            <xs:annotation>
              <xs:documentation>The gosu is being executed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Failed">
            <xs:annotation>
              <xs:documentation>The gosu was executed but threw an exception</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Open">
            <xs:annotation>
              <xs:documentation>The gosu was added but not yet run</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DataGenActionType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Action type performed by data-gen</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_advanceDate">
            <xs:annotation>
              <xs:documentation>Advancing all dates field in DB.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_initialize">
            <xs:annotation>
              <xs:documentation>Initialize DB.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_restore">
            <xs:annotation>
              <xs:documentation>Restore DB from pcb.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DataGenStatusType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Data-gen action status.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_failed">
            <xs:annotation>
              <xs:documentation>Action failed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_inProgress">
            <xs:annotation>
              <xs:documentation>Action in progress.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_succeed">
            <xs:annotation>
              <xs:documentation>Action succeeded.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DateFieldsToSearchType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The search options for the date searches in search</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_approved">
            <xs:annotation>
              <xs:documentation>Find by approved date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_closed">
            <xs:annotation>
              <xs:documentation>Find by closed date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_create">
            <xs:annotation>
              <xs:documentation>Find by creation date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_issue">
            <xs:annotation>
              <xs:documentation>Find by issue date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_loss">
            <xs:annotation>
              <xs:documentation>Find by Loss Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_periodend">
            <xs:annotation>
              <xs:documentation>Find by service period end</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_periodstart">
            <xs:annotation>
              <xs:documentation>Find by service period start</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reported">
            <xs:annotation>
              <xs:documentation>Find by reported date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_schedsend">
            <xs:annotation>
              <xs:documentation>The date the check is supposed to go out</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_service">
            <xs:annotation>
              <xs:documentation>Find by service date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_target">
            <xs:annotation>
              <xs:documentation>Find by target date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DateRangeChoiceType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The predetermined list of date ranges we can search for</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_180">
            <xs:annotation>
              <xs:documentation>180 days from today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_30">
            <xs:annotation>
              <xs:documentation>30 days from today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_365">
            <xs:annotation>
              <xs:documentation>365 days from today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_7">
            <xs:annotation>
              <xs:documentation>7 days from today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_90">
            <xs:annotation>
              <xs:documentation>90 days from today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n0">
            <xs:annotation>
              <xs:documentation>Today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n14">
            <xs:annotation>
              <xs:documentation>14 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n180">
            <xs:annotation>
              <xs:documentation>180 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n30">
            <xs:annotation>
              <xs:documentation>30 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n365">
            <xs:annotation>
              <xs:documentation>365 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n7">
            <xs:annotation>
              <xs:documentation>7 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_n90">
            <xs:annotation>
              <xs:documentation>90 days before today</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="DateSearchType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>What kind of date search we are doing</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_enteredrange">
            <xs:annotation>
              <xs:documentation>An entered range</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_fromlist">
            <xs:annotation>
              <xs:documentation>Selected from a list</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SearchObjectType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The type of search</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_activity">
            <xs:annotation>
              <xs:documentation>Activity search</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claim">
            <xs:annotation>
              <xs:documentation>Claim search</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_claimInfo">
            <xs:annotation>
              <xs:documentation>ClaimInfo search</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_note">
            <xs:annotation>
              <xs:documentation>Note Search</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_payment">
            <xs:annotation>
              <xs:documentation>Payment search</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_recovery">
            <xs:annotation>
              <xs:documentation>Recovery search</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExposureMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_DaysInitialContactWithClaimantExposureMetric">
            <xs:annotation>
              <xs:documentation>Initial Contact with Claimant (Days)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DaysOpenExposureMetric">
            <xs:annotation>
              <xs:documentation>Days Open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DecimalExposureMetric">
            <xs:annotation>
              <xs:documentation>DecimalExposureMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ExposureMetric">
            <xs:annotation>
              <xs:documentation>ExposureMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IntegerExposureMetric">
            <xs:annotation>
              <xs:documentation>IntegerExposureMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MoneyExposureMetric">
            <xs:annotation>
              <xs:documentation>MoneyExposureMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NetTotalIncurredExposureMetric">
            <xs:annotation>
              <xs:documentation>Net Total Incurred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentEscalatedActivitiesExposureMetric">
            <xs:annotation>
              <xs:documentation>% of Escalated Activities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentExposureMetric">
            <xs:annotation>
              <xs:documentation>PercentExposureMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentPaidLossCostsExposureMetric">
            <xs:annotation>
              <xs:documentation>Paid Loss Costs as % of Total Paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TimeBasedExposureMetric">
            <xs:annotation>
              <xs:documentation>TimeBasedExposureMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TimeToFirstPaymentExposureMetric">
            <xs:annotation>
              <xs:documentation>Time to First Loss Payment (Days)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TotalPaidExposureMetric">
            <xs:annotation>
              <xs:documentation>Total Paid</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExposureMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ExposureMetricLimit</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_DecimalExposureMetricLimit">
            <xs:annotation>
              <xs:documentation>DecimalExposureMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ExposureMetricLimit">
            <xs:annotation>
              <xs:documentation>ExposureMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IntegerExposureMetricLimit">
            <xs:annotation>
              <xs:documentation>IntegerExposureMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MoneyExposureMetricLimit">
            <xs:annotation>
              <xs:documentation>MoneyExposureMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentExposureMetricLimit">
            <xs:annotation>
              <xs:documentation>PercentExposureMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ServiceRequestMetric</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_DecimalServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>DecimalServiceRequestMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IntegerServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>IntegerServiceRequestMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_InvoiceVarianceVsQuoteServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>Invoice Variance vs. Quote</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MoneyServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>MoneyServiceRequestMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_NumberOfDelaysServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>Number Of Delays</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PercentServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>PercentServiceRequestMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_QuoteTimelinessServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>Quote Timeliness</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ServiceCycleTimeServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>Cycle Time</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>ServiceRequestMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ServiceTimelinessServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>Service Timeliness</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SpecialistInitialResponseTimeServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>Response Time</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TimeBasedServiceRequestMetric">
            <xs:annotation>
              <xs:documentation>TimeBasedServiceRequestMetric</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SearchResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity SearchResult</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ExtContactSrchResult">
            <xs:annotation>
              <xs:documentation>ExtContactSrchResult</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PolicySearchResultSet">
            <xs:annotation>
              <xs:documentation>PolicySearchResultSet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SearchResult">
            <xs:annotation>
              <xs:documentation>SearchResult</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LargeLossNotificationType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Indicates whether notification should go to Policy System or CC</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_CC">
            <xs:annotation>
              <xs:documentation>Claim Center</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PS">
            <xs:annotation>
              <xs:documentation>Policy System</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="MatterStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Litigation status type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Appeal">
            <xs:annotation>
              <xs:documentation>In appeal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Closed">
            <xs:annotation>
              <xs:documentation>Closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Discovery">
            <xs:annotation>
              <xs:documentation>Discovery completed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Filed">
            <xs:annotation>
              <xs:documentation>Lawsuit filed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Judge">
            <xs:annotation>
              <xs:documentation>Judge selected</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_LegalRep">
            <xs:annotation>
              <xs:documentation>Legal representation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PendingAppeal">
            <xs:annotation>
              <xs:documentation>Pending appeal</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TrialBegun">
            <xs:annotation>
              <xs:documentation>Trial begun</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TrialComplete">
            <xs:annotation>
              <xs:documentation>Trial complete</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Verdict">
            <xs:annotation>
              <xs:documentation>Verdict returned</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LoaderCallbackTimeType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of LoaderCallback execution times</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_afterinsertselects">
            <xs:annotation>
              <xs:documentation>After insert/selects into source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_beforeidgeneration">
            <xs:annotation>
              <xs:documentation>Before ID generation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_beforeinsertselects">
            <xs:annotation>
              <xs:documentation>Before insert/selects into source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LoadCommandType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of load commands</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_dbstatsupdated">
            <xs:annotation>
              <xs:documentation>Database statistics updated on staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_errorcleared">
            <xs:annotation>
              <xs:documentation>Error table cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_excludeddeleted">
            <xs:annotation>
              <xs:documentation>Excluded rows deleted from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exclusioncleared">
            <xs:annotation>
              <xs:documentation>Exclusion table cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exclusionpop">
            <xs:annotation>
              <xs:documentation>Exclusion table populated with failed rows from error table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_integritychecked">
            <xs:annotation>
              <xs:documentation>Integrity of staging tables checked</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nonexcludeddeleted">
            <xs:annotation>
              <xs:documentation>Non-excluded rows deleted from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sourceloaded">
            <xs:annotation>
              <xs:documentation>Source tables loaded from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stagingcleared">
            <xs:annotation>
              <xs:documentation>Staging tables cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_tablesencrypted">
            <xs:annotation>
              <xs:documentation>Encrypt data in staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zonesourceloaded">
            <xs:annotation>
              <xs:documentation>Zone Source tables loaded from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LoadErrorType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of load error events</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_abstractdatatype">
            <xs:annotation>
              <xs:documentation>Rows found in staging table with values that violate rules of an abstract data type</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_badassignable">
            <xs:annotation>
              <xs:documentation>Rows found in staging table that violate rules for assignable objects</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_checkconstraint">
            <xs:annotation>
              <xs:documentation>Rows found in staging table that violate a check constraint</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_consistchildren1">
            <xs:annotation>
              <xs:documentation>Consistent children failure found within staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_consistchildren2">
            <xs:annotation>
              <xs:documentation>Consistent children failure found between staging and source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_dtordering">
            <xs:annotation>
              <xs:documentation>Rows found in staging table that violate a date time ordering</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_edgeforeignkey">
            <xs:annotation>
              <xs:documentation>Not exactly one row found in table for non-nullable edge foreign key relationships</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_foreignkey">
            <xs:annotation>
              <xs:documentation>Rows found in table with invalid values for a foreign key column</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_foreignkeynonadmin">
            <xs:annotation>
              <xs:documentation>Rows found in table with foreign key references to existing row in a non-admin table when only existing rows in admin tables can be referenced</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_foreignkeysub">
            <xs:annotation>
              <xs:documentation>Rows found in table with foreign key references to incorrect subtype</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_monetaryamount">
            <xs:annotation>
              <xs:documentation>One or the other of the amount and currency column for a monetary amount contains null when the other does not.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nomatchlvquery">
            <xs:annotation>
              <xs:documentation>Rows found in staging table by query that should return 0 rows</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nonull">
            <xs:annotation>
              <xs:documentation>Rows found in table with null values for one or more non-nullable columns in the source table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nonullsubtype">
            <xs:annotation>
              <xs:documentation>Rows found in table with null values for one or more non-nullable columns for the subtype in the source table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_onetoone">
            <xs:annotation>
              <xs:documentation>Not exactly one row found in table for non-nullable one-to-one relationships</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ppeerror">
            <xs:annotation>
              <xs:documentation>PostPopulateExecutors failures detected after populating source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reftoexistingreffedrow">
            <xs:annotation>
              <xs:documentation>Rows found in table with foreign key references to an existing row in a source table that is already referenced from other existing rows, when such references are not allowed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_reftoexistingrow">
            <xs:annotation>
              <xs:documentation>Rows found in table with foreign key references to an existing row in a source table when such references are not allowed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_requiredmatch">
            <xs:annotation>
              <xs:documentation>Rows found in staging table with required referencing rows in array table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subtype">
            <xs:annotation>
              <xs:documentation>Rows found in table with invalid values for a subtype column</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_subtypespec">
            <xs:annotation>
              <xs:documentation>Rows found in table with non-null values for one or more subtype-specific columns for a different subtype</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_typekey">
            <xs:annotation>
              <xs:documentation>Rows found in table with invalid values for a typekey column</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_typekeyinset">
            <xs:annotation>
              <xs:documentation>Rows found in table include typekey values that are invalid when loading via the staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_typekeynotinset">
            <xs:annotation>
              <xs:documentation>Rows found in table include typekey values that are invalid when loading via the staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uniqconstraint1">
            <xs:annotation>
              <xs:documentation>Rows found in staging table that violate a unique constraint</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_uniqconstraint2">
            <xs:annotation>
              <xs:documentation>Rows found in staging table that match rows in source table on all columns of a unique index</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_zerolengthstring">
            <xs:annotation>
              <xs:documentation>Rows found in table with 0-length strings in varchar columns</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="LoadStepType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of load step events</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_consistencychecked">
            <xs:annotation>
              <xs:documentation>Custom consistency checks executed after populating staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_errorcleared">
            <xs:annotation>
              <xs:documentation>Error table cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_estimatedbstatistics">
            <xs:annotation>
              <xs:documentation>DB statistics updated with estimates for source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_excludeddeleted">
            <xs:annotation>
              <xs:documentation>Excluded rows deleted from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exclusioncleared">
            <xs:annotation>
              <xs:documentation>Exclusion table cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exclusionpop">
            <xs:annotation>
              <xs:documentation>Exclusion table populated with failed rows from error table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_idsgenerated">
            <xs:annotation>
              <xs:documentation>IDs generated for staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_insertselects">
            <xs:annotation>
              <xs:documentation>INSERT SELECTs from staging to source tables executed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_integritychecked">
            <xs:annotation>
              <xs:documentation>Integrity of staging tables checked (Entire phase)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_integrityexecuted">
            <xs:annotation>
              <xs:documentation>Integrity check queries checks executed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lcafterinsertselect">
            <xs:annotation>
              <xs:documentation>LoaderCallbacks executed after insert/selects into source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lcbeforeidgeneration">
            <xs:annotation>
              <xs:documentation>LoaderCallbacks executed before id generation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lcbeforeinsertselect">
            <xs:annotation>
              <xs:documentation>LoaderCallbacks executed before insert/selects into source tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nonexcludeddeleted">
            <xs:annotation>
              <xs:documentation>Non-excluded rows deleted from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_overwrittencleared">
            <xs:annotation>
              <xs:documentation>Overwritten staging tables and columns cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ppesexecuted">
            <xs:annotation>
              <xs:documentation>PostPopulatorExecutors executed after populating staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_rownumsgenerated">
            <xs:annotation>
              <xs:documentation>Row numbers generated for staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_sourceloaded">
            <xs:annotation>
              <xs:documentation>Source tables loaded from staging tables (Entire phase)</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_stagingcleared">
            <xs:annotation>
              <xs:documentation>Staging tables cleared</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SearchContactType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Mirrors the contact subtypes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_company">
            <xs:annotation>
              <xs:documentation>Company</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_person">
            <xs:annotation>
              <xs:documentation>Person</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RITransaction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity RITransaction</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_RICededReserve">
            <xs:annotation>
              <xs:documentation>RICededReserve</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RIRecoverable">
            <xs:annotation>
              <xs:documentation>RIRecoverable</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RITransaction">
            <xs:annotation>
              <xs:documentation>RITransaction</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RITransactionSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity RITransactionSet</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_RITransactionSet">
            <xs:annotation>
              <xs:documentation>RITransactionSet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ReinsuranceTreatyType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_liab">
            <xs:annotation>
              <xs:documentation>Liability Treaty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_prop">
            <xs:annotation>
              <xs:documentation>Property Treaty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_wc">
            <xs:annotation>
              <xs:documentation>Workers' Compensation Treaty</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype typelist for entity ServiceRequestMetricLimit</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ServiceRequestMetricLimit">
            <xs:annotation>
              <xs:documentation>ServiceRequestMetricLimit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ServiceRequestMetricLimitType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Calculation method for a service metric limit</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_absoluteoffset">
            <xs:annotation>
              <xs:documentation>Offsets must be computed before comparison</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_nooffset">
            <xs:annotation>
              <xs:documentation>Standard limit comparison, no computation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_percentageoffset">
            <xs:annotation>
              <xs:documentation>Offsets must be computed before comparison</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WCBenefitFactorType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>WCBenefitFactorType</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_aftertaxearnings">
            <xs:annotation>
              <xs:documentation>Weekly Wage should be EE's spendable/after-tax earnings</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_age">
            <xs:annotation>
              <xs:documentation>Please review state rules if EE has reached age of 70</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_countdayofinjury">
            <xs:annotation>
              <xs:documentation>Day of Injury does count as one day of disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_duration">
            <xs:annotation>
              <xs:documentation>Duration of Disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_lifetime">
            <xs:annotation>
              <xs:documentation>Maximum Period Exception: Lifetime if paraplegic, quadriplegic, or brain damaged</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_maxnumweeks">
            <xs:annotation>
              <xs:documentation>Maximum Period: # of weeks: (which should be in value field</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_offsets_many">
            <xs:annotation>
              <xs:documentation>Social Security, Unemployment Insurance, severance pay and employer funded pension plan</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_offsets_ss_ui">
            <xs:annotation>
              <xs:documentation>Subject to Social Security and Unemployment (UI)  benefit offsets</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_other">
            <xs:annotation>
              <xs:documentation>Used to track misc issues</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_weeksofbenefit">
            <xs:annotation>
              <xs:documentation>Max Weeks of Benefit x % impairment rating</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WCBenefitFactorCategory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>WCBenefitFactorCategory</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_DateRelated">
            <xs:annotation>
              <xs:documentation>How the various dates factor into the calulation.  e.g day of injuy counts as day of disability</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MaxDuration">
            <xs:annotation>
              <xs:documentation>Maximum duration of benefit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Offset">
            <xs:annotation>
              <xs:documentation>Allowable offsets such as SSI</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Other">
            <xs:annotation>
              <xs:documentation>Other</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Override">
            <xs:annotation>
              <xs:documentation>Typical benefit calculation formula is not utilized</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WaitingPeriod">
            <xs:annotation>
              <xs:documentation>Additional information about the waiting period</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WeeklyWage">
            <xs:annotation>
              <xs:documentation>How is weekly wage calculated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WorkerFactor">
            <xs:annotation>
              <xs:documentation>Attributes of the worker such as age</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="JurisdictionalFormula" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Formulas specifying which days to include in calculating the Target Date of a denial period</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_AfterLossAndNotice">
            <xs:annotation>
              <xs:documentation>Greater of x days after Loss Date or y days after Notice Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AfterLossDate">
            <xs:annotation>
              <xs:documentation>x days after Loss Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AfterNoticeDate">
            <xs:annotation>
              <xs:documentation>y days after Notice Date</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExposureState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Standard states for a exposure, such as open or closed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_closed">
            <xs:annotation>
              <xs:documentation>Closed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_draft">
            <xs:annotation>
              <xs:documentation>Draft</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_exception">
            <xs:annotation>
              <xs:documentation>None of the above</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_open">
            <xs:annotation>
              <xs:documentation>Open</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BatchProcessType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Types of batch processes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_ActivityEsc">
            <xs:annotation>
              <xs:documentation>Activity escalation monitor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AggLimitCalc">
            <xs:annotation>
              <xs:documentation>Aggregate limit calculations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_AggLimitLoaderCalc">
            <xs:annotation>
              <xs:documentation>Aggregate limit loader calculations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Archive">
            <xs:annotation>
              <xs:documentation>Archiving item writer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BulkInvoiceEsc">
            <xs:annotation>
              <xs:documentation>Escalate Bulk Invoices from Awaiting-submission status to Requesting status</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BulkInvoiceSubmission">
            <xs:annotation>
              <xs:documentation>Processes bulk invoice items for bulk invoice submission.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BulkInvoiceWF">
            <xs:annotation>
              <xs:documentation>Transitions invoices from PendingInvoiceItemValidation status to 'AwaitingSubmission' or 'InvalidInvoiceItems' status once the invoice is ready</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_BulkPurge">
            <xs:annotation>
              <xs:documentation>Purge records through table updates</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CatastropheClaimFinder">
            <xs:annotation>
              <xs:documentation>Finds possible claims related to a catastrophe and creates a 'Review for Catastrophe' activity on the claim.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_CatastrophePolicyLocationDownload">
            <xs:annotation>
              <xs:documentation>Downloads PolicyLocationSummary data for catastrophes from the policy system</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClaimContactsCalc">
            <xs:annotation>
              <xs:documentation>Claim contacts calculations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClaimException">
            <xs:annotation>
              <xs:documentation>Claim exception monitor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClaimHealthCalc">
            <xs:annotation>
              <xs:documentation>Calculates health indictators and metrics for all claims that do not have any metrics calculated</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ClaimValidation">
            <xs:annotation>
              <xs:documentation>Bulk claim validation work queue writer.  Creates workitems to schedule loaded claims for validation. See IClaimAPI.bulkValidate()</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContactAutoSync">
            <xs:annotation>
              <xs:documentation>Automatically synchronize the local contacts that are out of sync and marked 'allow' auto-sync.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ContactRetire">
            <xs:annotation>
              <xs:documentation>Attempt to retire a Contacts marked as possibly retireable.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DBConsistencyCheck">
            <xs:annotation>
              <xs:documentation>Database consistency checks</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DBStats">
            <xs:annotation>
              <xs:documentation>Database statistics</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DashboardStatistics">
            <xs:annotation>
              <xs:documentation>Statistics for the executive dashboard</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DataDistribution">
            <xs:annotation>
              <xs:documentation>Data distribution for the database</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_DeferredUpgradeTasks">
            <xs:annotation>
              <xs:documentation>Execute database upgrade tasks that were deferred</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_EncryptionUpgrade">
            <xs:annotation>
              <xs:documentation>Upgrades encryption for entity fields</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ExchangeRate">
            <xs:annotation>
              <xs:documentation>Creates a new ExchangeRateSet using ExchangeRateSetPlugin</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FinancialsCalc">
            <xs:annotation>
              <xs:documentation>Financials calculations</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_FinancialsEsc">
            <xs:annotation>
              <xs:documentation>Financials escalation monitor - escalates checks from Awaiting-submission status to Requesting status so that the downstream system will be alerted</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Geocode">
            <xs:annotation>
              <xs:documentation>Geocoding Addresses queue writer.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_GroupException">
            <xs:annotation>
              <xs:documentation>Group exception monitor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IdleClaim">
            <xs:annotation>
              <xs:documentation>Idle claim exception monitor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_IdleClosedClaim">
            <xs:annotation>
              <xs:documentation>Idle closed claim exception monitor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_MSDMVReport">
            <xs:annotation>
              <xs:documentation>Microsoft database DMV performance report generation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_OraAWRReport">
            <xs:annotation>
              <xs:documentation>Oracle database AWR performance report generation</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PhoneNumberNormalizer">
            <xs:annotation>
              <xs:documentation>Performs a normalization of phone numbers contact</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PopulateSearchColumns">
            <xs:annotation>
              <xs:documentation>Populate searchColumn columns from their original sources.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PopulateUserDenormSearchColumn">
            <xs:annotation>
              <xs:documentation>Populates the denormalized search column User.SpatialPointDenorm from Address.SpatialPoint</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProcessCompletionMonitor">
            <xs:annotation>
              <xs:documentation>Invoke plugin on completion of monitored worker queue</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ProcessHistoryPurge">
            <xs:annotation>
              <xs:documentation>Purge batch process history data</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeClusterMembers">
            <xs:annotation>
              <xs:documentation>Purge old ClusterMember entities</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeFailedWorkItems">
            <xs:annotation>
              <xs:documentation>Purge failed work items from all queues.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeMessageHistory">
            <xs:annotation>
              <xs:documentation>Purges old messages from the message history table</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeProfilerData">
            <xs:annotation>
              <xs:documentation>Purge profiler data at regular intervals</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeTransactionIds">
            <xs:annotation>
              <xs:documentation>Purge external transaction id that no longer need to be tracked, by age.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeWorkflowLogs">
            <xs:annotation>
              <xs:documentation>Purge completed workflows logs, this executes gw.processes.PurgeWorkflowLogs.gs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_PurgeWorkflows">
            <xs:annotation>
              <xs:documentation>Purge completed workflows after resetting any referenced workflows, this executes gw.processes.PurgeWorkflow.gs</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RecalculateMetrics">
            <xs:annotation>
              <xs:documentation>Recalculates claim metrics for claims whose metric update time has passed.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_RetiredPolicyGraphDisconnector">
            <xs:annotation>
              <xs:documentation>Disconnects claim graph objects from retired policy objects so that those claims can be archived</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ReviewSync">
            <xs:annotation>
              <xs:documentation>Transmits completed reviews to ContactManager.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STDeleteExcluded">
            <xs:annotation>
              <xs:documentation>Asynchronous deletion of excluded rows from staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STEncrypt">
            <xs:annotation>
              <xs:documentation>Asynchronous encryption of staging table data</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STIntegrityCheck">
            <xs:annotation>
              <xs:documentation>Asynchronous integrity check of staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STLoad">
            <xs:annotation>
              <xs:documentation>Asynchronous integrity check and load of staging tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STPopExcluded">
            <xs:annotation>
              <xs:documentation>Asynchronous population of the exclusion tables</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_STStatistics">
            <xs:annotation>
              <xs:documentation>Asynchronous update of staging table statistics</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_ServiceRequestMetricEscalation">
            <xs:annotation>
              <xs:documentation>Escalates service metrics when they have exceeded an upper limit</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_SolrDataImport">
            <xs:annotation>
              <xs:documentation>Performs a full data import of the app database into the Solr/Lucene index</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_StatReport">
            <xs:annotation>
              <xs:documentation>Stat Report work queue writer</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Statistics">
            <xs:annotation>
              <xs:documentation>Statistics calculator</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_TAccountEsc">
            <xs:annotation>
              <xs:documentation>TAccounts escalation monitor to transition payments and reserves from FutureDated state to Awaiting-submission state</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UserException">
            <xs:annotation>
              <xs:documentation>User exception monitor</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_UserWorkloadUpdate">
            <xs:annotation>
              <xs:documentation>Updates user weighted workload</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WorkItemSetPurge">
            <xs:annotation>
              <xs:documentation>Purge WorkItemSet data</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_WorkQueueInstrumentationPurge">
            <xs:annotation>
              <xs:documentation>Purge instrumentation data for work queues</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Workflow">
            <xs:annotation>
              <xs:documentation>Workflows work queue writer.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="WorkItemSetState" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>State of a WorkItemSet</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="TC_Canceling">
            <xs:annotation>
              <xs:documentation>a WorkItemSet goes into this state when the user requests that we cease further processing. Workers will continue processing current WorkItems, but will not start new ones.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Completed">
            <xs:annotation>
              <xs:documentation>all WorkItems have been processed. Some WorkItems may have been successful and others may have failed</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="TC_Processing">
            <xs:annotation>
              <xs:documentation>the WorkItemSet is being worked on, i.e. there is at least one WorkItem that has not been completed yet</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="SystemRunlevel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the runlevels that the system can be at or set to.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xsd:string">
          <xs:enumeration value="GW_DAEMONS">
            <xs:annotation>
              <xs:documentation>Run level in which the server is running but users will not be able to login
to the server. Background processes, e.g. batch processes, can run in this run level.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GW_MAINTENANCE">
            <xs:annotation>
              <xs:documentation>Run level in which the server is running but users will not be able to login
to the server. Background processes, e.g. batch processes, are not running.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GW_MULTIUSER">
            <xs:annotation>
              <xs:documentation>Run level in which the server is running normally.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="GW_STARTING">
            <xs:annotation>
              <xs:documentation>Server is currently starting</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema targetNamespace="http://entity.webservices.cc.guidewire.com/">
      <xs:import namespace="http://enumeration.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://api.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://fault.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:complexType name="GWObject" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="refType" type="tns3:RefTypeEnum"/>
          <xs:element maxOccurs="1" minOccurs="0" name="PublicID" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CurrencyAmount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents a monetary amount with a currency.
&lt;p/&gt;
CurrencyAmounts can be used in two "modes". "Strict" CurrencyAmounts
require a currency, and further require that their amounts have a scale appropriate for their currency. An attempt
to create a "strict" CurrencyAmount
({@link #getStrict(java.math.BigDecimal, gw.pl.currency.typekey.Currency)} either with a null currency,
or with a value that cannot be set to the currency scale without rounding, will fail.
&lt;p/&gt;
"Non-strict" CurrencyAmounts can have any scale and have an optional currency. This mode exists primarily for
backwards-compatibility. The methods that operate in "non-strict" mode have been deprecated. In Gosu, mathematical
operators (e.g., &lt;tt&gt;+&lt;/tt&gt;) can be used with CurrencyAmounts, and CurrencyAmounts are interchangeable with
{@link java.math.BigDecimal}s. These operations all occur in "non-strict" mode. That is, the results of these
operations should be considered "non-strict" CurrencyAmounts.
&lt;p/&gt;
This class contains many methods that exist on {@link java.math.BigDecimal}, in deprecated form. This is because
in prior versions, CurrencyAmount extended {@link java.math.BigDecimal}. Now, it composes a
{@link java.math.BigDecimal} and a {@link gw.pl.currency.typekey.Currency}.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Amount" nillable="true" type="soapenc:decimal">
            <xs:annotation>
              <xs:documentation>The BigDecimal amount of the CurrencyAmount. This property will not return null.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns3:Currency">
            <xs:annotation>
              <xs:documentation>The Currency typekey of this CurrencyAmount.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LegalVenue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Represents a court as a Place. May specify that a court is of a specific type.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Place">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="VenueType" nillable="true" type="tns3:VenueType">
                <xs:annotation>
                  <xs:documentation>Type of court.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Place" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Represents an place/location that is not directly associated with a business or person.
      This is a primary subtype of Contact.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Contact">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Adjudicator" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Represents a judge or arbitrator as a type of Person. An adjudicator may have a specific adjudicative domain.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Person">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AdjudicativeDomain" nillable="true" type="tns3:AdjudicativeDomain">
                <xs:annotation>
                  <xs:documentation>Adjudicative Domain</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AdjudicatorLicense" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Adjudicator's business license number.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Doctor" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Represents a doctor as a type of PersonVendor. A doctor may have a specific medical specialty.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:PersonVendor">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DoctorSpecialty" nillable="true" type="tns3:SpecialtyType">
                <xs:annotation>
                  <xs:documentation>Doctor's medical specialty</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalLicense" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Doctor's medical license number.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Attorney" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Represents an attorney as a type of PersonVendor. An attorney may have a specific legal specialty.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:PersonVendor">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AttorneyLicense" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Attorney's business license number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AttorneySpecialty" nillable="true" type="tns3:LegalSpecialty">
                <xs:annotation>
                  <xs:documentation>Attorney's specialty</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PersonVendor" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contact type representing vendors that are individual persons.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Person">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UserContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Represents the contact data for a system User as a Person.  One UserContact entity
      will normally exist in the system for each User, and is linked to by a direct foreign key from that User.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Person">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EmployeeNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Employee ID number. Applies to user contacts.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Person" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents a person as a primary subtype of Contact.&lt;p/&gt;
        Person extends Contact with additional information about individuals that is not applicable to companies or
        places.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Contact">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CellPhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Mobile phone number associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CellPhoneCountry" nillable="true" type="tns3:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>Mobile phone country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CellPhoneExtension" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Mobile phone extension.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateOfBirth" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of birth.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First name in kanji (used only for Japanese names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FormerName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Person's former name, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Gender" nillable="true" type="tns3:GenderType">
                <xs:annotation>
                  <xs:documentation>Gender.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Last name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Last name in kanji (used only for Japanese names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LicenseNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Driver's license number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LicenseState" nillable="true" type="tns3:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>Driver's license jurisdiction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MaritalStatus" nillable="true" type="tns3:MaritalStatus">
                <xs:annotation>
                  <xs:documentation>Marital status.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MiddleName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Middle name or initial.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumDependents" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of dependents the employee has.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumDependentsU18" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of dependents under 18.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumDependentsU25" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of dependents over 18 and under 25.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Occupation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Occupation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Particle" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Particle, such as 'de', 'von' (used for French names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Prefix" nillable="true" type="tns3:NamePrefix">
                <xs:annotation>
                  <xs:documentation>Prefix for the person's name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Suffix" nillable="true" type="tns3:NameSuffix">
                <xs:annotation>
                  <xs:documentation>Suffix for the person's name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxFilingStatus" nillable="true" type="tns3:TaxFilingStatusType">
                <xs:annotation>
                  <xs:documentation>State-specific field.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AutoRepairShop" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Represents an automobile repair shop (most typically, an autobody shop) as a CompanyVendor.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:CompanyVendor">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AutoRepairLicense" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Auto repair shop business license number</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AutoTowingAgcy" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Represents an automobile towing service as a CompanyVendor.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:CompanyVendor">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AutoTowingLicense" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Auto towing agency business license number</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MedicalCareOrg" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Represents a medical care organization (hospital, clinic, or similar) as a CompanyVendor.
A MedicalCareOrg may have a specific medical specialty.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:CompanyVendor">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalOrgSpecialty" nillable="true" type="tns3:SpecialtyType">
                <xs:annotation>
                  <xs:documentation>Medical specialty</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LawFirm" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Represents a law firm as a type of CompanyVendor. A law firm may have a specific legal specialty.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:CompanyVendor">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="LawFirmSpecialty" nillable="true" type="tns3:LegalSpecialty">
                <xs:annotation>
                  <xs:documentation>Law firm specialty</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CompanyVendor" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contact type representing vendors that are companies.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Company">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Company" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents an company/business as a primary subtype of Contact.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Contact">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactCategoryScore" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Table linking Contacts to Category Scores</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>Associated Contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReviewCategory" nillable="true" type="tns3:ReviewCategory">
                <xs:annotation>
                  <xs:documentation>Category of this Score.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Score" nillable="true" type="soapenc:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactCategoryScore" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactCategoryScore[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SpatialPoint" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="Latitude" nillable="true" type="soapenc:decimal">
            <xs:annotation>
              <xs:documentation>The latitude</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Longitude" nillable="true" type="soapenc:decimal">
            <xs:annotation>
              <xs:documentation>The longitude</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="WellKnownText" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>the well known text for this geometry object</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Address" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;
      Represents a street or mailing address. Addresses are normally associated with
      a Contact, either as a Primary Address for that Contact or via the ContactAddress table. Addresses can
      have geographic location information stored for proximity searches.&lt;/p&gt;
      @see Contact
      @see ContactAddress
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The system uses this value when it is integrated with ContactManager and the related contact             is linked.  In this case, the ID represents the ID of this &lt;/code&gt;Address&lt;/code&gt; object's associated             &lt;code&gt;ABAddress&lt;/code&gt; in ContactManager. This value is Null if the object is not linked.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First line of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine1Kanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First line of mailing address in kanji (used only for Japanese addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Second line of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine2Kanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Second line of mailing address in kanji (used only for Japanese addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine3" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Third line of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressType" nillable="true" type="tns3:AddressType">
                <xs:annotation>
                  <xs:documentation>Type of this address record.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="BatchGeocode" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to mark an address to be geocoded (if needed) by the batch geocoding work queue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CEDEX" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>CEDEX: Special business mail delivery flag (used only for French addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CEDEXBureau" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>CEDEX: Special business mail delivery bureau (used only for French addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="City" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>City.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CityKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>City in kanji (used only for Japanese addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Country" nillable="true" type="tns3:Country">
                <xs:annotation>
                  <xs:documentation>Country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="County" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>County.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Additional description of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GeocodeStatus" nillable="true" type="tns3:GeocodeStatus">
                <xs:annotation>
                  <xs:documentation>Enum giving the status of the latitude and longitude data.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PostalCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Postal code; string to handle Zip+4 and international codes.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpatialPoint" nillable="true" type="tns2:SpatialPoint">
                <xs:annotation>
                  <xs:documentation>Latitude and longitude of this address, represented as an instance of SpatialPoint.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns3:State">
                <xs:annotation>
                  <xs:documentation>State.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ValidUntil" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Latest date that this address is valid.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactAddress" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Table linking contacts to addresses. Note that Contacts can also be related to Addresses through
      a direct foreign key/relationship to their Primary Address.&lt;p/&gt;
      This is represented as a many-to-many relationship, although addresses created through the UI will always
      belong uniquely to only one contact.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="tns2:Address">
                <xs:annotation>
                  <xs:documentation>Associated address. NOTE: when inserting a ContactAddress this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactAddress" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactAddress[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="EFTData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Electronic funds transfer or EFT refers to the computer-based systems used to perform financial transactions electronically.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name on the account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankAccountNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The bank account number</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankAccountType" nillable="true" type="tns3:BankAccountType">
                <xs:annotation>
                  <xs:documentation>The type of bank accout e.g. checking, savings etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the bank</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankRoutingNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The routing number is a nine digit bank code used in the United States</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>Contact this EFT record relates to</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsPrimary" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if this is the primary EFT record for the contact</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfEFTData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:EFTData[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OfficialID" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Represents the pairing of a given official ID number and a jurisdiction.  Examples of these would
      include the pairing of a state and a drivers license number or state tax ID number.  Multiple OfficialIDs
      can be associated with a given Contact.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns2:Contact"/>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialIDType" nillable="true" type="tns3:OfficialIDType">
                <xs:annotation>
                  <xs:documentation>The type of this official id. NOTE: when inserting a OfficialID this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialIDValue" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>This official id's value, such as a social security number or drivers' license number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns3:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>Jurisdiction.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfOfficialID" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:OfficialID[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReviewCategoryScore" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Table linking Reviews to Category Scores</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Review" nillable="true" type="tns2:Review">
                <xs:annotation>
                  <xs:documentation>Associated Review.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReviewCategory" nillable="true" type="tns3:ReviewCategory">
                <xs:annotation>
                  <xs:documentation>Category of this QuestionSet.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Score" nillable="true" type="soapenc:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfReviewCategoryScore" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ReviewCategoryScore[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Document" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;
        Represents a physical or electronic document. This entity only contains information about the referenced document,
        known as metadata, not the actual document contents. Use &lt;code&gt;IDocumentContentSource&lt;/code&gt; to retrieve and store
        document contents.  Multiple &lt;code&gt;Document&lt;/code&gt; entities may have the same value for the &lt;code&gt;docUID&lt;/code&gt;
        field. This means simply that the &lt;code&gt;Document&lt;/code&gt; entities represent the same physical document, for example,
        a document that applies to multiple claims.
        &lt;/p&gt;&lt;p&gt;
        Note that &lt;code&gt;Document&lt;/code&gt; entities may or may not be stored in the database. You can implement a plugin
        interface, {@link com.guidewire.pl.plugin.document.IDocumentMetadataSource}, to retrieve document metadata from
        an external document management system (DMS). If you do not implement and register this interface, the system stores
        the &lt;code&gt;Document&lt;/code&gt; entities in the database in the normal manner.
        &lt;/p&gt;&lt;p&gt;
        It is important to coordinate customizations of this entity with those of the &lt;code&gt;DocumentSearchCriteria&lt;/code&gt;
        and &lt;code&gt;DocumentSearchResult&lt;/code&gt; entities, so that users will be able to search for documents based on the
        most appropriate fields and select from the results.
        &lt;/p&gt;&lt;p&gt;
        The system retrieves the documents' contents (as referenced by &lt;code&gt;Document&lt;/code&gt; entities) through the
        {@link com.guidewire.pl.plugin.document.IDocumentContentSource} plugin interface. This interface connects a Guidewire
        application to a DMS. The DMS property on the &lt;code&gt;Document&lt;/code&gt; entity indicates whether the contents of the
        document are stored in the document management system; if not, then the entity merely denotes the existence of a
        physical document and no electronic access is available. If the contents do exist in the DMS, then the &lt;code&gt;DocUID&lt;/code&gt;
        property must be a key that uniquely identifies the contents which should be displayed for a particular
        &lt;code&gt;Document&lt;/code&gt; entity.
        &lt;/p&gt;&lt;p&gt;
        You can control access to particular &lt;code&gt;Document&lt;/code&gt; entities through the &lt;code&gt;SecurityType&lt;/code&gt; property.
        Use this property in conjunction with the security settings in &lt;code&gt;security-config.xml&lt;/code&gt;. See the
        Administration Guide for more details.
        &lt;/p&gt;
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Author" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the person who created the document.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Claim" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Associated claim. NOTE: value is the PublicId of the Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimContact" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Associated claim contact. Note that only one of Exposure, Matter, and ClaimContact may be set. NOTE: value is the PublicId of the ClaimContact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DMS" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this document has content stored in a Document Management System.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateCreated" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date and time the document was created.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateModified" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date and time the document was last modified.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the document.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Unique Identifier (UID) for this document.     The format of this UID is specific to the deployed Document Management System (DMS), and is passed to the configured IDocumentContentSource implementation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocumentIdentifier" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short human-readable identifier for the document, often used as an extra storage location for form codes, when name and documenttype are inadequate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposure" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Associated exposure. Note that only one of Exposure, Matter, and ClaimContact may be set. NOTE: value is the PublicId of the Exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Inbound" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the document is an inbound, outbound, or stationary (null) document</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Language" nillable="true" type="tns3:LanguageType">
                <xs:annotation>
                  <xs:documentation>The language in which this document is created.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Matter" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Associated matter. Note that only one of Exposure, Matter, and ClaimContact may be set. NOTE: value is the PublicId of the Matter.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MimeType" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The MIME type of this document; for example, application/msword for a Microsoft Word document.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Human-readable name of the document.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Obsolete" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, the information in the document can no longer be relied upon to be up-to-date and relevant. This is often used instead of deletion to preserve history.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PendingDocUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The document is pending, and it's pending storage has Unique Identifier (UID).     The format of this UID is specific to the IDCS implementation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Recipient" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the intended recipient of the document (if any).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Section" nillable="true" type="tns3:DocumentSection">
                <xs:annotation>
                  <xs:documentation>The section to which this document belongs, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SecurityType" nillable="true" type="tns3:DocumentSecurityType">
                <xs:annotation>
                  <xs:documentation>Type of document used for access-restriction purposes, in conjunction with the information in security-config.xml.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns3:DocumentStatusType">
                <xs:annotation>
                  <xs:documentation>The current status of the document, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns3:DocumentType">
                <xs:annotation>
                  <xs:documentation>The specific type of the document, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ActivityDocument" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;Joins an activity to one or more documents.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Document" nillable="true" type="tns2:Document">
                <xs:annotation>
                  <xs:documentation>A document linked to a parent activity. NOTE: when inserting a ActivityDocument this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfActivityDocument" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ActivityDocument[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="VehicleOwner" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Links a lienholder to a vehicle.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Lienholder" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>The related lienholder. NOTE: when inserting a VehicleOwner this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OwnerType" nillable="true" type="tns3:OwnerType">
                <xs:annotation>
                  <xs:documentation>Whether the lienholder is a partial owner or the sole owner.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfVehicleOwner" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:VehicleOwner[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Vehicle" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
A vehicle (car, boat, etc.) on a policy.  Describes the vehicle's physical
characteristics (make, model, VIN etc.) and relates the vehicle to its coverages.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BoatType" nillable="true" type="tns3:BoatType">
                <xs:annotation>
                  <xs:documentation>Type of boat; only applies if vehicle style is boat.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Color" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Color of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LicensePlate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>License plate of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Lienholders" nillable="true" type="tns2:ArrayOfVehicleOwner">
                <xs:annotation>
                  <xs:documentation>List of lienholders for the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Loan" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether a loan is owed for the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoanMonthlyPayment" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Monthly loan payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoanMonthsRemaining" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Months remaining on loan.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoanPayoffAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Loan payoff amount.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Make" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Make of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Manufacturer" nillable="true" type="tns3:VehicleManufacturer">
                <xs:annotation>
                  <xs:documentation>Company that manufactured the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Model" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Model of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OffRoadStyle" nillable="true" type="tns3:OffRoadVehicleStyle">
                <xs:annotation>
                  <xs:documentation>Style of snowmobile or ATV (wheels, tracks etc.). Used by ISO.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the vehicle in an external policy system</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SerialNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Serial number; only use if VIN is not appropriate (e.g. for boats).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns3:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>State (Jurisdiction) in which the vehicle is registered. The Jurisdiction must be associated with JurisdictionType.TC_VEHICLE_REG.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Style" nillable="true" type="tns3:VehicleStyle">
                <xs:annotation>
                  <xs:documentation>Style of Vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Vin" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>VIN of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Year" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Year of the vehicle's manufacture.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Building" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BuildingNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The alphanumeric "number" associated with this building.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Any notes associated with this building.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyLocation" nillable="true" type="tns2:PolicyLocation">
                <xs:annotation>
                  <xs:documentation>The PolicyLocation where this building exists.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the building in an external policy system</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBuilding" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Building[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PropertyItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>High-value item associated with a PolicyLocation.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AppraisedValue" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Appraised value of the item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the property item in an external policy system</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPropertyItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PropertyItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PropertyOwner" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Links a lienholder to a property.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Lienholder" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>The relevant lienholder. NOTE: when inserting a PropertyOwner this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OwnerType" nillable="true" type="tns3:OwnerType">
                <xs:annotation>
                  <xs:documentation>Whether the lienholder is a partial owner or the sole owner.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPropertyOwner" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PropertyOwner[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InlandMarineRU" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns2:LocationBasedRU">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PropertyRU" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>RiskUnit containing a policy.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:LocationBasedRU">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BuildingRU" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns2:LocationBasedRU">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LocationMiscRU" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A miscellaneous type of RiskUnit. Examples are Accounts Receivable, Scheduled Equipment, Signs etc.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:LocationBasedRU">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherRiskType" nillable="true" type="tns3:OtherRiskType">
                <xs:annotation>
                  <xs:documentation>Type of location based miscellaneous risk unit</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WCCovEmpRU" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns2:LocationBasedRU">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GeneralLiabilityRU" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns2:LocationBasedRU">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LocationBasedRU" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A RiskUnit that has a (Policy) Location associated with it.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:RiskUnit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Building" nillable="true" type="tns2:Building">
                <xs:annotation>
                  <xs:documentation>The building on the location that corresponds to this riskunit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Lienholders" nillable="true" type="tns2:ArrayOfPropertyOwner">
                <xs:annotation>
                  <xs:documentation>List of lien holders for the property.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyLocation" nillable="true" type="tns2:PolicyLocation">
                <xs:annotation>
                  <xs:documentation>The PolicyLocation associated with this RiskUnit.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLocationBasedRU" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LocationBasedRU[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyLocation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="tns2:Address">
                <xs:annotation>
                  <xs:documentation>The address where this PolicyLocation exists.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Buildings" nillable="true" type="tns2:ArrayOfBuilding">
                <xs:annotation>
                  <xs:documentation>Buildings associated with this location.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HighValueItems" nillable="true" type="tns2:ArrayOfPropertyItem">
                <xs:annotation>
                  <xs:documentation>List of additional high value items.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Lienholders" nillable="true" type="tns2:ArrayOfPropertyOwner">
                <xs:annotation>
                  <xs:documentation>List of lienholders for the property.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LocationBasedRisks" nillable="true" type="tns2:ArrayOfLocationBasedRU">
                <xs:annotation>
                  <xs:documentation>List of location based risk units for the property.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LocationNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The alphanumeric "number" associated with this location.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Any notes associated with this location.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the policy location in an external policy system</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PrimaryLocation" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether this PolicyLocation should be considered the primary one on the owning Policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="VehicleRU" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>RiskUnit containing a vehicle.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:RiskUnit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Vehicle" nillable="true" type="tns2:Vehicle">
                <xs:annotation>
                  <xs:documentation>Related vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleLocation" nillable="true" type="tns2:PolicyLocation">
                <xs:annotation>
                  <xs:documentation>The PolicyLocation associted with this Vehicle Risk Unit, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClassCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Employment class code (for workers' comp only).</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Code" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Class code. NOTE: when inserting a ClassCode this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Other notes on the class code.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the class code.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="VehicleCoverage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
A &lt;code&gt;RUCoverage&lt;/code&gt; with extra data specific to VehicleRUs.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:RUCoverage">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimAggLimit" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The per incident dollar limit for all PIP coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NonmedAggLimit" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The dollar limit for all PIP Non-Medical coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PersonAggLimit" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The per person dollar limit for all PIP coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReplaceAggLimit" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The dollar limit for all PIP Lost Wage and Replacement Services coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PropertyCoverage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
A &lt;code&gt;RUCoverage&lt;/code&gt; with extra data specific to LocationBasedRUs.  Contains
Coinsurance and CoverageBasis information.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:RUCoverage">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Coinsurance" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Co-insurance percentage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageBasis" nillable="true" type="tns3:CoverageBasis">
                <xs:annotation>
                  <xs:documentation>Coverage basis.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyCoverage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
A &lt;code&gt;Coverage&lt;/code&gt; associated directly with a &lt;code&gt;Policy&lt;/code&gt;, as
opposed to being associated with a vehicle or property.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Coverage">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TransactionLineItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    TransactionLineItems provide a means to split the amount of a transaction into multiple
    categories (e.g., Doctor, Hospital, Legal, Other, etc.).  Every transaction has one or more TransactionLineItems, and
    the amount of the transaction is the aggregate amount of all its line items.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ClaimAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The amount of this line item in the Claim's currency. NOTE: when inserting a TransactionLineItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ClaimForExAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The foreign exchange adjustment for this line item in the claim currency. This stores the amount by which the current value of ClaimAmount exceeds its original value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A note or description of the line item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Deductible" nillable="true" type="tns2:Deductible">
                <xs:annotation>
                  <xs:documentation>The deductible for which this transaction line item is applied, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LineCategory" nillable="true" type="tns3:LineCategory">
                <xs:annotation>
                  <xs:documentation>The category of this line item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReportingAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The amount of this line item in the app's default currency (reporting currency). NOTE: when inserting a TransactionLineItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReportingForExAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The foreign exchange adjustment for this line item in the reporting currency. This stores the amount by which the current value of ReportingAmount exceeds its original value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReservingAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The amount of this line item in the Currency of the ReserveLine (ReservingCurrency).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReservingForExAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The foreign exchange adjustment for this line item in the reserving currency. This stores the amount by which the current value of ReservingAmount exceeds its original value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TransactionAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The amount of this line item, in the transaction currency. NOTE: when inserting a TransactionLineItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTransactionLineItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TransactionLineItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Deductible" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A deductible represent the amount to be subtracted from a payment before making out a check. This amount is normally derived from the deductible amount defined on the policy.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Amount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Deductible amount to be applied to a payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>The claim on which this deductible was created.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Coverage" nillable="true" type="tns2:Coverage">
                <xs:annotation>
                  <xs:documentation>The coverage, if any, whose deductible this entity represents.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EditReason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reason for editing (override or waive) the deductible.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Overridden" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Specifies whether this deductible has been overriden.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Paid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Specifies whether this deductible has been paid.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TransactionLineItems" nillable="true" type="tns2:ArrayOfTransactionLineItem">
                <xs:annotation>
                  <xs:documentation>The TransactionLineItems applied to this deductible.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Waived" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Specifies whether this deductible has been waived.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FinancialCovTerm" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents a financial coverage term</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:CovTerm">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="FinancialAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Financial amount</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NumericCovTerm" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents a numeric coverage term</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:CovTerm">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="NumericValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Numeric value</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Units" nillable="true" type="tns3:CovTermModelVal">
                <xs:annotation>
                  <xs:documentation>Coverage term units</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClassificationCovTerm" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents a classification coverage term</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:CovTerm">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Code" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Classification code</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Classification description</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CovTerm" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Additional terms and conditions that may be specified on a Coverage.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CovTermOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Ordering for the cov term</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CovTermPattern" nillable="true" type="tns3:CovTermPattern">
                <xs:annotation>
                  <xs:documentation>Coverage term pattern</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Coverage" nillable="true" type="tns2:Coverage">
                <xs:annotation>
                  <xs:documentation>Coverage to which the coverage term belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ModelAggregation" nillable="true" type="tns3:CovTermModelAgg">
                <xs:annotation>
                  <xs:documentation>Indicates that the CovTerm is applicable to a subset or a subtype of the coverage</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ModelRestriction" nillable="true" type="tns3:CovTermModelRest">
                <xs:annotation>
                  <xs:documentation>Indicates at what level of an event that the CovTerm is applicable to such as per claimant or per accident</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the coverage term in an external policy system</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCovTerm" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CovTerm[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfClassCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ClassCode[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfClaimContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ClaimContact[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPolicyCoverage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PolicyCoverage[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Endorsement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Relates a legal form (endorsement) to the policy.  The actual form is not stored
in this entity, only description of it and its form number, which should
identify a specific form.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Other notes on the endorsement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the endorsement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the endorsement is effective.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpirationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the endorsement expires.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FormNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Date and version of the legal document.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the endorsement in an external policy system</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfEndorsement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Endorsement[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPolicyLocation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PolicyLocation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfRiskUnit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:RiskUnit[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Evaluation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents the liabilities and damages in a Claim's plan of action. A plan of action is an agreement between
        parties that concludes a discussion of outstanding liabilities. The Evaluation object brings together
        key contacts and financial data related to a claim.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Amount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Total evaluation amount.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimantLiability" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Claimant's liability percentage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClmtOutOfPocket" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Claimant out of pocket cost.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Diagnostic" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Diagnostic cost - for example, x-ray.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FutureMedical" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Future medical cost.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="High" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>High non-economic cost estimate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HospitalER" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Hospital/Emergency Room cost.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredLiability" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Insured's liability percentage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Likely" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Likely non-economic cost estimate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Low" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Low non-economic cost estimate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalEquipment" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Medical equipment cost.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Then name or subject of this evaluation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Other" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Other damages cost.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherLiability" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Other party's liability percentage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PhysicalTherapy" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Physical therapy cost.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequest" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Associated service request NOTE: value is the PublicId of the ServiceRequest.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TreatingPhysician" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Treating physician cost.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BenefitPeriod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Denotes period of time when employee received benefits.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitType" nillable="true" type="tns3:LostWagesBenefitType">
                <xs:annotation>
                  <xs:documentation>Type of lost wages benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitsBeginDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when benefits start.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Additional information.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MonthlyCompRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Monthly compensation rate. This calculation depends on the type of benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumPaymentWeeks" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of weeks benefits will be paid. This differs by state.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentageComp" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Percentage compensability.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PostInjryWklyWgs" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Weekly wages post-injury.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WeeklyCompRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Weekly compensation rate. This calculation depends on type of benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBenefitPeriod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BenefitPeriod[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Benefits" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Detail information about specific benefits related to an exposure. Exposures
      have multiple fields linking to different Benefits entities.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitType" nillable="true" type="tns3:LostWagesBenefitType">
                <xs:annotation>
                  <xs:documentation>Type of lost wages benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitsBeginDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when benefits start.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitsEndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when benefits end.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Additional information about benefits.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstPaymentDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date 1st payment made</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MMIDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when maximum medical improvement was reached (when PPD benefits can start).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MaxBurialRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Maximum burial rate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MaxCompRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>State maximum benefit amount.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MinCompRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>State minimum benefit amount.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MonthlyCompRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Monthly compensation rate. This calculation depends on the type of benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumPaymentWeeks" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of weeks benefits will be paid. This differs by state.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidOnTime" nillable="true" type="tns3:PaidOnTime">
                <xs:annotation>
                  <xs:documentation>1st payment - whether made on time or reason why not</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentFrequency" nillable="true" type="tns3:PaymentFrequencyType">
                <xs:annotation>
                  <xs:documentation>Payment frequency for benefits. This differs by state.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentLimit" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Payment limit</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentageComp" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Percentage compensability.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PostInjryWklyWgs" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Weekly wages post-injury.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProviderType" nillable="true" type="tns3:ProviderType">
                <xs:annotation>
                  <xs:documentation>Type of services provider.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RetroPeriod" nillable="true" type="tns3:RetroPeriodType">
                <xs:annotation>
                  <xs:documentation>Retroactive period.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Services" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Services required.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SettleDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of settlement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SettleMethod" nillable="true" type="tns3:SettleMethod">
                <xs:annotation>
                  <xs:documentation>Method of settlement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaitPrdBeginDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when the waiting period begins.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaitPrdEndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when the waiting period ends.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaitingPeriod" nillable="true" type="tns3:WaitingPeriodType">
                <xs:annotation>
                  <xs:documentation>Waiting period before benefits begin. This differs by state.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaitingPeriodPaid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the Employer has paid the waiting period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WeeklyCompRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Weekly compensation rate. This calculation depends on type of benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WeeklyCompRateInfo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Rating Information</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDocument" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Document[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ExposureISOMatchReport" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Details of a match for an Exposure returned by the Insurance Office Services (ISO) ClaimSearch service.
      If ISO ClaimSearch integration is enabled then descriptions of new or changed Exposures are sent to the
      ISO ClaimSearch service to see if any suspiciously similar claims have been filed at other companies.
      If ISO ClaimSearch returns a "match report", indicating that one or more similar claims have been
      filed, then the report is added to the claim as a document and the most important information from
      each reported match is stored in an ISOMatchReport entity.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Claim number of matching claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateOfLoss" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Loss date of matching claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddress1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>1st line of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddress2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>2nd line of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddress3" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>3rd line of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddressCity" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>City of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddressPostalCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Postal code of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddressState" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>State of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerPhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Phone number of insuring company.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuringCompany" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Insuring company of matching claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="MatchReasons" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reasons why claim/exposure matched at ISO. NOTE: when inserting a ExposureISOMatchReport this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Policy number of matching claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Policy type of matching claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReceivedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time match report was received.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfExposureISOMatchReport" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ExposureISOMatchReport[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="IMEPerformed" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Independent medical examination performed.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposure" nillable="true" type="tns2:Exposure">
                <xs:annotation>
                  <xs:documentation>The related Exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IMEDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the independent medical examination was performed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IMEType" nillable="true" type="tns3:IMEType">
                <xs:annotation>
                  <xs:documentation>The type of independent medical examination. NOTE: when inserting a IMEPerformed this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfIMEPerformed" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:IMEPerformed[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AddnlTripAccommodation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Used to track changed accommodation on the trip incident</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="tns2:Address">
                <xs:annotation>
                  <xs:documentation>Address for the planned accommodation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgentFees" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Agent fees incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Assessment" nillable="true" type="tns3:AssessmentAction">
                <xs:annotation>
                  <xs:documentation>Approve, deny or review an expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The ending date/time for this expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherFees" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Other fees incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Original invoiced amount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the accommodation booked</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReasonForAddnlAccommodation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reasons for additional accommodation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReasonForDenial" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reasons for denial</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The starting date/time for this expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TripAccommodation" nillable="true" type="tns2:TripAccommodation">
                <xs:annotation>
                  <xs:documentation>Accommodation on the policy being cancelled, delayed etc</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAddnlTripAccommodation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AddnlTripAccommodation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AddnlTripSegment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Used to track changed segments on the trip incident</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgentFees" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Agent fees incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Assessment" nillable="true" type="tns3:AssessmentAction">
                <xs:annotation>
                  <xs:documentation>Approve, deny or review an expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CarrierName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the airline, cruise ship, bus etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CarrierNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Flight, ship, bus number etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The ending date/time for this expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherFees" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Other fees incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Original invoiced amount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PortOfDisembarkation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Arrival airport, port, city etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PortOfEmbarkation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Boarding airport, port, city etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PortOfTransit" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Transit airports, ports, cities etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReasonForAddnlTravel" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reasons for additional travel</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReasonForDenial" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reasons for denial</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The starting date/time for this expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TransportType" nillable="true" type="tns3:TransportType">
                <xs:annotation>
                  <xs:documentation>Type of transport, airline, cruise ship, taxi etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TripSegment" nillable="true" type="tns2:TripSegment">
                <xs:annotation>
                  <xs:documentation>Segment on the policy being cancelled, delayed etc</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAddnlTripSegment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AddnlTripSegment[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TripSegment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Used to track the original and changed segments on the travel schedule for the insured/claimant</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddnlTripSegments" nillable="true" type="tns2:ArrayOfAddnlTripSegment">
                <xs:annotation>
                  <xs:documentation>All new/additional trip segments associated with this segment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgentFees" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Agent fees incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Assessment" nillable="true" type="tns3:AssessmentAction">
                <xs:annotation>
                  <xs:documentation>Approve, deny or review an expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancelOnly" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if the expense is cancelled without the need for additional arrangements</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancellationFees" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Cancellation fees incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CarrierName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the airline, cruise ship, bus etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CarrierNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Flight, ship, bus number etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The ending date/time for this expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherFees" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Other fees incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Original invoiced amount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PortOfDisembarkation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Arrival airport, port, city etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PortOfEmbarkation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Boarding airport, port, city etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PortOfTransit" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Transit airports, ports, cities etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReasonForCancellation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reason for cancellation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReasonForDenial" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reasons for denial</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The starting date/time for this expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TransportType" nillable="true" type="tns3:TransportType">
                <xs:annotation>
                  <xs:documentation>Type of transport, airline, cruise ship, taxi etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TripIncident" nillable="true" type="tns2:TripIncident">
                <xs:annotation>
                  <xs:documentation>Incident this schedule is related to</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TripAccommodation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Used to track the original and changed accommodation on the travel schedule for the insured/claimant</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddnlTripAccommodations" nillable="true" type="tns2:ArrayOfAddnlTripAccommodation">
                <xs:annotation>
                  <xs:documentation>All new/additional trip accommodations associated with this accommodation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="tns2:Address">
                <xs:annotation>
                  <xs:documentation>Address for the planned accommodation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgentFees" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Agent fees incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Assessment" nillable="true" type="tns3:AssessmentAction">
                <xs:annotation>
                  <xs:documentation>Approve, deny or review an expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancelOnly" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if the expense is cancelled without the need for additional arrangements</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancellationFees" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Cancellation fees incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The ending date/time for this expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherFees" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Other fees incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Original invoiced amount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the accommodation booked</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReasonForCancellation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reason for cancellation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReasonForDenial" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reasons for denial</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The starting date/time for this expense</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TripIncident" nillable="true" type="tns2:TripIncident">
                <xs:annotation>
                  <xs:documentation>Incident this accommodation is related to</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TripSegment" nillable="true" type="tns2:TripSegment">
                <xs:annotation>
                  <xs:documentation>Accommodation is related to this trip segment</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTripAccommodation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TripAccommodation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTripSegment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TripSegment[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TripIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving a trip or travel</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Incident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="TripAccommodations" nillable="true" type="tns2:ArrayOfTripAccommodation">
                <xs:annotation>
                  <xs:documentation>All trip accommodations associated with this policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TripRU" nillable="true" type="tns2:TripRU">
                <xs:annotation>
                  <xs:documentation>Related risk unit for this incident</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TripSegments" nillable="true" type="tns2:ArrayOfTripSegment">
                <xs:annotation>
                  <xs:documentation>All trip segments associated with this policy</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BodyPartDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Collects details of body injury for an InjuryIncident. Each instance of this entity represents a
        body part injured in the incident. An individual InjuryIncident can have multiple BodyPartDetails,
        representing injured body parts of the Person (ClaimContact) with role of "injured" for the
        InjuryIncident.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompensabilityComments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments on compensability of injury.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompensabilityDecision" nillable="true" type="tns3:CompensabilityDecision">
                <xs:annotation>
                  <xs:documentation>Decision on compensability for this body part.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompensabilityDecisionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Decision Date of compensability.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DetailedBodyPart" nillable="true" type="tns3:DetailedBodyPartType">
                <xs:annotation>
                  <xs:documentation>Specific body part. Choices filtered by PrimaryBodyPart.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Ordering" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of the body parts (i.e. First BodyPart should be lowest), based on importance or order entered.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryBodyPart" nillable="true" type="tns3:BodyPartType">
                <xs:annotation>
                  <xs:documentation>Area of the body where the body part is located.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBodyPartDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BodyPartDetails[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ICDCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents a collection of valid ICD codes (International Statistical Classification of
        Diseases and Related Health Problems) used for medical diagnoses on an injury incident.

    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AvailabilityDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date this code becomes available</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BodySystem" nillable="true" type="tns3:ICDBodySystem">
                <xs:annotation>
                  <xs:documentation>Broad classification of diagnosis types NOTE: when inserting a ICDCode this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Chronic" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is the condition chronic</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Code" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ICD 9 or 10 Code NOTE: when inserting a ICDCode this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CodeDesc" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ICD code description NOTE: when inserting a ICDCode this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpiryDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date this code expires</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InjuryDiagnosis" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents a medical diagnosis on an injury incident. Each diagnosis is linked to the associated ICD code.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Compensable" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is this diagnosis compensable</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>Provider name</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateEnded" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date this diagnosis was ended</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateStarted" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date this diagnosis was started</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ICDCode" nillable="true" type="tns2:ICDCode">
                <xs:annotation>
                  <xs:documentation>Key to selected ICD NOTE: when inserting a InjuryDiagnosis this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InjuryIncident" nillable="true" type="tns2:InjuryIncident">
                <xs:annotation>
                  <xs:documentation>Injury incident this diagnosis is related to</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsPrimary" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if this is the primary diagnosis on the incident</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfInjuryDiagnosis" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:InjuryDiagnosis[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InjuryIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving a bodily injury.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Incident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AmbulanceUsed" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Ambulance arrived during the loss or not.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BodyParts" nillable="true" type="tns2:ArrayOfBodyPartDetails">
                <xs:annotation>
                  <xs:documentation>Details of body parts injured.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimIncident" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True for the one InjuryIncident per claim that holds injury fields formerly on Claim, for Workers Comp.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DetailedInjuryType" nillable="true" type="tns3:DetailedInjuryType">
                <xs:annotation>
                  <xs:documentation>Detailed Injury category.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DisabledDueToAccident" nillable="true" type="tns3:DisabledDueToAccident">
                <xs:annotation>
                  <xs:documentation>For non-WC, to characterize the disability.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GeneralInjuryType" nillable="true" type="tns3:InjuryType">
                <xs:annotation>
                  <xs:documentation>High-level categorization of the injury.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Impairment" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percentage impairment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InjuryDiagnoses" nillable="true" type="tns2:ArrayOfInjuryDiagnosis">
                <xs:annotation>
                  <xs:documentation>All ICD codes associated with this incident</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LostWages" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the injured person lost wages as a result of the injury.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalTreatmentType" nillable="true" type="tns3:MedicalTreatmentType">
                <xs:annotation>
                  <xs:documentation>Type of treatment received.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReturnToModWorkActual" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, the field, ReturnToModWorkDate, is actual; if false, then date is projected </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReturnToModWorkDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>the Return to Modified Work date for this claim, if ReturnToModWorkActual is true, this date is actual, otherwise it is projected </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReturnToModWorkValid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True indicates that Modified Duty is applicable for this injured person and will be tracked</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReturnToWorkActual" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, the field, ReturnToWorkDate, is actual; if false, then date is projected </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReturnToWorkDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>the Return to Work date for this claim, if ReturnToWorkActual is true, this date is actual, otherwise it is projected </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReturnToWorkValid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True indicates that Return to Work will be tracked for this person</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DwellingRoomDamage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Room damage information for Dwellings</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Incident" nillable="true" type="tns2:Incident">
                <xs:annotation>
                  <xs:documentation>The DwellingIncident this room is related to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumberOfRooms" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Count of the particular room type damaged. For instance 2 of a certain kind of room</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RoomType" nillable="true" type="tns3:RoomType">
                <xs:annotation>
                  <xs:documentation>Room types. For instance, living room, bedroom.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDwellingRoomDamage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DwellingRoomDamage[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DwellingIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving a dwelling</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:FixedPropertyIncident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DamagedAreaSize" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Size of the damaged area in sq. feet, sq. meters or other units of measurement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DebrisRemovalInd" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Debris Removal Service requested.  Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Property - Emergency services - Debris removal' service.
@deprecated Debris Removal Service requested.  Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Property - Emergency services - Debris removal' service.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DwellingRoomDamages" nillable="true" type="tns2:ArrayOfDwellingRoomDamage">
                <xs:annotation>
                  <xs:documentation>Information about rooms damaged as a result of the incident.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EMSInd" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Emergency Management Service requested.  Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Home services - Emergency services - Make safe' service.
@deprecated Emergency Management Service requested.  Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Home services - Emergency services - Make safe' service.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FireProtectionAvailable" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is fire protection available</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MaterialsDamaged" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Materials damaged as a result of the incident, for instance, floor, walls etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumberOfPeopleOnPolicy" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of people on the policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertySize" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Size of the property in sq. feet, sq. meters or other units of measurement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="YearBuilt" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Year the property was built</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="YearsInHome" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of years the insured has owned the home</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OtherStructureIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving a secondary structure</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:FixedPropertyIncident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="FencesDamaged" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether fences were damaged</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FixedPropertyIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving a fixed property - usually a building</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:PropertyIncident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AlarmType" nillable="true" type="tns3:AlarmType">
                <xs:annotation>
                  <xs:documentation>Alarm Type for property</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClassType" nillable="true" type="tns3:ClassType">
                <xs:annotation>
                  <xs:documentation>Property attribute class type for Building details</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExtWallMat" nillable="true" type="tns3:ExtWallMat">
                <xs:annotation>
                  <xs:documentation>External Wall material at scene.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FireProtDetails" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>dummy field for fire details</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HazardInvolved" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Was Hazardous Waste Involved?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossArea" nillable="true" type="tns3:LossArea">
                <xs:annotation>
                  <xs:documentation>Loss Area of Property</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MoldInvolved" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Was Mold Involved?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumSprinkOper" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of sprinklers that were operated</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumSprinkler" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of Sprinklers at Scene</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumStories" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of Stories in the building/property</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OccupancyType" nillable="true" type="tns3:OccupancyType">
                <xs:annotation>
                  <xs:documentation>Where the property in question is occupied.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Property" nillable="true" type="tns2:PolicyLocation">
                <xs:annotation>
                  <xs:documentation>The property involved in the incident.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RoofMaterial" nillable="true" type="tns3:RoofMaterial">
                <xs:annotation>
                  <xs:documentation>Roof Deck Materials for property</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SprinkRetServ" nillable="true" type="tns3:SprinkRetServ">
                <xs:annotation>
                  <xs:documentation>Sprinklers returned to service.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SprinklerType" nillable="true" type="tns3:SprinklerType">
                <xs:annotation>
                  <xs:documentation>Sprinkler type for property</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LivingExpensesIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving the loss of use of propery.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:PropertyIncident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date for which the insured started staying at the lodging provider.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PropertyContentsScheduledItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Describes a lost or damaged item listed in the policy's high value item array
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Incident" nillable="true" type="tns2:PropertyContentsIncident">
                <xs:annotation>
                  <xs:documentation>Incident that owns this scheduled item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ItemOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used to order items in creation order, must be unique per incident NOTE: when inserting a PropertyContentsScheduledItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyItem" nillable="true" type="tns2:PropertyItem">
                <xs:annotation>
                  <xs:documentation>The high value item listed on the policy</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPropertyContentsScheduledItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PropertyContentsScheduledItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PropertyContentsIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving property contents. For example contents of a home, outbuilding etc</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:MobilePropertyIncident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyContentsScheduledItems" nillable="true" type="tns2:ArrayOfPropertyContentsScheduledItem">
                <xs:annotation>
                  <xs:documentation>Affected scheduled items, selected from the high value property items listed on the policy</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LodgingProvider" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Lodging provider for loss of use</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>Lodging provider name</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Lodging end date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LodgingNights" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of nights of lodging (for backward compatability only)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LodgingRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Lodging cost per night</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyIncident" nillable="true" type="tns2:PropertyIncident">
                <xs:annotation>
                  <xs:documentation>PropertyIncident</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Lodging start date</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLodgingProvider" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LodgingProvider[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TypeofProperty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Type of property affected in a property incident. A single incident can affect multiple types of property.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Incident" nillable="true" type="tns2:Incident"/>
              <xs:element maxOccurs="1" minOccurs="0" name="TypeofProperty" nillable="true" type="tns3:TypeofProperty">
                <xs:annotation>
                  <xs:documentation>The type of property affected. NOTE: when inserting a TypeofProperty this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTypeofProperty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TypeofProperty[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PropertyIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving some kind of property - vehicle, building, personal property.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Incident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AlreadyRepaired" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Has the item been repaired already?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AppraisalFirstAppointment" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Scheduled time for the Appraisal from First Notice.  Deprecated: No longer used in the base configuration.  The equivalent of this field in 8.0 is the RequestedQuoteCompletionDate of a ServiceRequest with the 'Property - Inspection - Appraisal' service.
@deprecated Scheduled time for the Appraisal from First Notice.  Deprecated: No longer used in the base configuration.  The equivalent of this field in 8.0 is the RequestedQuoteCompletionDate of a ServiceRequest with the 'Property - Inspection - Appraisal' service.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DescOther" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Other Description</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EstDamageType" nillable="true" type="tns3:EstDamageType">
                <xs:annotation>
                  <xs:documentation>Total estimate of damage for the event, if known, at the time that the loss was reported. </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EstRepairCost" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Estimated Repair Cost</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EstRepairTime" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Estimated Repair Time</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EstimatesReceived" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Have the repair estimates been received</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExtDamagetxt" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>extent of damage to property text</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InspectionRequired" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is an inspection required? Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Property - Inspection - Appraisal' service.
@deprecated Is an inspection required? Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Property - Inspection - Appraisal' service.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LodgingProviders" nillable="true" type="tns2:ArrayOfLodgingProvider">
                <xs:annotation>
                  <xs:documentation>Lodging providers for this incident</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossofUse" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether there has been loss of use</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MealsDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of days of meals</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MealsPeople" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of people requiring meals</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MealsRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Daily rate of meals</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyDesc" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of property</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TypeofProperty" nillable="true" type="tns2:ArrayOfTypeofProperty"/>
              <xs:element maxOccurs="1" minOccurs="0" name="WhenToView" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Possible dates when the damage may be viewed.  Deprecated: No longer used in the base configuration.  The equivalent of this field in 8.0 is the RequestedQuoteCompletionDate of a ServiceRequest with the 'Property - Inspection - Appraisal' service.
@deprecated Possible dates when the damage may be viewed.  Deprecated: No longer used in the base configuration.  The equivalent of this field in 8.0 is the RequestedQuoteCompletionDate of a ServiceRequest with the 'Property - Inspection - Appraisal' service.
</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AssessmentContentItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An assessment detail line regarding Content</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Action" nillable="true" type="tns3:AssessmentContentAction">
                <xs:annotation>
                  <xs:documentation>AssessmentContentAction</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AmountAfterLimit" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The amount payable on the item(s)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Brand" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Brand Name / Manufacturer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContentCategory" nillable="true" type="tns3:ContentLineItemCategory">
                <xs:annotation>
                  <xs:documentation>Assessment Category for Property</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContentSchedule" nillable="true" type="tns3:ContentLineItemSchedule">
                <xs:annotation>
                  <xs:documentation>Assessment Schedule for Property</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateAcquired" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when this item was acquired</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Depreciation" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Depreciation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DepreciationPercentage" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Depreciation percentage, per year</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Assessment line.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IncidentOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of the item on the Incident</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ItemComment" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Assessment Item Comment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumberOfItems" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of Items</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProofOfOwnershipProvided" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Did the loss occur on this leg of the schedule</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PurchaseCost" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>PurchaseCost</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReplacementValue" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Estimated cost of replacing item(s)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Salvage" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Salvage</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleCategory" nillable="true" type="tns3:VehicleLineItemCategory">
                <xs:annotation>
                  <xs:documentation>AssessmentCatetory for Vehicles</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAssessmentContentItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AssessmentContentItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfExposure" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Exposure[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AssessmentItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An assessment detail line</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Action" nillable="true" type="tns3:AssessmentAction">
                <xs:annotation>
                  <xs:documentation>AssessmentAction</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Assessment line.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EstimateAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Assessment Amount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ItemComment" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Assessment Item Comment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyCategory" nillable="true" type="tns3:PropertyLineItemCategory">
                <xs:annotation>
                  <xs:documentation>Assessment Category for Property</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleCategory" nillable="true" type="tns3:VehicleLineItemCategory">
                <xs:annotation>
                  <xs:documentation>AssessmentCatetory for Vehicles</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAssessmentItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AssessmentItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AssessmentLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An event status line for a assessment e.g., an appointment date with a garage</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Event" nillable="true" type="tns3:AssessmentEvent">
                <xs:annotation>
                  <xs:documentation>The event of this assessment line.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Note" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Notes or comments explaining the reasoning behind this event status line.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatusDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the event took place</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAssessmentLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AssessmentLine[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AssessmentSource" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A source of information for the assessment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Assessor" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>The relevant assessor</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of Assessment Source</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Assessment Source name</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceType" nillable="true" type="tns3:AssessmentSource">
                <xs:annotation>
                  <xs:documentation>Assessment Source typelist</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatusLine" nillable="true" type="tns2:ArrayOfAssessmentLine">
                <xs:annotation>
                  <xs:documentation>A list of events for this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAssessmentSource" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AssessmentSource[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Incident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident related to a claim.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AssessmentCloseDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when this Assessment is complete</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AssessmentComment" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Assessment Comment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AssessmentName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name or subject of this negotiation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AssessmentStatus" nillable="true" type="tns3:AssessmentStatus">
                <xs:annotation>
                  <xs:documentation>AssessmentStatus</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AssessmentTargetCloseDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when this Assessment is expected to be complete</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AssessmentType" nillable="true" type="tns3:AssessmentType">
                <xs:annotation>
                  <xs:documentation>AssessmentType</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContentItemLine" nillable="true" type="tns2:ArrayOfAssessmentContentItem">
                <xs:annotation>
                  <xs:documentation>A list of line items for this assessment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>General description of the incident.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposures" nillable="true" type="tns2:ArrayOfExposure">
                <xs:annotation>
                  <xs:documentation>A list of exposures for this incident</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IncludeContentLineItems" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to indicate if assessmentcontentitems are utilized</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IncludeLineItems" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to indicate if assessmentitems are utilized</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ItemLine" nillable="true" type="tns2:ArrayOfAssessmentItem">
                <xs:annotation>
                  <xs:documentation>A list of line items for this assessment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossEstimate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Estimated cost of the loss.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Roles" nillable="true" type="tns2:ArrayOfClaimContactRole">
                <xs:annotation>
                  <xs:documentation>The contacts and their roles associated with this incident.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Severity" nillable="true" type="tns3:SeverityType">
                <xs:annotation>
                  <xs:documentation>Severity of the loss.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceLine" nillable="true" type="tns2:ArrayOfAssessmentSource">
                <xs:annotation>
                  <xs:documentation>A source for this assessment.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MedicalAction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Medical action taken related to an exposure.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of action.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposure" nillable="true" type="tns2:Exposure">
                <xs:annotation>
                  <xs:documentation>The related exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FutureActionReq" nillable="true" type="tns3:FutureMedicalActionType">
                <xs:annotation>
                  <xs:documentation>Type of medical action required in the future.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalActionType" nillable="true" type="tns3:MedicalActionType">
                <xs:annotation>
                  <xs:documentation>Type of action.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NextAppointment" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of next appointment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Note" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Additional notes on the action.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProviderName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of medical provider.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfMedicalAction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:MedicalAction[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WorkStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Denotes changes in the employee's work capacity.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Additional comments.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastWorkedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the employee last worked. Utilized if WorkCapacity == Off-work</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumDaysWorked" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Number of days worked per week.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumHoursWorked" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Number of hours worked per week during this period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidFullForLastWorked" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if the employee was paid in full for the Last day worked. Utilized if WorkCapacity == Off-work</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns3:WorkCapacity">
                <xs:annotation>
                  <xs:documentation>Work capacity status for the employee.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatusDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when status changed to this entity's WorkCapacity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatusEndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Last day at this WorkCapacity status. Null indicates current status.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WageAmountPostInjury" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of wages per week post-injury.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfWorkStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:WorkStatus[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="EmploymentData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Employment information for an exposure on a workers' comp claim.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClassCode" nillable="true" type="tns2:ClassCode">
                <xs:annotation>
                  <xs:documentation>Classification of employee, based on state codes or NCCI codes.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DaysWorkedWeek" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Text description of the days the employee normally works. For example, Monday-Friday or MWF.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DepartmentCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Code of department in which employee was working.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmploymentStatus" nillable="true" type="tns3:EmploymentStatusType">
                <xs:annotation>
                  <xs:documentation>Status of employment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HireDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Employee's date of hire.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HireState" nillable="true" type="tns3:State">
                <xs:annotation>
                  <xs:documentation>State in which the employee was hired.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InjuryStartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Start time on day of injury.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastWorkedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date employee last worked.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastYearIncome" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Income in the last calendar year.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumDaysWorked" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Number of days worked per week.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NumHoursWorked" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Number of hours worked per day.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Occupation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the employee's job.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OvertimeRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Overtime wage rate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidFull" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the employee was paid full wages for the day of injury or last day worked.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PayPeriod" nillable="true" type="tns3:PayPeriodType">
                <xs:annotation>
                  <xs:documentation>Pay period of employee.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SSBenefits" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether Social Security benefits apply.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SSBenefitsAmnt" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of Social Security benefits.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ScndInjryFnd" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether second injury fund benefits apply.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ScndInjryFndAmnt" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of second injury fund benefits.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ScndInjryFndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of initial notice to second injury fund.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WageAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of wages per pay period pre-injury.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WageAmountPostInjury" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of wages per pay period post-injury.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WagePaymentCont" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether claimant's salary was continued.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WorkStatusChanges" nillable="true" type="tns2:ArrayOfWorkStatus">
                <xs:annotation>
                  <xs:documentation>Periods of time employee returned to work.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Note" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
            Information entered by a user into a text field in the ClaimCenter interface.
            ClaimCenter associates a note with a specific claim, and may additionally associate
            it with one of the following also: an exposure, a matter, a claimant, or a service request.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Author" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User who wrote the note. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AuthoringDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the note was originally authored.  If null, the CreateTime seves this purpose.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Body" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Body of the note.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Confidential" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the note is confidential.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Language" nillable="true" type="tns3:LanguageType">
                <xs:annotation>
                  <xs:documentation>The language in which this note is created.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SecurityType" nillable="true" type="tns3:NoteSecurityType">
                <xs:annotation>
                  <xs:documentation>Type of note; used for access-restriction purposes</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Subject" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Subject or summary of the note.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Topic" nillable="true" type="tns3:NoteTopicType">
                <xs:annotation>
                  <xs:documentation>Topic to which the note belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfNote" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Note[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OtherCoverageDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Details of other coverage associated with an exposure.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of contact at insurer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactPhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Phone number of contact at insurer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Insurer" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of insurer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments/notes about the coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Policy number at insurer.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfOtherCoverageDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:OtherCoverageDetail[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ExcessOfLossRITreaty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Excess of loss non-proportional reinsurance treaty agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:NonProportionalRIAgreement">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NetExcessOfLossRITreaty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Net excess of loss non-proportional reinsurance treaty agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:NonProportionalRIAgreement">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FacNetExcessOfLossRIAgreement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Facultative Net Excess of Loss reinsurance agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:NonProportionalRIAgreement">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PerEventRITreaty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Per event reinsurance treaty agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:NonProportionalRIAgreement">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AnnualAggregateRITreaty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Annual aggregate reinsurance treaty agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:NonProportionalRIAgreement">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FacExcessOfLossRIAgreement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Facultative Gross Excess of Loss reinsurance agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:NonProportionalRIAgreement">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NonProportionalRIAgreement" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Non-proportional reinsurance agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:RIAgreement">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="QuotaShareRITreaty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Quota share proportional reinsurance treaty agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:ProportionalRIAgreement">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FacProportionalRIAgreement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Quota share proportional reinsurance agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:ProportionalRIAgreement">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SurplusRITreaty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Surplus proportional reinsurance agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:ProportionalRIAgreement">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProportionalRIAgreement" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Proportional reinsurance agreement.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:RIAgreement">
            <xs:sequence>
              <xs:element name="ProportionalShare" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Proportional Share NOTE: when inserting a ProportionalRIAgreement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RIAgreement" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents the contractual obligation of a reinsurer who has taken on some of the policy risk in exchange for some of the premium.
        The RIAgreement centralizes information related to that contract, detailing how the risk has been divided and ceded.
        Additionally, there is information to indicate when alerts should be directed to counterparties and users.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element name="AgreementName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Agreement name. NOTE: when inserting a RIAgreement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AgreementNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Agreement number. NOTE: when inserting a RIAgreement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AttachmentPoint" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The lower limit of when coverage starts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CededShare" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percentage of liability ceded to reinsurer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Associated Claim NOTE: when inserting a RIAgreement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns3:Currency">
                <xs:annotation>
                  <xs:documentation>The currency of the Agreement. NOTE: when inserting a RIAgreement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExceedsNotificationThreshold" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to mark an agreement as exceeding the notification threshold.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ManagedInExternalSystem" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to indicate if this agreement should be edited in CC or another system.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NotificationThreshold" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>At what amount of total incurred loss would the reinsurers like to be notified of individual large losses.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RIAgreementGroup" nillable="true" type="tns2:RIAgreementGroup">
                <xs:annotation>
                  <xs:documentation>Associated reinsurance agreement group.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RecoveryLimit" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The maximum amount that can be recovered from this agreement. Usually equal to TopOfLayer minus AttachmentPoint.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TopOfLayer" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The upper limit of coverage. Counterpart to AttachmentPoint. Labeled as Coverage Limit in the UI to match PolicyCenter.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfRIAgreement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:RIAgreement[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RIAgreementGroup" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Associates a collection of RIAgreements with a collection of Exposures for a Claim.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Agreements" nillable="true" type="tns2:ArrayOfRIAgreement">
                <xs:annotation>
                  <xs:documentation>List of reinsurance agreements associated with this agreement group.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Claim associated with the risk.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposures" nillable="true" type="tns2:ArrayOfExposure">
                <xs:annotation>
                  <xs:documentation>List of exposures associated with this reinsurance risk.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExternalRiskID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the risk in an external system. Null if created manually in ClaimCenterS.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RiskName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the risk. NOTE: when inserting a RIAgreementGroup this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Settlement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes a settlement with the employee.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitType" nillable="true" type="tns3:LostWagesBenefitType">
                <xs:annotation>
                  <xs:documentation>Type of lost wages benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Additional information.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SettleAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Settlement amount.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SettleDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of settlement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SettleMethod" nillable="true" type="tns3:SettleMethod">
                <xs:annotation>
                  <xs:documentation>Method of settlement.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSettlement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Settlement[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="StatCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
A statistical code or statistical line associated with a worker's comp policy.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BuildingNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Building number with which this stat line is associated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClassCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Workers comp class code with which this stat line is associated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuranceLine" nillable="true" type="tns3:InsuranceLine">
                <xs:annotation>
                  <xs:documentation>Insurance line (also known as major line or bureau).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuranceSubLine" nillable="true" type="tns3:InsuranceSubLine">
                <xs:annotation>
                  <xs:documentation>Insurance sub-line (also known as risk group or risk unit).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="LineNumber" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Statistical data line number. NOTE: when inserting a StatCode this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LocationNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Location number with which this stat line is associated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MajorPeril" nillable="true" type="tns3:MajorPerils">
                <xs:annotation>
                  <xs:documentation>Major peril.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the endorsement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns3:State">
                <xs:annotation>
                  <xs:documentation>State in which the statistical code applies.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Vehicle number with which this stat line is associated.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ExposureText" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A text field related to an exposure.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Text" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The text associated with the exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TextType" nillable="true" type="tns3:ExposureTextType">
                <xs:annotation>
                  <xs:documentation>Meaning of the text field.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfExposureText" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ExposureText[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Exposure" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      A discrete piece of a claim that involves a single type of loss (for example,
      vehicle damage or bodily injury) to a specific claimant. Contains data to
      describe the exposure and to track the current status of the exposure. Many
      exposure fields are specific to certain types of exposures and will be left
      blank on other types.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AverageWeeklyWages" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Average weekly wages; this calculation differs by state.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitPeriods" nillable="true" type="tns2:ArrayOfBenefitPeriod">
                <xs:annotation>
                  <xs:documentation>Periods of time when employee received benefits.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BreakIn" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether there is evidence of a break-in.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of the exposure on the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimantType" nillable="true" type="tns3:ClaimantType">
                <xs:annotation>
                  <xs:documentation>Categorizes the claimant relative to policyholder.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClosedOutcome" nillable="true" type="tns3:ExposureClosedOutcomeType">
                <xs:annotation>
                  <xs:documentation>Outcome reached when closing the exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>Compensation benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactPermitted" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether contact is permitted with the claimant.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Coverage" nillable="true" type="tns2:Coverage">
                <xs:annotation>
                  <xs:documentation>The specific coverage for this exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageSubType" nillable="true" type="tns3:CoverageSubtype">
                <xs:annotation>
                  <xs:documentation>The coverage subtype.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CurrentConditions" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Current conditions.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DaysInWeek" nillable="true" type="tns3:DaysInWeekType">
                <xs:annotation>
                  <xs:documentation>Days in week used for benefit calculation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeathBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>Death benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DepreciatedValue" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Depreciated value of property or vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DiagnosticCnsistnt" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the diagnostic is consistent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DisBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>Disability benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Documents" nillable="true" type="tns2:ArrayOfDocument">
                <xs:annotation>
                  <xs:documentation>The documents associated with this exposure; for example, FNOL accord form or police report.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExaminationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of the Examination.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExposureISOMatchReports" nillable="true" type="tns2:ArrayOfExposureISOMatchReport">
                <xs:annotation>
                  <xs:documentation>ISO match reports for this exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExposureLimitReached" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the exposure's exposure limit has been exceeded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExposureTier" nillable="true" type="tns3:ExposureTier">
                <xs:annotation>
                  <xs:documentation>The tier of this exposure, used to decide how to rate the exposure metrics.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExposureType" nillable="true" type="tns3:ExposureType">
                <xs:annotation>
                  <xs:documentation>Types of exposure. NOTE: when inserting a Exposure this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FurtherTreatment" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether further treatment is required.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HospitalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date admitted to the hospital.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HospitalDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Estimated days in hospital.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IMEPerformed" nillable="true" type="tns2:ArrayOfIMEPerformed">
                <xs:annotation>
                  <xs:documentation>Independent medical examinations performed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ISOKnown" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Has a search request for this object been successfully received by ISO?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ISOReceiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The last time a response was received from ISO for this object. </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ISOSendDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The last time a search request was sent to ISO. </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ISOStatus" nillable="true" type="tns3:ISOStatus">
                <xs:annotation>
                  <xs:documentation>Status of exposure with ISO - for example checked, not of interest.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Incident" nillable="true" type="tns2:Incident">
                <xs:annotation>
                  <xs:documentation>Incident that caused this exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IncidentLimitReached" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the exposure's incident limit has been exceeded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="JurisdictionState" nillable="true" type="tns3:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>State of jurisdiction, if different than location of loss. The Jurisdiction must be associated with JurisdictionType.TC_INSURANCE.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastDayWorked" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Last day worked.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LifePensionBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>Life Pension benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Locked" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the property or vehicle was properly locked.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossCategory" nillable="true" type="tns3:LossCategory">
                <xs:annotation>
                  <xs:documentation>Detailed category of the exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossParty" nillable="true" type="tns3:LossPartyType">
                <xs:annotation>
                  <xs:documentation>The loss party; generally either first- or third-party loss.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LostPropertyType" nillable="true" type="tns3:LostPropertyType">
                <xs:annotation>
                  <xs:documentation>ISO category of lost property, for theft losses.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalActions" nillable="true" type="tns2:ArrayOfMedicalAction">
                <xs:annotation>
                  <xs:documentation>Key medical-related dates.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MetricLimitGeneration" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Generation number, used to identify the limits for this exposure's metrics</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NewEmpData" nillable="true" type="tns2:EmploymentData">
                <xs:annotation>
                  <xs:documentation>Information about a new job that the claimant has taken.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="tns2:ArrayOfNote">
                <xs:annotation>
                  <xs:documentation>Notes particular to this exposure. Notes can also be associated with the claim in general.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherCoverage" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the claimant has additional coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherCoverageDet" nillable="true" type="tns2:ArrayOfOtherCoverageDetail">
                <xs:annotation>
                  <xs:documentation>Details of other coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherCoverageInfo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Information regarding additional coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherCovgChoice" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Whether there is other coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PIPClaimAggLimitReached" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the exposure's PIP Claim Aggregate limit has been exceeded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PIPDeathBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>Death benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PIPESSLimitReached" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the exposure's PIP Replacement Services Aggregate limit has been exceeded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PIPNonMedAggLimitReached" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the exposure's PIP Non Medical Aggregate limit has been exceeded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PIPPersonAggLimitReached" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the exposure's PIP Per Person Aggregate limit has been exceeded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PIPVocBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>Vocational rehab benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PPDBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>PPD benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PTDBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>PTD benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryCoverage" nillable="true" type="tns3:CoverageType">
                <xs:annotation>
                  <xs:documentation>Coverage Type of the coverage on this exposure. NOTE: when inserting a Exposure this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PriorEmpData" nillable="true" type="tns2:EmploymentData">
                <xs:annotation>
                  <xs:documentation>Information about the job the claimant had at the time of injury.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RIAgreementGroup" nillable="true" type="tns2:RIAgreementGroup">
                <xs:annotation>
                  <xs:documentation>Reinsurance group associated with this exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RIGroupSetExternally" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the reinsurance association was determined by an external system.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RSBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>Replacement services benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReOpenDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The last time an exposure was reopened. </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReopenedReason" nillable="true" type="tns3:ExposureReopenedReason">
                <xs:annotation>
                  <xs:documentation>The reason for reopening the exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReplacementValue" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Replacement value of the property or vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Roles" nillable="true" type="tns2:ArrayOfClaimContactRole">
                <xs:annotation>
                  <xs:documentation>The contacts and their roles associated with this exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SSBenefit" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether Social Security benefits are being collected.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SSDIBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>Social security disability benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SSDIEligible" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the exposure is eligible for SSDI.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SecurityLevel" nillable="true" type="tns3:ExposureSecurityType">
                <xs:annotation>
                  <xs:documentation>The security level of this exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Segment" nillable="true" type="tns3:ClaimSegment">
                <xs:annotation>
                  <xs:documentation>Segmentation type of the exposure. Both the claim and exposure may be segmented.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SettleDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of settlement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SettleMethod" nillable="true" type="tns3:SettleMethod">
                <xs:annotation>
                  <xs:documentation>Method of settlement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Settlements" nillable="true" type="tns2:ArrayOfSettlement">
                <xs:annotation>
                  <xs:documentation>Settlements with the employee.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatLine" nillable="true" type="tns2:StatCode">
                <xs:annotation>
                  <xs:documentation>Statistical line associated with this exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Strategy" nillable="true" type="tns3:ClaimStrategy">
                <xs:annotation>
                  <xs:documentation>Strategy type of the exposure. Both the claim and exposure may define a strategy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SupplementalWorkloadWeight" nillable="true" type="soapenc:int"/>
              <xs:element maxOccurs="1" minOccurs="0" name="TPDBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>TPD benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TTDBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>TTD benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TempLocation" nillable="true" type="tns2:Address">
                <xs:annotation>
                  <xs:documentation>Temporary location of policy holder. This is for a homeowners claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Text" nillable="true" type="tns2:ArrayOfExposureText">
                <xs:annotation>
                  <xs:documentation>Large text fields associated with exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TreatedPatientBfr" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the the patient has been treated before.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ValidationLevel" nillable="true" type="tns3:ValidationLevel">
                <xs:annotation>
                  <xs:documentation>Validation level the exposure has passed (if any).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VocBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>Vocational benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WCBenefit" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether Workers Compensation benefits are being collected.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WCBenefits" nillable="true" type="tns2:Benefits">
                <xs:annotation>
                  <xs:documentation>Workers' comp benefits details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WCPreexDisblty" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the injured person had a pre-existing disability.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WCPreexDisbltyInfo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Information about the pre-existing disability.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WageBenefit" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether wage benefites are being collected.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WageStmtRecd" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Wage Statement received date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WageStmtSent" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Wage Statement sent date.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BudgetLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BudgetLineType" nillable="true" type="tns3:LineCategory">
                <xs:annotation>
                  <xs:documentation>Budget line type. NOTE: when inserting a BudgetLine this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Matter" nillable="true" type="tns2:Matter">
                <xs:annotation>
                  <xs:documentation>Related matter.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OriginalEstimate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Original budget estimate</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBudgetLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BudgetLine[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MatterExposure" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
            Links an Exposure entity with a Matter entity.
            
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposure" nillable="true" type="tns2:Exposure">
                <xs:annotation>
                  <xs:documentation>Related exposure. NOTE: when inserting a MatterExposure this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfMatterExposure" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:MatterExposure[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Matter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
            Represents the set of data organized around a single lawsuit or potential lawsuit.
            It contains data fields (such as case number and trail date). A Matter is associated with a single claim. 
            
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AdDamnumAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Ad Damnum Amount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AdDamnumSpecified" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Was Ad Damnum specified?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Arbitration" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether a suit has gone into arbitration.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ArbitrationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Current schedule trial date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ArbitrationRoom" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Room number in the arbitration venue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BudgetLines" nillable="true" type="tns2:ArrayOfBudgetLine">
                <xs:annotation>
                  <xs:documentation>An array of budget line records</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CaseNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Official reference number for the lawsuit</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CourtDistrict" nillable="true" type="tns3:MatterCourtDistrict">
                <xs:annotation>
                  <xs:documentation>Court jurisdictional district</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CourtType" nillable="true" type="tns3:MatterCourtType">
                <xs:annotation>
                  <xs:documentation>Court type</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeclaratoryJgmt" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the court has been asked to make a declaratory judgment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefenseApptDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the defense counsel was appointed to this matter.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocketNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Court docket number</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposures" nillable="true" type="tns2:ArrayOfMatterExposure">
                <xs:annotation>
                  <xs:documentation>The list of exposures to which this matter relates.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FileDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the trial was filed in court.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FilingDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Filing date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FinalLegalCost" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The final legal cost.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FinalSettleCost" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The final settlement cost.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FinalSettleDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The actual date of the final settlement (as opposed to the date of the payment).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstNotice" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the lawsuit was the first notice of the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HearingDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Current scheduled matter hearing date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HearingRoom" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Room number in the hearing venue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LegalSpecialty" nillable="true" type="tns3:LegalSpecialty">
                <xs:annotation>
                  <xs:documentation>Legal specialty needed for this matter</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MatterCaseNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Case number</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MatterType" nillable="true" type="tns3:MatterType">
                <xs:annotation>
                  <xs:documentation>Type of Matter such as General, Lawsuit, Arbitration, Hearing or Mediation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MediationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date this matter entered mediation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MediationRoom" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Room number in the mediation venue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MethodServed" nillable="true" type="tns3:MatterMethodServed">
                <xs:annotation>
                  <xs:documentation>Method served</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MotionSummaryJgmt" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this matter has a motion for summary judgment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Then name for this matter. Typically of the form 'X vs. Y' once the matter goes to trial. NOTE: when inserting a Matter this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryCause" nillable="true" type="tns3:PrimaryCauseType">
                <xs:annotation>
                  <xs:documentation>Why the lawsuit was brought in the first place.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PunitiveAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Punitive damages amount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PunitiveDamages" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Punitive damages?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReopenedReason" nillable="true" type="tns3:MatterReopenedReason">
                <xs:annotation>
                  <xs:documentation>The reason for reopening the matter.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Resolution" nillable="true" type="tns3:ResolutionType">
                <xs:annotation>
                  <xs:documentation>The type of resolution.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ResponseDue" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Response Due</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ResponseFiled" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Response filed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RiskType" nillable="true" type="tns3:MatterRiskType">
                <xs:annotation>
                  <xs:documentation>Describes the overall risk on this matter.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Roles" nillable="true" type="tns2:ArrayOfClaimContactRole">
                <xs:annotation>
                  <xs:documentation>The roles that this claimcontact has.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Room" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Room number in the venue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SentToDefenseDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date this matter was sent to the defense attorney.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Service date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StructuredSettle" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this matter is a good candidate for structured settlement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubroRelated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to mark if Matter related to Subrogation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SuitType" nillable="true" type="tns3:SuitType">
                <xs:annotation>
                  <xs:documentation>The type of suit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TrialDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Current schedule trial date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ValidationLevel" nillable="true" type="tns3:ValidationLevel">
                <xs:annotation>
                  <xs:documentation>Validation level the matter passed (if any) the last time it was checked.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VenueRating" nillable="true" type="tns3:MatterVenueRating">
                <xs:annotation>
                  <xs:documentation>Rating of venue for this matter</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NegotiationLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents a single line amount discussed in a Negotiation. A Negotiation contains an array of NegotiationLine
        entities representing the back-and-forth financial values discussed.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Amount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of the demand, offer, or counteroffer. Not always applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NegotiationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the negotiation line was made.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Note" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Notes or comments explaining the reasoning behind this negotiation line.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns3:NegotiationType">
                <xs:annotation>
                  <xs:documentation>The type of this negotiation line.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfNegotiationLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:NegotiationLine[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NegotiationText" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Stores long text descriptions associated with a Negotiation. Changes to these text descriptions trigger
        validation.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Text" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The text corresponding to a negotiation related subject.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns3:MatterTextType">
                <xs:annotation>
                  <xs:documentation>Type of negotiation text.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfNegotiationText" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:NegotiationText[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Negotiation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Contains details related to a negotiated settlement for a claim or part of claim. This entity tracks the
        Contacts involved in the negotiation, summarizes basic arguments, and financial figures.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LiabilityEval" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>An assessment of the total liability for this negotiation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MaxOffer" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The maximum offer the owner is willing to settle for before rethinking the strategy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name or subject of this negotiation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Rationale" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The rationale for the proposed target offer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequest" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Associated service request NOTE: value is the PublicId of the ServiceRequest.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SettleNegotiation" nillable="true" type="tns2:ArrayOfNegotiationLine">
                <xs:annotation>
                  <xs:documentation>A list of demands, offers, and couteroffers related to this negotiation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetOffer" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The target amount of negotiated settlement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Text" nillable="true" type="tns2:ArrayOfNegotiationText">
                <xs:annotation>
                  <xs:documentation>The list of texts related to this negotiation; for example arguments, settlemnet plan, etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimContactRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Links claim contacts with a role on the claim. The ClaimContactRole tracks which Incident and Exposure (if any)
        corresponds with the contact.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element name="Active" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this contact is still active in its role for this claim or exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments about this role on the claimcontact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoveredPartyType" nillable="true" type="tns3:CoveredPartyType">
                <xs:annotation>
                  <xs:documentation>The type of covered party.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Evaluation" nillable="true" type="tns2:Evaluation">
                <xs:annotation>
                  <xs:documentation>The evaluation with which the contact is associated, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposure" nillable="true" type="tns2:Exposure">
                <xs:annotation>
                  <xs:documentation>The exposure with which the contact is associated, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Incident" nillable="true" type="tns2:Incident">
                <xs:annotation>
                  <xs:documentation>The incident with which the contact is associated, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Matter" nillable="true" type="tns2:Matter">
                <xs:annotation>
                  <xs:documentation>The legal matter with which the contact is associated, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Negotiation" nillable="true" type="tns2:Negotiation">
                <xs:annotation>
                  <xs:documentation>The negotiation with which the contact is associated, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PartyNumber" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of the party in the list of parties.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Policy" nillable="true" type="tns2:Policy">
                <xs:annotation>
                  <xs:documentation>The policy with which the contact is associated, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Role" nillable="true" type="tns3:ContactRole">
                <xs:annotation>
                  <xs:documentation>The role of the contact in relation to the claim, exposure, or matter. NOTE: when inserting a ClaimContactRole this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WitnessPerspective" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>WitnessPerspective</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WitnessPosition" nillable="true" type="tns3:WitnessPosition">
                <xs:annotation>
                  <xs:documentation>Where was the witness when the accident happened?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WitnessStatementInd" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Indicator for whether witness gave statement or not</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfClaimContactRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ClaimContactRole[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfStatCode" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:StatCode[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Policy" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Describes an insurance policy against which a claim has been filed. When a claim
is entered in the system, the policy search adapter retrieves the policy
information from an external system, stores it as a unique &lt;code&gt;Policy&lt;/code&gt;,
and associates it to the claim.  There is a one-to-one relationship between
claims and policies in the system.  If multiple claims have been filed against
the same actual policy, there will be a distinct &lt;code&gt;Policy&lt;/code&gt; for every
&lt;code&gt;Claim&lt;/code&gt; in the system.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Account number that this Policy belongs to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AssignedRisk" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>The policy is an Assigned risk from the state or not.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CancellationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the policy was canceled.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClassCodes" nillable="true" type="tns2:ArrayOfClassCode">
                <xs:annotation>
                  <xs:documentation>List of class codes covered by the Policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contacts" nillable="true" type="tns2:ArrayOfClaimContact">
                <xs:annotation>
                  <xs:documentation>List of contacts associated with this policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageForm" nillable="true" type="tns3:CoverageForm">
                <xs:annotation>
                  <xs:documentation>Policy's coverage form.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Coverages" nillable="true" type="tns2:ArrayOfPolicyCoverage">
                <xs:annotation>
                  <xs:documentation>List of coverages directly related to the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns3:Currency">
                <xs:annotation>
                  <xs:documentation>The Currency of the policy. When set, the new value is also propagated to Claim.Currency.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CustomerServiceTier" nillable="true" type="tns3:CustomerServiceTier">
                <xs:annotation>
                  <xs:documentation>Service tier behind this policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the policy is effective.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Endorsements" nillable="true" type="tns2:ArrayOfEndorsement">
                <xs:annotation>
                  <xs:documentation>List of endorsements for the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpirationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the policy expires.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FinancialInterests" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Other financial interests of note.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ForeignCoverage" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the insured has foreign coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredSICCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The insured's SIC code (for workers' comp policies only).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Other notes on the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OrigEffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>First effective date on which the policyholder had coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherInsInfo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Notes about the insured's other insurance.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherInsurance" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the insured has other insurance.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Participation" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Participation percentage (for commercial policies only).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyLocations" nillable="true" type="tns2:ArrayOfPolicyLocation">
                <xs:annotation>
                  <xs:documentation>The list of all Locations available for use on this Policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Number of the policy (generally a string). NOTE: when inserting a Policy this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyRatingPlan" nillable="true" type="tns3:PolicyRatingPlan">
                <xs:annotation>
                  <xs:documentation>Policy's rating plan (for workers' comp policies only).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySource" nillable="true" type="tns3:PolicySource">
                <xs:annotation>
                  <xs:documentation>Source of the policy information.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySuffix" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Indicates each unique period that a policy has been in effect.  (Sometimes called 'Mod' or 'Module.')</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemPeriodID" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>The id of an associated external policy system period.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns3:PolicyType">
                <xs:annotation>
                  <xs:documentation>Type of policy. NOTE: when inserting a Policy this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Agency that sold the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportingDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Extended reporting date for policies with extended coverage (for commercial policies only).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RetroactiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Retroactive date for policies with retroactive coverage (for commercial policies only).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReturnToWorkPrgm" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Return to work program (for workers' comp policies only).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RiskUnits" nillable="true" type="tns2:ArrayOfRiskUnit">
                <xs:annotation>
                  <xs:documentation>List of risk units covered by the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Roles" nillable="true" type="tns2:ArrayOfClaimContactRole">
                <xs:annotation>
                  <xs:documentation>The roles that this claimcontact has.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatCodes" nillable="true" type="tns2:ArrayOfStatCode">
                <xs:annotation>
                  <xs:documentation>List of stat lines associated with the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns3:PolicyStatus">
                <xs:annotation>
                  <xs:documentation>Status of the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalProperties" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Total number of properties on the master version of the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalVehicles" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Total number of vehicles on the master version of the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnderwritingCo" nillable="true" type="tns3:UnderwritingCompanyType">
                <xs:annotation>
                  <xs:documentation>Underwriting company.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnderwritingGroup" nillable="true" type="tns3:UnderwritingGroupType">
                <xs:annotation>
                  <xs:documentation>Underwriting group.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Verified" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if no non-internal fields have been changed since this policy was retrieved from external system.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WCOtherStates" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Other states in which coverage applies (for workers' comp policies only).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WCStates" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>States in which coverage applies (for workers' comp policies only).</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Coverage" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Abstract superclass describing a specific coverage on a policy. Contains
information about deductibles, limits, and effective dates of the coverage. A
policy may have multiple coverages.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimDeductible" nillable="true" type="tns2:Deductible">
                <xs:annotation>
                  <xs:documentation>Deductible entity to be applied to a payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CovTerms" nillable="true" type="tns2:ArrayOfCovTerm">
                <xs:annotation>
                  <xs:documentation>Additional terms and conditions associated with this Coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns3:Currency">
                <xs:annotation>
                  <xs:documentation>The currency of the coverage. Once set, this value can be updated only when CoverageMethods.allowCurrencyChange() returns true. NOTE: when inserting a Coverage this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Deductible" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Deductible for this coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the coverage is effective.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpirationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the coverage is expired.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExposureLimit" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Dollar limit per exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IncidentLimit" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Dollar limit per incident.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LimitsIndicator" nillable="true" type="tns3:LimitsIndicator">
                <xs:annotation>
                  <xs:documentation>Whether a coverage type can be combined.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Additional notes on this coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Policy" nillable="true" type="tns2:Policy">
                <xs:annotation>
                  <xs:documentation>Policy to which the coverage belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the coverage in an external policy system</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns3:State">
                <xs:annotation>
                  <xs:documentation>The state in which this coverage is applicable, if state-specific.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns3:CoverageType">
                <xs:annotation>
                  <xs:documentation>Type of coverage. NOTE: when inserting a Coverage this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RUCoverage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
A &lt;code&gt;Coverage&lt;/code&gt; associated with a &lt;code&gt;RiskUnit&lt;/code&gt;.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Coverage">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="RiskUnit" nillable="true" type="tns2:RiskUnit">
                <xs:annotation>
                  <xs:documentation>RiskUnit associated with the coverage.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfRUCoverage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:RUCoverage[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RiskUnit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Supertype for all risk units.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClassCode" nillable="true" type="tns2:ClassCode">
                <xs:annotation>
                  <xs:documentation>The Class Code (if any) assigned to this risk unit</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Coverages" nillable="true" type="tns2:ArrayOfRUCoverage">
                <xs:annotation>
                  <xs:documentation>List of coverages directly related to the risk unit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of this risk</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the risk in an external policy system</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RUNumber" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of the risk unit on the policy. NOTE: when inserting a RiskUnit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TripRU" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A RiskUnit that has travel legs associated with it.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:RiskUnit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date this trip will end</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GeographicalRegion" nillable="true" type="tns3:GeographicalRegion">
                <xs:annotation>
                  <xs:documentation>Geographical regions for travel</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date this trip will start</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TripDescription" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A brief description of the trip</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BaggageIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving some kind of baggage </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:MobilePropertyIncident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BaggageMissingFrom" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date/time the baggage was discovered to be missing</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BaggageRecoveredOn" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date/time the baggage was recovered</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BaggageType" nillable="true" type="tns3:BaggageType">
                <xs:annotation>
                  <xs:documentation>Type of baggage</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CarrierCompensated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if the carrier compensated the claimant for the baggage loss or delay</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CarrierCompensatedAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount the carrier compensated for the baggage loss or delay</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DelayOnly" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if this is a delay only loss</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RelatedTripRU" nillable="true" type="tns2:TripRU">
                <xs:annotation>
                  <xs:documentation>Related trip</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MobilePropertyIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving some kind of mobile property - vehicle, personal property but not a building.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:PropertyIncident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="LocationAddress" nillable="true" type="tns2:Address">
                <xs:annotation>
                  <xs:documentation>Location address of the incident. Previous fields that made up this address described as 'Location of the Exposed Vehicle'.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossDesc" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Loss occurred if Other is selected Description needed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossOccured" nillable="true" type="tns3:LossOccured">
                <xs:annotation>
                  <xs:documentation>Where Loss occurred</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Citation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Captures a citation information associated with a VehicleIncident. This information includes ticket number,
        code, and type.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CitationAuthority" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Authority who issued the citation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CitationCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Citation code.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CitationNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The ticket number. NOTE: when inserting a Citation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CitationType" nillable="true" type="tns3:CitationType">
                <xs:annotation>
                  <xs:documentation>The type of citation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Incident" nillable="true" type="tns2:Incident">
                <xs:annotation>
                  <xs:documentation>The incident to which this Citation belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCitation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Citation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="VehicleIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Report of an incident involving a vehicle.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:MobilePropertyIncident">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AffdvCmplInd" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Affidavit completed Indicator</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AirbagsDeployed" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not airbags deployed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AirbagsMissing" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Airbags Missing?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AntiThftInd" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Vehicle equipped with anti-theft device Indicator</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Appraisal" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicator for Appraisal</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BodyShopSelected" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicator for Body Shop information</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CitationIssued" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>An indicator if there are citations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Citations" nillable="true" type="tns2:ArrayOfCitation"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Collision" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether vehicle was involved in a collision?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CollisionPoint" nillable="true" type="tns3:CollisionPoint">
                <xs:annotation>
                  <xs:documentation>Point of first impact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ComponentsMissing" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Major Components Missing?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateSalvageAssigned" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date assignment made to salvage team</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateVehicleRecovered" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Whether vehicle has been recovered</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateVehicleSold" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Whether vehicle has been sold</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DriverRelToOwner" nillable="true" type="tns3:PersonRelationType">
                <xs:annotation>
                  <xs:documentation>Relationship of the driver to the vehicle's owner. This is redundant for a first-party loss.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DriverRelation" nillable="true" type="tns3:PersonRelationType">
                <xs:annotation>
                  <xs:documentation>Relationship of the driver to the insured. This is redundant for a first-party loss.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EquipmentFailure" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether or not equipment failure was involved in the accident</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Extrication" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Extrication Required?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FireBurnDash" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Fire Burn the Dash?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FireBurnEngine" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Fire Burn the Engine?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FireBurnWindshield" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Fire Burn the Windshield?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FloodSaltWater" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flood Occur Salt Water?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HitAndRun" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to indicate if a claim involves hit and run</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InteriorMissing" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Any Of The Interior Missing?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LocationInd" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether vehicle location is different from insured's address?  Deprecated: No longer used in the base configuration.  The equivalent of this field in 8.0 is the ServiceAddress of a ServiceRequestInstruction with the 'Auto - Inspect / Repair - Auto body' service.
@deprecated Whether vehicle location is different from insured's address?  Deprecated: No longer used in the base configuration.  The equivalent of this field in 8.0 is the ServiceAddress of a ServiceRequestInstruction with the 'Auto - Inspect / Repair - Auto body' service.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LotNumber" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Mileage100K" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Mileage over 100K?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MinorOnPolicy" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>If the driver involved in accident is a minor, is he/she listed in the policy?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MovePermission" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether permission to move the vehicle has been received</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OdomRead" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Odometer reading</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OwnerRetainingSalvage" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to indicate if Owner will retain the salvaged car or not</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OwnersPermission" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the vehicle was driven with the owner's permission.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentageDrivenByMinor" nillable="true" type="tns3:PercentageDriven">
                <xs:annotation>
                  <xs:documentation>% of time vehicle used by the minor</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PhantomVehicle" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Unknown 3rd party vehicle involved or not(e.g. Hit and Run).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RecovClassType" nillable="true" type="tns3:RecovClassType">
                <xs:annotation>
                  <xs:documentation>Describes which parts or recovered vehicle were stripped</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RecovCondType" nillable="true" type="tns3:RecovCondType">
                <xs:annotation>
                  <xs:documentation>Describes which general condition of vehicle upon recovery</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RecovDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the vehicle was recovered</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RecovInd" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Recovery Indicator</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RecovState" nillable="true" type="tns3:State">
                <xs:annotation>
                  <xs:documentation>State (aka Territory) where the vehicle upon recovery</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RecoveryLocation" nillable="true" type="tns2:Address">
                <xs:annotation>
                  <xs:documentation>The Address at which the recovery was made.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RentalAgency" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Vehicle Rental Agency. Deprecated: No longer used in the base configuration.  The equivalent of this field in 8.0 is the Specialist of a ServiceRequest with the 'Auto - Other - Car rental' service.
@deprecated Vehicle Rental Agency. Deprecated: No longer used in the base configuration.  The equivalent of this field in 8.0 is the Specialist of a ServiceRequest with the 'Auto - Other - Car rental' service.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RentalBeginDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the vehical rental begins</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RentalDailyRate" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Vehicle Rental Daily Rate</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RentalEndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>date the vehicle rental ends</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RentalRequired" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicator for vehicle rental requirement.  Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Auto - Other - Car rental' service.
@deprecated Indicator for vehicle rental requirement.  Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Auto - Other - Car rental' service.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RentalReserveNo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Vehicle rental Reservation Number</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RepWhereDisInd" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Repaired where disabled indicator.  Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Auto - Inspect / Repair - Auto body' service.
@deprecated Repaired where disabled indicator.  Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Auto - Inspect / Repair - Auto body' service.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SalvageCompany" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="SalvageNet" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Net salvage recovery</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SalvagePrep" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Vehicle prep fees</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SalvageProceeds" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount vehicle was sold for</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SalvageStorage" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Salvage storage</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SalvageTitle" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Title fees</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SalvageTow" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Towing fee</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Speed" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Speed of vehicle at impact, in MPH.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StorageAccrInd" nillable="true" type="tns3:YesNo"/>
              <xs:element maxOccurs="1" minOccurs="0" name="StorageFclty" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="StorageFeeAmt" nillable="true" type="tns2:CurrencyAmount"/>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalLoss" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the the vehicle is a total loss.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalLossPoints" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Total Loss Calculated Points</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TrafficViolation" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Did the vehicle involved in the accident violate traffic?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehCondType" nillable="true" type="tns3:VehCondType"/>
              <xs:element maxOccurs="1" minOccurs="0" name="VehLockInd" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Vehicle locked Indicator</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehStolenInd" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Vehicle stolen Indicator</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehTowedInd" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Auto - Other - Towing service'.
@deprecated Deprecated: No longer used in the base configuration.  The equivalent of a true value for this field in 8.0 is the presence of a ServiceRequest with the 'Auto - Other - Towing service'.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Vehicle" nillable="true" type="tns2:Vehicle">
                <xs:annotation>
                  <xs:documentation>Vehicle associated with the incident.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleACV" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Vehicle's actual cash value</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleAge10Years" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Vehicle Ten Years Old?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleAge5Years" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Vehicle Five Years Old?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleDirection" nillable="true" type="tns3:VehicleDirection">
                <xs:annotation>
                  <xs:documentation>Direction the vehicle was traveling at impact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleDriveable" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Vehicle Driveable?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleLocation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Current location of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleLossParty" nillable="true" type="tns3:LossPartyType">
                <xs:annotation>
                  <xs:documentation>The loss party; generally either first- or third-party loss.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleOperable" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicator to state if a vehicle is operable or not</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleParked" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Was the vehicle parked at the time of the loss?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehiclePolStatus" nillable="true" type="tns3:VehiclePolicyStatus">
                <xs:annotation>
                  <xs:documentation>Policy Status of Vehicle</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleRollOver" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Vehicle Roll Over?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleSubmerged" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Vehicle Fully Submerged?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleTitleRecvd" nillable="true" type="tns3:YesNo"/>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleTitleReqd" nillable="true" type="tns3:YesNo"/>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleType" nillable="true" type="tns3:VehicleType">
                <xs:annotation>
                  <xs:documentation>How the vehicle is related to the insured</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleUseReason" nillable="true" type="tns3:ReasonForUse">
                <xs:annotation>
                  <xs:documentation>Reason for vehicle use</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaterLevelDash" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Water Level Reach Dash?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaterLevelSeats" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Water Level Reach Seats?</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MetroReport" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
            MetroReport entity corresponds to the report obtained from Metropolitan Reporting Bureau. MetroReport
             contains some required data fields for requesting or receiving message from Metropolitan Reporting Bureau
             (such as loss description, sent date and status). It also has a reference to the generated document.
             A MetroReport is associated with a single claim.
            
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AgentCity" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>City of investigating agency</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgentName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of Investigating Agency that issued the report</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgentState" nillable="true" type="tns3:State">
                <xs:annotation>
                  <xs:documentation>State of investigating Agency.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CreateDeferredActivity" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flag to indicate if Deferred Activity should be created or not.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CreateHoldActivity" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flag to indicate if Hold Activity should be created or not.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateOfDeath" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of death for the deceased</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateReported" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date Reported</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeceasedContact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>Contact for the deceased</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DelayMemoURL" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The URL link to the delay memo when the status is deferred</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Doc" nillable="true" type="tns2:Document">
                <xs:annotation>
                  <xs:documentation>The report document associated with this MetroReport, if it is stored in our database. Most users should use the Document property instead of this one, as this DocID will usually be null if the IDocumentMetadataSource plugin is in use</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocumentURL" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The URL link to the document provided by Metro</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorMessage" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Error message return from Metro if failed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ForceDuplicate" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flag to indicate if a metro report should be requested regardless of a duplicate request.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InformationURL" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The URL link to the additional information needed from the customer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossDescription" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Loss Description</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossType" nillable="true" type="tns3:LossType">
                <xs:annotation>
                  <xs:documentation>The type of the Loss (Auto, Property, .. etc)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MetroAgency" nillable="true" type="tns3:MetroAgencyType">
                <xs:annotation>
                  <xs:documentation>Investigating Agency Type</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MetroControlNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Metro Control number assigned by Metro Reporting</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MetroProcessID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Metro process ID - Identifying information for MetroReporting XML Support </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MetroReportType" nillable="true" type="tns3:MetroReportType">
                <xs:annotation>
                  <xs:documentation>Type of metro reports (Auto Accident, Fire-Home etc)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MetroTransactionID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Metro transaction ID - Unique number assigned to this order</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the metro report</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficerName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of officer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Precinct" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Precinct, troop number or name/badge # of officer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReceivedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date received the report</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Report Number assigned by issuing Police-Fire Agency</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SentDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date sent out the order file</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns3:MetroReportStatus">
                <xs:annotation>
                  <xs:documentation>Status of the Official Report</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ThirdPartyVehicle" nillable="true" type="tns2:VehicleIncident">
                <xs:annotation>
                  <xs:documentation>The third party vehicle associated with this MetroReport, for auto report types.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleIncident" nillable="true" type="tns2:VehicleIncident">
                <xs:annotation>
                  <xs:documentation>The vehicle associated with this MetroReport, for auto report types.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MetroReportWorkflow" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Workflows related to metro reports</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:ClaimWorkflow">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="MetroReport" nillable="true" type="tns2:MetroReport">
                <xs:annotation>
                  <xs:documentation>The Metro Report with which this workflow is associated. NOTE: when inserting a MetroReportWorkflow this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimWorkflow" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Base workflow subtype for all workflows that are linked to a claim</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Workflow">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>The Claim with which this workflow is associated.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Attribute" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Describes a name-value pair. An administrator can create an Attribute entity to represent custom user characteristics,
        for example, Spanish. Then, the administrator can associate the Attribute with one or more system users.
        Studio users can reference an Attribute from Studio when writing rules.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element name="Active" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether or not this attribute is currently in use.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A description of the attribute.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the attribute. NOTE: when inserting a Attribute this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns3:UserAttributeType">
                <xs:annotation>
                  <xs:documentation>The type of the attribute. NOTE: when inserting a Attribute this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AttributeUser" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Links an Attribute entity with a User entity. An Attribute is a general-purpose characteristic you can associate with one or more users.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Attribute" nillable="true" type="tns2:Attribute">
                <xs:annotation>
                  <xs:documentation>The associated attribute. NOTE: when inserting a AttributeUser this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateField1" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>General-purpose date field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateField2" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>General-purpose date field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateField3" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>General-purpose date field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns3:State">
                <xs:annotation>
                  <xs:documentation>The state in which this attribute is applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TextField1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>General-purpose text field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TextField2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>General-purpose text field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TextField3" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>General-purpose text field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Value" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The attribute value for this user.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAttributeUser" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AttributeUser[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AuthorityLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Defines a dollar amount limiting a particular financial authority within the system. An AuthorityLimit has an
      associated LimitType indicating what the limit applies to, for example, setting reserves. You can also restrict
      limits to a particular CoverageType or CostType. Each AuthorityLimit belongs to a particular AuthorityProfile. 
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CostType" nillable="true" type="tns3:CostType">
                <xs:annotation>
                  <xs:documentation>If non-null, the limit applies only to this cost type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageType" nillable="true" type="tns3:CoverageType">
                <xs:annotation>
                  <xs:documentation>If non-null, the limit applies only to this coverage type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="LimitAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the limit, in whole dollars. NOTE: when inserting a AuthorityLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LimitType" nillable="true" type="tns3:AuthorityLimitType">
                <xs:annotation>
                  <xs:documentation>The limit type. NOTE: when inserting a AuthorityLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAuthorityLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AuthorityLimit[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AuthorityLimitProfile" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Encompasses a set of AuthorityLimit entities. A user with the proper authority can assign an AuthorityLimitProfile
        to one or more users in the system. A user can have only one assigned AuthorityLimitProfile. As long as an AuthorityLimit
        is in use, it cannot be deleted.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns3:Currency">
                <xs:annotation>
                  <xs:documentation>The currency in which the profile's limits are defined. NOTE: when inserting a AuthorityLimitProfile this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Custom" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is this a custom limit, used by a single user?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the limit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Limits" nillable="true" type="tns2:ArrayOfAuthorityLimit">
                <xs:annotation>
                  <xs:documentation>Limits contained in the profile.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name that identifies the profile. NOTE: when inserting a AuthorityLimitProfile this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Credential" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Maintains a user's system level-security identification. Each user has a corresponding Credential object. This entity
      maintains information related to authorization and authentication on the system. A Credential holds both the user's
      password and controls whether or not the user is active or not. This entity also tracks login attempts.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element name="Active" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this credential is active. Inactive credentials are not allowed to log in.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Password" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User password. NOTE: when inserting a Credential this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="UserName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User login name. NOTE: when inserting a Credential this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RolePrivilege" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Joins a Role with the permissions granted by it.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Permission" nillable="true" type="tns3:SystemPermissionType">
                <xs:annotation>
                  <xs:documentation>Permission granted by the parent role. NOTE: when inserting a RolePrivilege this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfRolePrivilege" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:RolePrivilege[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Role" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A set of permissions defining a user Role. A User can be given multiple Roles and will be granted
        the union of all their Role permission sets.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CarrierInternalRole" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, this role is applicable to users internal to the carrier organization.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>An optional, more detailed description of the role.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Displayable name of the role. NOTE: when inserting a Role this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Privileges" nillable="true" type="tns2:ArrayOfRolePrivilege">
                <xs:annotation>
                  <xs:documentation>Privileges granted by membership in this role.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RoleType" nillable="true" type="tns3:RoleType">
                <xs:annotation>
                  <xs:documentation>Type of the role.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UserRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Joins a User with their security roles. The system creates this entity when you assign a Role to a User.
        The User will be granted the union of all the permissions granted by their Roles.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Role" nillable="true" type="tns2:Role">
                <xs:annotation>
                  <xs:documentation>Security role granted to the user. NOTE: when inserting a UserRole this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfUserRole" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:UserRole[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="User" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Internal system users.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Attributes" nillable="true" type="tns2:ArrayOfAttributeUser">
                <xs:annotation>
                  <xs:documentation>Attributes for the user.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AuthorityProfile" nillable="true" type="tns2:AuthorityLimitProfile">
                <xs:annotation>
                  <xs:documentation>Authority limit profile for this user</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns2:UserContact">
                <xs:annotation>
                  <xs:documentation>Contact entry related to the user. NOTE: when inserting a User this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Credential" nillable="true" type="tns2:Credential">
                <xs:annotation>
                  <xs:documentation>Security credential for the user.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultCountry" nillable="true" type="tns3:Country">
                <xs:annotation>
                  <xs:documentation>User's default country</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultPhoneCountry" nillable="true" type="tns3:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>User's default phone country</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Department" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User's department within the company.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExperienceLevel" nillable="true" type="tns3:UserExperienceType">
                <xs:annotation>
                  <xs:documentation>Experience level of the user.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="JobTitle" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>User's job title.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Language" nillable="true" type="tns3:LanguageType">
                <xs:annotation>
                  <xs:documentation>User's preferred language.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Locale" nillable="true" type="tns3:LocaleType">
                <xs:annotation>
                  <xs:documentation>User's preferred locale.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossType" nillable="true" type="tns3:LossType">
                <xs:annotation>
                  <xs:documentation>High level claim type (for example, Auto or Property).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NewlyAssignedActivities" nillable="true" type="soapenc:int"/>
              <xs:element maxOccurs="1" minOccurs="0" name="OffsetStatsUpdateTime" nillable="true" type="xsd:dateTime"/>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns3:PolicyType">
                <xs:annotation>
                  <xs:documentation>High level policy type (for example, Auto or Property).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QuickClaim" nillable="true" type="tns3:QuickClaimDefault">
                <xs:annotation>
                  <xs:documentation>Default quick claim values categorized by LossType.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Roles" nillable="true" type="tns2:ArrayOfUserRole">
                <xs:annotation>
                  <xs:documentation>Security roles granted to the user.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpatialPointDenorm" nillable="true" type="tns2:SpatialPoint">
                <xs:annotation>
                  <xs:documentation>Denormalized column from UserContact.PrimaryAddress.SpatialPoint</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TimeZone" nillable="true" type="tns3:TimeZoneType">
                <xs:annotation>
                  <xs:documentation>User's time zone.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Message" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
An active message created by the event fired rules in response to an event in the ClaimCenter system.  A message is intended for a particular destination that can be determined by &lt;b&gt;getDestinationID&lt;/b&gt;.     Messages carry a payload containing the data to be sent to the destination.  Messages are dispatched using a MessageTransport plugin specified in config.xml, which is responsible for sending the message to the receiving system. See the ClaimCenter Integration documentation for more details about the lifecycle of Messages.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AckCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be defined when acknowledging.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be defined when acknowledging.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AckCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of acks received. NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AfterSendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of afterSend method.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendLockTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of attempting to get lock before the call to beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendLockedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of after acquired lock before the call to beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Associated claim, if applicable.  If null, then the associated object is a cross-claim object.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CreationTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of creating the message. NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short description of the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DestinationID" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Identifies the destination to send this message to. NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DuplicateCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of duplicate errors received.  This field is obsolete, it is not applicable to active messages.
@deprecated Number of duplicate errors received.  This field is obsolete, it is not applicable to active messages.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorCategory" nillable="true" type="tns3:ErrorCategory">
                <xs:annotation>
                  <xs:documentation>Type of error if the message is in error.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorDescription" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Detailed description of error condition (set in the destination).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EventName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the event. NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventRootKey" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Key of event root/cause, encoded as type:id.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="KeyMap" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A CSV representation of the key-&gt;object ID map.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LateBound" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the payload contains late-bound fields.  This field is obsolete and no longer set/used.
@deprecated Whether the payload contains late-bound fields.  This field is obsolete and no longer set/used.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MessageCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be defined during message creation.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be defined during message creation.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ObjectKey" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Key of template root object/SOO, encoded as type:id.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalInt" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalMoney" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalString" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Payload" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Contents of the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QueryTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of of query selecting message to be processed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RetryCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of times message has been retried.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RetryTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time in the future at which to retry the message in error, applicable only to retryable error messages.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendLockTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of attempting to lock before the sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendLockedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of after acquired lock lock before the sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SendOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order in which to send messages. NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SenderRefID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Optional sender reference set at message send time.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Status" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Message status: 1-Pending send; 2-Pending ack; 3-Error; 4-Retryable error NOTE: when inserting a Message this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="User" nillable="true" type="tns2:User">
                <xs:annotation>
                  <xs:documentation>The user who created this message.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MessageHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
A completed message     
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AckCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be defined when acknowledging.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be defined when acknowledging.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AckCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of acks received. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AckedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of ack.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AfterSendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of afterSend method.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendLockTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of attempting to get lock before the call to beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendLockedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of after acquired lock before the call to beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeforeSendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of beforeSend transformations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Associated claim, if applicable.  If null, then the associated object is a cross-claim object.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Associated contact, if applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CreationTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of creating the message. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short description of the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DestinationID" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Identifies the message destination to send this message to. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DuplicateCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of duplicate errors received.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorCategory" nillable="true" type="tns3:ErrorCategory">
                <xs:annotation>
                  <xs:documentation>Type of error if the message is in error.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorDescription" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Detailed description of error condition (set in the message destination).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EventName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the event. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventRootKey" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Key of event root/cause, encoded as type:id.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="KeyMap" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A CSV representation of the key-&gt;object ID map.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LateBound" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the payload contains late-bound fields.  This field is obsolete and no longer set/used.
@deprecated Whether the payload contains late-bound fields.  This field is obsolete and no longer set/used.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MessageCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be defined during message creation.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be defined during message creation.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ObjectKey" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Key of template root object, encoded as type:id.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalInt" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalMoney" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OptionalString" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
@deprecated Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="OrigMsgId" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Identifies the id of the original message. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Payload" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Contents of the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QueryTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of of query selecting message to be processed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RetryCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of times message has been retried.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RetryTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time in the future at which to retry the message in error, applicable only to retryable error messages.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendLockTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of attempting to lock before the sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendLockedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of after acquired lock lock before the sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SendOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order in which to send messages. NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SendTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time of completion of sending the message.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SenderRefID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Optional sender reference set at message send time.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Status" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Message status: 10-Acked; 11-Error cleared; 12-Error retried; 13-Skipped NOTE: when inserting a MessageHistory this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="User" nillable="true" type="tns2:User">
                <xs:annotation>
                  <xs:documentation>The user who created this message.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Workflow" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Table for workflow definitions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActiveState" nillable="true" type="tns3:WorkflowActiveState">
                <xs:annotation>
                  <xs:documentation>Specific state of this workflow if active (e.g. running, waitmanual, waitactivity).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Caller" nillable="true" type="tns2:Workflow">
                <xs:annotation>
                  <xs:documentation>What workflow called this workflow</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CurrentAction" nillable="true" type="tns3:WorkflowActionType">
                <xs:annotation>
                  <xs:documentation>What action is the Workflow currently trying to take?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CurrentBranch" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ID of the branch the workflow is currently trying to execute.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CurrentStep" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ID of the workflow's current step.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EnteredStep" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time when the Workflow entered the current step</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ForceTimeoutBranch" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ID of the next workflow timeout branch to take.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Handler" nillable="true" type="tns3:WorkflowHandler">
                <xs:annotation>
                  <xs:documentation>What infrastructure handles this Workflow? NOTE: when inserting a Workflow this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LogEntryCounter" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Counter for assigning a sort order to log entries</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Message" nillable="true" type="tns2:Message">
                <xs:annotation>
                  <xs:documentation>Integration message associated with this workflow</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MessageHistory" nillable="true" type="tns2:MessageHistory">
                <xs:annotation>
                  <xs:documentation>Completed integration message associated with this workflow</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PreviousStep" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ID of the step the workflow was on BEFORE the current step.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProcessVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Version of the workflow process used, if this uses an internal workflow</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns3:WorkflowState">
                <xs:annotation>
                  <xs:documentation>State of this workflow (e.g., 'started', 'completed', etc.) NOTE: when inserting a Workflow this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StepExecTime" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Total system time spent actively processing the current step, in millis.  Does not include time spent waiting on triggers, activities, or timeouts</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TestTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>What time the Workflow thinks it is</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TimeoutTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date/time when current step will time out.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TriggerInvoked" nillable="true" type="tns3:WorkflowTriggerKey">
                <xs:annotation>
                  <xs:documentation>Marks the key of a Trigger that was invoked, or null</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Activity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;Assigns work, reminds a user to complete a task, or provides notification of an event.
      An activity is typically associated with a claim, but some activities may also be associated with Service Requests, Exposures or Contacts (claimants).
      The Guidewire platform defines an ActivityBase entity that ClaimCenter can extend. Each activity is instantiated from an actvity template or pattern.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivityClass" nillable="true" type="tns3:ActivityClass">
                <xs:annotation>
                  <xs:documentation>The class of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalIssue" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reason approval is needed. This field should only be set for approval activities.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalRationale" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Rationale for approving/rejecting the activity. This field should only be set for approval activities.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Approved" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the activity is approved. This is null if not relevant or undecided.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AutoGenerated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the activity was generated automatically; never fully implemented. Instead, customers can create an extension field and set it after creating an activity in a rule to indicate how the activity was created
@deprecated True if the activity was generated automatically; never fully implemented. Instead, customers can create an extension field and set it after creating an activity in a rule to indicate how the activity was created
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CloseUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user who closed this activity. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Command" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A Gosu command to execute for this activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocumentTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The id of an associated document template. The id and language gets passed to IDocumentTemplateSource to retrieve the DocumentTemplateDescriptor. This property should not be used by applications.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Documents" nillable="true" type="tns2:ArrayOfActivityDocument">
                <xs:annotation>
                  <xs:documentation>Collection of documents linked to this activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The id of an associated email template. The id gets passed to IEmailTemplateSource to retrieve the EmailTemplateDescriptor.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time the event is scheduled to terminate or null if the activity is not a scheduled event.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>When the activity will be escalated if it isn't yet completed; this is null if the activity is never escalated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExternallyOwned" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the activity is externally owned.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Importance" nillable="true" type="tns3:ImportanceLevel">
                <xs:annotation>
                  <xs:documentation>The importance level of this activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LogicalName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Logical name of the activity.  Used by the internal workflow engine.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Mandatory" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the activity must be completed and cannot be skipped.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Priority" nillable="true" type="tns3:Priority">
                <xs:annotation>
                  <xs:documentation>Priority of the activity with respect to other activities. NOTE: when inserting a Activity this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Recurring" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this activity is recurring.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ShortSubject" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A very brief title for the activity e.g., displayable in a calendar; this is associated with its pattern.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Subject" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A brief title for the activity; this is associated with its pattern.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>If this activity is a task, time by which a person should complete the task; if not completed by this time, the task is considered overdue. If this activity is an event, the time the event is scheduled to start.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns3:ActivityType">
                <xs:annotation>
                  <xs:documentation>Type of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Workflow" nillable="true" type="tns2:Workflow">
                <xs:annotation>
                  <xs:documentation>Optional pointer to the workflow this activity is associated with.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfActivity" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Activity[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimISOMatchReport" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Details of a match for a Claim returned by the Insurance Office Services (ISO) ClaimSearch service.
      If ISO ClaimSearch integration is enabled then descriptions of new or changed Claims are sent to the
      ISO ClaimSearch service to see if any suspiciously similar claims have been filed at other companies.
      If ISO ClaimSearch returns a "match report", indicating that one or more similar claims have been
      filed, then the report is added to the claim as a document and the most important information from
      each reported match is stored in an ISOMatchReport entity.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Claim number of matching claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateOfLoss" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Loss date of matching claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddress1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>1st line of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddress2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>2nd line of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddress3" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>3rd line of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddressCity" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>City of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddressPostalCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Postal code of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerAddressState" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>State of insuring company address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerPhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Phone number of insuring company.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuringCompany" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Insuring company of matching claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="MatchReasons" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reasons why claim/exposure matched at ISO. NOTE: when inserting a ClaimISOMatchReport this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Policy number of matching claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Policy type of matching claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReceivedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time match report was received.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfClaimISOMatchReport" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ClaimISOMatchReport[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WCWaitingPeriod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        For WC Claims, this array captures the days comprising the waiting period on the claim including whether the
        days withheld have been repaid.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimWorkComp" nillable="true" type="tns2:ClaimWorkComp">
                <xs:annotation>
                  <xs:documentation>Claim this diagnosis is related to</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateEnded" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date this portion of the Waiting Period was ended</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateStarted" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date this portion of the Waiting Period was started</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaitingDaysApplied" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Number of days applied to Waiting Period</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaitingDaysRepaid" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Number of days Waiting Days retroactiviey paid</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfWCWaitingPeriod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:WCWaitingPeriod[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimWorkComp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Stores worker's compensation information related to a claim.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivityPerformed" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Field to describe the specific activity the injured worker was performing.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ClassCodeByLocation" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is Class Code filtered by Location</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Compensable" nillable="true" type="tns3:CompensabilityDecision">
                <xs:annotation>
                  <xs:documentation>Indicates status of the compensability decision</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeathReport" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this claim has a report of death of the injured worker.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmployerLiability" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this claim has a possible Employer's Liability aspect.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EquipmentUsed" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Field to describe the equipment, materials or chemicals the employee was using when event or exposure occurred.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IllnessRelatedToExposure" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is claim being made for illness related to chemical or material exposure?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalReport" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this is claim has a report that the injured worker requires Medical treatment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TimeLossReport" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this is claim has a report that the injured worker will lose time from work.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaitingPeriodApplied" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Should the Waiting Period be applied?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaitingPeriodDetails" nillable="true" type="tns2:ArrayOfWCWaitingPeriod">
                <xs:annotation>
                  <xs:documentation>Used to track the specific days indicated as the Waiting Period on a WC Claim</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ConcurrentEmployment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores details of an employee's concurrent employment for Workers' Compensation claim.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompanyName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of employer company.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>End date of employment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FullTime" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Full time employment?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="JobTitle" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Job title.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Start date of employment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WeeklyWage" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Weekly wage during employment</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfConcurrentEmployment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ConcurrentEmployment[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContribFactor" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
          Details a variable which played a part in the cause of a loss. ContribFactor entities relate to a single Claim.
        
      </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ContFactText" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>When other is selected Text will display to be filled in</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PriContributingFactors" nillable="true" type="tns3:PriContributingFactors">
                <xs:annotation>
                  <xs:documentation> NOTE: when inserting a ContribFactor this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ResContributingFactors" nillable="true" type="tns3:ResContributingFactors"/>
              <xs:element maxOccurs="1" minOccurs="0" name="SecContributingFactors" nillable="true" type="tns3:SecContributingFactors"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContribFactor" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContribFactor[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DrugPrescribed" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Maintains medication information related to a Workmen's Compensation claim. This entity tracks the Contact
        prescribing the drug, the drug name, and expiration on the prescription.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Fkey to Claim entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimContact" nillable="true" type="tns2:ClaimContact">
                <xs:annotation>
                  <xs:documentation>Fkey to ClaimContact entity. NOTE: when inserting a DrugPrescribed this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DatePrescribed" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date drug was prescribed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateScriptExpires" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date drug prescription expires.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DrugName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of drug prescribed. NOTE: when inserting a DrugPrescribed this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDrugPrescribed" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DrugPrescribed[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfEvaluation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Evaluation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfIncident" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Incident[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfMatter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Matter[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MedicalContactStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Supports Workmen's Compensation claim functionality. The MedicalContactStatus entity tracks contact between a
        claimant and a Contact providing a medical service.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Foreign key to Claim entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimContact" nillable="true" type="tns2:ClaimContact">
                <xs:annotation>
                  <xs:documentation>Foreign key to Contact entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CommunicationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of contact. NOTE: when inserting a MedicalContactStatus this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InfoSource" nillable="true" type="tns3:InfoSource">
                <xs:annotation>
                  <xs:documentation>Medical information source. NOTE: when inserting a MedicalContactStatus this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalTreatmentStatus" nillable="true" type="tns3:MedicalTreatmentStatus">
                <xs:annotation>
                  <xs:documentation>Medical treatment status.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NextFollowUpDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of next follow-up.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TreatmentOutcome" nillable="true" type="tns3:TreatmentOutcome">
                <xs:annotation>
                  <xs:documentation>Medical treatment outcome.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfMedicalContactStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:MedicalContactStatus[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MedicalTreatment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Tracks treatments related to a Workmen's Compensation claim. The MedicalTreatment entity tracks treatment by
        internal classification of diseases (ICD) codes, quantity, and contact delivering the treatment.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element name="ActionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of the medical action. NOTE: when inserting a MedicalTreatment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovedTreatment" nillable="true" type="tns3:ApprovedTreatment">
                <xs:annotation>
                  <xs:documentation>Approved treatment for injury. NOTE: when inserting a MedicalTreatment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Foreign key to Claim entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimContact" nillable="true" type="tns2:ClaimContact">
                <xs:annotation>
                  <xs:documentation>Foreign key to ClaimContact entity. NOTE: when inserting a MedicalTreatment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ICD1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ICD-1.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ICD2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ICD-2.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ICD3" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ICD-3.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ICD4" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>ICD-4.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TreatmentQuantity" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Quantity of treatments approved.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfMedicalTreatment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:MedicalTreatment[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfMetroReport" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:MetroReport[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfNegotiation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Negotiation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Official" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents a police officer, fireman, coroner, and so forth associated with a Claim. The details of this entity
        include the official's type, name, and number of the report created.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of official.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialType" nillable="true" type="tns3:OfficialType">
                <xs:annotation>
                  <xs:documentation>Type of official (fire, police etc).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Official report number.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfOfficial" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Official[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OtherBenefit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Supports Workmen's Compensation functionality. This entity details the amount and reason for miscellaneous
        financial benefits paid an a claim.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Amount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>End date of benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InitialContact" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of contact for other benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReferenceNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reference number for benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Start date of benefit.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfOtherBenefit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:OtherBenefit[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PropertyFireDamage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>    Represents details about fire damage to a property
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Arson" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to indicate if a claim involves arson</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FireDeptResponded" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Did the fire department respond to the damage?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FireSource" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the source of the fire</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HowWasFireDiscovered" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of how the fire was discovered</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsAnyoneInjured" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Was anyone injured?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsHomeHabitable" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Can the insured live at home?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsHomeSecure" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is the home secure?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SmokeDamageOnly" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is the damage only from smoke and not fire?</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PropertyWaterDamage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>    Represents details about water damage to a property
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HasWaterBeenTurnedOff" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Has the water to the house/room been turned off?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsRoofProtected" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is the roof damage protected?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaterSource" nillable="true" type="tns3:WaterSource">
                <xs:annotation>
                  <xs:documentation>Where is the water entering the property from?</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfRIAgreementGroup" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:RIAgreementGroup[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfQuestionChoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:QuestionChoice[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="QuestionFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A filter for this question set that must pass in order for the question to be displayed in the UI.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element name="Answer" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a QuestionFilter this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FilterQuestion" nillable="true" type="tns2:Question">
                <xs:annotation>
                  <xs:documentation>The question on which answer the Question depends NOTE: when inserting a QuestionFilter this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Question" nillable="true" type="tns2:Question">
                <xs:annotation>
                  <xs:documentation>Fk used to support the array from Question</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfQuestionFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:QuestionFilter[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="QuestionSetFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    A filter that controls the visibility of the question set based on the answer to a given question. While the QuestionSetFilter
    entity exists in the product, it is no longer in use and may be removed in a future release.  QuestionSetFilter can be added 
    as an extension for customers that still require it if and when it is removed.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element name="Answer" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a QuestionSetFilter this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FilterQuestion" nillable="true" type="tns2:Question">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a QuestionSetFilter this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionSet" nillable="true" type="tns2:QuestionSet">
                <xs:annotation>
                  <xs:documentation>Fk to support the array from QuestionSet</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfQuestionSetFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:QuestionSetFilter[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfQuestion" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Question[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="QuestionSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A set of questions</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a QuestionSet this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Priority" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Sort order priority</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionSetFilters" nillable="true" type="tns2:ArrayOfQuestionSetFilter"/>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionSetType" nillable="true" type="tns3:QuestionSetType">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a QuestionSet this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Questions" nillable="true" type="tns2:ArrayOfQuestion"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ShouldRetireFromImportXML" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If set to true, will retire this question set during the import xml process.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SubQuestion" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A piece of text to be displayed in a bulleted list bellow a question.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Priority" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Sort order priority</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Question" nillable="true" type="tns2:Question"/>
              <xs:element name="Text" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a SubQuestion this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSubQuestion" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SubQuestion[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Question" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A Question</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Choices" nillable="true" type="tns2:ArrayOfQuestionChoice">
                <xs:annotation>
                  <xs:documentation>Alternative possible answers.  Only used if QuestionType == Choice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultAnswer" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Indent" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>number of spaces to indent</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Priority" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Sort order priority</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionFilters" nillable="true" type="tns2:ArrayOfQuestionFilter"/>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionFormat" nillable="true" type="tns3:QuestionFormat">
                <xs:annotation>
                  <xs:documentation>What format of question to display</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionSet" nillable="true" type="tns2:QuestionSet"/>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionType" nillable="true" type="tns3:QuestionType">
                <xs:annotation>
                  <xs:documentation>What kind of question is this NOTE: when inserting a Question this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Required" nillable="true" type="soapenc:boolean"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ShouldRetireFromImportXML" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If set to true, will retire this question set during the import xml process.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubQuestions" nillable="true" type="tns2:ArrayOfSubQuestion"/>
              <xs:element name="Text" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a Question this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="QuestionChoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>One choice in the set of choices for a question of type Choice</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Code" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a QuestionChoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a QuestionChoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a QuestionChoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Priority" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Sort order priority</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Question" nillable="true" type="tns2:Question">
                <xs:annotation>
                  <xs:documentation>Question for which this is a possible answer</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Score" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>What "score" to give answers that use this choice.  What the score signifies, if anything, depends on how the QuestionSet is used.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Answer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Text, Logical and Numeric Answers supplied in a specific Question Set. Question Sets are groupings of questions utilized in the risk qualification process or to develop supplemental underwriting information. Specific to Claim Center</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AnswerSet" nillable="true" type="tns2:AnswerSet">
                <xs:annotation>
                  <xs:documentation>Fk to the Answer Set this answer corresponds to</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BooleanAnswer" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Yes / no component of answer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChoiceAnswer" nillable="true" type="tns2:QuestionChoice">
                <xs:annotation>
                  <xs:documentation>Choice of the answer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateAnswer" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The answer in date form.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerAnswer" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Numeric component of answer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Question" nillable="true" type="tns2:Question">
                <xs:annotation>
                  <xs:documentation>Question that this answer answers NOTE: when inserting a Answer this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TextAnswer" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Either the answer's text.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAnswer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Answer[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReviewQAnswerSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Table linking Reviews to QuestionSet</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AnswerSet" nillable="true" type="tns2:AnswerSet">
                <xs:annotation>
                  <xs:documentation>Associated AnswerSet.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ElementOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ReviewQAnswerSet this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionSet" nillable="true" type="tns2:QuestionSet">
                <xs:annotation>
                  <xs:documentation>Associated QuestionSet. NOTE: when inserting a ReviewQAnswerSet this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Review" nillable="true" type="tns2:Review">
                <xs:annotation>
                  <xs:documentation>Associated Review.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReviewCategory" nillable="true" type="tns3:ReviewCategory">
                <xs:annotation>
                  <xs:documentation>Category of this QuestionSet.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfReviewQAnswerSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ReviewQAnswerSet[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AnswerSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>This is a set of answers that correspond to the user filling out one question set form</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Answers" nillable="true" type="tns2:ArrayOfAnswer"/>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionSet" nillable="true" type="tns2:QuestionSet">
                <xs:annotation>
                  <xs:documentation>Fk to the Question Set this answer set corresponds to NOTE: when inserting a AnswerSet this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReviewQAnswerSets" nillable="true" type="tns2:ArrayOfReviewQAnswerSet">
                <xs:annotation>
                  <xs:documentation>Internal use by the SPM/Review functionality. Do not modify.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SIUAnswerSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Join table between the answer set and the claim, to allow for multiple SIU answer sets on the same claim</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AnswerSet" nillable="true" type="tns2:AnswerSet">
                <xs:annotation>
                  <xs:documentation>Fk to the AnswerSet NOTE: when inserting a SIUAnswerSet this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Fk to the Claim</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSIUAnswerSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SIUAnswerSet[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SITrigger" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Describes a trigger for a special investigation. Tracks the Claim that generated the trigger and the rule
        which was triggered.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AdditionalInformation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Additional information being tracked.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Foreign key to Claim entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposure" nillable="true" type="tns2:Exposure">
                <xs:annotation>
                  <xs:documentation>Foreign key to exposure table.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PointValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Point value of this trigger - as defined in rules.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TriggerDescription" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Rule that was triggered.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSITrigger" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SITrigger[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestQuote" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A quote received from a specialist for a Service Request.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:ServiceRequestStatement">
            <xs:sequence>
              <xs:element name="ExpectedDaysToPerformService" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of business days the specialist expects it will take to perform the service. NOTE: when inserting a ServiceRequestQuote this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestInvoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An invoice received from a specialist for a Service Request.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:ServiceRequestStatement">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Check" nillable="true" type="tns2:Check">
                <xs:annotation>
                  <xs:documentation>The check that paid this invoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaidBy" nillable="true" type="tns2:User">
                <xs:annotation>
                  <xs:documentation>The user who paid this invoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The time at which this invoice was paid.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns3:ServiceRequestInvoiceStatus">
                <xs:annotation>
                  <xs:documentation>The current invoice status NOTE: when inserting a ServiceRequestInvoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestStatement" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An estimation (such as a quote or invoice) received from a specialist and related to a Service Request.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element name="Amount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Statement amount NOTE: when inserting a ServiceRequestStatement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The time at which this statement was approved.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovedBy" nillable="true" type="tns2:User">
                <xs:annotation>
                  <xs:documentation>The user who approved this statement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeclinedReason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reason the statement was declined</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The description for the statement NOTE: when inserting a ServiceRequestStatement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReferenceNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A string identifier assigned to this ServiceRequestStatement by the specialist. The value of this field may only be meaningful to the specialist.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequest" nillable="true" type="tns2:ServiceRequest">
                <xs:annotation>
                  <xs:documentation>Service Request the statement is linked to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StatementCreationTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The time at which this statement was created. NOTE: when inserting a ServiceRequestStatement this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatementDocumentLinks" nillable="true" type="tns2:ArrayOfServiceRequestStatementDocumentLink">
                <xs:annotation>
                  <xs:documentation>The join entity that holds the information for documents associated with this statement</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestStatementDocumentLink" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Associates a Service Request Statement to a Document Link.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequestDocumentLink" nillable="true" type="tns2:ServiceRequestDocumentLink">
                <xs:annotation>
                  <xs:documentation>Service Request Document Link the statement is linked to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequestStatement" nillable="true" type="tns2:ServiceRequestStatement">
                <xs:annotation>
                  <xs:documentation>The associated statement for the document link.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfServiceRequestStatementDocumentLink" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ServiceRequestStatementDocumentLink[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestDocumentLink" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Associates a Service Request to a Document. Use ServiceRequest.linkDocument and unlinkDocument to create links between ServiceRequests and documents.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateSpecialistNotified" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date that the specialist was notified about the linked document, or null if the specialist has not been notified.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Document" nillable="true" type="tns2:Document">
                <xs:annotation>
                  <xs:documentation>Associated Document. Warning: even though there is always a Document associated with this entity, this field may be null when the IDocumentMetadataSource plugin is enabled. To reliably get the associated Document, use the LinkedDocument property.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequest" nillable="true" type="tns2:ServiceRequest">
                <xs:annotation>
                  <xs:documentation>Service Request the document is linked to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatementDocumentLinks" nillable="true" type="tns2:ArrayOfServiceRequestStatementDocumentLink">
                <xs:annotation>
                  <xs:documentation>The join entity that holds the information for statements associated with this document</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="VisibleToSpecialist" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this document should be visible to the specialist.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfServiceRequestDocumentLink" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ServiceRequestDocumentLink[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SpecialistServiceParent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ForeignEntity" nillable="true" type="tns2:SpecialistService"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSpecialistServiceParent" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SpecialistServiceParent[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SpecialistServiceCompatibleIncidentType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    The presence of an instance of this entity indicates that the related SpecialistService can be used
    with Incidents extending from the specified Incident subclass. In the base configuration, instances
    of this entity must only be linked to root SpecialistServices.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IncidentType" nillable="true" type="tns3:Incident">
                <xs:annotation>
                  <xs:documentation>The subclass of Incident with which the related SpecialistService is compatible. NOTE: when inserting a SpecialistServiceCompatibleIncidentType this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Service" nillable="true" type="tns2:SpecialistService">
                <xs:annotation>
                  <xs:documentation>The service that is compatible with the Incident type.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSpecialistServiceCompatibleIncidentType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SpecialistServiceCompatibleIncidentType[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SpecialistServiceCompatibleServiceRequestKind" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    The presence of an instance of this entity indicates that the related SpecialistService can be used
    on Service Requests with the specified Kind. In the base configuration, instances of this entity
    must only be linked to leaf SpecialistServices.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Kind" nillable="true" type="tns3:ServiceRequestKind">
                <xs:annotation>
                  <xs:documentation>The Kind with which the related SpecialistService is compatible. NOTE: when inserting a SpecialistServiceCompatibleServiceRequestKind this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Service" nillable="true" type="tns2:SpecialistService">
                <xs:annotation>
                  <xs:documentation>The service that is compatible with the Kind.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSpecialistServiceCompatibleServiceRequestKind" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SpecialistServiceCompatibleServiceRequestKind[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SpecialistService" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A node in the specialist services tree.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element name="Active" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether the service should be used for new service requests.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChildSpecialistServiceParents" nillable="true" type="tns2:ArrayOfSpecialistServiceParent">
                <xs:annotation>
                  <xs:documentation>Array of SpecialistServiceParents corresponding to SpecialistServices for which this is the Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Code" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Unique string identifying this service. NOTE: when inserting a SpecialistService this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompatibleIncidentTypes" nillable="true" type="tns2:ArrayOfSpecialistServiceCompatibleIncidentType">
                <xs:annotation>
                  <xs:documentation>The SpecialistServiceCompatibleIncidentTypes indicating the Incident types with which this service is compatible.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompatibleKinds" nillable="true" type="tns2:ArrayOfSpecialistServiceCompatibleServiceRequestKind">
                <xs:annotation>
                  <xs:documentation>The SpecialistServiceCompatibleServiceRequestKinds indicating the Kinds with which this service is compatible.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the service.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the service. NOTE: when inserting a SpecialistService this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Parent" nillable="true" type="tns2:SpecialistService">
                <xs:annotation>
                  <xs:documentation>Reference to the parent SpecialistService.  Null for top level nodes, which have no parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestInstructionService" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    Links a ServiceRequestInstruction to a service to be performed.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Instruction" nillable="true" type="tns2:ServiceRequestInstruction">
                <xs:annotation>
                  <xs:documentation>The instruction as part of which the linked service should be performed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Service" nillable="true" type="tns2:SpecialistService">
                <xs:annotation>
                  <xs:documentation>The service to be performed. NOTE: when inserting a ServiceRequestInstructionService this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfServiceRequestInstructionService" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ServiceRequestInstructionService[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestInstruction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    Contains a set of instructions to be transmitted to the specialist who will work on a service request.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChangeWhereIntroduced" nillable="true" type="tns2:ServiceRequestChange">
                <xs:annotation>
                  <xs:documentation>Refers to the change where this instruction was added to the service request. NOTE: when inserting a ServiceRequestInstruction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CustomerContact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>The contact with whom the specialist should coordinate to perform the work. In many cases, this will be the claimant. NOTE: when inserting a ServiceRequestInstruction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InstructionText" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Text instructions to be provided to the specialist.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceAddress" nillable="true" type="tns2:Address">
                <xs:annotation>
                  <xs:documentation>The location at which the service is to be performed; may be null if the location is implied by the specialist, such as if it will be performed at the specialist's place of business.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequest" nillable="true" type="tns2:ServiceRequest">
                <xs:annotation>
                  <xs:documentation>The service request for which the specialist is being instructed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Services" nillable="true" type="tns2:ArrayOfServiceRequestInstructionService">
                <xs:annotation>
                  <xs:documentation>The services to be performed for this set of instructions.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestChange" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    An instance of this type records a change to its service request. Properties with names following the "New_" and "_Chg"
    naming conventions are populated automatically by ServiceRequest.recordChange.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>An optional explanation for this change.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExpectedQuoteCompletionDate_Chg" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if ExpectedQuoteCompletionDate is changing.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExpectedServiceCompletionDate_Chg" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if ExpectedServiceCompletionDate is changing.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Initiator" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>The user who initiated this change. NOTE: when inserting a ServiceRequestChange this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Instruction_Chg" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if Instruction is changing.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="New_ExpectedQuoteCompletionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The new value of ServiceRequest.ExpectedQuoteCompletionDate, or null if ExpectedQuoteCompletionDate did not change.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="New_ExpectedServiceCompletionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The new value of ServiceRequest.ExpectedServiceCompletionDate, or null if ExpectedServiceCompletionDate did not change.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="New_Instruction" nillable="true" type="tns2:ServiceRequestInstruction">
                <xs:annotation>
                  <xs:documentation>The new value of ServiceRequest.Instruction, or null if Instruction did not change. Note that it is expected that ServiceRequest.Instruction will only start referring to a particular instruction once -- there should be at most one ServiceRequestChange on a ServiceRequest referring to a particular ServiceRequestInstruction with this foreign key.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="New_Progress" nillable="true" type="tns3:ServiceRequestProgress">
                <xs:annotation>
                  <xs:documentation>The new value of ServiceRequest.Progress, or null if Progress did not change.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="New_QuoteStatus" nillable="true" type="tns3:ServiceRequestQuoteStatus">
                <xs:annotation>
                  <xs:documentation>The new value of ServiceRequest.QuoteStatus, or null if Quote Status did not change.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Operation" nillable="true" type="tns3:ServiceRequestOperation">
                <xs:annotation>
                  <xs:documentation>The operation performed during this change</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Progress_Chg" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if Progress is changing.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="QuoteStatus_Chg" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if Quote Status is changing.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RelatedStatement" nillable="true" type="tns2:ServiceRequestStatement">
                <xs:annotation>
                  <xs:documentation>The service request statement that is related to this change.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Sequence" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The sequence of this change on the ServiceRequest. ServiceRequestChanges are ordered consecutively starting with Sequence of 1. NOTE: when inserting a ServiceRequestChange this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequest" nillable="true" type="tns2:ServiceRequest">
                <xs:annotation>
                  <xs:documentation>The related service request.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Timestamp" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The time at which this change was applied. This timestamp is stored for informational purposes, but it may be possible for the relative timestamps of two instances to incorrectly or ambiguously indicate the relative order of two instances. For reliable ordering, use the Sequence property instead. NOTE: when inserting a ServiceRequestChange this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfServiceRequestChange" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ServiceRequestChange[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfServiceRequestInstruction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ServiceRequestInstruction[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfServiceRequestInvoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ServiceRequestInvoice[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestMessage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Messages for Service Requests</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Author" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>The author of the message NOTE: when inserting a ServiceRequestMessage this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Body" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The body of the service request message NOTE: when inserting a ServiceRequestMessage this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SendDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the message was sent NOTE: when inserting a ServiceRequestMessage this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SentFromPortal" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If the message is sent from an external portal NOTE: when inserting a ServiceRequestMessage this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequest" nillable="true" type="tns2:ServiceRequest">
                <xs:annotation>
                  <xs:documentation>The Service Request related to this message</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Title" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The title of the service request message NOTE: when inserting a ServiceRequestMessage this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns3:ServiceRequestMessageType">
                <xs:annotation>
                  <xs:documentation>The message type NOTE: when inserting a ServiceRequestMessage this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfServiceRequestMessage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ServiceRequestMessage[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfServiceRequestQuote" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ServiceRequestQuote[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequest" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    Represents a unit of work requested of a specialist or vendor, including instructions that describe the work to be
    done and the current state of the ServiceRequest.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Activities" nillable="true" type="tns2:ArrayOfActivity">
                <xs:annotation>
                  <xs:documentation>The activities associated with this service request</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CanceledReason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reason the service request was canceled</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>The related claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns3:Currency">
                <xs:annotation>
                  <xs:documentation>The currency of this service request, which is used for its quotes, invoices, and checks. NOTE: when inserting a ServiceRequest this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocumentLinks" nillable="true" type="tns2:ArrayOfServiceRequestDocumentLink">
                <xs:annotation>
                  <xs:documentation>The link information for documents associated with this service request</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpectedQuoteCompletionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date by which the specialist expects to submit the quote, or null if the specialist has not indicated such a date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpectedServiceCompletionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date by which the specialist expects to complete the work, or null if the specialist has not indicated such a date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="History" nillable="true" type="tns2:ArrayOfServiceRequestChange">
                <xs:annotation>
                  <xs:documentation>The changes that have been applied to this service request, which together comprise its history.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Incident" nillable="true" type="tns2:Incident">
                <xs:annotation>
                  <xs:documentation>The incident that led to the work requested by this service request.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Instruction" nillable="true" type="tns2:ServiceRequestInstruction">
                <xs:annotation>
                  <xs:documentation>The active instruction associated with this service request. NOTE: when inserting a ServiceRequest this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InstructionHistory" nillable="true" type="tns2:ArrayOfServiceRequestInstruction">
                <xs:annotation>
                  <xs:documentation>All instructions that have been created for this service request, including instructions that are no longer active.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Invoices" nillable="true" type="tns2:ArrayOfServiceRequestInvoice">
                <xs:annotation>
                  <xs:documentation>The Invoices associated with this service request</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Kind" nillable="true" type="tns3:ServiceRequestKind">
                <xs:annotation>
                  <xs:documentation>The kind for this service request. NOTE: when inserting a ServiceRequest this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="LatestChangeTimestampDenorm" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The timestamp of the latest ServiceRequestChange in the History. This value is denormalized here for ease of ordering ServiceRequests in queries. This is non-nullable because History cannot be empty. NOTE: when inserting a ServiceRequest this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LatestQuote" nillable="true" type="tns2:ServiceRequestQuote">
                <xs:annotation>
                  <xs:documentation>The latest quote associated with this service request. It is null if no quote has been added to the service request</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Messages" nillable="true" type="tns2:ArrayOfServiceRequestMessage">
                <xs:annotation>
                  <xs:documentation>Messages related to this service request</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="tns2:ArrayOfNote">
                <xs:annotation>
                  <xs:documentation>The notes associated with this service request</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OriginatingServiceRequest" nillable="true" type="tns2:ServiceRequest">
                <xs:annotation>
                  <xs:documentation>The originating quote-only service request for this service request. Note: This will be non-null only when a quote-only service request is promoted to a quote and service service request.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Progress" nillable="true" type="tns3:ServiceRequestProgress">
                <xs:annotation>
                  <xs:documentation>This service request's current place in its life cycle. NOTE: when inserting a ServiceRequest this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QuoteStatus" nillable="true" type="tns3:ServiceRequestQuoteStatus">
                <xs:annotation>
                  <xs:documentation>The current quote status for this service request. NOTE: when inserting a ServiceRequest this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Quotes" nillable="true" type="tns2:ArrayOfServiceRequestQuote">
                <xs:annotation>
                  <xs:documentation>The Quotes associated with this service request</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RequestedQuoteCompletionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Desired date by which the specialist will have submitted the quote, or null if the specialist has not indicated such a date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RequestedServiceCompletionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Desired date by which the specialist will have completed the work, or null if the specialist has not indicated such a date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ServiceRequestNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A globally-unique, user-readable identifier for this service request. This number is normally generated within ClaimCenter. NOTE: when inserting a ServiceRequest this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequestReferenceNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A string identifier assigned to this ServiceRequest by the specialist. The value of this field may only be meaningful to the specialist.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Specialist" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>The vendor or internal entity selected to do the work requested by this service request. NOTE: when inserting a ServiceRequest this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpecialistCommMethod" nillable="true" type="tns3:SpecialistCommMethod">
                <xs:annotation>
                  <xs:documentation>The channel through which the carrier will communicate with the specialist.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Tier" nillable="true" type="tns3:ServiceRequestTier">
                <xs:annotation>
                  <xs:documentation>The tier of this service request.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfServiceRequest" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ServiceRequest[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="StatuteLimitationsLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An applicable status of limiations in regards to subrogation</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Additional Description of statute of Limitation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="JurisdictionState" nillable="true" type="tns3:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>Jurisdiction State. The Jurisdiction must be associated with JurisdictionType.TC_INSURANCE.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatuteDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Last Date prior before claim is expired due to statute of limitations</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatuteLimitType" nillable="true" type="tns3:StatuteLimitationsType">
                <xs:annotation>
                  <xs:documentation>The type of statute of limitations - e.g. Medical, Indemnity, etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfStatuteLimitationsLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:StatuteLimitationsLine[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SubroPaymentSchedule" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A subrogation payment schedule</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentExpDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which payment against prommisory note is expected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubroInstallmentAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Total Amount of this Installment</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSubroPaymentSchedule" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SubroPaymentSchedule[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SubroAdverseParty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A subrogations Adverse Parties</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AdverseParty" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>The Adverse Party related to the Subrogation NOTE: when inserting a SubroAdverseParty this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Classification" nillable="true" type="tns3:SubroClassification">
                <xs:annotation>
                  <xs:documentation>Classification of the Adverse Party</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Fault" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Contact's probable percentage of fault.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MainContactType" nillable="true" type="tns3:PersonRelationType">
                <xs:annotation>
                  <xs:documentation>Relationship of the main contact to the Adverse Party</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NoteReceived" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the prommisory note was received</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NoteSent" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the prommisory note was sent</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ScheduleRecovery" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If the adverse party has agreed to make payments aka Subro Recovery</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ScheduleRecoveryType" nillable="true" type="tns3:SubroSchedRecoveryType">
                <xs:annotation>
                  <xs:documentation>Type of scheduled recovery such as Promissory Note</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ScheduledPayments" nillable="true" type="tns2:ArrayOfSubroPaymentSchedule">
                <xs:annotation>
                  <xs:documentation>A list of applicable PaymentPlans for this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Strategy" nillable="true" type="tns3:SubroStrategy">
                <xs:annotation>
                  <xs:documentation>Strategy for the Adverse Party</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubroGovernmentInvolved" nillable="true" type="tns3:SubroGovernmentInvolved">
                <xs:annotation>
                  <xs:documentation>For Subrogation - Government entity involved as an Adverse Party</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="expectedrecovery" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>expected recovery percentage from this Contact</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSubroAdverseParty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SubroAdverseParty[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SubrogationSummary" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subrogation information related to a claim</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CalculateOSRecReserve" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether to automatically calculate OS Recovery Reserves</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Related Claim</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalateSubro" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Escalate toSubro</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExtOwned" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>To indicate Subro for a claim as owned by an external owner</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatuteLine" nillable="true" type="tns2:ArrayOfStatuteLimitationsLine">
                <xs:annotation>
                  <xs:documentation>A list of applicable Statute of Limitations for this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubroAdverseParties" nillable="true" type="tns2:ArrayOfSubroAdverseParty">
                <xs:annotation>
                  <xs:documentation>A list of applicable Adverse Parties related to for this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubroCloseComment" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comment upon close of Subrogation opportunity</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubroCloseDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when Subro is complete</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubroClosedOutcome" nillable="true" type="tns3:SubroClosedOutcome">
                <xs:annotation>
                  <xs:documentation>SubroClosedOutcome</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubroReferralComment" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A Comment from the referer to the referee</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubroReferralDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when when referral made to Subrogation</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimText" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Stores long text descriptions associated with a Claim. For example, a medical diagnosis for a Workmen's Compensation
        claim is type of ClaimText. Changes to these text descriptions triggers validation.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Text" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Text field contents</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TextType" nillable="true" type="tns3:ClaimTextType">
                <xs:annotation>
                  <xs:documentation>Meaning of the text field.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfClaimText" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ClaimText[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Claim" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Centralizes all the information, contacts, and business activities associated with a claimant's loss. The Claim
      entity is the primary object in the ClaimCenter system.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccidentType" nillable="true" type="tns3:AccidentType">
                <xs:annotation>
                  <xs:documentation>Detailed accident type; augments LossCause.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Activities" nillable="true" type="tns2:ArrayOfActivity">
                <xs:annotation>
                  <xs:documentation>The activities for this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AgencyId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>An ID assigned to indicate company and office a claim is being submitted by, this data is used by ISO integration</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitsStatusDcsn" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if the benefits decision has been made yet.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Catastrophe" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Associated catastrophe. NOTE: value is the PublicId of the Catastrophe.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimISOMatchReports" nillable="true" type="tns2:ArrayOfClaimISOMatchReport">
                <xs:annotation>
                  <xs:documentation>ISO match reports for this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The external identifier of the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimSource" nillable="true" type="tns3:ClaimSource">
                <xs:annotation>
                  <xs:documentation>Information about how Claim was entered into the System.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimTier" nillable="true" type="tns3:ClaimTier">
                <xs:annotation>
                  <xs:documentation>The tier of this claim, used to decide how to rate the claim metrics.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimWorkComp" nillable="true" type="tns2:ClaimWorkComp">
                <xs:annotation>
                  <xs:documentation>Claim's worker's compensation data</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimantRprtdDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Workers' Comp only. Date when the claimant reported incident to insured (employer).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClosedOutcome" nillable="true" type="tns3:ClaimClosedOutcomeType">
                <xs:annotation>
                  <xs:documentation>The outcome reached when closing the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ComputerSecurity" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether computer security issues were involved.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ConcurrentEmp" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Did the employee have concurrent employment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ConcurrentEmpl" nillable="true" type="tns2:ArrayOfConcurrentEmployment">
                <xs:annotation>
                  <xs:documentation>Details of concurrent employment for workers' comp claims.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contacts" nillable="true" type="tns2:ArrayOfClaimContact">
                <xs:annotation>
                  <xs:documentation>The contacts involved with this claim. Including indirectly involved, like Exposures contacts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContribFactors" nillable="true" type="tns2:ArrayOfContribFactor"/>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageInQuestion" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the claim is covered by the claimant's policies.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns3:Currency">
                <xs:annotation>
                  <xs:documentation>The currency for the claim, copied from the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CurrentConditions" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Current conditions</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateCompDcsnDue" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the compensability Decision (for entire claim) was Due.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateCompDcsnMade" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the compensability Decision (for entire claim) was Made.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateEligibleForArchive" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date and time that this claim will become eligible for archiving. While this field is null or set to a date in the future, this claim is not selected by the archive batch process. (Note that being passed over by the archive batch process is different from being 'skipped' or 'excluded'.)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateFormGivenToEmp" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the work comp form was given to an employee.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateFormRetByEmp" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the work comp form was returned by an employee.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateRptdToAgent" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the agent was notified about the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateRptdToEmployer" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the claim was reported to the employer.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateRptdToInsured" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date the insured was notified about the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeathDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of death (if injury type is death).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the accident or loss.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DiagnosticCnsistnt" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is the diagnostic consistent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Documents" nillable="true" type="tns2:ArrayOfDocument">
                <xs:annotation>
                  <xs:documentation>The documents associated with this claim; for example, FNOL accord form or police report. Warning: do not rely on the contents of this array when the IDocumentMetadataSource plugin is enabled; use DocumentsUtil.getAllDocumentsForClaim instead.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DrugsInvolved" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Does the employer question the validity of the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DrugsPrescribed" nillable="true" type="tns2:ArrayOfDrugPrescribed"/>
              <xs:element maxOccurs="1" minOccurs="0" name="EmpQusValidity" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Does the employer question the validity of the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmpSentMPNNotice" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that the Employer sent out the MPN Notification.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmployerValidityReason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reason the employer questions the validity of the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmploymentData" nillable="true" type="tns2:EmploymentData">
                <xs:annotation>
                  <xs:documentation>Workers' Comp only. Details about the claimant's employment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmploymentInjury" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Workers' Comp only. Whether the injury occurred in course of employment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Evaluations" nillable="true" type="tns2:ArrayOfEvaluation">
                <xs:annotation>
                  <xs:documentation>The original cost estimate followed by any modifications to that estimate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExaminationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of the Examination.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExposureBegan" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Workers' Comp only. Date when the exposure began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExposureEnded" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Workers' Comp only. Date when the exposure ended.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposures" nillable="true" type="tns2:ArrayOfExposure">
                <xs:annotation>
                  <xs:documentation>The exposures related to this claim. Note: if triggersValidation is false, exposure metrics will not be run automatically.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Fault" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Insured's probable percentage of fault.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FaultRating" nillable="true" type="tns3:FaultRating">
                <xs:annotation>
                  <xs:documentation>Indicates in the insured is at fault.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FireDeptInfo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reports, incident number, and other information from the fire department.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstNoticeSuit" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to indicate suit at the time of the first notice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Flagged" nillable="true" type="tns3:FlaggedType">
                <xs:annotation>
                  <xs:documentation>This claim's status as a flagged claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FlaggedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date and time the claim was initially flagged.  When the flag is unset, this date is set to null and will be set to a new date if a new reason for flagging the claim is found later.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FlaggedReason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The reason this claim is flagged.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FurtherTreatment" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is further treatment required.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HazardousWaste" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to mark a claim as involving hazardous waste.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HospitalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date admitted to the hospital.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HospitalDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Estimated Days in hospital.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HowReported" nillable="true" type="tns3:HowReportedType">
                <xs:annotation>
                  <xs:documentation>How the claim was reported.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ISOEnabled" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is this field enabled for ISO.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ISOKnown" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Has a search request for this object been successfully received by ISO?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ISOReceiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The last time a response was received from ISO for this object. </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ISOSendDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The last time a search request was sent to ISO. </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ISOStatus" nillable="true" type="tns3:ISOStatus">
                <xs:annotation>
                  <xs:documentation>Status of exposure with ISO - for example checked, not of interest.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IncidentReport" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this is an incident report only and the claim will not be processed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Incidents" nillable="true" type="tns2:ArrayOfIncident">
                <xs:annotation>
                  <xs:documentation>Descriptions of incidents related to this claim. Note: In Gosu, it's preferred to use Claim.VehicleIncidentsOnly and similar properties for each Incident subtype. See the Application Guide.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InjWkrInMPN" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that the injured Worker moved to MPN.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InjuredOnPremises" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Was the employee injured on the premesis.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InjuredRegularJob" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Was the employee injured while doing his or her regular job.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredPremises" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the incident occurred on the employer's premises.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsurerSentMPNNotice" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that Insurer sent out the MPN Notification.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="JurisdictionState" nillable="true" type="tns3:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>The state of jurisdiction. This indicates jurisdiction that covers the loss, which may differ from the state in which the loss occurred. The Jurisdiction must be associated with JurisdictionType.TC_INSURANCE.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LOBCode" nillable="true" type="tns3:LOBCode">
                <xs:annotation>
                  <xs:documentation>Line of Business code; typically related to the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LargeLossNotificationStatus" nillable="true" type="tns3:LargeLossNotificationStatus">
                <xs:annotation>
                  <xs:documentation>The status of large loss notices.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LitigationStatus" nillable="true" type="tns3:LitigationStatus">
                <xs:annotation>
                  <xs:documentation>The status of the litigation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LocationCode" nillable="true" type="tns2:PolicyLocation">
                <xs:annotation>
                  <xs:documentation>Workers' Comp only. Location at the employer's facilities where the accident occurred.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LocationOfTheft" nillable="true" type="tns3:LocationOfTheft">
                <xs:annotation>
                  <xs:documentation>the Location where the property was stolen.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossCause" nillable="true" type="tns3:LossCause">
                <xs:annotation>
                  <xs:documentation>General cause of loss; dependent on loss type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date on which the loss occurred.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossLocation" nillable="true" type="tns2:Address">
                <xs:annotation>
                  <xs:documentation>Location of the loss.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossLocationCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Location Code for the Loss Location.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossType" nillable="true" type="tns3:LossType">
                <xs:annotation>
                  <xs:documentation>High level claim type (for example, Auto or Property). NOTE: when inserting a Claim this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MMIdate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date Maximum Medical Improvement was reached.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MainContactType" nillable="true" type="tns3:PersonRelationType">
                <xs:annotation>
                  <xs:documentation>Relationship of the main contact to the insured.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ManifestationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The manifestation date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Matters" nillable="true" type="tns2:ArrayOfMatter">
                <xs:annotation>
                  <xs:documentation>The legal matters related to this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalContactStatus" nillable="true" type="tns2:ArrayOfMedicalContactStatus"/>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalTreatments" nillable="true" type="tns2:ArrayOfMedicalTreatment"/>
              <xs:element maxOccurs="1" minOccurs="0" name="MetroReports" nillable="true" type="tns2:ArrayOfMetroReport">
                <xs:annotation>
                  <xs:documentation>Details of reports associated with claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ModifiedDutyAvail" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is Modified Duty Available at Work.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Mold" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to mark a claim as involving mold.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Negotiations" nillable="true" type="tns2:ArrayOfNegotiation">
                <xs:annotation>
                  <xs:documentation>The negotiations related to this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="tns2:ArrayOfNote">
                <xs:annotation>
                  <xs:documentation>The notes particular to this claim. Notes can also be associated with a particular exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Officials" nillable="true" type="tns2:ArrayOfOfficial">
                <xs:annotation>
                  <xs:documentation>Details of officials associated with claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherBenefits" nillable="true" type="tns2:ArrayOfOtherBenefit">
                <xs:annotation>
                  <xs:documentation>Details of other benefits for workers comp claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherRecovStatus" nillable="true" type="tns3:OtherRecoverableStatus">
                <xs:annotation>
                  <xs:documentation>The Other Recoverable status for a claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PTPinMPN" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is Primary Treating Physician in MPN?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PermissionRequired" nillable="true" type="tns3:ClaimSecurityType">
                <xs:annotation>
                  <xs:documentation>If non-null, this is an additional permission that users are required to have to view or work on this claim. This field is used to restrict access to sensitive or private claims; for example, those involving an employee or that are under litigation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PoliceDeptInfo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reports, incident number, and other information from the police deptartment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Policy" nillable="true" type="tns2:Policy">
                <xs:annotation>
                  <xs:documentation>The policy associated with this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PreexDisblty" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the injured person had a pre-existing disability.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyFireDamage" nillable="true" type="tns2:PropertyFireDamage">
                <xs:annotation>
                  <xs:documentation>Details of fire damage to property</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyWaterDamage" nillable="true" type="tns2:PropertyWaterDamage">
                <xs:annotation>
                  <xs:documentation>Details of water damage to property</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PurgeDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date at which the claim should be purged. Configurations can use this field to decide when to mark the claim for purge, and there are sample Claim Closed and Claim Reopened rules to set it. It is not used by the internal purge logic.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RIAgreementGroups" nillable="true" type="tns2:ArrayOfRIAgreementGroup">
                <xs:annotation>
                  <xs:documentation>The reinsurance agreement groups for this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReOpenDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date claim was reopened.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReinsuranceFlaggedStatus" nillable="true" type="tns3:ReinsuranceFlaggedStatus">
                <xs:annotation>
                  <xs:documentation>The reinsurance flagged status for a claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReinsuranceReportable" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this claim has exceeded the Reinsurance Reporting Threshold</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReopenedReason" nillable="true" type="tns3:ClaimReopenedReason">
                <xs:annotation>
                  <xs:documentation>The reason for reopening the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportedByType" nillable="true" type="tns3:PersonRelationType">
                <xs:annotation>
                  <xs:documentation>Relationship of the person who reported the claim to the insured.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the loss was reported.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SIAnswerSet" nillable="true" type="tns2:ArrayOfSIUAnswerSet">
                <xs:annotation>
                  <xs:documentation>Link to Answer set for SIU</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SIEscalateSIU" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Escalate to SIU team.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SIEscalateSIUdate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date escalated to SIU team.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SIScore" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Special Investigations Score.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SITriggers" nillable="true" type="tns2:ArrayOfSITrigger">
                <xs:annotation>
                  <xs:documentation>The triggers for Special Investigations linked to this Claim</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SIULifeCycleState" nillable="true" type="tns3:ClaimLifeCycleState">
                <xs:annotation>
                  <xs:documentation>Current state of SIU trigger rule processing for this Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SIUStatus" nillable="true" type="tns3:SIUStatus">
                <xs:annotation>
                  <xs:documentation>The SIU status for a claim</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SafetyEquipProv" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Was safety equipment provided.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SafetyEquipUsed" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Was safety equipment used.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SalvageStatus" nillable="true" type="tns3:SalvageStatus">
                <xs:annotation>
                  <xs:documentation>The salvage status for a claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Segment" nillable="true" type="tns3:ClaimSegment">
                <xs:annotation>
                  <xs:documentation>Segmentation type of the claim. Both the claim and the exposure may be segmented.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequests" nillable="true" type="tns2:ArrayOfServiceRequest">
                <xs:annotation>
                  <xs:documentation>Service requests associated with this claim. Note: if triggersValidation is false, service request metrics will not be run automatically.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ShowMedicalFirstInfo" nillable="true" type="tns3:YesNo">
                <xs:annotation>
                  <xs:documentation>Show Medical First info section.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StateAckNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Acknowledgment number of the state file for this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StateFileNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Number of the state file for this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StatuteDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date at which the statute of limitations expires for this claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StorageBarCodeNum" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Storage Bar Code Number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StorageBoxNum" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Storage Box Number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StorageCategory" nillable="true" type="tns3:StorageCategory">
                <xs:annotation>
                  <xs:documentation>Storage Category.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StorageDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date file shipped to storage facility.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StorageLocationState" nillable="true" type="tns3:State">
                <xs:annotation>
                  <xs:documentation>Storage Location State.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StorageType" nillable="true" type="tns3:StorageType">
                <xs:annotation>
                  <xs:documentation>Storage Type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StorageVolumes" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Storage Volumes.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Strategy" nillable="true" type="tns3:ClaimStrategy">
                <xs:annotation>
                  <xs:documentation>Segmentation type of the claim. Both the claim and the exposure may be segmented.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubrogationStatus" nillable="true" type="tns3:SubrogationStatus">
                <xs:annotation>
                  <xs:documentation>Status of the subrogation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubrogationSummary" nillable="true" type="tns2:SubrogationSummary">
                <xs:annotation>
                  <xs:documentation>Claim's subrogation-related data</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SupplementalWorkloadWeight" nillable="true" type="soapenc:int"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Text" nillable="true" type="tns2:ArrayOfClaimText">
                <xs:annotation>
                  <xs:documentation>Large text fields associated with claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TreatedPatientBfr" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Has the patient been treated before.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Weather" nillable="true" type="tns3:WeatherType">
                <xs:annotation>
                  <xs:documentation>Weather conditions at the time of accident.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WeatherRelated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is related to weather</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReviewCategoryQuestionSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Table linking Reviews to QuestionSet</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ElementOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ReviewCategoryQuestionSet this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionSet" nillable="true" type="tns2:QuestionSet">
                <xs:annotation>
                  <xs:documentation>Associated QuestionSet. NOTE: when inserting a ReviewCategoryQuestionSet this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReviewCategory" nillable="true" type="tns3:ReviewCategory">
                <xs:annotation>
                  <xs:documentation>Category of this QuestionSet.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReviewType" nillable="true" type="tns2:ReviewType">
                <xs:annotation>
                  <xs:documentation>Associated ReviewType.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfReviewCategoryQuestionSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ReviewCategoryQuestionSet[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReviewType" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines a type of service provider review, used to create Review entities.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactSubtype" nillable="true" type="tns3:Contact">
                <xs:annotation>
                  <xs:documentation>Contact class, like Person, Company, and Venue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Detailed description of this review type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short name of this review type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReviewCategoryQuestionSets" nillable="true" type="tns2:ArrayOfReviewCategoryQuestionSet">
                <xs:annotation>
                  <xs:documentation>List of Question sets, and their assigned categories, associated with this ReviewType.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ShouldRetireFromImportXML" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If set to true, will retire this question set during the import xml process.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Review" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A service provider review, created from a given ReviewType.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated ReviewSummary in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CategoryScores" nillable="true" type="tns2:ArrayOfReviewCategoryScore">
                <xs:annotation>
                  <xs:documentation>List of categories and their scores, associated with this Review.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns2:Claim">
                <xs:annotation>
                  <xs:documentation>Associated Claim. NOTE: when inserting a Review this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments about the Review</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Completed" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to mark a review as completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>Associated Contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the accident or loss.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short name of this review type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="QuestionAnswerSets" nillable="true" type="tns2:ArrayOfReviewQAnswerSet">
                <xs:annotation>
                  <xs:documentation>List of Question set/Answer Set pairs, and their assigned categories, associated with this Review.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RelatedTo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Detailed description of this review type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReviewType" nillable="true" type="tns2:ReviewType">
                <xs:annotation>
                  <xs:documentation>Associated ReviewType. NOTE: when inserting a Review this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReviewedBy" nillable="true" type="tns2:User">
                <xs:annotation>
                  <xs:documentation>User who created the review</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Score" nillable="true" type="soapenc:int"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date of the service being reviewed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceType" nillable="true" type="tns3:ReviewServiceType"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Subcontact" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Optionally associated sub-Contact (Service Person or similar).</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfReview" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Review[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;
      Links &lt;code&gt;Contact&lt;/code&gt; objects to other contacts. Each link has a specific relationship. See the &lt;code&gt;ContactRel&lt;/code&gt; typelist for
      a list of the possible link relationships. The purpose of this table is to avoid a self-referencing foreign key on
      &lt;code&gt;Contact&lt;/code&gt;, and to allow contacts to relate to one another in different ways.&lt;/p&gt;
      &lt;p&gt;For example, imagine a &lt;code&gt;ContactContact&lt;/code&gt; entity with the following values:&lt;/p&gt;
      &lt;ul&gt;&lt;li&gt;SourceContactID: ID of Person A&lt;/li&gt;
          &lt;li&gt;Relationship: Employer&lt;/li&gt;
          &lt;li&gt;RelatedContactID: ID of Company B&lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;
      Then the relationship between A and B is: Company B is the Employer of Person A.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RelatedContact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>"RelatedContactID" is the "Relationship" of "SourceContactID".</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Relationship" nillable="true" type="tns3:ContactRel">
                <xs:annotation>
                  <xs:documentation>Relationship between the two contacts. NOTE: when inserting a ContactContact this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceContact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>"SourceContactID" has "RelatedContactID" as "Relationship".</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactContact[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactTag" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>ContactTag</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>Contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns3:ContactTagType">
                <xs:annotation>
                  <xs:documentation>Type of this ContactTag. NOTE: when inserting a ContactTag this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactTag" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactTag[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Contact" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents a generic contact like a person or a business. The Contact is a primary object in the
        ClaimCenter system that is used in the management of your company's vendors and the
        participants in a Claim. Contact is an abstract supertype with subtypes such as Person, Company, and Place.
        Guidewire provides an initial hierarchy of Contact types that you can extend.
        From a Contact entity you can reach the expected Contact data such as physical address, phone, and fax
        information. (In general, only the Primary Address is used for location-based functionality like
        Assignment and Geocoding/Proximity Search.) Contact and its subtypes can also contain management-related
        information such as social security number, tax ID, organization type , and so forth.
        Within ClaimCenter, users create Contacts that are associated only with a particular Claim. For example,
        an injured party is a typical claim contact. ClaimCenter does not attempt to determine if a contact
        associated with one claim appears elsewhere on another claim. Thus, any claim contact that users create,
        like an auto body shop, can be a duplicate of one or more other claim contacts associated with different
        claims.
        If ClaimCenter is integrated with Guidewire's ContactManager application, your users can create contacts
        and then access them centrally through the linking feature.Your company can have both centrally
        managed contacts, such as a vendor business, and locally managed contacts, such as an injured
        party.
        To support this behavior, ContactManager and ClaimCenter have matching hierarchies of Contact
        entities, which they can keep synchronized. So, for example, an extension made to a ClaimCenter Contact
        entity should also be made to a ContactManager ABContact entity. See the Contact Management Guide
        for more information about the integration between ClaimCenter and ContactManager.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressBookUID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AutoSync" nillable="true" type="tns3:AutoSync">
                <xs:annotation>
                  <xs:documentation>A status code to indicate whether this entity allows auto-sync or not. Null means disallow.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CategoryScores" nillable="true" type="tns2:ArrayOfContactCategoryScore">
                <xs:annotation>
                  <xs:documentation>List of categories and their average scores, associated with this Contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactAddresses" nillable="true" type="tns2:ArrayOfContactAddress">
                <xs:annotation>
                  <xs:documentation>Secondary addresses associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EFTRecords" nillable="true" type="tns2:ArrayOfEFTData">
                <xs:annotation>
                  <xs:documentation>Electronic Funds Transfer data for the contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailAddress1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Primary email address associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailAddress2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Secondary email address associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FaxPhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Fax number associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FaxPhoneCountry" nillable="true" type="tns3:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>Fax phone country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FaxPhoneExtension" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Fax phone extension.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HomePhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Home phone number associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HomePhoneCountry" nillable="true" type="tns3:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>Home phone country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HomePhoneExtension" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Home phone extension.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>This contact's name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>This contact's name in kanji (used only for Japanese names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Notes on this contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialIDs" nillable="true" type="tns2:ArrayOfOfficialID">
                <xs:annotation>
                  <xs:documentation>TaxIDs associated with this contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OrganizationType" nillable="true" type="tns3:OrganizationType">
                <xs:annotation>
                  <xs:documentation>Type of organization</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PendingLinkMessage" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>whether the contact link messasge is still pending from ContactManager</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the contact in an external policy system</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Preferred" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the vendor is a preferred vendor.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PreferredCurrency" nillable="true" type="tns3:Currency">
                <xs:annotation>
                  <xs:documentation>The contact's preferred currency.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryAddress" nillable="true" type="tns2:Address">
                <xs:annotation>
                  <xs:documentation>Primary address associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryLanguage" nillable="true" type="tns3:LanguageType">
                <xs:annotation>
                  <xs:documentation>The account's preferred language</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryLocale" nillable="true" type="tns3:LocaleType">
                <xs:annotation>
                  <xs:documentation>The account's preferred locale</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryPhone" nillable="true" type="tns3:PrimaryPhoneType">
                <xs:annotation>
                  <xs:documentation>Primary phone number type for the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reviews" nillable="true" type="tns2:ArrayOfReview">
                <xs:annotation>
                  <xs:documentation>Reviews for Service Provider Management</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Score" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Overall review Score for this Contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceRelatedContacts" nillable="true" type="tns2:ArrayOfContactContact">
                <xs:annotation>
                  <xs:documentation>Contacts that point to this contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpecialtyType" nillable="true" type="tns3:SpecialtyType">
                <xs:annotation>
                  <xs:documentation>Specialty of the doctor</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Tags" nillable="true" type="tns2:ArrayOfContactTag">
                <xs:annotation>
                  <xs:documentation>List of ContactTags.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetRelatedContacts" nillable="true" type="tns2:ArrayOfContactContact">
                <xs:annotation>
                  <xs:documentation>Contacts that this Contact points to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Tax ID for the contact (SSN or EIN).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxStatus" nillable="true" type="tns3:TaxStatus">
                <xs:annotation>
                  <xs:documentation>Status of the contact's tax ID; whether it is known or unknown.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VendorNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Vendor number for the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VendorType" nillable="true" type="tns3:VendorType">
                <xs:annotation>
                  <xs:documentation>The company's vendor type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="W9Received" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Has W-9 form been received</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="W9ReceivedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>W-9 form received date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="W9ValidFrom" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>W-9 valid start date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="W9ValidTo" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>W-9 valid to date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WithholdingRate" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>The contact's backup withholding rate, or null if backup withholding is not required or is not known to be required.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WorkPhone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Business phone number associated with the contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WorkPhoneCountry" nillable="true" type="tns3:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>Work phone country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WorkPhoneExtension" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Business phone extension.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Links a contact to a claim. This entity also contains an array to the roles played by the contact on the claim.
        Changes to the related Contact or the Roles array triggers validation.
     

    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitEndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Benefit end date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitEndReason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reason benefits ended (deprecated in favor of BenefitEndReasonType)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BenefitEndReasonType" nillable="true" type="tns3:BenefitEndReasonType">
                <xs:annotation>
                  <xs:documentation>Reason benefits ended - typelist</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>Contact associated with the claim or exposure. NOTE: when inserting a ClaimContact this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactProhibited" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether contact is prohibited with this contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactValidFrom" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Start Date when this Contact is valid on this claim </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactValidTo" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when this Contact is no longer valid on this claim</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DependentType" nillable="true" type="tns3:DependentType">
                <xs:annotation>
                  <xs:documentation>Type of dependent - spouse, child etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EssentialServiceType" nillable="true" type="tns3:EssentialServiceType">
                <xs:annotation>
                  <xs:documentation>Type essential service provided by contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProviderType" nillable="true" type="tns3:ProviderType">
                <xs:annotation>
                  <xs:documentation>Provider type</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Roles" nillable="true" type="tns2:ArrayOfClaimContactRole">
                <xs:annotation>
                  <xs:documentation>The roles that this claimcontact has.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Service" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The service provided by contact</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Deduction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A deduction from a check, usually for tax purposes.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ClaimAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of the deduction in the claim currency. NOTE: when inserting a Deduction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the deduction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeductionType" nillable="true" type="tns3:DeductionType">
                <xs:annotation>
                  <xs:documentation>Type of deduction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReportingAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of the deduction in the reporting currency). NOTE: when inserting a Deduction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReservingAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of the deduction in the reserving currency. NOTE: when inserting a Deduction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TransactionAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount of the deduction in the transaction/check currency. NOTE: when inserting a Deduction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDeduction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Deduction[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Payment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    A subtype of Transaction that represents a payment of money. One or more Payments belong to a Check, which
    delivers the money to a particular payee. Like all transactions, a Payment has a ReserveLine which categorizes
    the payment. Usually, there must be sufficient reserves on a ReserveLine for a Payment on that ReserveLine to
    be allowed.
    &lt;p&gt;Payments can be eroding or non-eroding. Eroding payments deplete Reserves on the same ReserveLine. A payment
    can be manually set to non-eroding so it does not deplete reserves. Some customers use non-eroding payments
    exclusively. Others may not allow non-eroding payments at all, except for supplemental payments.
    &lt;p&gt;Payments can be of three types: Partial, Final, and Supplemental. A partial payment is eroding. A Final payment
    is eroding, and sets the reserves on its ReserveLine to zero when its send date is reached. A Supplemental payment
    is made after the payment's Exposure or Claim has been closed, and is non-eroding.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Transaction">
            <xs:sequence>
              <xs:element name="DoesNotErodeReserves" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether this payment should not erode reserves for its ReserveLine.  This field can only be set in the CheckWizard UI.  Otherwise, one of the setAsEroding() or setAsNonEroding() methods must be called from a rule to change whether a payment erodes reserves.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Matter" nillable="true" type="tns2:Matter">
                <xs:annotation>
                  <xs:documentation>Foreign key to Matter</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentType" nillable="true" type="tns3:PaymentType">
                <xs:annotation>
                  <xs:documentation>Type of the payment. NOTE: when inserting a Payment this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RecoveryReserve" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      A subtype of Transaction that indicates money expected to be recovered. These reserves are depleted by Recovery
      transactions. Not commonly used, and ClaimCenter can be globally configured to not use RecoveryReserves at all.
      However, if ClaimCenter is configured to use them, and a Recovery is created with an amount that exceeds the open
      recovery reserves (total Recovery Reserves minus Total Recoveries) on that particular ReserveLine, then a
      RecoveryReserve in the proper amount is automatically created to keep open recovery reserves from becoming negative.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Transaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Reserve" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      A subtype of &lt;code&gt;Transaction&lt;/code&gt; that sets aside money to cover expected costs. Like every &lt;code&gt;Transaction&lt;/code&gt;,
      a &lt;code&gt;Reserve&lt;/code&gt; has a &lt;code&gt;ReserveLine&lt;/code&gt;, for which the &lt;code&gt;Reserve&lt;/code&gt; transaction increases reserves.
      Reserves are depleted by eroding payments. To get the total reserves, open reserves, remaining reserves or available reserves, 
      use the &lt;code&gt;FinancialsCalculationUtil&lt;/code&gt; class.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Transaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TransactionOffset" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A TransactionOffset relates a transaction to its offsetting transaction (if any).
    It contains two links, one to the original transaction and one to its offsetting transaction.
    A TransactionOffset is created whenever a user recodes or transfers a payment in ClaimCenter,
    and also when a user voids/stops a payment.  In the case of a recode or transfer the Offsetting
    transaction is just a negative copy of the original payment.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Offset" nillable="true" type="tns2:Transaction">
                <xs:annotation>
                  <xs:documentation>The offset transaction, to negate the original transaction. NOTE: when inserting a TransactionOffset this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns2:Transaction">
                <xs:annotation>
                  <xs:documentation>The transaction being offset.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTransactionOffset" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TransactionOffset[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TransactionOnset" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A TransactionOnset relates a transaction to its onsetting
    transactions (if any).  It contains two links, one to the original transaction and one to the new onset transaction.
    A TransactionOnset is created whenever a user recodes or transfers a payment in ClaimCenter. In the case of a
    recode or transfer the onset payment has the same line items as the original payment but a different ReserveLine coding.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Onset" nillable="true" type="tns2:Transaction">
                <xs:annotation>
                  <xs:documentation>The onset (recode or transfer) transaction, same as the original but on the new ReserveLine/Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OnsetPublicID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>PublicID of the onset, used when the FK to the onset has been severed for archiving.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Transaction" nillable="true" type="tns2:Transaction">
                <xs:annotation>
                  <xs:documentation>The transaction being onset.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTransactionOnset" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TransactionOnset[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Transaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Represents a financial operation, such as creating a reserve or scheduling
        a payment. It is an abstract supertype, and the UI uses only its four subtypes:
        &lt;ul&gt;&lt;li&gt;Reserve - expected payments&lt;/li&gt;&lt;li&gt;Payment - money paid out or liability incurred&lt;/li&gt;
        &lt;li&gt; RecoveryReserve - expected recoveries&lt;/li&gt;&lt;li&gt;Recovery - credit or money received&lt;/li&gt;&lt;/ul&gt;
        &lt;p&gt;
        Every transaction is made against a single ReserveLine. It contains a non-null
        array of TransactionLineItem entities holding the amount(s) of the transaction. Checks
        are not transactions. A single transaction will affect multiple T-accounts.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Claim" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The related claim.&lt;p&gt;Setting the claim also sets this transaction's currency to the claim's currency if it is null. NOTE: value is the PublicId of the Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments about the transaction, such as a reason.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CostCategory" nillable="true" type="tns3:CostCategory">
                <xs:annotation>
                  <xs:documentation>The CostCategory for this transaction. NOTE: when inserting a Transaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CostType" nillable="true" type="tns3:CostType">
                <xs:annotation>
                  <xs:documentation>Type of cost (for example, claim cost or adjusting overhead). NOTE: when inserting a Transaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns3:Currency">
                <xs:annotation>
                  <xs:documentation>The Currency of the transaction amount. NOTE: when inserting a Transaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposure" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The related exposure. NOTE: value is the PublicId of the Exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LineItems" nillable="true" type="tns2:ArrayOfTransactionLineItem">
                <xs:annotation>
                  <xs:documentation>Set of line items that further categorize the transaction amount.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Offsets" nillable="true" type="tns2:ArrayOfTransactionOffset">
                <xs:annotation>
                  <xs:documentation>Transactions that offset this transaction. A transaction should have at most one item in this array. This array is applicable only to a payment or recovery.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Onsets" nillable="true" type="tns2:ArrayOfTransactionOnset">
                <xs:annotation>
                  <xs:documentation>Transactions that onset this transaction. This array is applicable only to a payment or recovery.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RecoveryCategory" nillable="true" type="tns3:RecoveryCategory">
                <xs:annotation>
                  <xs:documentation>User-defined subcategory of a recovery.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReservingCurrency" nillable="true" type="tns3:Currency">
                <xs:annotation>
                  <xs:documentation>Reserving Currency of this transaction's ReserveLine. Indicates the currency in which reserves are to be set aside and eroded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns3:TransactionStatus">
                <xs:annotation>
                  <xs:documentation>Status of the transaction. Further refines the LifeCycleState. Can only change status directly to another status in the same LifeCycleState, which does not affect Taccounts. NOTE: when inserting a Transaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SubmitDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Unused. May be removed in a future release.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Recovery" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Records money that reduces a claim's liability, received from such sources as subrogation, salvage, other
      insurance, copayments, or deductibles. Equivalent to a negative Payment. A subtype of Transaction.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:Transaction">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimContact" nillable="true" type="tns2:ClaimContact">
                <xs:annotation>
                  <xs:documentation>Person or company from whom the recovery was obtained.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OBOClaimContact" nillable="true" type="tns2:ClaimContact">
                <xs:annotation>
                  <xs:documentation>Person or company responsible for paying.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfRecovery" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Recovery[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RecoverySet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A TransactionSet of one or more Recoveries created and submitted together for approval.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:TransactionSet">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Recoveries" nillable="true" type="tns2:ArrayOfRecovery">
                <xs:annotation>
                  <xs:documentation>The recoveries in the set.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfReserve" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Reserve[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReserveSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Subtype of TransactionSet that contains one or more reserve transactions submitted together for approval.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:TransactionSet">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Reserves" nillable="true" type="tns2:ArrayOfReserve">
                <xs:annotation>
                  <xs:documentation>Reserves in the set.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfRecoveryReserve" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:RecoveryReserve[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RecoveryReserveSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A TransactionSet of one or more RecoveryReserves created and submitted together for approval.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:TransactionSet">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="RecoveryReserves" nillable="true" type="tns2:ArrayOfRecoveryReserve">
                <xs:annotation>
                  <xs:documentation>Recovery reserves in the set.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TransactionSetDocument" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Associates a Document to a TransactionSet.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Document" nillable="true" type="tns2:Document">
                <xs:annotation>
                  <xs:documentation>Associated Document. NOTE: when inserting a TransactionSetDocument this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTransactionSetDocument" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TransactionSetDocument[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TransactionSet" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      A set of transactions submitted for approval together. Subtypes include ReserveSet, RecoverySet, and
      RecoveryReserveSet, which contain the respective Transaction types. A CheckSet contains Checks and Payments.
      There is no PaymentSet.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Activities" nillable="true" type="tns2:ArrayOfActivity">
                <xs:annotation>
                  <xs:documentation>Set of approval / approval denial activities linked to this transaction set.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns3:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Claim" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The claim entity to which this TransactionSet belongs. NOTE: when inserting a TransactionSet this field must be non-null. NOTE: value is the PublicId of the Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Documents" nillable="true" type="tns2:ArrayOfTransactionSetDocument">
                <xs:annotation>
                  <xs:documentation>Set of documents linked to this transaction set.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a TransactionSet this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCheckGroup" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CheckGroup[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCheck" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Check[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RecurringCheck" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Links the checks created as part of a recurrence of a check.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CheckSet" nillable="true" type="tns2:CheckSet">
                <xs:annotation>
                  <xs:documentation>The TransactionSet to which this RecurringCheck belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Checks" nillable="true" type="tns2:ArrayOfCheck">
                <xs:annotation>
                  <xs:documentation>Individual checks that comprise this recurring check.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfRecurringCheck" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:RecurringCheck[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CheckSetReserve" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Links a check set with any reserves that were automatically created as part of processing its payments.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reserve" nillable="true" type="tns2:Reserve">
                <xs:annotation>
                  <xs:documentation>The automatically-generated reserve. NOTE: when inserting a CheckSetReserve this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCheckSetReserve" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CheckSetReserve[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CheckSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      A subtype of TransactionSet which contains a Check. May contain more than one Check if its a multi-payee
      check (in a CheckGroup) and/or RecurringCheck. It may also contain Reserve transactions if its payments
      affect reserves (like a Final payment or a payment that exceeds Available Reserves). Submitted as a unit
      for approval. Each of the payment transactions for all the checks in a checkset also link back to the CheckSet.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:TransactionSet">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CheckGroups" nillable="true" type="tns2:ArrayOfCheckGroup">
                <xs:annotation>
                  <xs:documentation>The check groups of multi-payee checks contained in the check set, if any.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Checks" nillable="true" type="tns2:ArrayOfCheck">
                <xs:annotation>
                  <xs:documentation>All checks contained in the check set.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RecurringChecks" nillable="true" type="tns2:ArrayOfRecurringCheck">
                <xs:annotation>
                  <xs:documentation>Recurring checks (if any) that make up this check set.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reserves" nillable="true" type="tns2:ArrayOfCheckSetReserve">
                <xs:annotation>
                  <xs:documentation>Reserves that should be approved or rejected along with the set.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CheckGroup" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Groups the Checks that are part of a multi-payee "check" (as it would be referred to by users). The primary Check
      of the CheckGroup (i.e., CheckGroup.PrimaryCheck) contains all of the Payments, and each secondary Check has a
      CheckPortion that indicates the portion of the total amount of the payments that it should receive. After amounts
      have been allocated to all secondary Checks according to the CheckPortions, the leftover amount is allocated to
      the primary Check.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CheckSet" nillable="true" type="tns2:CheckSet">
                <xs:annotation>
                  <xs:documentation>The TransactionSet that this check group belongs to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Checks" nillable="true" type="tns2:ArrayOfCheck">
                <xs:annotation>
                  <xs:documentation>Check objects in the group, including the primary check. Together, these checks form a multi-payee check.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CheckPayee" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Links a Check to a Contact that is a Payee of the check.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimContact" nillable="true" type="tns2:ClaimContact">
                <xs:annotation>
                  <xs:documentation>The payee as a ClaimContact. NOTE: when inserting a CheckPayee this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PayeeType" nillable="true" type="tns3:ContactRole">
                <xs:annotation>
                  <xs:documentation>The payee type. This is used for tax reporting purposes. NOTE: when inserting a CheckPayee this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCheckPayee" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CheckPayee[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPayment" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Payment[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CheckPortion" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Indicates the amount of a multi-payee check that applies to a particular check. Checks with a CheckPortion do not
      have any payments, but just receive a percentage or fixed amount of the Payments in the primary Check of the
      CheckGroup (i.e., CheckGroup.PrimaryCheck).
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Checks" nillable="true" type="tns2:ArrayOfCheck">
                <xs:annotation>
                  <xs:documentation>Checks whose amounts are defined by this CheckPortion. If there are multiple checks in this array, all of them must belong to the same CheckRecurrence.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FixedClaimAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The fixed amount (in the claim currency) to allocate towards the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FixedReportingAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The fixed amount (in the reporting currency) to allocate towards the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FixedReservingAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The fixed amount (in the reserving currency) to allocate towards the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FixedTransactionAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The fixed amount (in the transaction currency) to allocate towards the check. Setting this clears Percentage and updates FixedClaimAmount and FixedReportingAmount. At least one check must be added to this CheckPortion before setting this.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Percentage" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>The percentage to allocate towards the check. Setting this clears the fixed amount properties</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Check" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      A paper Check or EFT issued to a particular payee to deliver one or more Payments. A Check can have multiple payees,
      in which case distinct Checks to each secondary payee are created in the same CheckSet, and they are all related
      to the primary check as members of a CheckGroup. For a single payee check, the check's amount is the aggregate
      of all the payments associated with it. For a multiple-payee check, each of the secondary checks gets a portion
      of the aggregated payments, and the remainder is the amount of the primary Check.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name on the account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankAccount" nillable="true" type="tns3:BankAccount">
                <xs:annotation>
                  <xs:documentation>Source bank account.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankAccountNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The bank account number</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankAccountType" nillable="true" type="tns3:BankAccountType">
                <xs:annotation>
                  <xs:documentation>The type of bank accout e.g. checking, savings etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the bank</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankRoutingNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The routing number is a nine digit bank code used in the United States</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CheckBatching" nillable="true" type="tns3:CheckBatching">
                <xs:annotation>
                  <xs:documentation>How the check should be batched for sending.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CheckInstructions" nillable="true" type="tns3:CheckHandlingInstructions">
                <xs:annotation>
                  <xs:documentation>Special handling instructions for the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CheckNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The check or EFT identifier.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CheckType" nillable="true" type="tns3:CheckType">
                <xs:annotation>
                  <xs:documentation>Role of the check in the check group (primary or secondary). NOTE: when inserting a Check this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Claim" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The related claim. NOTE: when inserting a Check this field must be non-null. NOTE: value is the PublicId of the Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimContact" nillable="true" type="tns2:ClaimContact">
                <xs:annotation>
                  <xs:documentation>Claimant the check is being written for, as a ClaimContact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments about the check, such as a reason it was voided.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateOfService" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that the service was performed (if this check is for a service).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeductionType" nillable="true" type="tns3:DeductionType">
                <xs:annotation>
                  <xs:documentation>Deduction type for secondary checks.  Always NULL for primary checks.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Deductions" nillable="true" type="tns2:ArrayOfDeduction">
                <xs:annotation>
                  <xs:documentation>Any deductions related to the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeliveryMethod" nillable="true" type="tns3:DeliveryMethod">
                <xs:annotation>
                  <xs:documentation>Requested delivery method.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EnteredTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The time the check was created. This is different from CreateTime, which is the time it was stored in the system.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Group" nillable="true" type="tns2:CheckGroup">
                <xs:annotation>
                  <xs:documentation>CheckGroup this check belongs to, if it's part of a multi-payee check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Invoice number associated with the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsPrimary" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if this is the primary EFT record for the contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IssueDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the check was issued.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MailTo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the person/company to whom the check should be mailed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MailToAddress" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Address of the person/company to whom the check should be mailed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Memo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Memo to include on the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PayTo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Pay to the order of.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Payees" nillable="true" type="tns2:ArrayOfCheckPayee">
                <xs:annotation>
                  <xs:documentation>Recipients of the payment; there must be at least one. If there are multiple, each is a 'joint' payee.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentMethod" nillable="true" type="tns3:PaymentMethod">
                <xs:annotation>
                  <xs:documentation>Requested payment method for all payments in the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Payments" nillable="true" type="tns2:ArrayOfPayment">
                <xs:annotation>
                  <xs:documentation>Payments on the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PendEscalationForBulk" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Only escalate as part of a BulkInvoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Portion" nillable="true" type="tns2:CheckPortion">
                <xs:annotation>
                  <xs:documentation>The amount of a multi-payee check applicable to this check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RecurringCheck" nillable="true" type="tns2:RecurringCheck">
                <xs:annotation>
                  <xs:documentation>The recurring check entity, if any, associated with this check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reportability" nillable="true" type="tns3:ReportabilityType">
                <xs:annotation>
                  <xs:documentation>Whether the payment should be reported to the IRS as income.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportableAmount" nillable="true" type="tns2:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Reportable amount of the check in the transaction currency. Used by the BackupWithholdingCalculator as the amount of the check reportable to the IRS, from which it calculates backup withholding Deductions. It is editable in the UI.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ScheduledSendDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that the check is scheduled to be sent.  Also used to determine if the check amount is included in Future Payments (tomorrow or later).  Should only be modified in the UI or PreSetup rules.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServicePdEnd" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>End date of the service period for the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServicePdStart" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Start date of the service period for the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequestInvoices" nillable="true" type="tns2:ArrayOfServiceRequestInvoice">
                <xs:annotation>
                  <xs:documentation>ServiceRequestInvoices related to this check. All linked invoices are expected to have the same service request specialist and currency.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns3:TransactionStatus">
                <xs:annotation>
                  <xs:documentation>Status of the check (issued, voided, cleared, and so on). Do not update directly. Use methods to initiate operations, or use updateCheckStatus() method. NOTE: when inserting a Check this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BulkInvoiceItemInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Links a BulkInvoiceItem to a claim graph. It has a nullable reference to BulkInvoiceItem so that it can be archived along with the claim graph.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BulkInvoiceItem" nillable="true" type="tns1:BulkInvoiceItem">
                <xs:annotation>
                  <xs:documentation>The bulk invoice that this info is referring to</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BulkInvoiceItemPublicID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>PublicID used to link back to the item</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Check" nillable="true" type="tns1:Check">
                <xs:annotation>
                  <xs:documentation>The Check entity that was created as the associated placeholder for this BulkInvoiceItem.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Claim" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Claim for which this BulkInvoiceItem represents a payment. NOTE: when inserting a BulkInvoiceItemInfo this field must be non-null. NOTE: value is the PublicId of the Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposure" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Exposure, if any, for which this BulkInvoiceItem represents a payment. NOTE: value is the PublicId of the Exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BulkInvoiceItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    Describes one item of the BulkInvoice, and corresponds to one line item of the original invoice.
    It contains data fields that define the reserve line to which the item is to be coded, as well as the amount and the PaymentType.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Amount" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The amount of this invoice item. NOTE: when inserting a BulkInvoiceItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AwaitingProcessing" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flag to indicate whether this item is waiting to be processed for invoice submission.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="BulkInvoice" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The bulk invoice that contains this bulk invoice item. NOTE: value is the PublicId of the BulkInvoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BulkInvoiceItemInfo" nillable="true" type="tns1:BulkInvoiceItemInfo">
                <xs:annotation>
                  <xs:documentation>Links a BulkInvoiceItem to its info. Returns null if the associated Claim is Archived.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="BulkInvoiceOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of the BulkInvoiceItem on the BulkInvoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Claim for which this BulkInvoiceItem represents a payment. NOTE: value is the PublicId of the Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Claim Number of the claim that this BulkInvoiceItem is related to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CostCategory" nillable="true" type="tns2:CostCategory">
                <xs:annotation>
                  <xs:documentation>The CostCategory of the payment associated with this item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CostType" nillable="true" type="tns2:CostType">
                <xs:annotation>
                  <xs:documentation>The CostType of the payment associated with this item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateOfService" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that the service was performed (if this check is for a service).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DeductionsAmount" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The total amount of all deductions computed for the check associated with this bulk invoice item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A comment field for the invoice item.  The contents of this field will be copied to the memo of the place-holder check that is created for this BulkInvoiceItem in ClaimCenter.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Explanation" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Validation warnings / errors generated for this BulkInvoiceItem during final processing.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Exposure" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Exposure, if any, for which this BulkInvoiceItem represents a payment. NOTE: value is the PublicId of the Exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="NonEroding" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether the associated payment should erode reserves (false) or not (true).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentType" nillable="true" type="tns2:PaymentType">
                <xs:annotation>
                  <xs:documentation>The PaymentType for the payment associated with this item. NOTE: when inserting a BulkInvoiceItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReservingCurrency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The reserving currency of the payment associated with this item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServicePdEnd" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>End date of the service period for the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServicePdStart" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Start date of the service period for the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:BulkInvoiceItemStatus">
                <xs:annotation>
                  <xs:documentation>The current business status of this item. NOTE: when inserting a BulkInvoiceItem this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBulkInvoiceItem" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BulkInvoiceItem[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BIValidationAlert" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    Represents one bulk invoice validation alert message. A bulk invoice validation plugin constructs one or more instances
    of this entity when it encounters validation errors. Each instance is related to a single BulkInvoice and has both an alert type and a message
    indicating the reason for the validation failure.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AlertMsg" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Text description of this BulkInvoice validation failure alert, i.e. the reason for the validation failure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AlertType" nillable="true" type="tns2:BIValidationAlertType">
                <xs:annotation>
                  <xs:documentation>The type of this BulkInvoice validation alert.  Typically customer defined.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BulkInvoice" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The BulkInvoice with which this validation alert is associated. NOTE: value is the PublicId of the BulkInvoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfBIValidationAlert" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:BIValidationAlert[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BulkInvoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    The top level entity for Bulk Pay, which corresponds to the incoming invoice or bill to be
    paid. It has a unique ID (which may correspond to the invoice), some data fields (such as payee and a scheduled send
    date), and a non-null array of bulk invoice items (refer to the BulkInvoiceItem entity for details). A bulk invoice
    is not associated with a single claim, but each line item (each BulkInvoiceItem) is associated with a different claim.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name on the account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date when the object was ultimately approved or rejected</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovalStatus" nillable="true" type="tns2:ApprovalStatus">
                <xs:annotation>
                  <xs:documentation>The approval status of the object</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovedReportingAmount" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized value of amount in reporting currency of all approved invoice items.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ApprovedTransactionAmount" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized value of amount in transaction currency of all approved invoice items.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankAccountNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The bank account number</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankAccountType" nillable="true" type="tns2:BankAccountType">
                <xs:annotation>
                  <xs:documentation>The type of bank accout e.g. checking, savings etc</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the bank</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BankRoutingNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The routing number is a nine digit bank code used in the United States</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BulkInvoiceTotal" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Amount to be split evenly across all invoice items, or zero if item amounts are to be entered individually.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CheckInstructions" nillable="true" type="tns2:CheckHandlingInstructions">
                <xs:annotation>
                  <xs:documentation>Special handling instructions for the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CheckNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The check or EFT identifier for the single large check generated for this invoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments about the check, such as a reason it was voided.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>Currency that the line items on this BulkInvoice should use.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultCostCategory" nillable="true" type="tns2:CostCategory">
                <xs:annotation>
                  <xs:documentation>The CostCategory, if any, shared by every payment on this BulkInvoice unless overriden by a particular line-item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultCostType" nillable="true" type="tns2:CostType">
                <xs:annotation>
                  <xs:documentation>The CostType, if any, shared by every payment on this BulkInvoice unless overriden by a particular line-item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DefaultPaymentType" nillable="true" type="tns2:PaymentType">
                <xs:annotation>
                  <xs:documentation> The PaymentType, if any, shared by every payment on this BulkInvoice unless overriden by a particular line-item.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeliveryMethod" nillable="true" type="tns2:DeliveryMethod">
                <xs:annotation>
                  <xs:documentation>Requested delivery method for the bulk check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceItems" nillable="true" type="tns1:ArrayOfBulkInvoiceItem">
                <xs:annotation>
                  <xs:documentation>The collection of BulkInvoiceItems on this invoice, corresponding to the line-items on the real-world invoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InvoiceNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Unique number of the physical invoice related to this bulk pay invoice.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsPrimary" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if this is the primary EFT record for the contact</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IssueDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the check was issued.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastValidatedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The date that this BulkInvoice was last validated. This property is always non-null when Valid is true.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MailTo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the person/company to whom the check should be mailed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MailToAddress" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Address of the person/company to whom the check should be mailed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Memo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Memo to include on the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PayTo" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Pay to the order of value for the bulk check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Payee" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The Payee for all the bulkinvoiceitems on this bulkinvoice. NOTE: when inserting a BulkInvoice this field must be non-null. NOTE: value is the PublicId of the Contact.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PaymentMethod" nillable="true" type="tns2:PaymentMethod">
                <xs:annotation>
                  <xs:documentation>Requested payment method for all payments in the check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ProcessingItems" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean flag to indicate whether the invoice's items are currently being processed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReceivedDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that the invoice was received or entered.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Reportability" nillable="true" type="tns2:ReportabilityType">
                <xs:annotation>
                  <xs:documentation>Whether the bulk payment should be reported to the IRS as income.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReportableAmount" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>(Unused. May be removed in a future release.) Reportable amount of the BI check (for deductions).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RequestingUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user submitting the object for approval NOTE: when inserting a BulkInvoice this field must be non-null. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ScheduledSendDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date that the bulk invoice should be submitted to the downstream system.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SplitEqually" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Designates whether or not the amount for each individual line-item should be automatically calculated as an even share of the total amount.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:BulkInvoiceStatus">
                <xs:annotation>
                  <xs:documentation>Business status of this bulk invoice. NOTE: when inserting a BulkInvoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalReportingAmount" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized value of total amount in reporting currency of all invoice items.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalTransactionAmount" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Denormalized value of total amount in transaction currency of all invoice items.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Valid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether this BulkInvoice has been validated and if so whether the validation was successful.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ValidationAlerts" nillable="true" type="tns1:ArrayOfBIValidationAlert">
                <xs:annotation>
                  <xs:documentation>Any alerts returned by the most recent validation call.  If empty, then the BulkInvoice is considered valid.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>FieldValue is essentially a name value pair. Because SOAP is somewhat
restrictive in terms of polymorphism the value portion is always expressed
as a String and will be converted into the appropriate type if need be.
&lt;p&gt;
id is used when the FieldValue is used to refer to a foreign key field. Currently
this is only supported when FieldValue instances are used in the context of setting
an ArrayElement. It is considered an error if both the id field and the value
field of this class are non-null.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Identifier" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The public id if the field referred to by name is a
foreign key field.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Name" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The name of the field on the entity; case insensitive</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Value" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>String value of the field</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldValue[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProcessID" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A simple class that contains the pid of a previously started batch process.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Pid" type="xsd:long">
            <xs:annotation>
              <xs:documentation>The process id of the batch process</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FieldFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A FieldFilter represents a mapping from an entity name to an array of field names.  To see how it is used, see {@link
ObjectFilter}.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="EntityName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The name of the entity</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="FieldNames" nillable="true" type="impl:ArrayOf_soapenc_string">
            <xs:annotation>
              <xs:documentation>The field names to set</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldFilter[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ObjectFilter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An ObjectFilter, given a graph of objects, will extract a subgraph of "interesting" objects.  It is designed to be
used in places such as webservices where returning a large graph of objects may lead to performance problems.
&lt;p/&gt;
At a lower level, an ObjectFilter represents a set of rules which are applied recursively to a object (which we will
call the "root object").  Each ObjectFilter consists of an array of {@link FieldFilter} objects, and each {@link FieldFilter} object
defines a one-to-many relation from an entity name to a list of field names. The graph described by a given
ObjectFilter and root object is calculated using the following algorithm:
&lt;p/&gt;
&lt;ol&gt; &lt;li&gt; Find the entity name for the current object.
&lt;p/&gt;
&lt;li&gt; Look through the ObjectFilter for a {@link FieldFilter} whose entity name correponds to the entity name of the current
object.
&lt;p/&gt;
&lt;li&gt; If there is no such {@link FieldFilter}, set every property of the current object to null. object.
&lt;p/&gt;
&lt;li&gt; Take the {@link FieldFilter} with the matching entity name (if there is more than one such {@link FieldFilter}, choose one of
them arbitrarily)
&lt;p/&gt;
&lt;li&gt; Fetch the list of field names from the {@link FieldFilter}
&lt;p/&gt;
&lt;li&gt; Set each field on the current object to null &lt;b&gt;unless&lt;/b&gt; the field's name appears in the {@link FieldFilter}'s list of
field names.
&lt;p/&gt;
&lt;li&gt; Recursively apply this procedure to each object which is a property of the current object. &lt;/ol&gt;
&lt;p/&gt;
Applying this procedure to the root object yields the directed graph.
@deprecated The ObjectFilter class is deprecated. Instead, rewrite integration code as custom web service APIs for
each integration point, defining most application logic within the web service. Before this release, external code
requested large objects and used ObjectFilter to define arbitrary fields to return so that the data transfer is not
too large. Instead, design your new custom web services to return only what is needed. You might want to create new
Gosu classes or non-persistent business entities for some integration points to encapsulate data passed to the
web service or returned from the web service.
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="FieldFilters" nillable="true" type="tns1:ArrayOfFieldFilter">
            <xs:annotation>
              <xs:documentation>Returns an array containing the field filters for this ObjectFilter.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArchiveFailure" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="ArchiveFailure" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short version of the reason for a failure to archive NOTE: when inserting a ArchiveFailure this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArchiveFailureDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="ArchiveFailureDetails" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Full details of archive failure NOTE: when inserting a ArchiveFailureDetails this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UpgradeDatamodelInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Capture info at time of each deployment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="ApplicationMajorVers" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Application Major Schema Version at time of deployment NOTE: when inserting a UpgradeDatamodelInfo this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ApplicationMinorVers" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Application Minor Schema Version at time of deployment NOTE: when inserting a UpgradeDatamodelInfo this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExtensionsVers" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Extensions Version at time of deployment NOTE: when inserting a UpgradeDatamodelInfo this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PlatformMajorVers" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Platform Major Schema Version at time of deployment NOTE: when inserting a UpgradeDatamodelInfo this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PlatformMinorVers" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Platform Minor Schema Version at time of deployment NOTE: when inserting a UpgradeDatamodelInfo this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
The stub of the claim that is left behind after the claim is archived. It contains minimal (summary) information about the claim; for example, claim number and loss location. It is also included in claim searches. Because this table is not archived, it has the potential to grow very large; care must be taken not to put too much data in it (for example, a blob) when extending it.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ArchiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>When archiving was attempted on the root. Null if we never attempted to archive it.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ArchiveFailure" nillable="true" type="tns1:ArchiveFailure">
                <xs:annotation>
                  <xs:documentation>Short version of the reason for a failure to archive</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ArchiveFailureDetails" nillable="true" type="tns1:ArchiveFailureDetails">
                <xs:annotation>
                  <xs:documentation>Full details of archive failure</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ArchiveSchemaInfo" nillable="true" type="tns1:UpgradeDatamodelInfo">
                <xs:annotation>
                  <xs:documentation>Schema version at which the root was archived or null if it was not archived</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ArchiveState" nillable="true" type="tns2:ArchiveState">
                <xs:annotation>
                  <xs:documentation>The archive state of the graph</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The external identifier of the claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CoverageLineMatchDataInfoValid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True for archived claims which have an accurate CoverageLineMatchDataInfo array, false otherwise</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The currency for the claim, copied from the claim when the claim is archived. Always null for active claims. May also be null for pre 8.0 archived claims</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExcludeReason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Reason for excluding or skipping the entity from archiving. If the ExcludeFromArchive bit is set, this gives the reason for excluding. Else, if this is not null, it is the reason for skipping.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExcludedFromArchive" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicate if this entity should be excluded from archiving</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="JurisdictionState" nillable="true" type="tns2:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>The state of jurisdiction. Denormed from claim.JurisdictionState</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossLocationCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Location Code denormed from claim.LossLocationCode</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Number of the policy (generally a string).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PurgeDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date at which the claim should be purged. Configurations can use this field to decide when to mark the claim for purge, and there are sample Claim Closed and Claim Reopened rules to set it. It is not used by the internal purge logic.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RootPublicID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The public ID of the root.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AssignmentResponse" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="AssignmentCommand" nillable="true" type="tns3:AssignmentCommand"/>
          <xs:element name="GroupID" nillable="true" type="soapenc:string"/>
          <xs:element name="GroupType" nillable="true" type="soapenc:string"/>
          <xs:element name="QueueID" nillable="true" type="soapenc:string"/>
          <xs:element name="ReviewAssignment" type="xsd:boolean"/>
          <xs:element name="ReviewerId" nillable="true" type="soapenc:string"/>
          <xs:element name="UserID" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PolicySummaryVehicle" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Summary information about a vehicle on a policy summary.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PolicySummaryRiskUnit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Color" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Color of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LicensePlate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>License plate of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Make" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Make of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Model" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Model of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SerialNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Serial number; only use if VIN is not appropriate (e.g. for boats).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns2:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>State (Jurisdiction) in which the vehicle is registered. The Jurisdiction must be associated with JurisdictionType.TC_VEHICLE_REG.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="VehicleNumber" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of the vehicle on the policy. NOTE: when inserting a PolicySummaryVehicle this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Vin" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>VIN of the vehicle.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicySummaryRiskUnit" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Summary information for a risk unit item on a policy summary.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the risk in an external policy system</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Selected" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether the risk unit should be included when fetching the policy from the policy system.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicySummaryProperty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Summary information about a property on a policy summary.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PolicySummaryRiskUnit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Deprecated, please use AddressLine1, AddressLine2 instead
@deprecated Deprecated, please use AddressLine1, AddressLine2 instead
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First line of mailing address</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine1Kanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First line of mailing address Kanji</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Second line of mailing address</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine2Kanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Second line of mailing address Kanji</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BuildingNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Building number of the property.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="City" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="CityKanji" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Location" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Location number of the property.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Notes" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Other notes on the property.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PropertyNumber" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of the property on the policy. NOTE: when inserting a PolicySummaryProperty this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPolicySummaryProperty" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PolicySummaryProperty[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPolicySummaryVehicle" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PolicySummaryVehicle[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicySummary" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Non-persistent entity containing simplified information about a Policy. This
object is returned in the result set during a Policy search
(IPolicySearchAdapter.searchPolicies()), giving the user some context with which
to select the desired policy for full retrieval.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Deprecated, please use AddressLine1, AddressLine2 instead
@deprecated Deprecated, please use AddressLine1, AddressLine2 instead
</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine1" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine1Kanji" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine2" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine2Kanji" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="City" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="CityKanji" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="EffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the policy is effective.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpirationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the policy expires.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredName" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="LossDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Loss date on the Claim for which the summary was retrieved. Useful in some policy systems to determine what policy version this summary represents.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyNumber" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>Type of policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PostalCode" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ProducerCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Agency that sold the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Properties" nillable="true" type="tns1:ArrayOfPolicySummaryProperty">
                <xs:annotation>
                  <xs:documentation>List of properties (in summary form) covered by the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyInvolved" nillable="true" type="tns1:PolicySummaryProperty">
                <xs:annotation>
                  <xs:documentation>If non-null, only this property is required for the Claim; others should be omitted from the returned Policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns2:State"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:PolicyStatus"/>
              <xs:element maxOccurs="1" minOccurs="0" name="VehicleInvolved" nillable="true" type="tns1:PolicySummaryVehicle">
                <xs:annotation>
                  <xs:documentation>If non-null, only this vehicle is required for the Claim; others should be omitted from the returned Policy</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Vehicles" nillable="true" type="tns1:ArrayOfPolicySummaryVehicle">
                <xs:annotation>
                  <xs:documentation>List of vehicles (in summary form) covered by the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TransactionSetApprovalResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>This class stores the result from a TransactionSet approval request.  The
result can be one of the following:
&lt;ul&gt;
&lt;li&gt; Valid and approved
&lt;li&gt; Valid but unapproved
&lt;li&gt; Invalid
&lt;/ul&gt;</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="ApprovalReasons" nillable="true" type="impl:ArrayOf_soapenc_string">
            <xs:annotation>
              <xs:documentation>Returns the list of reasons why the request was not approved.
&lt;p/&gt;
Note: this method should only be called when the request is valid but unapproved.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="PublicId" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The public id of the TransactionSet</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="State" nillable="true" type="tns2:TransactionSetApprovalType">
            <xs:annotation>
              <xs:documentation>The state of this result.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ValidationErrors" nillable="true" type="impl:ArrayOf_soapenc_string">
            <xs:annotation>
              <xs:documentation>Returns the list of reasons why the request was invalid.
&lt;p/&gt;
Note: this method should only be called when the request is invalid.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NVParam" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A simple container for a name/value pair</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="ParamName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The name of the parameter</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ParamValue" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The value of the parameter</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfNVParam" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:NVParam[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CustomerServiceTierSpecialHandling" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    The special handling to follow for claims linked to a given Service Tier.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:SpecialHandling">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CustomerServiceTier" nillable="true" type="tns2:CustomerServiceTier">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a CustomerServiceTierSpecialHandling this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FinancialThresholdTrigger" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    A type of automated handler trigger whose execution behavior is based on a specific financial amount reaching, exceeding or falling below a specified threshold value.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AutomatedHandler" nillable="true" type="tns1:AutomatedHandler"/>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>The Currency of ThresholdAmount; this value must equal a Claim's Currency for that Claim to match this trigger. NOTE: when inserting a FinancialThresholdTrigger this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FinancialThreshold" nillable="true" type="tns2:FinancialThreshold">
                <xs:annotation>
                  <xs:documentation>The financial threshold that can cause this trigger to execute NOTE: when inserting a FinancialThresholdTrigger this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ThresholdAmount" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Monetary amount for the threshold that must be exceeded to trigger the event NOTE: when inserting a FinancialThresholdTrigger this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TriggeringCause" nillable="true" type="tns2:FinancialTriggerCause">
                <xs:annotation>
                  <xs:documentation>Specifies which exact occurrence takes place to cause this Trigger to fire</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FinancialAutomatedNotificationHandler" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A subtype of Automated Handler that generates an email when a specified FinancialThreshold for a given Claim changes its value.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AutomatedNotificationHandler">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="FinancialThresholdTrigger" nillable="true" type="tns1:FinancialThresholdTrigger">
                <xs:annotation>
                  <xs:documentation>The associated FinancialThresholdTrigger whose execution would result in an email being generated according to the specifications of this handler</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimIndicatorTrigger" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A type of automated handler trigger whose execution behavior is based on a specified ClaimIndicator and a value for that indicator.  For example, the trigger might be setup so that it will only execute when the FatalityIndicator for a Claim changes to a value of TRUE (i.e., someone associated with the Claim has died).
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AutomatedHandler" nillable="true" type="tns1:AutomatedHandler"/>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimIndicator" nillable="true" type="tns2:ClaimIndicator">
                <xs:annotation>
                  <xs:documentation>The Claim Indicator that can cause this trigger to execute NOTE: when inserting a ClaimIndicatorTrigger this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TriggeringValue" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>The value on which to execute this trigger.  If the specified ClaimIndicator changes to this value for a given Claim then this trigger should execute NOTE: when inserting a ClaimIndicatorTrigger this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimIndicatorAutomatedNotificationHandler" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A subtype of Automated Handler that generates an email when a specified ClaimIndicator for a given Claim changes its value.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AutomatedNotificationHandler">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimIndicatorTrigger" nillable="true" type="tns1:ClaimIndicatorTrigger">
                <xs:annotation>
                  <xs:documentation>The associated ClaimIndicatorTrigger whose execution would result in an email being generated according to the specifications of this handler</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SpecialHandlingEmailAddress" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>An email address associated with a special handling notification rule.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AutomatedNotificationHandler" nillable="true" type="tns1:AutomatedNotificationHandler"/>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EmailAddress" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>An email address included in a special handling notification rule. NOTE: when inserting a SpecialHandlingEmailAddress this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSpecialHandlingEmailAddress" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SpecialHandlingEmailAddress[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AutomatedNotificationHandler" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A subtype of AutomatedHandler that causes emails to be generated when the associated trigger is executed by changes to a Claim.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AutomatedHandler">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailAddress" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Email address to which the generated email should be sent</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailAddresses" nillable="true" type="tns1:ArrayOfSpecialHandlingEmailAddress">
                <xs:annotation>
                  <xs:documentation>Email addresses for multi-recipient lists.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailRole" nillable="true" type="tns2:ContactRole">
                <xs:annotation>
                  <xs:documentation>This is set when email address should be determined dynamically based on the contact assigned to this role.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EmailTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The ID of the email template to use when generating the email after the associated trigger fires.  The id gets passed to IEmailTemplateSource to retrieve the EmailTemplateDescriptor. NOTE: when inserting a AutomatedNotificationHandler this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NotificationType" nillable="true" type="tns2:NotificationType">
                <xs:annotation>
                  <xs:documentation>Notification type for either notification to a fixed email address or a specific contact on a claim</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimIndicatorAutomatedActivityHandler" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A subtype of Automated Handler that generates an activity when a specified ClaimIndicator for a given Claim changes its value.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AutomatedActivityHandler">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimIndicatorTrigger" nillable="true" type="tns1:ClaimIndicatorTrigger">
                <xs:annotation>
                  <xs:documentation>The associated ClaimIndicatorTrigger whose execution would result in an activity being generated according to the specifications of this handler</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FinancialAutomatedActivityHandler" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A subtype of Automated Handler that generates an email when a specified FinancialThreshold for a given Claim changes its value.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AutomatedActivityHandler">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="FinancialThresholdTrigger" nillable="true" type="tns1:FinancialThresholdTrigger">
                <xs:annotation>
                  <xs:documentation>The associated FinancialThresholdTrigger whose execution would result in an email being generated according to the specifications of this handler</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ActivityPattern" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;A template for an activity. An activity pattern is not assigned to a user, nor does it belong to a claim; it is used only to create new activity instances.
      To create a new activity, an activity pattern is first chosen, and the values in the activity pattern are used to seed the values of the new activity instance.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivityClass" nillable="true" type="tns2:ActivityClass">
                <xs:annotation>
                  <xs:documentation>The class of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AutomatedOnly" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the activity pattern is used only by automated additions to the workplan. If true, the pattern won't be shown as an option for users to choose in the application's interface.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Category" nillable="true" type="tns2:ActivityCategory">
                <xs:annotation>
                  <xs:documentation>Category used to organize the activity pattern.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimLossType" nillable="true" type="tns2:LossType">
                <xs:annotation>
                  <xs:documentation>Used to optionally filter activity patterns by claim loss type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ClosedClaimAvlble" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the activity pattern is available for closed claims.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Code" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The concise name of the activity pattern, used to identify the pattern within rules.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Command" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A Gosu command to execute for this activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the activity pattern.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DocumentTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The id of an associated document template. The id gets passed to IDocumentTemplateSource to retrieve the DocumentTemplateDescriptor.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The id of an associated email template. The id gets passed to IEmailTemplateSource to retrieve the EmailTemplateDescriptor.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscBusCalLocPath" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Location bean path to use for business calendar in calculating EscalationDate, if applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationBusCalTag" nillable="true" type="tns2:HolidayTagCode">
                <xs:annotation>
                  <xs:documentation>Holiday tag code to use for business calendar in calculating EscalationDate, if applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used in conjunction with EscalationStartPoint and EscalationIncludedDays to calculate the EscalationDate of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationHours" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used in conjunction with EscalationStartPoint and EscalationIncludedDays to calculate the EscalationDate of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationInclDays" nillable="true" type="tns2:IncludeDaysType">
                <xs:annotation>
                  <xs:documentation>Which days to include in calculating the EscalationDate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EscalationStartPt" nillable="true" type="tns2:StartPointType">
                <xs:annotation>
                  <xs:documentation>Which existing date on the activity or associated claim to use as the starting date for the EscalationDate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExternallyOwned" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether the activity is externally owned.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Importance" nillable="true" type="tns2:ImportanceLevel">
                <xs:annotation>
                  <xs:documentation>The importance level of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Mandatory" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether completion of the activity is mandatory.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Priority" nillable="true" type="tns2:Priority">
                <xs:annotation>
                  <xs:documentation>Priority of the activity with respect to other activities.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Recurring" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Whether this activity is recurring.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ShortSubject" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Short subject field of the activity. For use in small areas e.g., a calendar event entry.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Subject" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Subject field of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetBusCalLocPath" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Location bean path to use for business calendar in calculating TargetDate, if applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetBusCalTag" nillable="true" type="tns2:HolidayTagCode">
                <xs:annotation>
                  <xs:documentation>Holiday tag code to use for business calendar in calculating TargetDate, if applicable.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetDays" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used in conjunction with TargetStartPoint and TargetIncludedDays to calculate the ActionDate of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetHours" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Used in conjunction with TargetStartPoint and TargetIncludedDays to calculate the ActionDate of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetIncludeDays" nillable="true" type="tns2:IncludeDaysType">
                <xs:annotation>
                  <xs:documentation>Which days to include in calculating the TargetDate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetStartPoint" nillable="true" type="tns2:StartPointType">
                <xs:annotation>
                  <xs:documentation>Which existing date on the activity or associated claim to use as the starting date for the TargetDate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:ActivityType">
                <xs:annotation>
                  <xs:documentation>Type of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AutomatedActivityHandler" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A subtype of AutomatedHandler that causes activities to be generated when the associated trigger is executed by
        changes to a Claim.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:AutomatedHandler">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="ActivityPattern" nillable="true" type="tns1:ActivityPattern">
                <xs:annotation>
                  <xs:documentation>Activity pattern to use for activity generation NOTE: when inserting a AutomatedActivityHandler this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailTemplateOverride" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Optional alternate template to use for activity generation</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AutomatedHandler" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        This entity is the superclass for the two types of Special Handling automated handlers, one for generating email notifications and one for generating activities.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>If non-null, then this handler will only apply to Claims created for Policies that have this particular Policy Type</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpecialHandling" nillable="true" type="tns1:SpecialHandling">
                <xs:annotation>
                  <xs:documentation>The instance of Special Handling that owns this Automated Handler</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAutomatedHandler" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AutomatedHandler[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OtherInstruction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Other instructions for account special handling</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Special handling other instruction comment</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InstructionCategory" nillable="true" type="tns2:InstructionCategory">
                <xs:annotation>
                  <xs:documentation>The instruction category this instruction relates to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InstructionType" nillable="true" type="tns2:InstructionType">
                <xs:annotation>
                  <xs:documentation>The specific instruction type this instruction relates to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>The policy type this instruction relates to. If no policy type is specified, it will relate to all types.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpecialHandling" nillable="true" type="tns1:SpecialHandling">
                <xs:annotation>
                  <xs:documentation>The special handling object this other instruction relates to.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfOtherInstruction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:OtherInstruction[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SpecialHandling" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        This is the parent entity for defining special handling of Claims. There may be different special handling needs for claims related to a particular Account, Brokerage or Affinity Program. All the special handling instructions and triggers are hung off the SpecialHandling entity and then different subtypes of this entity point to the owning Account, Brokerage or Program.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AutomatedHandlers" nillable="true" type="tns1:ArrayOfAutomatedHandler">
                <xs:annotation>
                  <xs:documentation>An associative array of AutomatedHandlers, segmented by the AutomatedHandler subtype (i.e., AutomatedActivityHandler and AutomatedNotificationHandler</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OtherInstructions" nillable="true" type="tns1:ArrayOfOtherInstruction">
                <xs:annotation>
                  <xs:documentation>Related other instructions</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AccountSpecialHandling" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        The special handling to follow for claims linked to a given Account
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:SpecialHandling">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Account" nillable="true" type="tns1:Account">
                <xs:annotation>
                  <xs:documentation>The Account that owns this instance of Special Handling.  Any Claims created for Policies associated with this Account will have these special handling instructions and triggers applied.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Account" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
       Represents the customer account associated with a claim policy. Used for special account handling.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountHolder" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a Account this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="AccountNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The account number NOTE: when inserting a Account this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpecialHandling" nillable="true" type="tns1:AccountSpecialHandling">
                <xs:annotation>
                  <xs:documentation>The Special Handling instructions and notification triggers to apply to any Claims entered                     for Policies that are associated with this Account</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfAggregateLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:AggregateLimit[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCoverageLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CoverageLine[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyPeriod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the period during which an insurance policy provides coverage. Every claim entered into ClaimCenter is associated
    with a unique policy entity, even if it shares the same real-world policy with multiple claims.  A policy entity is essentially a "snapshot" of the
    real-world policy at the time the claim was entered into ClaimCenter.  The PolicyPeriod entity groups these separate, but related, policy entities
    together for the purpose of determining the amount of an aggregate limit or deductible that has been used by the associated claims.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AccountNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Account number that the policies of this PolicyPeriod belong to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AggregateLimits" nillable="true" type="tns1:ArrayOfAggregateLimit">
                <xs:annotation>
                  <xs:documentation>Aggregate limits for the policies in this period.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageLines" nillable="true" type="tns1:ArrayOfCoverageLine">
                <xs:annotation>
                  <xs:documentation>Coverage lines associated with this period.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the policy is effective.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpirationDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date on which the policy expires.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Number of the policy (generally a string).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriodType" nillable="true" type="tns2:PolicyPeriodType">
                <xs:annotation>
                  <xs:documentation>Type of policy period: account or policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicySuffix" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Indicates each unique period that a policy has been in effect.  (Sometimes called 'Mod' or 'Module.')</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>Type of policy to which this period applies. NOTE: when inserting a PolicyPeriod this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CoverageLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A representation of a coverage based on the coverage's subtype, type, and any associated exposure unit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageSubtype" nillable="true" type="tns2:Coverage">
                <xs:annotation>
                  <xs:documentation>The subclass type of the Coverage, e.g., PolicyCoverage, VehicleCoverage, or PropertyCoverage. This is unrelated to the CoverageSubtype typelist.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageType" nillable="true" type="tns2:CoverageType">
                <xs:annotation>
                  <xs:documentation>Coverage type. NOTE: when inserting a CoverageLine this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExposureUnitNumber" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of the risk unit for the coverage on the policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LOBCoverageSubtype" nillable="true" type="tns2:CoverageSubtype">
                <xs:annotation>
                  <xs:documentation>The CoverageSubtype (from the LOB) that an exposure must have in order to match this CoverageLine</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>PolicyPeriod with which this CoverageLine is associated. It should be the same PolicyPeriod that is referred to by the AggregateLimits that are linked to this CoverageLine (through CoverageLineLimit entities).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RUPolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the covered risk unit in an external policy system.  Only applies to those CoverageLines which point to a VehicleCoverage, or PropertyCoverage, or any coverage which extends from RUCoverage and therefore has a RiskUnit with (possibly) a policySystemID.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CoverageLineLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Links coverages to aggregate limits.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageLine" nillable="true" type="tns1:CoverageLine">
                <xs:annotation>
                  <xs:documentation>The associated coverage line.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCoverageLineLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CoverageLineLimit[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AggregateLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    Defines an annual or lifetime limit on an insurer's liability. This entity's LimitAmount value defines
    the maximum amount that an insurer is required to pay for a specific period. Each CoverageLine, which represents either a
    CoverageType or a specific Coverage, has an associated AggregateLimit and they are linked together through the CoverageLineLimit
    entity. The AggregateLimit.CoverageLines array contains the lines that reference a particular AggregateLimit. Each AggregateLimit
    is associated with a single policy period and zero or more coverage lines. If associated with multiple coverage lines, all the 
    lines must be unique.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AggLimitCalcCriteria" nillable="true" type="tns2:AggLimitCalcCriteria">
                <xs:annotation>
                  <xs:documentation>Contribution critiera for limit used calculations</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments about the aggregate limit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageLines" nillable="true" type="tns1:ArrayOfCoverageLineLimit">
                <xs:annotation>
                  <xs:documentation>Coverage lines that reference this aggregate limit.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="LimitAmount" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The amount of the aggregate limit, in the Claim Currency of Claims in the PolicyPeriod. NOTE: when inserting a AggregateLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LimitType" nillable="true" type="tns2:AggregateLimitType">
                <xs:annotation>
                  <xs:documentation>Aggregate limit type: none, by loss date, or by reported date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyPeriod" nillable="true" type="tns1:PolicyPeriod">
                <xs:annotation>
                  <xs:documentation>PolicyPeriod with which the aggregate limit is associated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Valid" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if the AggregateLimitRpts related to this aggregatelimit are up-to-date.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ValueType" nillable="true" type="tns2:AggregateType">
                <xs:annotation>
                  <xs:documentation>Aggregate type: limit or deductible.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OverdueActivitiesClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Overdue Activities</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:IntegerClaimMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="NextOverdueTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time next activity will become overdue.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReserveChangeCountClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Number of Reserve Changes</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:IntegerClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OpenEscalatedActivitiesClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Number of Open Escalated Activities</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:IntegerClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DaysInitialContactWithInsuredClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Initial Contact with Insured</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedClaimMetric">
            <xs:sequence>
              <xs:element name="ActivitySkipped" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Did the user explicitly skip the initial contact with insured activity?</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DaysLastViewedBySupervisorClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Number of days since the supervisor last viewed the claim</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DaysLastViewedByAdjusterClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Number of days since the adjuster last viewed the claim</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TimeToFirstPaymentClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Time to First Loss Payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DaysOpenClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Days Open</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TimeBasedClaimMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Time based claim metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsOpen" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>The value of an open time based metric is now - start time, once closed it has a fixed integer value</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Skipped" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the metric is closed because the normal closing event was skipped.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Starting time of the metric.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NetTotalIncurredClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Total Incurred</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:MoneyClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TotalPaidClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Paid</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:MoneyClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MoneyClaimMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Money based claim metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="MoneyValue" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Money field to store the money value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DecimalClaimMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Decimal based claim metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentPaidLossCostsClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Paid Loss Costs as % of Total Paid</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PercentClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentEscalatedActivitiesClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>% of Escalated Activities</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PercentClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentReserveChangeClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>% of Reserve Change from Initial Reserve</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PercentClaimMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="InitialReserve" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Initial Reserve Amount of the Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalReserveChange" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Total Reserve Amount change</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentIncurredLossCostsClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Incurred Loss Costs as % of Net Total Incurred</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PercentClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentClaimMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Percent based claim metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percent field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Metrics related to a claim</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimMetricCategory" nillable="true" type="tns2:ClaimMetricCategory">
                <xs:annotation>
                  <xs:documentation>Category of Claim Metric. NOTE: when inserting a ClaimMetric this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReachRedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time the red limit was or will be reached</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReachYellowTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time the yellow limit was or will be reached.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="IntegerClaimMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Integer based claim metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AllEscalatedActivitiesClaimMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Number of Escalated Activities</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:IntegerClaimMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="OrganizationZoneAdmin" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Join table between the organization and the zone, to see which zones an organization can admin over.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Country" nillable="true" type="tns2:Country">
                <xs:annotation>
                  <xs:documentation>The country to which the zone belongs. NOTE: when inserting a OrganizationZoneAdmin this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Organization" nillable="true" type="tns1:Organization">
                <xs:annotation>
                  <xs:documentation>Fk to the Organization</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ZoneCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Code of the zone NOTE: when inserting a OrganizationZoneAdmin this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ZoneType" nillable="true" type="tns2:ZoneType">
                <xs:annotation>
                  <xs:documentation>Type of zone. NOTE: when inserting a OrganizationZoneAdmin this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfOrganizationZoneAdmin" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:OrganizationZoneAdmin[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Organization" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines an organization that has a hierarchy of groups</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Carrier" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flag indicating whether this organization corresponds to the carrier itself.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>Contact entry related to the organization.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="MasterAdmin" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Flag indicating whether this organization is the superuser organization with admin powers over all organizations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of the organization. NOTE: when inserting a Organization this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The kanji name of the organization. Used only for Japanese and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RootGroup" nillable="true" type="tns1:Group">
                <xs:annotation>
                  <xs:documentation>The organization's root group.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:BusinessType">
                <xs:annotation>
                  <xs:documentation>The type of the organization.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ZonesToAdmin" nillable="true" type="tns1:ArrayOfOrganizationZoneAdmin">
                <xs:annotation>
                  <xs:documentation>Link to joiner table for zones to admin.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Group" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Groups of users.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GroupType" nillable="true" type="tns2:GroupType">
                <xs:annotation>
                  <xs:documentation>Type of group (describes its function). NOTE: when inserting a Group this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadFactor" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Percentage value of normal workload to be given to this group. This is used for round-robin assignment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The group name; this must be unique. NOTE: when inserting a Group this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The group name in Kanji. Used only for Japanese and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Organization" nillable="true" type="tns1:Organization">
                <xs:annotation>
                  <xs:documentation>The Organization that this group belongs to.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Parent" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The group's parent group. NOTE: value is the PublicId of the Group.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SecurityZone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Security zone to which the group belongs. NOTE: value is the PublicId of the SecurityZone.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Supervisor" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Supervisor of the group. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VisibilityZone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Group that defines the visibility zone for this group. A visibility zone is defined by a direct child of the root group. The visibility zone of the root group will always be null. NOTE: value is the PublicId of the Group.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="WorldVisible" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, this group is visible to all users, regardless of what groups they belong to.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AssignableQueue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A queue of assignable entities. Entities can be assigned to a queue (rather than a user) and
        any entity assigned to a queue is said to be "in the queue". A queue belongs to a group
        and is typically used to organize items which can be handled by any user in its group.
        When a user has time to tackle a new item they look at the items in the queue and reassign
        the top item to themselves.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The description of what this queue is for.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Group" nillable="true" type="tns1:Group">
                <xs:annotation>
                  <xs:documentation>The group to which the queue belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The name of this queue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SubGroupVisible" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true the queue is visible from sub-groups of the group to which it belongs.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CCNameCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A component used as part of a larger search criteria entity. Encapsulates the information
        entered by the user to restrict the search to particular contact, specified by some combination
        of name, tax ID and official ID. One CCNameCriteria entity will be used for each field that needs to
        be restricted. For example if a search criteria was being constructed to specify searches for
        an entity which had two different contact fields, then the search criteria would likely
        contain two distinct CCNameCriteria components. This ClaimCenter specific CCNameCriteria entity
        differs from the platform NameCriteria entity in that it is extendable and can be used with
        configurable search</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompanyName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The company name, if searching for a company.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The first name, if searching for a person.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First name in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last name, if searching for a person.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Last name in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LicenseNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>License Number to search on.&lt;br&gt;&lt;br&gt;&lt;i&gt;Experimental. Do not use without consulting Guidewire.&lt;/i&gt;</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last name or the first name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>This contact's name in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Field matched against the OfficialIDValue of the OfficialID objects associated with Contacts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Phone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Phone number to search on.&lt;br&gt;&lt;br&gt;&lt;i&gt;Experimental. Do not use without consulting Guidewire.&lt;/i&gt;</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The contact's tax identification number.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CatastropheZone" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A zone of a catastrophe.  It contains the zone code, the zone type and the country to which the region belongs.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Catastrophe" nillable="true" type="tns1:Catastrophe">
                <xs:annotation>
                  <xs:documentation>The catastrophe.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Code" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The code for this zone, this is the value that should be used for lookups. NOTE: when inserting a CatastropheZone this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Country" nillable="true" type="tns2:Country">
                <xs:annotation>
                  <xs:documentation>The country to which the zone belongs. NOTE: when inserting a CatastropheZone this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ZoneType" nillable="true" type="tns2:ZoneType">
                <xs:annotation>
                  <xs:documentation>Type of zone. NOTE: when inserting a CatastropheZone this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCatastropheZone" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CatastropheZone[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CatastropheClaimsHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The history of catastrophe finder batch process runs.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Catastrophe" nillable="true" type="tns1:Catastrophe">
                <xs:annotation>
                  <xs:documentation>The catastrophe.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the history event.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EventTimestamp" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the event occurred.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCatastropheClaimsHistory" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CatastropheClaimsHistory[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CatastrophePeril" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Details of perils associated to a catastrophe.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments regarding the peril</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossCause" nillable="true" type="tns2:LossCause">
                <xs:annotation>
                  <xs:documentation>The loss cause associated to the peril</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossType" nillable="true" type="tns2:LossType">
                <xs:annotation>
                  <xs:documentation>High level claim type (for example, Auto or Property).</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCatastrophePeril" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CatastrophePeril[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Catastrophe" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Represents a catastrophe to code claims with. Each catastrophe has a unique
name and catastrophe number.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Active" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if a catastrophe can be assigned to a new claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BottomRightLatitude" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Latitude for the bottom right point of the area of interest, in degrees.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BottomRightLongitude" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Longitude for the bottom right point of the area of interest, in degrees.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CatastropheNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Catastrophe number.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CatastropheValidFrom" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Start date when this catastrophe is valid</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CatastropheValidTo" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date when this catastrophe is no longer valid</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CatastropheZones" nillable="true" type="tns1:ArrayOfCatastropheZone">
                <xs:annotation>
                  <xs:documentation>The zones that define this catastrophe.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimsHistory" nillable="true" type="tns1:ArrayOfCatastropheClaimsHistory">
                <xs:annotation>
                  <xs:documentation>History of the matched claims.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments regarding the Catastrophe</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the catastrophe.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the catastrophe.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PCSCatastropheNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>PCS catastrophe number from ISO data feed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Perils" nillable="true" type="tns1:ArrayOfCatastrophePeril">
                <xs:annotation>
                  <xs:documentation>Details of perils associated with a catastrophe.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyEffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Effective date for retrieving policy locations from the policy system.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyRetrievalCompletionTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time when last policy retrieval location was completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyRetrievalSetTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time when policy location retrieval parameters were last set.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ScheduleBatch" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to mark a catastrophe to be run in the CatastropheClaimFinder batch process.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TopLeftLatitude" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Latitude for the top left  point of the area of interest, in degrees.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TopLeftLongitude" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Longitude for the top left point of the area of interest, in degrees.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:CatastropheType">
                <xs:annotation>
                  <xs:documentation>Type of the catastrophe (for example, ISO or internal).</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimInAssociation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Links a {@link Claim} with a {@link ClaimAssociation}. Each ClaimAssociation will contain two or more Claims, via ClaimInAssociation entities.
       
     </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PrimaryClaim" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the given Claim is the primary Claim of the ClaimAssociation.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfClaimInAssociation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ClaimInAssociation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimAssociation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Represents a typed grouping of a set of claims. The relationship between Claim and ClaimAssociation is N-M; in other
words, each Claim may be referenced by multiple ClaimAssociations, and each Claim Association references multiple Claims.
In addition, the same two Claims may be joined by multiple associations. The type of each association is one of the values
 in the ClaimAssocType typelist.
&lt;p&gt;
In a Claim purge, an Association will only be purged if it has no remaining Claims in it.      
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimAssocType" nillable="true" type="tns2:ClaimAssocType">
                <xs:annotation>
                  <xs:documentation>Type of the association among the claims.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimsInAssoc" nillable="true" type="tns1:ArrayOfClaimInAssociation">
                <xs:annotation>
                  <xs:documentation>The claims belonging to this association.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the association.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Title" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>A brief title for the association.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LargeLossClaimIndicator" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Large Loss Claim Indicator</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimIndicator">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="NetTotalIncurred" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Net Total Incurred</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FlagClaimIndicator" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Flag Claim Indicator</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimIndicator">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SIUClaimIndicator" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SIU Claim Indicator</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimIndicator">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CoverageInQuestionClaimIndicator" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Coverage in Question Claim Indicator</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimIndicator">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FatalityClaimIndicator" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Fatality Claim Indicator</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimIndicator">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LitigationClaimIndicator" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Litigation</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimIndicator">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimIndicator" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Claim </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsOn" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Is this indicator on?</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WhenOn" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time at which this indicator was set to on, or null if indicator off</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentClaimMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Percent based claim metric limit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimMetricLimit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentRedValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percent field to store the red value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentTargetValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percent field to store the target value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentYellowValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percent field to store the yellow value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="IntegerClaimMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Integer based claim metric limit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimMetricLimit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerRedValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the red value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerTargetValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the target value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerYellowValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the yellow value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MoneyClaimMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Money based claim metric limit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimMetricLimit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="MoneyRedValue" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Money field to store the red value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MoneyTargetValue" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Money field to store the target value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MoneyYellowValue" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Money field to store the yellow value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DecimalClaimMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Decimal based claim metric limit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ClaimMetricLimit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalRedValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the red value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalTargetValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the target value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalYellowValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the yellow value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ClaimMetricLimit" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Limits for metrics related to a claim</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="AscendingLimitOrder" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to indicate the direction of comparison for value validation </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimMetricCategory" nillable="true" type="tns2:ClaimMetricCategory">
                <xs:annotation>
                  <xs:documentation>Category of this claim metric limit, corresponds to category of metric. NOTE: when inserting a ClaimMetricLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimMetricType" nillable="true" type="tns2:ClaimMetric">
                <xs:annotation>
                  <xs:documentation>Type of claim metric to which this limit applies. NOTE: when inserting a ClaimMetricLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ClaimTier" nillable="true" type="tns2:ClaimTier">
                <xs:annotation>
                  <xs:documentation>Claim tier to which this limit applies, or null if this is a default limit</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>Currency for this limit, for non money based limits this is always the default currency. NOTE: when inserting a ClaimMetricLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MetricUnit" nillable="true" type="tns2:MetricUnit">
                <xs:annotation>
                  <xs:documentation>Units for this type of metric. NOTE: when inserting a ClaimMetricLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactFindMatchResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.
      This is a non-persistent entity that represents the results of definitive match search.
      Besides the matched &lt;code&gt;Contact&lt;/code&gt; objects, it also contains a result type. See the &lt;code&gt;ContactMatchResultType&lt;/code&gt;
      typelist for  more detail about the result of the match.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>Gets the Contact that was matched, or null if none.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ResultType" nillable="true" type="tns2:ContactMatchResultType">
                <xs:annotation>
                  <xs:documentation>Provides more detail about the result of the match.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactRelationshipSpecRel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Wraps around contact relationships. See the &lt;code&gt;ContactRel&lt;/code&gt; entity for a list of contact relationships.
      The &lt;code.ContactRelationshipSpecRel&lt;/code&gt; entity exists so that &lt;code&gt;ContactRelationshipSpec&lt;/code&gt; can use its
      objects as entries in its arrays.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Relationship" nillable="true" type="tns2:ContactRel">
                <xs:annotation>
                  <xs:documentation>Type of relationship. NOTE: when inserting a ContactRelationshipSpecRel this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Source" nillable="true" type="tns1:ContactRelationshipSpec">
                <xs:annotation>
                  <xs:documentation>Source relationship.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Target" nillable="true" type="tns1:ContactRelationshipSpec">
                <xs:annotation>
                  <xs:documentation>Target relationship.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactRelationshipSpecRel" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactRelationshipSpecRel[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactRelationshipSpec" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      Represents a specification of relationships to retrieve/sync from the Address Book. The set of relationships to
      retrieve from the Address Book is specified in contact-sync-config.xml. Each of the contactBidiRel that is specified
      in &amp;lt;IncludeRelationship&amp;gt; in the contact-sync-config.xml is called "Syncable Relationship". A ContactRelationshipSpec
      contains two sets of syncable relationships, "SourceRelationships" and "TargetRelationships" which is grouped according to
      the contactBidiRel. This entity has been deprecated as of ClaimCenter 8.0 along with the IAddressBookAdapter plugin.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceRelationships" nillable="true" type="tns1:ArrayOfContactRelationshipSpecRel">
                <xs:annotation>
                  <xs:documentation>Relationships that the contact is on the source side.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetRelationships" nillable="true" type="tns1:ArrayOfContactRelationshipSpecRel">
                <xs:annotation>
                  <xs:documentation>Relationships that the contact is on the target side.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ProximitySearchParameters" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;
      Encapsulates the set of additional criteria needed to perform a proximity search. This entity is
      a child object to the &lt;code&gt;ContactSearchCriteria&lt;/code&gt; entity.
      &lt;/p&gt;&lt;p&gt;
      Note that there are two ways to specify the origin location for a proximity search: the Geocode fields on
      the &lt;code&gt;ProximitySearchParameters&lt;/code&gt; itself (SpatialPoint/GeocodeStatus) or the
      &lt;code&gt;ConstactSearchCriteria.ProximitySearchCenter&lt;/code&gt; field. If both are set prior to performing the search,
      the system will use Geocode fields and ignore the &lt;code&gt;ProximitySearchCenter&lt;/code&gt; field.&lt;/p&gt;
      &lt;p&gt;
      See &lt;code&gt;ContactSearchCriteria&lt;/code&gt; for more information
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CorrectedSearchCenter" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The corrected address (if any) corresponding to the SpatialPoint of that is being searched for, in localized/user-displayable form. This is normally set by the ProximitySearchPageHelper.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DistanceBasedSearch" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates whether this is a distance based search (within n-mi/km) or an ordinal search (nearest-n)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GeocodeStatus" nillable="true" type="tns2:GeocodeStatus">
                <xs:annotation>
                  <xs:documentation>Gives the status of the provided SpatialPoint; this is normally copied from the a Geocodable entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Number" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Indicates either the radius (in UnitOfDistance units) if a distance based search, or the number of results to return if an ordinal search.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RadiusSearchMaxResults" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Indicates the maximum number of items to return on a radius search.  Ignored if DistanceBasedSearch is false; if DistanceBasedSearch is true, and this value is null, zero, or negative, the search will be limited by the value of ProximityRadiusSearchDefaultMaxResultCount</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SavedSearchCenter" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Used internally by ProximitySearchPageHelper to save the search center address (if any) in standardized form; DO NOT USE unless you are overriding the standard performProximitySearch() method.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpatialPoint" nillable="true" type="tns1:SpatialPoint">
                <xs:annotation>
                  <xs:documentation>SpatialPoint to do a proximity search from; this is normally copied from the a Geocodable entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UnitOfDistance" nillable="true" type="tns2:UnitOfDistance">
                <xs:annotation>
                  <xs:documentation>Indicates the UnitOfDistance to use, both to return distances in results and to indicate the unit of radius for distance-based searches.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SpecialistServiceSearchCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Defines the code of the specialist services to filter in the contact search criteria</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactSearchCriteria" nillable="true" type="tns1:ContactSearchCriteria">
                <xs:annotation>
                  <xs:documentation>ContactSearchCriteria which uses this code to perform a contact search.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpecialistServiceCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Specialist Service code to filter in the contact search criteria.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfSpecialistServiceSearchCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SpecialistServiceSearchCriteria[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactSearchCriteriaTag" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactSearchCriteria" nillable="true" type="tns1:ContactSearchCriteria">
                <xs:annotation>
                  <xs:documentation>ContactSearchCriteria</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:ContactTagType">
                <xs:annotation>
                  <xs:documentation>Type of this ContactTag. NOTE: when inserting a ContactSearchCriteriaTag this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContactSearchCriteriaTag" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ContactSearchCriteriaTag[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactSearchCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&amp;lt;p&amp;gt;
Encapsulates the search criteria for a Contact Search. Key points in the system for contact searches
include the Address Book search page, and "Add Existing Contacts" on the Claim Related Contacts page.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
When searching against ContactManager, it is possible to search for Contacts by proximity. From GScript,
this can be done most easily via {@link gw.api.geocode.GeocodeScriptHelper#setupContactCenterProximitySearch} which creates a
&amp;lt;code&amp;gt;ContactSearchCriteria&amp;lt;/code&amp;gt; ready to perform the proximity search. Alternatively this can be done by setting
the &amp;lt;code&amp;gt;ProximitySearchParameters&amp;lt;/code&amp;gt; on an existing &amp;lt;code&amp;gt;ContactSearchCriteria&amp;lt;/code&amp;gt;.
&amp;lt;/p&amp;gt;
@see gw.pl.contact.entity.ProximitySearchParameters
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Address" nillable="true" type="tns1:Address">
                <xs:annotation>
                  <xs:documentation>The address of the contact.  Supercedes the separate fields of City, State, and PostalCode.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AdjudicativeDomain" nillable="true" type="tns2:AdjudicativeDomain">
                <xs:annotation>
                  <xs:documentation>Adjudicative Domain</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AllTagsRequired" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, Contacts must have all the tags to match, if false, Contacts must have at least one of the tags to match.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AttorneySpecialty" nillable="true" type="tns2:LegalSpecialty">
                <xs:annotation>
                  <xs:documentation>Attorney's specialty</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactSubtype" nillable="true" type="tns2:Contact">
                <xs:annotation>
                  <xs:documentation>Contact class, like Person, Company, and Venue.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DoctorSpecialty" nillable="true" type="tns2:SpecialtyType">
                <xs:annotation>
                  <xs:documentation>Doctor's specialty</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First Name</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First name in kanji (used only for Japanese names)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IncludePendingContacts" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Including contacts pending creation</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Keyword" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Keyword is the general term for Name (Companies and Places) and LastName (for Persons)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="KeywordKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>KeywordKanji is the general term for NameKanji (Companies and Places) and LastNameKanji (for Persons)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LawFirmSpecialty" nillable="true" type="tns2:LegalSpecialty">
                <xs:annotation>
                  <xs:documentation>Law firm Specialty</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MatchType" nillable="true" type="tns2:ContactMatchResultType">
                <xs:annotation>
                  <xs:documentation>Match type requirement</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MedicalOrgSpecialty" nillable="true" type="tns2:SpecialtyType">
                <xs:annotation>
                  <xs:documentation>Medical specialty type</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Field matched against the OfficialIDValue of the OfficialID objects associated with Contacts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OrganizationName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Matched against Contacts belonging to an Organization (such as of person's employer) matching this name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PreferredVendors" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Preferred Vendors</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProximitySearchCenter" nillable="true" type="tns1:Address">
                <xs:annotation>
                  <xs:documentation>The center for a proximity search. Ignored if location fields are set on the Proximity Search Parameters.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ProximitySearchParameters" nillable="true" type="tns1:ProximitySearchParameters">
                <xs:annotation>
                  <xs:documentation>The parameters for a proximity search.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Score" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Minimum Score for returned Contacts</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SearchType" nillable="true" type="tns2:ContactSearchType">
                <xs:annotation>
                  <xs:documentation>External search type (external search only)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpecialistServiceCodes" nillable="true" type="tns1:ArrayOfSpecialistServiceSearchCriteria">
                <xs:annotation>
                  <xs:documentation>The list of specialist services that will be used to filter contacts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Tags" nillable="true" type="tns1:ArrayOfContactSearchCriteriaTag">
                <xs:annotation>
                  <xs:documentation>List of ContactSearchCriteriaTags.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxID" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Tax ID for the contact (SSN or EIN).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="VendorType" nillable="true" type="tns2:VendorType">
                <xs:annotation>
                  <xs:documentation>The company's vendor type.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfContact" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:Contact[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactSearchResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      ContactSearchResult has been deprecated since ClaimCenter 8.0 along with IAddressBookAdapter.
      &lt;p&gt;Represents the set of results and additional information returned by an Address Book search.
      See the &lt;code&gt;IAddressBookAdapter&lt;/code&gt; for information on searching for contacts.
      &lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>Gets the Contact that was matched, or null if none.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ResultType" nillable="true" type="tns2:ContactMatchResultType">
                <xs:annotation>
                  <xs:documentation>Provides more detail about the result of the match.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Results" nillable="true" type="tns1:ArrayOfContact">
                <xs:annotation>
                  <xs:documentation>Gets the results. Length should not be greater than the maxResults setting
in the corresponding RemotableSearchResultSpec. If there is at least one
result, the first result should correspond to the startRow setting in the
corresponding RemotableSearchResultSpec. Order should depend on the sort
settings.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SearchResultType" nillable="true" type="tns2:ContactSearchResultType">
                <xs:annotation>
                  <xs:documentation>Indicates wheather the search succeeded of failed, and if failed, why.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalResults" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Gets the total number of results. This will only be populated if the corresponding ContactSearchResultSpec has includeTotal = true.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="GeneralValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>General validation error or warning raised on an entity</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ValidationIssue">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ValidationIssue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;Supertype for validation errors and warnings.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EntityValidation" nillable="true" type="tns1:EntityValidation"/>
              <xs:element maxOccurs="1" minOccurs="0" name="FlowStepId" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Level" nillable="true" type="tns2:ValidationLevel">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ValidationIssue this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Reason" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a ValidationIssue this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Type" nillable="true" type="tns2:ValidationIssueType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Field validation error or warning raised on an entity</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ValidationIssue">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BadValue" nillable="true" type="soapenc:string"/>
              <xs:element name="FieldName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a FieldValidation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldValidation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfGeneralValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:GeneralValidation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="EntityValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Validation on a specific entity</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EntityId" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>ID of the entity NOTE: when inserting a EntityValidation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="EntityType" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>What kind of entity NOTE: when inserting a EntityValidation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FieldValidations" nillable="true" type="tns1:ArrayOfFieldValidation"/>
              <xs:element maxOccurs="1" minOccurs="0" name="GeneralValidations" nillable="true" type="tns1:ArrayOfGeneralValidation"/>
              <xs:element maxOccurs="1" minOccurs="0" name="OwningValidationResult" nillable="true" type="tns1:ValidationResult"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfEntityValidation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:EntityValidation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ValidationResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;ValidationResult is used to read and write results of an object's validation (e.g. validation via rules, or field level validation).&lt;/p&gt;
      &lt;p&gt;ValidationResult stores both entity level errors (general errors not associated with a particular field) and field level errors (errors associated with a particular field on an entity).&lt;/p&gt;
      &lt;p&gt;A FieldValidation object can store the bad value which triggered the error (e.g. a mangled loss date that was imported with the claim) and may also suggests possible correct values,
      either as a list of objects or foreign keys (if the field is a foreign key, e.g. picking from a set of users with the last name "Shaw" if the imported ClaimDef only identifies "Shaw" as the owner).
      See FieldValidation to learn what information may be captured with an invalid field.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EntityValidations" nillable="true" type="tns1:ArrayOfEntityValidation"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TempToPermEntry" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      After an addressbook client-application (for example, ClaimCenter) adds an entity (for example, &lt;code&gt;Contact&lt;/code&gt;
      or &lt;code&gt;Address&lt;/code&gt;) to the addressbook, it usually needs to link the local entity to the newly created entity
      in the addressbook by setting the &lt;code&gt;AddressBookUId&lt;/code&gt; in the local entity.
      After calling &lt;code&gt;AddressBookPluginGateway.submitUpdates(UpdateBatch,AddressBookConvertable)&lt;/code&gt;
      the client application can get the newly generated &lt;code&gt;AddressBookUId&lt;/code&gt; from the
      &lt;code&gt;ContactUpdateResult.getTempToPermEntrys()&lt;/code&gt;.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactUpdateResult" nillable="true" type="tns1:ContactUpdateResult">
                <xs:annotation>
                  <xs:documentation>The ContactUpdateResult which owns this entry.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PermId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The permanent AddressBookUId given by the address book</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TempId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The temporary id given by an UpdateBatch CreateUpdateOp</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfTempToPermEntry" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TempToPermEntry[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ContactUpdateResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      ContactUpdateResult has been deprecated as of ClaimCenter 8.0 along with IAddressBookAdapter..
      ContactUpdateResult represents the result of creating or updating a Contact. This operation can
      either succeed or fail. If it failed, then errors will be accessible via getValidationResult. If it succeeded,
      then there should be no errors in the ValidationResult, and the created or updated Contact will be accessible
      via getContact.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Contact" nillable="true" type="tns1:Contact">
                <xs:annotation>
                  <xs:documentation>Gets the Contact that was created or updated. Ignored if errors occurred.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactValidationResult" nillable="true" type="tns1:ValidationResult">
                <xs:annotation>
                  <xs:documentation>Used to report any errors that occurred during creation or update. May be null to report no errors.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TempToPermEntrys" nillable="true" type="tns1:ArrayOfTempToPermEntry">
                <xs:annotation>
                  <xs:documentation>The address book's mapping of the given temp ids to permanent ids</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfCreateUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CreateUpdateOp[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDeleteUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DeleteUpdateOp[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldChangeUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>This non-persistent entity has been deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:UpdateOp">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EntityTypeName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifies the entity type.  e.g. Person, Company, or Adjudicator.  (Entity type on the application side not a ContactManager entity type)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Field" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifies the field for the application side.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ObjectUId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Uniquely identifies target object of the operation.  Can be either an AddressBookUId or a temporary ObjectId that was defined in a CreateUpdateOp.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateBatch" nillable="true" type="tns1:UpdateBatch">
                <xs:annotation>
                  <xs:documentation>Associated UpdateBatch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Value" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifies the value of the field on the app side.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldChangeUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldChangeUpdateOp[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ValidationWarning" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Describes a single validation warning sent to the address book</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateBatch" nillable="true" type="tns1:UpdateBatch">
                <xs:annotation>
                  <xs:documentation>Associated UpdateBatch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Warning" nillable="true" type="soapenc:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfValidationWarning" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ValidationWarning[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UpdateBatch" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      UpdateBatch has been deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CreateUpdateOps" nillable="true" type="tns1:ArrayOfCreateUpdateOp">
                <xs:annotation>
                  <xs:documentation>List of objects to be created in the Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DeleteUpdateOps" nillable="true" type="tns1:ArrayOfDeleteUpdateOp">
                <xs:annotation>
                  <xs:documentation>List of entities to be deleted from the Address Book.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FieldChangeUpdateOps" nillable="true" type="tns1:ArrayOfFieldChangeUpdateOp">
                <xs:annotation>
                  <xs:documentation>List of changes to fields' values in different entities.  Notice that in this list every entry may apply to a different entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ValidationWarningsToIgnore" nillable="true" type="tns1:ArrayOfValidationWarning">
                <xs:annotation>
                  <xs:documentation>List of validation warnings to be ignored by Address Book</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DeleteUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>This non-persistent entity has been deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:UpdateOp">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EntityTypeName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifies the entity type.  e.g. Person, Company, or Adjudicator.  (Entity type on the application side not a ContactManager entity type)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ObjectUId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>An AddressBookUId of an entity in Address Book that is to be deleted.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateBatch" nillable="true" type="tns1:UpdateBatch">
                <xs:annotation>
                  <xs:documentation>Associated UpdateBatch.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        This non-persistent entity has been deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="CreateUpdateOp" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>This non-persistent entity has been deprecated since ClaimCenter 8.0 along with the IAddressBookAdapter.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:UpdateOp">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EntityTypeName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifies the entity type.  e.g. Person, Company, or Adjudicator.  (Entity type on the application side not a ContactManager entity type)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ObjectUId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Temporary ID for the newly created object.  Needs to be unique within this UpdateBatch.  Can be referenced from the FieldUpdateOps.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateBatch" nillable="true" type="tns1:UpdateBatch">
                <xs:annotation>
                  <xs:documentation>Associated UpdateBatch.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DataChange" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The change to production data.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CreateDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the gosu was added.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CreateUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user who created the gosu. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the change requested.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExecuteDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The time the gosu was executed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExecuteUser" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The user who executed the gosu. NOTE: value is the PublicId of the User.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExternalReference" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>An external reference for tracking change requests.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Gosu" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The gosu to execute.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Result" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The result of executing the gosu.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:DataChangeStatus"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfDataGenInfoDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DataGenInfoDetail[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DataGenInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Stores metadata for database generation info.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Action" nillable="true" type="tns2:DataGenActionType">
                <xs:annotation>
                  <xs:documentation>the action type this data-gen performed</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BuildVersion" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Info logged by the generation process.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Details" nillable="true" type="tns1:ArrayOfDataGenInfoDetail">
                <xs:annotation>
                  <xs:documentation>Detailed description.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PerformDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time this generation happened. NOTE: when inserting a DataGenInfo this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:DataGenStatusType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DataGenInfoDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Details for data gen.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DataGenInfo" nillable="true" type="tns1:DataGenInfo">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Line for detailed description.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DisplayOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>display order within parent NOTE: when inserting a DataGenInfoDetail this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="NumIndents" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation># of tabs for readability NOTE: when inserting a DataGenInfoDetail this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DateCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A component used as part of a larger search criteria entity. Encapsulates the information
        entered by the user to restrict the search to a particular date range. Specifies the date
        field to be restricted and allows the date range to be restricted either through a typelist of
        preset ranges (such as next 30 days) or through a start and end date.
        &lt;p&gt;
        Very similar to DateCriterionChoice, but DateCriterionChoice supports configurable search.
        (See the Configuration Guide for details of customizing search screens.)
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateFieldToSearch" nillable="true" type="tns2:DateFieldsToSearchType">
                <xs:annotation>
                  <xs:documentation>The date field which is being restricted. The available choices are filtered by the SearchType field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateRangeChoice" nillable="true" type="tns2:DateRangeChoiceType">
                <xs:annotation>
                  <xs:documentation>The chosen preset date range, if any. The available ranges are filtered by the SearchType field. Used if DateSearchType is "fromlist".</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateSearchType" nillable="true" type="tns2:DateSearchType">
                <xs:annotation>
                  <xs:documentation>The type of date search, either "fromlist" (for a preset range) or "enteredrange" (for an explicitly entered range).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The end (inclusive) of the date range to which the chosen date field should be restricted.  Used if DateSearchType is "enteredrange".</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SearchType" nillable="true" type="tns2:SearchObjectType">
                <xs:annotation>
                  <xs:documentation>The type of search, filters the date fields allowed in the DateFieldToSearch field and the preset ranges allowed in the DateRangeChoice field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The start (inclusive) of the date range to which the chosen date field should be restricted. Used if DateSearchType is "enteredrange".</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DateCriterionChoice" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A component used as part of a larger search criteria entity. Encapsulates the information
        entered by the user to restrict the search to a particular date range. Specifies the date
        field to be restricted and allows the date range to be restricted either through a typelist of
        preset ranges (such as next 30 days) or through a start and end date.
        &lt;p&gt;
        Very similar to DateCriteria, but DateCriterionChoice supports configurable search.
        (See the Configuration Guide for details of customizing search screens.)
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ChosenOption" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The chosen configurable search option, specifies the date field to be restricted.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateRangeChoice" nillable="true" type="tns2:DateRangeChoiceType">
                <xs:annotation>
                  <xs:documentation>The chosen preset date range, if any. The available ranges are filtered by the SearchType field. Used if DateSearchType is "fromlist". NOTE: when inserting a DateCriterionChoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DateSearchType" nillable="true" type="tns2:DateSearchType">
                <xs:annotation>
                  <xs:documentation>The type of date search, either "fromlist" (for a preset range) or "enteredrange" (for an explicitly entered range). NOTE: when inserting a DateCriterionChoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The end (inclusive) of the date range to which the chosen date field should be restricted.  Used if DateSearchType is "enteredrange".</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SearchType" nillable="true" type="tns2:SearchObjectType">
                <xs:annotation>
                  <xs:documentation>The type of search, filters the preset ranges allowed in the DateRangeChoice field. NOTE: when inserting a DateCriterionChoice this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The start (inclusive) of the date range to which the chosen date field should be restricted. Used if DateSearchType is "enteredrange".</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TimeToFirstPaymentExposureMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Time to First Payment</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedExposureMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DaysOpenExposureMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Days Open</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedExposureMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentEscalatedActivitiesExposureMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>% Escalated Activities</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PercentExposureMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentPaidLossCostsExposureMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Paid Loss Costs as % of Total Paid</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PercentExposureMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentExposureMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Percent based exposure metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExposureMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percent field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TotalPaidExposureMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Paid</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:MoneyExposureMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NetTotalIncurredExposureMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Total Incurred</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:MoneyExposureMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MoneyExposureMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Money based exposure metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExposureMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="MoneyValue" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Money field to store the money value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DecimalExposureMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Decimal based exposure metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExposureMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="IntegerExposureMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Integer based exposure metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExposureMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ExposureMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Metrics related to a exposure</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReachRedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time the red limit was or will be reached</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReachYellowTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time the yellow limit was or will be reached.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TimeBasedExposureMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Time based exposure metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExposureMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsOpen" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>The value of an open time based metric is now - start time, once closed it has a fixed integer value</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Skipped" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the metric is closed because the normal closing event was skipped.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Starting time of the metric.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DaysInitialContactWithClaimantExposureMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Initial Contact with Claimant</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedExposureMetric">
            <xs:sequence>
              <xs:element name="ActivitySkipped" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Did the user explicitly skip the initial contact with claimant activity?</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentExposureMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Percent based exposure metric limit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExposureMetricLimit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentRedValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percent field to store the red value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentTargetValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percent field to store the target value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentYellowValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percent field to store the yellow value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MoneyExposureMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Money based exposure metric limit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExposureMetricLimit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="MoneyRedValue" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Money field to store the red value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MoneyTargetValue" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Money field to store the target value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MoneyYellowValue" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Money field to store the yellow value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="IntegerExposureMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Integer based exposure metric limit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExposureMetricLimit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerRedValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the red value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerTargetValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the target value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerYellowValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the yellow value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ExposureMetricLimit" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Limits for metrics related to an exposure</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="AscendingLimitOrder" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Boolean field to indicate the direction of comparison for value validation </xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>Currency for this limit, for non money based limits this is always the default currency. NOTE: when inserting a ExposureMetricLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExposureMetricType" nillable="true" type="tns2:ExposureMetric">
                <xs:annotation>
                  <xs:documentation>Type of exposure metric to which this limit applies. NOTE: when inserting a ExposureMetricLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExposureTier" nillable="true" type="tns2:ExposureTier">
                <xs:annotation>
                  <xs:documentation>Exposure tier to which this limit applies, or null if this is a default limit</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MetricUnit" nillable="true" type="tns2:MetricUnit">
                <xs:annotation>
                  <xs:documentation>Units for this type of metric. NOTE: when inserting a ExposureMetricLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DecimalExposureMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Decimal based exposure metric limit.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ExposureMetricLimit">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalRedValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the red value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalTargetValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the target value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalYellowValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the yellow value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InvoiceVarianceVsQuoteServiceRequestMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Amount invoiced as a percentage of the amount estimated</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:PercentServiceRequestMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PercentServiceRequestMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Percent based service request metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ServiceRequestMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="PercentValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Percent field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MoneyServiceRequestMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Money based service request metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ServiceRequestMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="MoneyValue" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>Money field to store the money value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceTimelinessServiceRequestMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Actual vs. expected service completion time.  Only applicable to quote and service and service only service requests</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedServiceRequestMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DaysDifferentFromExpected" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Difference (in business days) between the actual service completion date and the expected service completion date. Only filled out when service request is complete</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Escalated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if this metric has been previously escalated</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="QuoteTimelinessServiceRequestMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Actual vs. expected quote completion time.  Only applicable to quote and service and quote-only service requests.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedServiceRequestMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DaysDifferentFromExpected" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Difference (in business days or hours) between the actual quote completion date and the expected quote completion date. Only filled out when service request is complete</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Escalated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if this metric has been previously escalated</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceCycleTimeServiceRequestMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Initial Response Time from Specialist</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedServiceRequestMetric">
            <xs:sequence>
              <xs:element name="TimeSpentWorking" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>The aggregate time spent NOT in progress state Specialist Waiting</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="WaitingStartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>The time the current waiting state was entered, null if not waiting</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SpecialistInitialResponseTimeServiceRequestMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Initial Response Time from Specialist</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:TimeBasedServiceRequestMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Escalated" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if this metric has been previously escalated</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TimeBasedServiceRequestMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Time based service request metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ServiceRequestMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IsOpen" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>The value of an open time based metric is now - start time, once closed it has a fixed integer value</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Skipped" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the metric is closed because the normal closing event was skipped.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Starting time of the metric.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NumberOfDelaysServiceRequestMetric" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Counts the number of times the specialist delays the expected completion date</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:IntegerServiceRequestMetric">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="IntegerServiceRequestMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Integer based service request metric</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ServiceRequestMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegerValue" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Integer field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Metrics related to a service request</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalRedValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the red value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalTargetValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the target value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalYellowValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the yellow value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MetricUnit" nillable="true" type="tns2:MetricUnit">
                <xs:annotation>
                  <xs:documentation>Units for this type of metric.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReachRedTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time the red limit was or will be reached</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ReachYellowTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Time the yellow limit was or will be reached.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DecimalServiceRequestMetric" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Decimal based service request metric.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:ServiceRequestMetric">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPolicySummary" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PolicySummary[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicySearchResultSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Non-persistent result object returned by the policy admin adapter's
searchPolicies() method. The result encapsulates an array of
PolicySummary objects, as well as the fields in indicating whether or
not the search results were capped and, if so, how many total results would have
been returned had the results not been capped.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:SearchResult">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Summaries" nillable="true" type="tns1:ArrayOfPolicySummary"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SearchResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        Base class use for the results of plugin search methods. The result encapsulates a Boolean value
        indicating if results were capped, and optionally the total number of matches that would have
        been returned had the results not been capped. The total number of matches is relevant only when
        the capped Boolean value is true.
        &lt;p&gt;
        This base class is of little interest on its own but provides basic functionality that may be
        useful for application specific subclasses.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ResultsCapped" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Returns true if and only if the results of the search have been capped, that is, if fewer results are contained in this result than actually satisfied the search criteria.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UncappedResultCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Returns the total number of matches that would have been returned had the results not been capped, or null if the value is unknown. The result of this method is relevant only if ResultsCapped returns true.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ExtContactSrchResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;
      Results of an external contact search ( &lt;code&gt;IContactSearchAdapter.searchContacts()&lt;/code&gt;) containing a set of
      contact summary objects. Not all resulting contacts may be returned.  If the matching results exceeds the maximum
      number of result rows, then only the system returns only the first &lt;i&gt;n&lt;/i&gt; contact summary objects.
      See &lt;code&gt;IContactSearchAdapter&lt;/code&gt; for details about external searches.&lt;/p&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:SearchResult">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Results" nillable="true" type="tns1:ArrayOfContact">
                <xs:annotation>
                  <xs:documentation>Set of contact summaries returned from the search. If no results match the search criteria,
then this is empty (not null).</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="IncompatibleNewExposure" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Allows insurer to determine which coverages are invalid based upon the coverages of existing exposures.  For example, a Collision and a Comprehensive coverage typically are not both applicable for an Auto claim</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExistingExposures" nillable="true" type="tns2:CoverageType">
                <xs:annotation>
                  <xs:documentation>New Coverage Type of the coverage on this exposure. NOTE: when inserting a IncompatibleNewExposure this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NewExposureCoverage" nillable="true" type="tns2:CoverageType">
                <xs:annotation>
                  <xs:documentation>A coverage for an exposure that may not be appropriate for addition to the claim NOTE: when inserting a IncompatibleNewExposure this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>Type of policy. NOTE: when inserting a IncompatibleNewExposure this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InvalidCoverageForCause" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Allows insurer to determine which coverages are invalid based upon Loss Cause. .  For example, a Comprehensive coverage typically is not applicable if the cause of loss is Collision with other Vehicle</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LOBCode" nillable="true" type="tns2:LOBCode">
                <xs:annotation>
                  <xs:documentation>Line of Business code</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossCause" nillable="true" type="tns2:LossCause">
                <xs:annotation>
                  <xs:documentation>General cause of loss; dependent on loss type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossType" nillable="true" type="tns2:LossType">
                <xs:annotation>
                  <xs:documentation>High level claim type (for example, Auto or Property). NOTE: when inserting a InvalidCoverageForCause this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>Type of policy. NOTE: when inserting a InvalidCoverageForCause this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryCoverage" nillable="true" type="tns2:CoverageType">
                <xs:annotation>
                  <xs:documentation>A coverage for an exposure that may not be appropriate for addition to the claim NOTE: when inserting a InvalidCoverageForCause this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="InvalidCoverageForFault" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Allows insurer to determine which coverages are invalid based upon FaultRating.  For example, a Liablity coverage typically is not applicable if a third party is at fault</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FaultRating" nillable="true" type="tns2:FaultRating">
                <xs:annotation>
                  <xs:documentation>Indicates fault rating.  For example, the insured is at fault.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>Type of policy. NOTE: when inserting a InvalidCoverageForFault this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PrimaryCoverage" nillable="true" type="tns2:CoverageType">
                <xs:annotation>
                  <xs:documentation>A coverage for an exposure that may not be appropriate for addition to the claim NOTE: when inserting a InvalidCoverageForFault this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LargeLossThreshold" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>This reference table contains the information necessary to determine whether a claim has exceeded the
        large loss threshold notification limit based upon the claim's policy type.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NotificationType" nillable="true" type="tns2:LargeLossNotificationType">
                <xs:annotation>
                  <xs:documentation>Type of notification. NOTE: when inserting a LargeLossThreshold this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>Type of policy. NOTE: when inserting a LargeLossThreshold this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ThresholdValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Large Loss threshold value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LitStatusTypeLine" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
            Represents the current state of a legal matter. It also contains the date the
            matter entered the status and the date in which it completed the status.
            
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompletionDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the matter completed this status.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LitigationStatus" nillable="true" type="tns2:MatterStatus">
                <xs:annotation>
                  <xs:documentation>The current state of litigation.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Date the matter entered this status.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadCallbackResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timed loader callback results.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AffectedRowCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of rows affected.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadCallbackResult this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCallback" nillable="true" type="tns1:LoadCallback">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of loader callback result. NOTE: when inserting a LoadCallbackResult this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SQLText" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>SQL text.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadCallbackResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadCallbackResult[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadCallback" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadCallback[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadEncryptChunk" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timings for each chuck of encyrption updates</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="ChunkSize" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of statements executed in this chunk NOTE: when inserting a LoadEncryptChunk this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadEncryptTable" nillable="true" type="tns1:LoadEncryptTable">
                <xs:annotation>
                  <xs:documentation>Parent load encyrption step</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadEncryptChunk" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadEncryptChunk[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadEncryptTable" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Encrypt columns in a staging table</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AffectedRowCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Total rows read and updated</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ColumnsToEncrypt" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Column(s) being encrypted (comma separated)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Parent load command</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadEncryptChunks" nillable="true" type="tns1:ArrayOfLoadEncryptChunk"/>
              <xs:element name="SelectStmt" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Select statement used to read rows NOTE: when inserting a LoadEncryptTable this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SizeOfTimedChuck" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Target number of update executions in each chunk NOTE: when inserting a LoadEncryptTable this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of table being updated NOTE: when inserting a LoadEncryptTable this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="UpdateStmt" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Update statement used to update rows NOTE: when inserting a LoadEncryptTable this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadEncryptTable" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadEncryptTable[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadIntegrityCheck" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timed loader integrity checks.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of integrity check. NOTE: when inserting a LoadIntegrityCheck this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadIntegrityCheck this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Denorm FK for unique index.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadIntegrityCheckType" nillable="true" type="tns2:LoadErrorType">
                <xs:annotation>
                  <xs:documentation>Type of loader integrity check. NOTE: when inserting a LoadIntegrityCheck this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadOperation" nillable="true" type="tns1:LoadOperation">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Query" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Query from integrity check.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadIntegrityCheck" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadIntegrityCheck[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadUpdateStatisticsSelect" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timed loader update statistics selects.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadUpdateStatisticsSelect this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Denorm FK for unique index. NOTE: when inserting a LoadUpdateStatisticsSelect this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadOperation" nillable="true" type="tns1:LoadOperation">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Query" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>insert/select.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Affected staging table. NOTE: when inserting a LoadUpdateStatisticsSelect this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadUpdateStatisticsSelect" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadUpdateStatisticsSelect[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadOperation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Detail of the staging table load history.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AffectedRowCount" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Number of rows affected.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Callbacks" nillable="true" type="tns1:ArrayOfLoadCallback">
                <xs:annotation>
                  <xs:documentation>Timed loader callbacks.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of integrity check errors detected (if applicable).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadOperation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="HighestID" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>If associated with a idsgenerated step, contains the end of the id range for the rows being loaded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsertSelects" nillable="true" type="tns1:ArrayOfLoadInsertSelect">
                <xs:annotation>
                  <xs:documentation>Timed loader insert/selects.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegrityChecks" nillable="true" type="tns1:ArrayOfLoadIntegrityCheck">
                <xs:annotation>
                  <xs:documentation>Timed loader integrity checks.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LowestID" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>If associated with a idsgenerated step, contains the start of the id range for the rows being loaded.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Affected staging table. NOTE: when inserting a LoadOperation this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateStatisticsSelects" nillable="true" type="tns1:ArrayOfLoadUpdateStatisticsSelect">
                <xs:annotation>
                  <xs:documentation>db update statistics loader selects.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadInsertSelect" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timed loader insert/selects.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AffectedRowCount" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Number of rows affected.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadInsertSelect this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Denorm FK for unique index.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadOperation" nillable="true" type="tns1:LoadOperation">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Query" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>insert/select.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadInsertSelect" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadInsertSelect[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadParameter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>(parameter, value) pairs for load commands.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="ParameterName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Parameter name. NOTE: when inserting a LoadParameter this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ParameterValue" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Parameter value.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadParameter" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadParameter[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadRowCount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Row counts for load history.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceBlockCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of blocks in source table.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SourceRowCount" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Number of rows in source table.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="SourceTableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of source table. NOTE: when inserting a LoadRowCount this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StagingBlockCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Number of blocks in staging table.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StagingRowCount" nillable="true" type="soapenc:long">
                <xs:annotation>
                  <xs:documentation>Number of rows in staging table.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StagingTableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of staging table. NOTE: when inserting a LoadRowCount this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadRowCount" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadRowCount[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadOperation" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadOperation[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadStep" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Steps within a load command.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadStep this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Operations" nillable="true" type="tns1:ArrayOfLoadOperation">
                <xs:annotation>
                  <xs:documentation>Detailed operations.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StepType" nillable="true" type="tns2:LoadStepType">
                <xs:annotation>
                  <xs:documentation>Type of load step. NOTE: when inserting a LoadStep this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfLoadStep" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:LoadStep[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UpdateDBStatisticsCommand" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>DB statistics commands to run after a staging table load.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="StatsCommand" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Update database statistics command to run. NOTE: when inserting a UpdateDBStatisticsCommand this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="TableName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Affected table. NOTE: when inserting a UpdateDBStatisticsCommand this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfUpdateDBStatisticsCommand" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:UpdateDBStatisticsCommand[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadCommand" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Staging table load history.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="Callbacks" nillable="true" type="tns1:ArrayOfLoadCallback">
                <xs:annotation>
                  <xs:documentation>Timed loader callbacks.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CallingUser" nillable="true" type="tns1:User">
                <xs:annotation>
                  <xs:documentation>ID of the user who executed the operation. NOTE: when inserting a LoadCommand this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CommandType" nillable="true" type="tns2:LoadCommandType">
                <xs:annotation>
                  <xs:documentation>Type of load command. NOTE: when inserting a LoadCommand this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of the load history event.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EncryptTables" nillable="true" type="tns1:ArrayOfLoadEncryptTable">
                <xs:annotation>
                  <xs:documentation>Timed loader table columns encryptions.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ErrorCount" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Total number of integrity check errors detected for all affected tables (if applicable).</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsertSelects" nillable="true" type="tns1:ArrayOfLoadInsertSelect">
                <xs:annotation>
                  <xs:documentation>Timed loader insert/selects.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IntegrityChecks" nillable="true" type="tns1:ArrayOfLoadIntegrityCheck">
                <xs:annotation>
                  <xs:documentation>Timed loader integrity checks.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ParameterNameValuePairs" nillable="true" type="tns1:ArrayOfLoadParameter">
                <xs:annotation>
                  <xs:documentation>Parameter values for command.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RowCounts" nillable="true" type="tns1:ArrayOfLoadRowCount">
                <xs:annotation>
                  <xs:documentation>Row counts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Steps" nillable="true" type="tns1:ArrayOfLoadStep">
                <xs:annotation>
                  <xs:documentation>Steps.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="UpdateDBStatisticsCommands" nillable="true" type="tns1:ArrayOfUpdateDBStatisticsCommand">
                <xs:annotation>
                  <xs:documentation>UpdateDBStatisticsCommands.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoadCallback" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Timed loader callbacks.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="CallbackResults" nillable="true" type="tns1:ArrayOfLoadCallbackResult">
                <xs:annotation>
                  <xs:documentation>Timed loader callback results.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Description" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Description of loader callback. NOTE: when inserting a LoadCallback this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EndTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing completed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ExecutionOrder" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Order of execution (1-N). NOTE: when inserting a LoadCallback this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExecutionTime" nillable="true" type="tns2:LoaderCallbackTimeType">
                <xs:annotation>
                  <xs:documentation>Execution time of LoaderCallback. NOTE: when inserting a LoadCallback this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadCommand" nillable="true" type="tns1:LoadCommand">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LoadOperation" nillable="true" type="tns1:LoadOperation">
                <xs:annotation>
                  <xs:documentation>Parent.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of loader callback. NOTE: when inserting a LoadCallback this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartTime" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Timestamp when the timing began.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="NameCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        A component used as part of a larger search criteria entity. Encapsulates the information
        entered by the user to restrict the search to particular contact, specified by some combination
        of name, tax ID and official ID. One NameCriteria entity will be used for each field that needs to
        be restricted. For example if a search criteria was being constructed to specify searches for
        an entity which had two different contact fields, then the search criteria would likely
        contain two distinct NameCriteria components.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompanyName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The company name, if searching for a company.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompanyNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The company name, if searching for a company, in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The first name, if searching for a person.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The first name, if searching for a person, in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last name, if searching for a person.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last name, if searching for a person, in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Name" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last name or the first name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The last name or the first name in kanji.  Used only for Japanese names and will be null otherwise.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="OfficialId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Field matched against the OfficialIDValue of the OfficialID objects associated with Contacts.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The contact's tax identification number.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyLocationSummary" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Describes a policy location retrieved from the policy system associated with a catastrophe.  The policy location may or may not be used by a claim.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First line of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine1Kanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First line of mailing address in kanji (used only for Japanese addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Second line of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine2Kanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Second line of mailing address in kanji (used only for Japanese addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AddressLine3" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Third line of mailing address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CEDEX" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>CEDEX: Special business mail delivery flag (used only for French addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CEDEXBureau" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>CEDEX: Special business mail delivery bureau (used only for French addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Catastrophe" nillable="true" type="tns1:Catastrophe">
                <xs:annotation>
                  <xs:documentation>Associated catastrophe.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="City" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>City.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CityKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>City in kanji (used only for Japanese addresses and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Country" nillable="true" type="tns2:Country">
                <xs:annotation>
                  <xs:documentation>Country.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="County" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>County.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EmailAddress" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Email address of the primary insured.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="GeocodeStatus" nillable="true" type="tns2:GeocodeStatus">
                <xs:annotation>
                  <xs:documentation>Enum giving the status of the latitude and longitude data.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredAddressLine1" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First line of primary insured address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredAddressLine2" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Second line of primary insured address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredAddressLine3" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Third line of primary insured address.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredCity" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>City of the primary insured.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredCountry" nillable="true" type="tns2:Country">
                <xs:annotation>
                  <xs:documentation>Country of the primary insured.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredCounty" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>County of the primary insured.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredName" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Name of the primary insured.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredPostalCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Postal code of the primary insured; string to handle Zip+4 and international codes.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredState" nillable="true" type="tns2:State">
                <xs:annotation>
                  <xs:documentation>State of the primary insured.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Latitude" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Latitude expressed in degrees.  Positive = North; Negative = South: -90 &lt;= x &lt;= 90</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Longitude" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Longitude expressed in degrees relative to the prime meridian.  Positive = East; Negative = West: -180 &lt;= x &lt; 180</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Phone" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Phone number of the primary insured.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PhoneCountry" nillable="true" type="tns2:PhoneCountryCode">
                <xs:annotation>
                  <xs:documentation>The phone country of the primary insured</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PhoneExtension" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The phone extension of the primary insured</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PolicyNumber" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Number of the policy (generally a string). NOTE: when inserting a PolicyLocationSummary this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="PolicySystemId" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Identifier for the policy location in an external policy system NOTE: when inserting a PolicyLocationSummary this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>Type of policy. NOTE: when inserting a PolicyLocationSummary this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PostalCode" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Postal code; string to handle Zip+4 and international codes.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="State" nillable="true" type="tns2:State">
                <xs:annotation>
                  <xs:documentation>State.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TotalInsured" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The total insured value for the policy location, in Reporting/Default Currency.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyLocationSummaryJoin" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Join table between Claim and PolicyLocationSummary.  It exists to improve performance.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Claim" nillable="true" type="tns1:Claim">
                <xs:annotation>
                  <xs:documentation>Associated claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyLocationSummary" nillable="true" type="tns1:PolicyLocationSummary">
                <xs:annotation>
                  <xs:documentation>Associated PolicyLocationSummary</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyRetrievalResultSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Results of a policy retrieval. The possible outcomes of a policy retrieval are:
  &lt;ul&gt;&lt;li&gt;Successful - Retrieval parameters map to a single, unique policy.&lt;/li&gt;
  &lt;li&gt;Unsuccessful - Retrieval parameters don't map to any policies.&lt;/li&gt;
  &lt;li&gt;Unsuccessful - Retrieval parameters map to multiple policies.&lt;/li&gt;&lt;/ul&gt;
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="NotUnique" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if the retrieval parameters map to multiple policies; false otherwise. NOTE: when inserting a PolicyRetrievalResultSet this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Result" nillable="true" type="tns1:Policy">
                <xs:annotation>
                  <xs:documentation>Detailed information about the policy. This is valid only if exactly one policy is retrieved. If zero or multiple policies match the retrieval parameters, then this is null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicySearchCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
Non-persistent set of criteria to use in searching for a specific policy.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CompanyName" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="ContactType" nillable="true" type="tns2:SearchContactType">
                <xs:annotation>
                  <xs:documentation>Type of contact to search for</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstName" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="FirstNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>First name in kanji (used only for Japanese names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="IncludeArchived" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>Include archived olicies in results</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="InsuredAddress" nillable="true" type="tns1:Address">
                <xs:annotation>
                  <xs:documentation>The address of the insured.  Supercedes the separate fields of City, State, and PostalCode.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LastName" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="LastNameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Last name in kanji (used only for Japanese names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossDate" nillable="true" type="xsd:dateTime"/>
              <xs:element maxOccurs="1" minOccurs="0" name="LossType" nillable="true" type="tns2:LossType">
                <xs:annotation>
                  <xs:documentation>Type of loss. NOTE: when inserting a PolicySearchCriteria this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="NameKanji" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>This contact's name in kanji (used only for Japanese names and will be null otherwise)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyNumber" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>Type of policy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PropertyAddress" nillable="true" type="tns1:Address">
                <xs:annotation>
                  <xs:documentation>The address of the property.  Generalizes and supercedes the existing PropertyCity field.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TaxIdString" nillable="true" type="soapenc:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="Vin" nillable="true" type="soapenc:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyStatCodeFilterCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Non-persistent entity used for filtering of stat codes.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PolicyTypeMetricLimits" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Lists all the claim and exposure metric limits for a particular policy type</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>Policy type for the limits. NOTE: when inserting a PolicyTypeMetricLimits this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RIRecoverable" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    A subtype of &lt;code&gt;RITransaction&lt;/code&gt; that indicates an Amount of Payments attributable to a particular RIAgreement.
    Money has been paid out, so the reinsurer behind the RIAgreement is obligated to
    reimburse us for this amount according to the RI treaty.
    Like both types of RITransactions, RIRecoverables behave similar to Reserve transactions as entities: they are immutable,
    and so multiple positive or negative transactions are created to adjust the total on a particular RICoding.
    To get the Total RI Recoverables and other RI financials calculations,
    use the &lt;code&gt;FinancialsCalculationUtil&lt;/code&gt; class.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:RITransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RITransaction" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    Represents a reinsurance financial operation, adding to the reinsurance financials calculations
    as a consequence of the creation of Reserves or Payments. As normal financials transactions are made,
    reinsurance transactions are automatically or manually created to indicate the expected recovery
    of such amounts from Reinsurance agreements.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element name="Adjustment" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>True if this RITransaction was created to adjust the totals on its RICoding. This is usually used to distinguish explicit, user-requested adjustments from RITransactions that were created automatically for non-reinsurance Transactions.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Claim" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The related claim.&lt;p&gt;Setting the claim also sets this transaction's currency (if null) to the claim's currency. NOTE: when inserting a RITransaction this field must be non-null. NOTE: value is the PublicId of the Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ClaimAmount" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The amount of this RITransaction in the Claim's currency. NOTE: when inserting a RITransaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments about the transaction, such as a reason.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CostCategory" nillable="true" type="tns2:CostCategory">
                <xs:annotation>
                  <xs:documentation>The CostCategory for this transaction. NOTE: when inserting a RITransaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CostType" nillable="true" type="tns2:CostType">
                <xs:annotation>
                  <xs:documentation>Type of cost (for example, claim cost or adjusting overhead). NOTE: when inserting a RITransaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Exposure" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The related exposure. NOTE: when inserting a RITransaction this field must be non-null. NOTE: value is the PublicId of the Exposure.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RIAgreement" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>null NOTE: when inserting a RITransaction this field must be non-null. NOTE: value is the PublicId of the RIAgreement.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReportingAmount" nillable="true" type="tns1:CurrencyAmount">
                <xs:annotation>
                  <xs:documentation>The amount of this line item in the app's default currency (reporting currency). NOTE: when inserting a RITransaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Status" nillable="true" type="tns2:TransactionStatus">
                <xs:annotation>
                  <xs:documentation>Status of the transaction. Further refines the LifeCycleState. Can only change status directly to another status in the same LifeCycleState, which does not affect Taccounts. NOTE: when inserting a RITransaction this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RICededReserve" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
    A subtype of &lt;code&gt;RITransaction&lt;/code&gt; that indicates an Amount of Reserves attributable to a particular RIAgreement.
    In other words, we have created Reserves, and if we pay out all that money, the reinsurer behind the RIAgreement will be obligated to
    reimburse us for this amount according to the RI treaty. It is a heads up about potential reinsurer liability.
    Like both types of RITransactions, RICededReserves behave similar to Reserve transactions as entities: they are immutable,
    and so multiple positive or negative transactions are created to adjust the total on a particular RICoding.
    To get the Total Ceded Reserves and other RI financials calculations,
    use the &lt;code&gt;FinancialsCalculationUtil&lt;/code&gt; class.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:RITransaction">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfRITransaction" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:RITransaction[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RITransactionSet" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      A set of RI transactions created at the same time.
  </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Claim" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The claim entity to which this TransactionSet belongs. NOTE: when inserting a RITransactionSet this field must be non-null. NOTE: value is the PublicId of the Claim.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Comments" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comments about the RI Transaction Set.  Typically, comments give some sense of why the transactions were created.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RITransactions" nillable="true" type="tns1:ArrayOfRITransaction">
                <xs:annotation>
                  <xs:documentation>RITransactions in the set.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReinsuranceCoverage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      This reference table contains the coverage type that is related to a Reinsurance Threshold.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Coverage" nillable="true" type="tns2:CoverageType">
                <xs:annotation>
                  <xs:documentation>Coverage Type of the coverage on this Reinsurance Threshold. NOTE: when inserting a ReinsuranceCoverage this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReinsuranceLossCause" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
      This reference table contains the loss cause that is related to a Reinsurance Threshold.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossCause" nillable="true" type="tns2:LossCause">
                <xs:annotation>
                  <xs:documentation>General cause of loss; dependent on loss type.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfReinsuranceCoverage" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ReinsuranceCoverage[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfReinsuranceLossCause" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ReinsuranceLossCause[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ReinsuranceThreshold" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
        This reference table contains the information necessary to determine whether a claim has exceeded the
        reinsurance reportable threshold notification limit based upon the claim's policy type, coverage types and loss causes.
      
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CoverageTypes" nillable="true" type="tns1:ArrayOfReinsuranceCoverage"/>
              <xs:element maxOccurs="1" minOccurs="0" name="EndDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>End Date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LossCauses" nillable="true" type="tns1:ArrayOfReinsuranceLossCause"/>
              <xs:element maxOccurs="1" minOccurs="0" name="LossType" nillable="true" type="tns2:LossType">
                <xs:annotation>
                  <xs:documentation>Type of loss. NOTE: when inserting a ReinsuranceThreshold this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="PolicyType" nillable="true" type="tns2:PolicyType">
                <xs:annotation>
                  <xs:documentation>Type of policy. NOTE: when inserting a ReinsuranceThreshold this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ReportingThreshold" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Reinsurance reporting threshold percentage for which a claim is marked reinsurance reportable. NOTE: when inserting a ReinsuranceThreshold this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StartDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Start Date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="ThresholdValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Reinsurance threshold value. NOTE: when inserting a ReinsuranceThreshold this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TreatyType" nillable="true" type="tns2:ReinsuranceTreatyType">
                <xs:annotation>
                  <xs:documentation>Type of reinsurance treaty. NOTE: when inserting a ReinsuranceThreshold this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SegmentationResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>The results of performing segmentation and strategy.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SegmentType" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The type of segment for a claim.&lt;br&gt; For example: &lt;tt&gt;auto_low&lt;/tt&gt; means "Auto - low complexity"</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="StrategyType" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The type of strategy for a claim.&lt;br&gt; For example: &lt;tt&gt;auto_fast&lt;/t&gt; means "Auto - Fast Track"</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceRequestMetricLimit" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="Currency" nillable="true" type="tns2:Currency">
                <xs:annotation>
                  <xs:documentation>Currency for this limit, for non-money based limits this is always the default currency</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="CustomerServiceTier" nillable="true" type="tns2:CustomerServiceTier">
                <xs:annotation>
                  <xs:documentation>Customer service tier that this limit applies to, null if it applies to any service tier</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalRedValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the red value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalTargetValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the target value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DecimalYellowValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Decimal field to store the yellow value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="LimitType" nillable="true" type="tns2:ServiceRequestMetricLimitType">
                <xs:annotation>
                  <xs:documentation>Calculation type for this limit NOTE: when inserting a ServiceRequestMetricLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="MetricUnit" nillable="true" type="tns2:MetricUnit">
                <xs:annotation>
                  <xs:documentation>Units for this type of metric limit. NOTE: when inserting a ServiceRequestMetricLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceCategory" nillable="true" type="tns1:SpecialistService">
                <xs:annotation>
                  <xs:documentation>Category of service that this limit applies to, null if it applies to any category</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequestMetricType" nillable="true" type="tns2:ServiceRequestMetric">
                <xs:annotation>
                  <xs:documentation>Type of service request metric to which this limit applies NOTE: when inserting a ServiceRequestMetricLimit this field must be non-null.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ServiceRequestTier" nillable="true" type="tns2:ServiceRequestTier">
                <xs:annotation>
                  <xs:documentation>Service request tier to which this limit applies, or null if it applies to any tier</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="SpecialistService" nillable="true" type="tns1:SpecialistService">
                <xs:annotation>
                  <xs:documentation>Fully-specified service that this limit applies to, null if it applies to any service</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WCBenefitFactorDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Used to track comments, notes, special exceptions related to the WCBenefitParameterSet</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AppliesToPPD" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, this footnote does not apply to PPD</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AppliesToPTD" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, this footnote does not apply to PTD</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AppliesToTPD" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, this footnote does not apply to TPD</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="AppliesToTTD" nillable="true" type="soapenc:boolean">
                <xs:annotation>
                  <xs:documentation>If true, this footnote does not apply to TTD</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DetailedFactor" nillable="true" type="tns2:WCBenefitFactorType">
                <xs:annotation>
                  <xs:documentation>Used to track notes, exceptions, etc. related to WC Benefits</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FactorCategory" nillable="true" type="tns2:WCBenefitFactorCategory">
                <xs:annotation>
                  <xs:documentation>Category of the factor: Duration, EE attribute, etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FactorComment" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>Comment explaining the reasoning behind this event status line.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="FactorValue" nillable="true" type="soapenc:decimal">
                <xs:annotation>
                  <xs:documentation>Tracks a value related to the Footnote</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WCDenialPeriod" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>This reference table contains the information necessary to determine the jurisdictional deadline to accept or
        deny a claim.  Each claim based upon the LossDate and the JurisdictionState should have at most one
        corresponding record in this table.
    </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns1:GWObject">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="AcceptDocumentTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The id of an associated document template. The id gets passed to IDocumentTemplateSource to retrieve the DocumentTemplateDescriptor.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="BeanVersion" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>Auto-incremented object version</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="DueDateFormula" nillable="true" type="tns2:JurisdictionalFormula">
                <xs:annotation>
                  <xs:documentation>Which formula including which days to include in calculating the TargetDate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="EffectiveDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>Effective Date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="ExpiryDate" nillable="true" type="xsd:dateTime">
                <xs:annotation>
                  <xs:documentation>End or Expiration Date</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="JurisdictionState" nillable="true" type="tns2:Jurisdiction">
                <xs:annotation>
                  <xs:documentation>Jurisdiction State. The Jurisdiction must be associated with JurisdictionType.TC_INSURANCE.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="RejectDocumentTemplate" nillable="true" type="soapenc:string">
                <xs:annotation>
                  <xs:documentation>The id of an associated document template. The id gets passed to IDocumentTemplateSource to retrieve the DocumentTemplateDescriptor.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetDaysFromLoss" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>If Date of Loss is a factor per DueDateFormula, used in conjunction with TargetIncludedDays to calculate the DueDate of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetDaysFromNotice" nillable="true" type="soapenc:int">
                <xs:annotation>
                  <xs:documentation>If Date of Notice is a factor per DueDateFormula, used in conjunction with TargetIncludedDays to calculate the DueDate of the activity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="1" minOccurs="0" name="TargetIncludeDays" nillable="true" type="tns2:IncludeDaysType">
                <xs:annotation>
                  <xs:documentation>Which days to include in calculating the TargetDate.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfGWObject" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:GWObject[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FindIdsResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Deprecated interface. This class was used by the &lt;code&gt;IDataObjectAPI&lt;/code&gt; to return
object Ids.
@deprecated Part of IDataObjectAPI
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Ids" nillable="true" type="impl:ArrayOf_soapenc_string">
            <xs:annotation>
              <xs:documentation>A string array containing object Ids.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumResults" type="xsd:int">
            <xs:annotation>
              <xs:documentation>null
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InsertPathValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>&lt;p&gt;
Represents the location and type of an entity to insert. Used in conjunction with
&lt;code&gt;IDataObjectAPI.setPathValues(String,String,InsertPathValue[],PathValue[],String[])&lt;/code&gt;.&lt;/p&gt;
@deprecated Part of IDataObjectAPI
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="EntityName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Type of entity to insert at the location. If the type is null then it is
inferred from the location. For example, if the location is an array, then
the entity created will be of the array's element type. However, if the
location refers to an abstract type, then this value must be specified.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Path" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Path from root entity to location where to insert this new entity. The leaf
of the path must null or refer to an array or a foreign key link. If the
path is null then a new "rootless" entity will be inserted.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RefId" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>RefId of this newly inserted entity. The RefId is defined by the caller and
is used to set properties on the newly inserted entity.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfInsertPathValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:InsertPathValue[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PathValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Represents the path and value to update.
&lt;p/&gt;
Used in conjunction with &lt;code&gt;IDataObjectAPI.setPathValues(String, String, InsertPathValue[], PathValue[], String[])&lt;/code&gt;.
@deprecated Part of IDataObjectAPI
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Path" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Path from the root entity to the property to update.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Value" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Path from the root entity to the property to update.
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfPathValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PathValue[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SetPathValuesIDRef" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
@deprecated Part of IDataObjectAPI
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="PublicID" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>null
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RefID" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>null
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfSetPathValuesIDRef" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SetPathValuesIDRef[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SetPathValuesResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>
@deprecated Part of IDataObjectAPI
</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="NewObjects" nillable="true" type="tns1:ArrayOfSetPathValuesIDRef">
            <xs:annotation>
              <xs:documentation>null
@deprecated
</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ImportResultDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Class that contains detailed information for an entity that was imported.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="EntityName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The type of entity.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ExternalID" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The external ID of the entity.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ExternalSource" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The external source for the entity.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="InternalID" type="xsd:long">
            <xs:annotation>
              <xs:documentation>The internal ID of the entity.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Type" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Either &lt;code&gt;ImportResults.INSERTED&lt;/code&gt; or &lt;code&gt;ImportResults.UPDATED&lt;/code&gt;,
depending on whether the entity was inserted or updated.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfImportResultDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ImportResultDetail[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ImportResultSummary" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Class that contains a summary information for the insertion or update of a
particular kind of entity.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Count" type="xsd:int">
            <xs:annotation>
              <xs:documentation>The number of entities affected.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="EntityName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The name of the entity in question.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Type" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Either &lt;code&gt;ImportResults.INSERTED&lt;/code&gt; or &lt;code&gt;ImportResults.UPDATED&lt;/code&gt;,
depending on whether this summary is for updated or inserted entities.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfImportResultSummary" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:ImportResultSummary[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ImportResults" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Class that contains information about the results of an import call.  This data structure
contains data on which entities were inserted and/or updated, along with any errors
that might have occurred during the import.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Details" nillable="true" type="tns2:ArrayOfImportResultDetail">
            <xs:annotation>
              <xs:documentation>The details of every item that was imported.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ErrorLog" nillable="true" type="impl:ArrayOf_soapenc_string">
            <xs:annotation>
              <xs:documentation>Contains any error messages that occurred during import.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Ok" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>&lt;code&gt;true&lt;/code&gt; if the import succeeded, &lt;code&gt;false&lt;/code&gt; if it failed (in which case the
&lt;code&gt;errorLog&lt;/code&gt; field should indicate what the problem is.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ParseTime" type="xsd:long">
            <xs:annotation>
              <xs:documentation>The amount of time spent parsing the XML.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Summaries" nillable="true" type="tns2:ArrayOfImportResultSummary">
            <xs:annotation>
              <xs:documentation>A summary of items that were imported, by type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="WriteTime" type="xsd:long">
            <xs:annotation>
              <xs:documentation>The amount of time taken to write to the database.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProcessStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains information about the status of a previously started batch process.  This could contain status
information for a process that is currently running or for a process that ran was run in the past.
If the process is not currently running, the opsCompleted and failedOps fields won't have any useful information.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="DateCompleted" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The date that the process completed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DetailedStatus" nillable="true" type="soapenc:string"/>
          <xs:element name="FailedOps" nillable="true" type="soapenc:int">
            <xs:annotation>
              <xs:documentation>The number of operations that failed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="FailureReason" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>If the process didn't succeed, the reason that the process failed</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="OpsCompleted" nillable="true" type="soapenc:int">
            <xs:annotation>
              <xs:documentation>The number of operations completed by the process</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="OpsExpected" nillable="true" type="soapenc:int">
            <xs:annotation>
              <xs:documentation>The number of operations expected to be completed by the process</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Progress" nillable="true" type="soapenc:string"/>
          <xs:element name="Running" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not the process is currently running</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="StartDate" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The date that the process started running</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Success" nillable="true" type="soapenc:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not the process finished successfully, or null if the process has not finished its work.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Type" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The type of process</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WQTaskDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Details for a particular Worker Task.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Active" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Active state of the worker.  More precisely, true if the given worker has not been stopped.
This includes workers that are both active and suspended.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ConsecutiveExceptions" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of consecutive exceptions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="EndTime" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The time at which the given worker was stopped or null if the worker has not been stopped yet.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Exceptions" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of exceptions caught during work items processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Hostname" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The host name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="InstanceId" nillable="true" type="soapenc:int">
            <xs:annotation>
              <xs:documentation>The Instance ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ItemsCheckedOut" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of checked out work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ItemsFailed" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of failed work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ItemsProcessed" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of processed work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ItemsSkipped" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of skipped work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="OrphansAdopted" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Number of orphans adopted by this task</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="StartTime" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The worker start time.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfWQTaskDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:WQTaskDetails[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WQueueExecutorDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Details for a particular WorkQueueExecutor of a particular WorkQueue for a particular host.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Active" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Active state of the worker.  More precisely, true if the given worker has not been stopped.
This includes workers that are both active and suspended.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="EndTime" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The time at which the given worker was stopped or null if the worker has not been stopped yet.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Hostname" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The host name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MaxNumOfWorkers" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Maximum number of allowed workers for the given executor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="StartTime" nillable="true" type="xsd:dateTime">
            <xs:annotation>
              <xs:documentation>The worker start time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Tasks" nillable="true" type="tns1:ArrayOfWQTaskDetails">
            <xs:annotation>
              <xs:documentation>An array of {@link WQTaskDetails} for Workers of the given executor.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfWQueueExecutorDetails" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:WQueueExecutorDetails[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="WQueueStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Detailed information about Worker Queue.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Executors" nillable="true" type="tns1:ArrayOfWQueueExecutorDetails">
            <xs:annotation>
              <xs:documentation>An array of {@link gw.api.webservice.maintenanceTools.WQueueExecutorDetails} for Executors of the given queue.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumActiveExecutors" type="xsd:int">
            <xs:annotation>
              <xs:documentation>The number of active executors.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumActiveWorkItems" type="xsd:int">
            <xs:annotation>
              <xs:documentation>The number of active work items.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="QueueName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The queue name</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkQueueConfig" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Carries information about the distributed worker processes
for a distributed workqueue.  Used to query and set the
worker configuration on a server.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="BatchSize" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Get the max number of workitems to be checked out when a
worker wakes up.  (Default = 10)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Instances" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Get the number of worker instances configured to run on this server</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="MaxPollInterval" type="xsd:long">
            <xs:annotation>
              <xs:documentation>Get the maximum time in milliseconds that a worker will wait
between queries for new workitems.  When a worker exhausts
the supply of workitems, it will suspend itself and wait for
notifications.  If no notification is received, it will wake
up and check for new workitems every maxPollInterval millis.
This acts as a safety mechanism in case notifications are lost
in a clustered environment, and guarantees a maximum latency
for workitem processing.  This parameter should increase with
the number of workers configured, to keep the load on the database
from growing excessively.
(Default = 60000)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ThrottleInterval" type="xsd:long">
            <xs:annotation>
              <xs:documentation>Get the current sleep time between workitems</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkQueueStatus" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Detailed information about Worker Queue.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="DetailsArray" nillable="true" type="tns1:ArrayOfWQTaskDetails">
            <xs:annotation>
              <xs:documentation>An array of {@link WQTaskDetails} for Workers of the given queue.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumActiveWorkItems" type="xsd:int">
            <xs:annotation>
              <xs:documentation>the number of active work items (checkedout or available).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumActiveWorkerItems" type="xsd:int">
            <xs:annotation>
              <xs:documentation>The number of active workers.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumActiveWorkers" type="xsd:int">
            <xs:annotation>
              <xs:documentation>The number of active workers.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumAvailableWorkItems" type="xsd:int">
            <xs:annotation>
              <xs:documentation>The number of available work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumCheckedoutWorkItems" type="xsd:int">
            <xs:annotation>
              <xs:documentation>The number of checkedout work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumFailedWorkItems" type="xsd:int">
            <xs:annotation>
              <xs:documentation>the number of failed work items</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="QueueName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The queue name</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CustomEvents" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="Events" nillable="true" type="impl:ArrayOf_soapenc_string"/>
          <xs:element name="ObjectKey" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfCustomEvents" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:CustomEvents[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldChangeValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="Name" nillable="true" type="soapenc:string"/>
          <xs:element name="Value" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldChangeValue" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldChangeValue[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldChanges" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="FieldValues" nillable="true" type="tns1:ArrayOfFieldChangeValue"/>
          <xs:element name="ObjectKey" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfFieldChanges" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:FieldChanges[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Acknowledgement" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="AckCode" nillable="true" type="soapenc:string"/>
          <xs:element name="CustomEvents" nillable="true" type="tns1:ArrayOfCustomEvents"/>
          <xs:element name="Duplicate" type="xsd:boolean"/>
          <xs:element name="Error" type="xsd:boolean"/>
          <xs:element name="ErrorDescription" nillable="true" type="soapenc:string"/>
          <xs:element name="FieldChanges" nillable="true" type="tns1:ArrayOfFieldChanges"/>
          <xs:element name="MessageID" type="xsd:long"/>
          <xs:element name="Retryable" type="xsd:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MessageOptionalFields" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="MessageCode" nillable="true" type="soapenc:string"/>
          <xs:element name="OptionalInt" nillable="true" type="soapenc:int"/>
          <xs:element name="OptionalMoney" nillable="true" type="soapenc:decimal"/>
          <xs:element name="OptionalString" nillable="true" type="soapenc:string"/>
          <xs:element name="SenderRefID" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MessageStatisticsData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Holds the statistics for messages for a given safe ordered object.
The statistics include:
&lt;ul&gt;
&lt;li&gt;# of failed messages&lt;/li&gt;
&lt;li&gt;# of failed messages that can be retried&lt;/li&gt;
&lt;li&gt;# of inflight messages&lt;/li&gt;
&lt;li&gt;# of unsent messages&lt;/li&gt;
&lt;/ul&gt;</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Failed" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Returns the number of messages that failed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Inflight" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Returns the number of messages that are in flight.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Retry" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Returns the number of failed messages that can be retried.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Unsent" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Returns the number of messages that are not sent yet.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DBConsistencyCheckResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Class containing information resulting from the running of database consistency
checks.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="CheckType" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Type of consistency check</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ConsistencyCheckDescription" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Get the description of the consistency check</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Duration" type="xsd:long">
            <xs:annotation>
              <xs:documentation>The length of time (in seconds) the check took</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="FailureDescription" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Get the description of the failure</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="GetNumInconsistenciesValid" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Is the getNumInconsistencies() method valid for the associated consistency check type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="GetSqlStringValid" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Is the getSqlString() method valid for the associated consistency check type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumInconsistencies" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Get the number of inconsistencies found for the check.
&lt;p/&gt;
This method is only valid for the following types of checks (NO_MATCH_ROWS).
Call isGetNumInconsistenciesValid() first.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="QueryToIdentifyRows" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Get the sql query to identify individual rows that failed the consistency check.
&lt;p/&gt;
This method is only valid for the following types of checks (NO_MATCH_ROWS).
Call isGetSqlStringValid() first.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SqlString" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Get the sql query that was executed for the consistency check.
&lt;p/&gt;
This method is only valid for the following types of checks (NO_MATCH_ROWS).
Call isGetSqlStringValid() first.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Succeeded" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not check succeeded</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfDBConsistencyCheckResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DBConsistencyCheckResult[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SessionData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Returns session information for a server session.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="SessionId" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The session id for this entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="UserId" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The user id in the session</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="UserName" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The name of the user's credential</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfSessionData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:SessionData[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DatabaseSnapshotInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="BeginIntervalTime" nillable="true" type="xsd:dateTime"/>
          <xs:element name="Description" nillable="true" type="soapenc:string"/>
          <xs:element name="Id" type="xsd:int"/>
          <xs:element name="SnapTime" nillable="true" type="xsd:dateTime"/>
          <xs:element name="SnapshotChosen" type="xsd:boolean"/>
          <xs:element name="StartupTime" nillable="true" type="xsd:dateTime"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfDatabaseSnapshotInfo" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:DatabaseSnapshotInfo[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServerVersion" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Data transfer object containing the servers version information.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="AppVersion" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The version of the application</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ConfigVersion" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Gets the version of the configuration files</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ConfigVersionModified" nillable="true" type="soapenc:string"/>
          <xs:element name="PlatformVersion" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The version of the platform</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="SchemaVersion" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The schema version</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AWRReportUserSettings" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="BeginSnapId" type="xsd:int"/>
          <xs:element name="CapturePeakedBindVariables" type="xsd:boolean"/>
          <xs:element name="CapturePeakedBindVariablesFromAWR" type="xsd:boolean"/>
          <xs:element name="ConcurrentBatchProcessAndWorkerAnalysis" type="xsd:boolean"/>
          <xs:element name="ConcurrentHistoryAnalysis" type="xsd:boolean"/>
          <xs:element name="ConcurrentMessagingAnalysis" type="xsd:boolean"/>
          <xs:element name="EndSnapId" type="xsd:int"/>
          <xs:element name="GenerateCallsToASHScripts" type="xsd:boolean"/>
          <xs:element name="IncludeDatabaseStatistics" type="xsd:boolean"/>
          <xs:element name="IncludeMetadataForInstrumentationTables" type="xsd:boolean"/>
          <xs:element name="ProbeInMemorySQLMonitor" type="xsd:boolean"/>
          <xs:element name="ProbeOnDiskSQLMonitor" type="xsd:boolean"/>
          <xs:element name="ProbeVDollarTables" type="xsd:boolean"/>
          <xs:element name="SearchForQueriesOnlyInFirstSnapshot" type="xsd:boolean"/>
          <xs:element name="SearchForQueriesOnlyInLastSnapshot" type="xsd:boolean"/>
          <xs:element name="SearchForQueriesWithMultiplePlans" type="xsd:boolean"/>
          <xs:element name="UseExperimentalRawDataOutput" type="xsd:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TableImportResult" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A simple data class used to transmit the aggregated results of a staging
table load</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="LoadCommandID" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Returns the public id of the row in loadcommand table for the operation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="NumErrors" type="xsd:int">
            <xs:annotation>
              <xs:documentation>Returns the number of load errors generated by the operation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="StrErrorMessage" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The error message string</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TemplateImportResults" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Table Import Results</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="FileContents" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Returns the new content of the file as produced by the import process.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Output" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Returns the human-readable output of the import process.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TypeKeyData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Contains raw data about a TypeKey instance.  Used instead of a typekey instance because the TypeKey class doesn't
have a no-arg constructor.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Code" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Corresponds to the code field on TypeKey</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Description" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Corresponds to the description field on TypeKey</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Name" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Corresponds to the name field on TypeKey</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Retired" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Corresponds to the retired field on TypeKey</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfTypeKeyData" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:TypeKeyData[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PCClaim" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="ClaimNumber" nillable="true" type="soapenc:string"/>
          <xs:element name="LossDate" nillable="true" type="xsd:dateTime"/>
          <xs:element name="PolicyNumber" nillable="true" type="soapenc:string"/>
          <xs:element name="PolicyTypeName" nillable="true" type="soapenc:string"/>
          <xs:element name="Status" nillable="true" type="soapenc:string"/>
          <xs:element name="TotalIncurred" nillable="true" type="soapenc:decimal"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PCClaimDetail" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="ClaimInfoPublicID" nillable="true" type="soapenc:string"/>
          <xs:element name="ClaimPublicID" nillable="true" type="soapenc:string"/>
          <xs:element name="ClaimSecurityType" nillable="true" type="soapenc:string"/>
          <xs:element name="Description" nillable="true" type="soapenc:string"/>
          <xs:element name="Injury" nillable="true" type="soapenc:boolean"/>
          <xs:element name="Litigation" nillable="true" type="soapenc:boolean"/>
          <xs:element name="LossCause" nillable="true" type="soapenc:string"/>
          <xs:element name="Recoveries" nillable="true" type="soapenc:decimal"/>
          <xs:element name="RemainingReserves" nillable="true" type="soapenc:decimal"/>
          <xs:element name="TotalPaid" nillable="true" type="soapenc:decimal"/>
          <xs:element maxOccurs="1" minOccurs="0" name="pcClaim" nillable="true" type="tns1:PCClaim"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PCClaimSearchCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:sequence>
          <xs:element name="BeginDate" nillable="true" type="xsd:dateTime"/>
          <xs:element name="EndDate" nillable="true" type="xsd:dateTime"/>
          <xs:element name="Lob" nillable="true" type="soapenc:string"/>
          <xs:element name="PolicyNumbers" nillable="true" type="impl:ArrayOf_soapenc_string"/>
          <xs:element name="Status" nillable="true" type="soapenc:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfPCClaimSearchCriteria" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PCClaimSearchCriteria[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfPCClaim" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="entity:PCClaim[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema targetNamespace="http://fault.webservices.cc.guidewire.com/">
      <xs:import namespace="http://enumeration.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://entity.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://api.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:complexType name="SOAPException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>A generic SOAP exception.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Message" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>The message associated with this exception</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="OtherMessages" nillable="true" type="soapenc:string">
            <xs:annotation>
              <xs:documentation>Other messages attached to this exception.  This message may contain information
related to other exceptions that occurred during a SOAP call, but not directly
associated with this particular exception.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SOAPSenderException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SOAPSenderException is the base class for all exceptions that resulted from
a sender error. This usually means that required data was not properly encoded
or was absent. Senders should not send the message again unless some steps have
been taken to make the encoded data valid.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:SOAPException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DataConversionException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown by many APIs when they encounter a problem translating a SOAP data object into
an internal system object.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:SOAPSenderException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BadIdentifierException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect).</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PermissionException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when the authenticated SOAP user does not have permission to
perform the requested operation</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:SOAPSenderException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SOAPServerException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SOAPServerException is the base class for all exceptions that resulted from
a server error. This is something of a catch-all exception type insofar as
some things which might in fact be considered SOAPSenderExceptions are reported
as SOAPServerExceptions. Perhaps a rule failed or something else. Generally it
indicates a problem in the server that is likely retryable at some future time.
The database being down, an unavailable plugin, etc would fall into this catagory.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:SOAPException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServerStateException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>ServerStateException is thrown when a request is made at a time the
server is in a state that disallows the request. An example is if
an attempt is made to add a claim and the server is in maintenance
mode.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:SOAPServerException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="EntityStateException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when an attempt is made to manipulate an object that is in a state
that prevents the operation from being performed. An example is trying to
modify a Claim that is marked as closed.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:SOAPSenderException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SOAPRetryableException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SOAPRetryableException is the class for all exceptions that are retryable
immediately.  The primary example of this is ConcurrentDataChangeException.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:SOAPException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="LoginException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Class of exceptions thrown when a user tries to log in and an authentication failure occurs.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:PermissionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DuplicateKeyException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Throws if a duplicate data exception is detected in the database.  I.e. a unique index violation.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldConversionException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when a data type cannot be converted into the native data type.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FieldFormatException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when the input type does not match the format specified in the metadata.  I.e. a string is too long.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RequiredFieldException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when required data is missing from a bean.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UnknownTypeKeyException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>Thrown when a typekey value isn't available on the server.  This exception can only
happen if the SOAP WSDL that is being used on the remote side is invalid.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:DataConversionException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="BatchProcessException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:annotation>
          <xs:documentation>SOAP Exception specific to batch process operations</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns2:SOAPServerException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AlreadyExecutedException" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:extension base="tns2:SOAPSenderException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema targetNamespace="http://api.webservices.cc.guidewire.com/">
      <xs:import namespace="http://enumeration.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://entity.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://fault.webservices.cc.guidewire.com/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
      <xs:complexType name="ArrayOf_soapenc_string" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="soapenc:string[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOf_soapenc_decimal" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="soapenc:decimal[]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfArrayOf_soapenc_string" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <xs:complexContent>
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" wsdl:arrayType="soapenc:string[][]"/>
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="IBulkInvoiceAPI-getItemsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getItemsReturn" type="tns1:ArrayOfBulkInvoiceItem">
      <wsdl:documentation>Array of &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects linked to the given &lt;code&gt;BulkInvoice&lt;/code&gt;</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-placeDownstreamHoldOnInvoiceResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBulkInvoiceAPI-createBulkInvoiceRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="invoice" type="tns1:BulkInvoice">
      <wsdl:documentation>the &lt;code&gt;BulkInvoice&lt;/code&gt; object to create.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-updateBulkInvoiceStatusResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBulkInvoiceAPI-createBulkInvoiceRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="invoice" type="tns1:BulkInvoice">
      <wsdl:documentation>the &lt;code&gt;BulkInvoice&lt;/code&gt; object to create</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="customExchangeRate" type="soapenc:decimal">
      <wsdl:documentation>the &lt;code&gt;TransToReportingExchangeRate&lt;/code&gt; to set on the &lt;code&gt;BulkInvoice&lt;/code&gt;;
must be null if the server is configured in single-currency mode; if null and server is
in multicurrency mode, a current market rate will be used</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="customExchangeRateDescription" type="soapenc:string">
      <wsdl:documentation>the description to be used for the TransToReportingExchangeRate; must
be null or empty if customExchangeRate is null; if null and customExchangeRate
is non-null, a standard string including the current date is used</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-placeDownstreamHoldOnInvoiceRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; to put on hold.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-voidBulkInvoiceResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBulkInvoiceAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-createContactByLinkIdResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="createContactByLinkIdReturn" type="tns1:Contact">
      <wsdl:documentation>The newly created &lt;code&gt;Contact&lt;/code&gt; in ClaimCenter.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-submitBulkInvoiceResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBulkInvoiceAPI-validateBulkInvoiceResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBulkInvoiceAPI-stopBulkInvoiceResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBulkInvoiceAPI-updateItemsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="updateItemsReturn" type="tns1:ArrayOfBulkInvoiceItem">
      <wsdl:documentation>Array of updated &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-getBulkInvoiceResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getBulkInvoiceReturn" type="tns1:BulkInvoice">
      <wsdl:documentation>The &lt;code&gt;BulkInvoice&lt;/code&gt; with the given ID.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-updateItemsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>the ID of the &lt;code&gt;BulkInovoice&lt;/code&gt; the given items should refer to.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="updatedItems" type="tns1:ArrayOfBulkInvoiceItem">
      <wsdl:documentation>array of &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects to update.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-EntityStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:EntityStateException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-getItemsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; for which to search for &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-deleteItemsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="deleteItemsReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>Array of deleted IDs.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-createContactByLinkIdRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="contactLinkID" type="soapenc:string">
      <wsdl:documentation>the linkID of the &lt;code&gt;Contact&lt;/code&gt; in ContactManager to link to in ClaimCenter.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-voidBulkInvoiceRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; to void.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-requestBulkInvoiceRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; to request for submission to the downstream system</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-submitBulkInvoiceRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; to submit.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-validateBulkInvoiceRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; to validate</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-requestBulkInvoiceResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IBulkInvoiceAPI-createBulkInvoiceResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="createBulkInvoiceReturn" type="tns1:BulkInvoice">
      <wsdl:documentation>The committed &lt;code&gt;BulkInvoice&lt;/code&gt; object.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-getItemsRequest2" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; for which to search for &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="claimId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;Claim&lt;/code&gt; that result &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects should reference.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="amount" type="soapenc:decimal">
      <wsdl:documentation>payment amount that result &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects should have.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-getItemsRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; for which to search for &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="claimId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;Claim&lt;/code&gt; that result &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects should reference.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:SOAPException">
      <wsdl:documentation>If an invalid public ID is given</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-stopBulkInvoiceRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; to stop.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-addItemsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addItemsReturn" type="tns1:ArrayOfBulkInvoiceItem">
      <wsdl:documentation>Array of added &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects, empty array if &lt;code&gt;items&lt;/code&gt; is null or empty.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-createBulkInvoiceResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="createBulkInvoiceReturn" type="tns1:BulkInvoice">
      <wsdl:documentation>The committed &lt;code&gt;BulkInvoice&lt;/code&gt; object.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-getBulkInvoiceRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>the ID of the invoice to search for.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-getItemsResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getItemsReturn" type="tns1:ArrayOfBulkInvoiceItem">
      <wsdl:documentation>Array of &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects with the given &lt;code&gt;Claim&lt;/code&gt; and linked to the given &lt;code&gt;BulkInvoice&lt;/code&gt;.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-getItemsResponse2" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getItemsReturn" type="tns1:ArrayOfBulkInvoiceItem">
      <wsdl:documentation>Array of &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects with the given &lt;code&gt;Claim&lt;/code&gt; and amount and linked to the given
&lt;code&gt;BulkInvoice&lt;/code&gt;.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-addItemsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>the ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; to which to add &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="items" type="tns1:ArrayOfBulkInvoiceItem">
      <wsdl:documentation>array of &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects to add.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-deleteItemsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>the ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; from which to remove items.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="itemIds" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>array of IDs of &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects to remove.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IBulkInvoiceAPI-updateBulkInvoiceStatusRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; to update.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="checkNumber" type="soapenc:string">
      <wsdl:documentation>Check number to update, optional.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="issueDate" type="xsd:dateTime">
      <wsdl:documentation>Date the check was issued.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="status" type="tns2:BulkInvoiceStatus">
      <wsdl:documentation>Status to update.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="extensions" type="tns1:ArrayOfFieldValue">
      <wsdl:documentation>Set of name/value pairs of extension fields to update on the check. Can be &lt;code&gt;null&lt;/code&gt; if
there are no extension fields to update.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-findPublicIdByClaimNumberRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumber" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-skipActivityResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-reopenClaimResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-addMatterDocumentRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the exposure with which to associate the document.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="matterID" type="soapenc:string">
      <wsdl:documentation>The matter (in the form of a public id of an existing matter).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="doc" type="tns2:Document">
      <wsdl:documentation>The document to associate with the specified exposure.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-isFlaggedResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="isFlaggedReturn" type="xsd:boolean">
      <wsdl:documentation>&lt;code&gt;true&lt;/code&gt; if the claim is flagged, and &lt;code&gt;false&lt;/code&gt; otherwise.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>If the caller does not have all of the following permissions: VIEW_CLAIM, CREATE_ACTIVITY.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-doesExistRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim to check</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-scheduleForArchiveByPublicIdResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-addClaimContactDocumentRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the exposure with which to associate the document.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="claimContactID" type="soapenc:string">
      <wsdl:documentation>The claim contact (in the form of a public id of an existing contact record).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="doc" type="tns2:Document">
      <wsdl:documentation>The document to associate with the specified exposure.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-checkValidResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkValidReturn" type="xsd:boolean">
      <wsdl:documentation>&lt;code&gt;true&lt;/code&gt; if the claim and exposures are valid and &lt;code&gt;false&lt;/code&gt; otherwise.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-restoreClaimRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicIDs" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>Public IDs of the claim to be restored</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="comment" type="soapenc:string">
      <wsdl:documentation>comment for restoring the claims</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-importAcordClaimFromXMLResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importAcordClaimFromXMLReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the imported claim</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-giveUserPermissionsOnClaimRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the claim the permission is added</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="userPublicID" type="soapenc:string">
      <wsdl:documentation>the uesr the permissions to be given.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="types" type="tns3:ArrayOfClaimAccessType">
      <wsdl:documentation>permissions to be given to the user.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-importAcordClaimFromXMLRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="xml" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-completeActivityResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-reopenClaimRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the claim to reopen</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="soapenc:string">
      <wsdl:documentation>Optional string giving the reason for reopening the claim</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-getClaimInfoRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim that the claim info is for</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="objectFilter" type="tns2:ObjectFilter">
      <wsdl:documentation>Specifies which fields should be present on the returned object</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-getClaimStateResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getClaimStateReturn" type="tns3:ClaimState">
      <wsdl:documentation>String representing the given claim's state</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-getClaimRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim to retrieve</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="objectFilter" type="tns2:ObjectFilter">
      <wsdl:documentation>Specifies which fields should be present on the returned object</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-EntityStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:EntityStateException">
      <wsdl:documentation>If there is an attempt to add an activity using an activity pattern that isn't available to the particular type of the given claim, or that isn't available to a closed claim (if the given claim is closed).</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:DataConversionException">
      <wsdl:documentation>If either the claimID or activityPatternID does not exist.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-closeClaimRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The publc id that specifies the claim to close</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="outcomeType" type="tns3:ClaimClosedOutcomeType">
      <wsdl:documentation>Type of outcome</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="soapenc:string">
      <wsdl:documentation>Optional string giving the reason for closing the claim</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-claimsExistRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumbers" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>the claim numbers to search for</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-getClaimInfoResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getClaimInfoReturn" type="tns2:ClaimInfo">
      <wsdl:documentation>The ClaimInfoData representing the claim info</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-scheduleForArchiveByPublicIdRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicIds" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-giveUserPermissionsOnClaimResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-restoreClaimResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="restoreClaimReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The public IDs of the claims that were restored</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-migrateClaimRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claim" type="tns2:Claim">
      <wsdl:documentation>The claim to be added to the system.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="assignedGroupId" type="soapenc:string">
      <wsdl:documentation>Group to which the claim is assigned. Must be the public id of an existing group.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="assignedUserId" type="soapenc:string">
      <wsdl:documentation>User that the claim will be assigned to. Must be the public id of an existing user
and the user must belong to the group.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addActivityFromPatternResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addActivityFromPatternReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the newly created activity.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addNoteResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addNoteReturn" type="soapenc:string">
      <wsdl:documentation>An EntityIdentifer containing the identifier of the newly created note.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-findPublicIdByClaimNumberResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findPublicIdByClaimNumberReturn" type="soapenc:string">
      <wsdl:documentation>claim's publicId, else null if claim not found</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-migrateClaimRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claim" type="tns2:Claim">
      <wsdl:documentation>The claim to be added to the system.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="state" type="tns3:ClaimState">
      <wsdl:documentation>The state of the claim - open, closed or draft. Must not be null</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="assignedGroupId" type="soapenc:string">
      <wsdl:documentation>Group to which the claim is assigned. Must be the public id of an existing group.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="assignedUserId" type="soapenc:string">
      <wsdl:documentation>User that the claim will be assigned to. Must be the public id of an existing user
and the user must belong to the group.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addFNOLRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fnol" type="tns2:Claim">
      <wsdl:documentation>The FNOL, represented in a claim instance, to be added to the system.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-completeActivityRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="activityPublicID" type="soapenc:string">
      <wsdl:documentation>The publc id that specifies the activity to complete</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addClaimantDocumentResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addClaimantDocumentReturn" type="soapenc:string">
      <wsdl:documentation>An EntityIdentifer containing the identifier of the newly created document.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addExposureDocumentResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addExposureDocumentReturn" type="soapenc:string">
      <wsdl:documentation>An EntityIdentifer containing the identifier of the newly created document.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addActivityFromPatternRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim to which the activity should be added.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="activityPatternPublicId" type="soapenc:string">
      <wsdl:documentation>The ID of the activity pattern that is to be used for the activity.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addActivityFromPatternWithOverrideRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim to which to dd the activity.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="activityPatternPublicId" type="soapenc:string">
      <wsdl:documentation>The ID of the activity pattern that is to be used for the activity.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="activityFields" type="tns2:ArrayOfFieldValue">
      <wsdl:documentation>An array of field values that will be applied to the activity.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-bulkValidateRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loadCommandID" type="xsd:int">
      <wsdl:documentation>An integer value identifying the conversion batch that imported these claims.
The loadCommandID value is available through the TableImportResult object returned from a table
import operation. (e.g. ITableImportAPI.integrityCheckStagingTableContentsAndLoadSourceTables())</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-importClaimFromXMLRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="xml" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="mapperClassName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-closeClaimResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-addClaimContactDocumentResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addClaimContactDocumentReturn" type="soapenc:string">
      <wsdl:documentation>An EntityIdentifer containing the identifier of the newly created document.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-checkValidRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim to check</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="strValidationLevelCode" type="soapenc:string">
      <wsdl:documentation>The validation level to check</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-isFlaggedRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim to check</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addCustomHistoryWithDescRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim to modify.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="historyType" type="tns3:CustomHistoryType">
      <wsdl:documentation>The type of the history event</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="description" type="soapenc:string">
      <wsdl:documentation>A String that will override the value that exists in the typekey specified
by historyType.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-getClaimInfoRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim that the claim info is for</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addCustomHistoryWithDescResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-reopenClaimResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-getClaimInfoResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getClaimInfoReturn" type="tns2:ClaimInfo">
      <wsdl:documentation>The ClaimInfoData representing the claim info</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-refreshPolicyRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the claim whose policy will be refreshed</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-importClaimFromXMLResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importClaimFromXMLReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the imported claim</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-previewAssignmentRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimData" type="tns2:Claim">
      <wsdl:documentation>The claim to run through the assignment engine</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addDocumentRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the claim with which to associate the document.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="doc" type="tns2:Document">
      <wsdl:documentation>The document to associate with the specified claim.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addClaimantNoteResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addClaimantNoteReturn" type="soapenc:string">
      <wsdl:documentation>An EntityIdentifer containing the identifier of the newly created note.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-skipActivityRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="activityPublicID" type="soapenc:string">
      <wsdl:documentation>The publc id that specifies the activity to skip</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-refreshPolicyResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-addClaimantActivityFromPatternResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addClaimantActivityFromPatternReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the newly created activity.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-SOAPServerException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPServerException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-previewAssignmentResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="previewAssignmentReturn" type="tns2:AssignmentResponse">
      <wsdl:documentation>AssignmentResponse instance indicating the assignment found for this item</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-setPolicyResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-addExposureDocumentRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the exposure with which to associate the document.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="exposureID" type="soapenc:string">
      <wsdl:documentation>The exposure (in the form of a public id of an existing exposure).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="doc" type="tns2:Document">
      <wsdl:documentation>The document to associate with the specified exposure.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addClaimantActivityFromPatternRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim to which the activity should be added.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="claimantPublicID" type="soapenc:string">
      <wsdl:documentation>The claimant (in the form of a public id of an existing contact record).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="activityPatternPublicId" type="soapenc:string">
      <wsdl:documentation>The ID of the activity pattern that is to be used for the activity.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addDocumentResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addDocumentReturn" type="soapenc:string">
      <wsdl:documentation>An EntityIdentifer containing the identifier of the newly created document.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-getClaimStateRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the claim to get the state from</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addClaimantDocumentRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the exposure with which to associate the document.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="claimantID" type="soapenc:string">
      <wsdl:documentation>The claimant (in the form of a public id of an existing contact record).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="doc" type="tns2:Document">
      <wsdl:documentation>The document to associate with the specified exposure.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addFNOLResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addFNOLReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the newly created claim.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-bulkValidateResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="bulkValidateReturn" type="tns2:ProcessID">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addClaimantNoteRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the claim with which to associate the note</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="claimantID" type="soapenc:string">
      <wsdl:documentation>The claimant (in the form of a public id of an existing contact record)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="note" type="tns2:Note">
      <wsdl:documentation>The note to associate with the specified claim.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-migrateClaimResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="migrateClaimReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the newly created claim.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addMatterDocumentResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addMatterDocumentReturn" type="soapenc:string">
      <wsdl:documentation>An EntityIdentifer containing the identifier of the newly created document.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-scheduleForArchiveRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumbers" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>Claim numbers of the claims to schedule for archive</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-scheduleForArchiveResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-getClaimResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getClaimReturn" type="tns2:Claim">
      <wsdl:documentation>The ClaimData representing the claim</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addCustomHistoryRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim to modify.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="historyType" type="tns3:CustomHistoryType">
      <wsdl:documentation>The type of the history event</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-doesExistResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="doesExistReturn" type="xsd:boolean">
      <wsdl:documentation>&lt;code&gt;true&lt;/code&gt; if the claim exists in ClaimCenter, and &lt;code&gt;false&lt;/code&gt;
otherwise</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addActivityFromPatternWithOverrideResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addActivityFromPatternWithOverrideReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the newly created activity.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addExposureRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The ID of the claim to which the exposure is added.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="exposure" type="tns2:Exposure">
      <wsdl:documentation>The ExposureData to associate with the claim.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-claimsExistResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimsExistReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>array of strings containing all claim numbers that match</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-reopenClaimRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the claim to reopen</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reasonType" type="tns3:ClaimReopenedReason">
      <wsdl:documentation>typekey giving reason for reopen</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="soapenc:string">
      <wsdl:documentation>Optional string giving the reason for reopening the claim</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-migrateClaimResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="migrateClaimReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the newly created claim.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addNoteRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the claim with which to associate the note</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="note" type="tns2:Note">
      <wsdl:documentation>The note to associate with the specified claim.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-addCustomHistoryResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimAPI-addExposureResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addExposureReturn" type="soapenc:string">
      <wsdl:documentation>An public id containing the identifier of the newly created exposure.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimAPI-setPolicyRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation>The public id that specifies the claim whose policy will be set</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="policySummary" type="tns2:PolicySummary">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-stopCheckRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkID" type="soapenc:string">
      <wsdl:documentation>PublicID of the Check to stop</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="soapenc:string">
      <wsdl:documentation>if non-null, the value to store in the Comments field for the stopped Check</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-addClaimFinancialsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="transactionSet" type="tns1:TransactionSet">
      <wsdl:documentation>A set of financial transactions for a single claim; all of the transactions must
have the same currency. If the reserving currency is not provided on the transaction, this API call will assume and set it to the claim currency.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-voidAndReissueCheckResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-getClaimAmountsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumbers" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The numbers for all the claims that financials values are being requested for.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="financialsCalculationType" type="tns2:FinancialsCalculationType">
      <wsdl:documentation>The type of the financials calculation for this request.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="costCategory" type="tns2:CostCategory">
      <wsdl:documentation>The cost category of the desired financials values.  If this is null, it will be ignored in
the request.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="costType" type="tns2:CostType">
      <wsdl:documentation>The cost type of the desired financials values.  If this is null, it will be ignored in the
request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-voidCheckRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-updateCheckStatusRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkID" type="soapenc:string">
      <wsdl:documentation>Identifier of the check to be updated.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="checkNumber" type="soapenc:string">
      <wsdl:documentation>Number of the check. Optional; use NULL if not updating.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="issueDate" type="xsd:dateTime">
      <wsdl:documentation>Date the check was issued. Optional, use NULL if not updating.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="status" type="tns2:TransactionStatus">
      <wsdl:documentation>Status of the check. Required; cannot be NULL.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="extensions" type="tns1:ArrayOfFieldValue">
      <wsdl:documentation>Set of name/value pairs of extension fields to update
on the check. Can be NULL if no extension fields to update.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-denyCheckResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-addClaimFinancialsWithValidationResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addClaimFinancialsWithValidationReturn" type="tns1:TransactionSetApprovalResult">
      <wsdl:documentation>A validation result that holds one of three results:
&lt;ul&gt; ValidationFailed - this result will contain a list of validation errors &lt;/ul&gt;
&lt;ul&gt; ValidButUnapproved - this result will contain the String of
the imported TransactionSet and a list of reasons for approval&lt;/ul&gt;
&lt;ul&gt; ValidAndApproved - this result will contain the String of
the imported TransactionSet&lt;/ul&gt;</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-getExposureAmountsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="exposureIDs" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The public ids for all the exposures that financials values are being requested for.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="financialsCalculationType" type="tns2:FinancialsCalculationType">
      <wsdl:documentation>The type of the financials calculation for this request.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="costCategory" type="tns2:CostCategory">
      <wsdl:documentation>The cost category of the desired financials values.  If this is null, it will be ignored in
the request.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="costType" type="tns2:CostType">
      <wsdl:documentation>The cost type of the desired financials values.  If this is null, it will be ignored in the
request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-SOAPServerException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:SOAPServerException">
      <wsdl:documentation>If the calculation associated with the passed {@link FinancialsCalculationType} cannot be found.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-EntityStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:EntityStateException">
      <wsdl:documentation>Thrown if there's a transaction or check with an invalid status in in the transaction set.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-stopAndReissueCheckResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:DataConversionException">
      <wsdl:documentation>Thrown if there's a problem in the imported data; for example, a bad typecode or missing required field.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-applyForeignExchangeAdjustmentToCheckResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-updateCheckStatusResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-applyForeignExchangeAdjustmentToCheckRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkId" type="soapenc:string">
      <wsdl:documentation>the publicID of the check whose payment(s) are to receive the foreign exchange adjustment</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="newClaimAmount" type="soapenc:decimal">
      <wsdl:documentation>the adjusted amount for this payment in the claim currency; cannot be null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-applyForeignExchangeAdjustmentToPaymentRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="paymentId" type="soapenc:string">
      <wsdl:documentation>the publicID of the payment to receive the foreign exchange adjustment</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="newClaimAmount" type="soapenc:decimal">
      <wsdl:documentation>the adjusted amount for this payment in the claim currency; cannot be null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-denyCheckRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkId" type="soapenc:string">
      <wsdl:documentation>the publicID of the check to be denied</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-addClaimFinancialsWithValidationRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="transactionSetData" type="tns1:TransactionSet">
      <wsdl:documentation>A set of financial transactions for a single claim; all of the transactions must
have the same transaction currency and reserving currency (though this may be omitted and then
claim currency will be taken as the reserving currency)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="checkForDuplicateChecks" type="xsd:boolean">
      <wsdl:documentation>if true, this method will check for duplicate checks when importing a checkset</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="exchangeRate" type="soapenc:decimal">
      <wsdl:documentation>exchange rate from the transaction currency to the claim currency, for which a "custom"
exchange rate entity will be created and set on the Transactions; the amount values for
each transaction are not recalculated using this rate, so it is quite
possible to add Transactions through this method with amount ratios that do not
match the exchange rate (a warning will be logged in this case); if this argument is null,
no exchange rates will be applied to the Transactions</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="exchangeRateDescription" type="soapenc:string">
      <wsdl:documentation>exchange rate description, can be null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-stopAndReissueCheckRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkID" type="soapenc:string">
      <wsdl:documentation>PublicID of the Check to stop and reissue</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="soapenc:string">
      <wsdl:documentation>if non-null, the value to store in the Comments field for the new Check</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-addClaimFinancialsWithValidationRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="transactionSetData" type="tns1:TransactionSet">
      <wsdl:documentation>A set of financial transactions for a single claim; all of the transactions must
have the same currency. If the reserving currency is not provided on the transaction, this API call will assume and set it to the claim currency.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="checkForDuplicateChecks" type="xsd:boolean">
      <wsdl:documentation>If true, this method will check for duplicate checks when importing a checkset.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-voidCheckResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-SOAPSenderException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:SOAPSenderException">
      <wsdl:documentation>If either claimNumbers or FinancialsCalculationType are null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-addClaimFinancialsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addClaimFinancialsReturn" type="soapenc:string">
      <wsdl:documentation>An identifier for the imported transaction set.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-applyForeignExchangeAdjustmentToCheckRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkId" type="soapenc:string">
      <wsdl:documentation>the publicID of the check whose payment(s) are to receive the foreign exchange adjustment</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="newClaimAmount" type="soapenc:decimal">
      <wsdl:documentation>the value to which this check's claim amount should be adjusted; if null, the claim amount
is not adjusted</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="newReportingAmount" type="soapenc:decimal">
      <wsdl:documentation>the value to which this check's reporting amount should be adjusted; if null, the
reporting amount is not adjusted</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-applyForeignExchangeAdjustmentToCheckResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-voidCheckResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-applyForeignExchangeAdjustmentToPaymentRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="paymentId" type="soapenc:string">
      <wsdl:documentation>the PublicID of the payment to receive the foreign exchange adjustment</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="newClaimAmount" type="soapenc:decimal">
      <wsdl:documentation>the value to which this payment's claim amount should be adjusted; if null, the claim amount
is not adjusted</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="newReportingAmount" type="soapenc:decimal">
      <wsdl:documentation>the value to which this payment's reporting amount should be adjusted; if null, the
reporting amount is not adjusted</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-applyForeignExchangeAdjustmentToPaymentResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-addClaimFinancialsResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addClaimFinancialsReturn" type="soapenc:string">
      <wsdl:documentation>An identifier for the imported transaction set.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-addClaimFinancialsRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="transactionSet" type="tns1:TransactionSet">
      <wsdl:documentation>A set of financial transactions for a single claim; all of the transactions must
have the same transaction currency and reserving currency (though this may be omitted and then
claim currency will be taken as the reserving currency)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="exchangeRate" type="soapenc:decimal">
      <wsdl:documentation>exchange rate from the transaction currency to the reserving currency, for which a "custom"
exchange rate entity will be created and set on the Transactions; the amount values for
each transaction are not recalculated using this rate, so it is quite
possible to add Transactions through this method with amount ratios that do not
match the exchange rate (a warning will be logged in this case); if this argument is null,
no exchange rates will be applied to the
Transactions. If the reserving currency is not provided on the transaction, this API call will assume and set it to the claim currency.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="exchangeRateDescription" type="soapenc:string">
      <wsdl:documentation>exchange rate description, can be null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-stopCheckResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-stopCheckResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-getClaimAmountsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getClaimAmountsReturn" type="impl:ArrayOf_soapenc_decimal">
      <wsdl:documentation>The array of requested financials values.  The returned values are in the same order as the claims that
were passed in through the claimNumbers parameter.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-applyForeignExchangeAdjustmentToPaymentResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-stopCheckRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-denyRecoveryResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IClaimFinancialsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:SOAPException">
      <wsdl:documentation>Thrown if an unexpected error occurs on the server while updating the check.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-voidCheckRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkID" type="soapenc:string">
      <wsdl:documentation>PublicID of the Check to void</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="soapenc:string">
      <wsdl:documentation>if non-null, the value to store in the Comments field for the voided Check</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-getExposureAmountsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getExposureAmountsReturn" type="impl:ArrayOf_soapenc_decimal">
      <wsdl:documentation>The array of requested financials values.  The returned values are in the same order as the exposures that
were passed in through the exposureIDs parameter.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-addClaimFinancialsWithValidationResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addClaimFinancialsWithValidationReturn" type="tns1:TransactionSetApprovalResult">
      <wsdl:documentation>A validation result that holds one of three results:
&lt;ul&gt; ValidationFailed - this result will contain a list of validation errors &lt;/ul&gt;
&lt;ul&gt; ValidButUnapproved - this result will contain the String of
the imported TransactionSet and a list of reasons for approval&lt;/ul&gt;
&lt;ul&gt; ValidAndApproved - this result will contain the String of
the imported TransactionSet&lt;/ul&gt;</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-voidAndReissueCheckRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkID" type="soapenc:string">
      <wsdl:documentation>PublicID of the Check to void and reissue</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="soapenc:string">
      <wsdl:documentation>if non-null, the value to store in the Comments field for the new Check</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IClaimFinancialsAPI-denyRecoveryRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="recoveryId" type="soapenc:string">
      <wsdl:documentation>the publicID of the recovery to be denied</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IContactAutoSyncAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IContactAutoSyncAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IContactAutoSyncAPI-autoSyncContactWithABUIDRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addressBookUID" type="soapenc:string">
      <wsdl:documentation>- Address book uid for the contacts need to re-sync</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IContactAutoSyncAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IContactAutoSyncAPI-autoSyncContactWithABUIDResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IDataExtractionAPI-findCreatedExposuresAndRenderWithTemplateByNameResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findCreatedExposuresAndRenderWithTemplateByNameReturn" type="soapenc:string">
      <wsdl:documentation>Info for each exposure created in the given time period.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-viewClaimAndRenderWithTemplateByNameRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumber" type="soapenc:string">
      <wsdl:documentation>the number of the claim. Either this or claimId should be non null.
If both claimId and claimNumber are specified, claimNumber is ignored</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="claimId" type="soapenc:string">
      <wsdl:documentation>the public id of the claim. Either this or claimNumber should be non null</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="params" type="tns1:ArrayOfNVParam">
      <wsdl:documentation>parameters (name value pairs) to be inserted into the template</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="templateFileName" type="soapenc:string">
      <wsdl:documentation>The name of the template file, which must be in config/templates/dataextraction</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:PermissionException">
      <wsdl:documentation>If the user does not have SOAP Admin permissions.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-findClaimAndRenderWithTemplateByNameRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyNumber" type="soapenc:string">
      <wsdl:documentation>the number of the policy. Either this or policyId should be non null</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="policyId" type="soapenc:string">
      <wsdl:documentation>the public id of the policy. Either this or policyNumber should be non null.
If both policyId and policyNumber are specified, policyNumber is ignored</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="params" type="tns1:ArrayOfNVParam">
      <wsdl:documentation>parameters (name value pairs) to be inserted into the template</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="templateFileName" type="soapenc:string">
      <wsdl:documentation>The name of the template file, which must be in config/templates/dataextraction</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-viewClaimAndRenderWithTemplateByNameResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="viewClaimAndRenderWithTemplateByNameReturn" type="soapenc:string">
      <wsdl:documentation>the result of executing the template with the given claim and parameters</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-findEntityAndRenderWithTemplateByNameResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findEntityAndRenderWithTemplateByNameReturn" type="soapenc:string">
      <wsdl:documentation>the result of executing the template with the given entity and parameters</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-findCreatedExposuresAndRenderWithTemplateByNameRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="startDate" type="xsd:dateTime">
      <wsdl:documentation>The start of the desired time period. Can be null</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="endDate" type="xsd:dateTime">
      <wsdl:documentation>The end of the desired time period. Can be null</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="templateFileName" type="soapenc:string">
      <wsdl:documentation>The name of the template file, which must be in config/templates/dataextraction</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-viewUserAndRenderWithTemplateByNameResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="viewUserAndRenderWithTemplateByNameReturn" type="soapenc:string">
      <wsdl:documentation>the result of executing the template with the user, activities, claims and parameters</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-findClaimAndRenderWithTemplateByNameResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findClaimAndRenderWithTemplateByNameReturn" type="soapenc:string">
      <wsdl:documentation>the result of executing the template with the found claims and parameters</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-viewUserAndRenderWithTemplateByNameRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userName" type="soapenc:string">
      <wsdl:documentation>the user name of the user to be viewed</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="getActivities" type="xsd:boolean">
      <wsdl:documentation>if true, the users activities will be available to the template as "activities".
if false, "activities" will be null</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="getClaims" type="xsd:boolean">
      <wsdl:documentation>if true, the users claims will be available to the template as "claims".
if false, "claims" will be null</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="params" type="tns1:ArrayOfNVParam">
      <wsdl:documentation>parameters (name value pairs) to be inserted into the template</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="templateFileName" type="soapenc:string">
      <wsdl:documentation>The name of the template file, which must be in config/templates/dataextraction</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataExtractionAPI-findEntityAndRenderWithTemplateByNameRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>the name of the entity type, for example User or Activity</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="entityPublicId" type="soapenc:string">
      <wsdl:documentation>the public id of the entity to find</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="params" type="tns1:ArrayOfNVParam">
      <wsdl:documentation>parameters (name value pairs) to be inserted into the template</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="templateName" type="soapenc:string">
      <wsdl:documentation>The name of the template file, which must be in config/templates/dataextraction</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-setPathValuesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="setPathValuesReturn" type="tns1:SetPathValuesResult">
      <wsdl:documentation>&lt;code&gt;SetPathValuesResult&lt;/code&gt; with the public Ids of any newly inserted entities.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getPathValuesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getPathValuesReturn" type="impl:ArrayOfArrayOf_soapenc_string">
      <wsdl:documentation>A two-dimensional array of string values. Each path specified
has a corresponding string array in the results. The results return
in the same order as the paths were specified. If a path returns no values,
then its array is empty.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-findRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of entity to find.  Type is case-insensitive,
e.g. "Claim" and "claim" are both valid entity types.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="alias" type="soapenc:string">
      <wsdl:documentation>Used in the the where clause to refer to the root type
being returned, for example, &lt;code&gt;"c"&lt;/code&gt;.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="whereClause" type="soapenc:string">
      <wsdl:documentation>Criteria to apply when finding objects. See the &lt;i&gt;Gosu
Reference Guide&lt;/i&gt; for details on how to build a where
clause.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="filter" type="tns1:ObjectFilter">
      <wsdl:documentation>Object filter to apply to the root object. See &lt;code&gt;
ObjectFilter&lt;/code&gt; for details on how the filter is applied
to an object graph. A &lt;code&gt;null&lt;/code&gt; filter will return the entire
object graph, for example, &lt;code&gt;Claim&lt;/code&gt; and its related objects such as
&lt;code&gt;Policy&lt;/code&gt; and &lt;code&gt;Contacts&lt;/code&gt;. This can have negative performance
implications and even cause &lt;code&gt;OutOfMemoryError&lt;/code&gt;s if
the object graph returned is too large.  To avoid these
types of problems, a filter that limits the returned data
to just the desired fields should be used if possible.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getNextSequenceNumberRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="sequenceKey" type="soapenc:string">
      <wsdl:documentation>The sequenceKey on which a sequence number will be
generated for.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="minValue" type="xsd:long">
      <wsdl:documentation>if the sequenceKey is new, it will be created and
initialized with &lt;i&gt;minValue&lt;/i&gt;.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:BadIdentifierException">
      <wsdl:documentation>If the entity type is invalid</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-findIdsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of entity to find.  Type is case-insensitive,
as a result &lt;code&gt;"Claim"&lt;/code&gt; and &lt;code&gt;"claim"&lt;/code&gt; are both valid entity types.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="alias" type="soapenc:string">
      <wsdl:documentation>Used in the where clause to refer to the root type
being returned, for example &lt;code&gt;"c"&lt;/code&gt;.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="whereClause" type="soapenc:string">
      <wsdl:documentation>Criteria to apply when finding objects. See the &lt;i&gt;Gosu
Reference Guide&lt;/i&gt; for details on how to build a where
clause.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getObjectByIdRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of root entity.  Type is case-insensitive, e.g.
"Claim" and "claim" are both valid entity types.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>The publicId of the root object to return.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="filter" type="tns1:ObjectFilter">
      <wsdl:documentation>Object filter to apply to the root object. See {@link
ObjectFilter} for details on how the filter is applied to
an object graph. A NULL filter will return the entire
object graph, e.g. Claim and its related objects such as
Policy and Contacts. This can have negative performance
implications and even cause {@link OutOfMemoryError}s if
the object graph returned is too large.  To avoid these
types of problems, a filter that limits the returned data
to just the desired fields should be used if possible.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getPathValuesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of root entity. The type is case-insensitive,
e.g. &lt;code&gt;"Claim"&lt;/code&gt; and &lt;code&gt;"claim"&lt;/code&gt;, are both valid types.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>The ID of the root object from which all paths
originate.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="paths" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>Paths of the properties to return.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getNextSequenceNumberResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getNextSequenceNumberReturn" type="xsd:long">
      <wsdl:documentation>A unique sequence number for this sequence key.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-findIdsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findIdsReturn" type="tns1:FindIdsResult">
      <wsdl:documentation>A set of public Ids</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-getObjectByIdResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getObjectByIdReturn" type="tns1:GWObject">
      <wsdl:documentation>Root object of the object graph, NULL if an entity with that
publicId does not exist.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-findResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findReturn" type="tns1:ArrayOfGWObject">
      <wsdl:documentation>Array of objects that match the where clause criteria</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-setPathValuesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of root entity. The type is case-insensitive,
for example, &lt;code&gt;Claim&lt;/code&gt; and &lt;code&gt;claim&lt;/code&gt; are both valid types. If only
"rootless" entities are being added then &lt;i&gt;entityType&lt;i&gt; can
be &lt;code&gt;null&lt;/code&gt;.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>The ID of the root object from which all the paths start.
If only "rootless" entities are being added
then &lt;i&gt;entityType&lt;/i&gt; can be &lt;code&gt;null&lt;/code&gt;.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="add" type="tns1:ArrayOfInsertPathValue">
      <wsdl:documentation>Path values of entities to add. The path leaf can
be &lt;code&gt;null&lt;/code&gt; or refer to an array or a foreign key link. If
the path is &lt;code&gt;null&lt;/code&gt; then a new "rootless" entity is
inserted. The refId is used to reference the new entity
when setting properties using update paths.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="update" type="tns1:ArrayOfPathValue">
      <wsdl:documentation>Path values of properties to set. If setting properties
on a newly inserted entity then start the path with the
refId of the new entity.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="remove" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>Paths that point to entities to remove. The leaf of the
path must refer to a specific array element or a foreign
key link. An empty path ("") will remove the root entity.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IDataObjectAPI-setPathValuesResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IDataObjectAPI-setPathValuesRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="entityType" type="soapenc:string">
      <wsdl:documentation>The type of root entity. The type is case-insensitive,
e.g. &lt;code&gt;"Claim"&lt;/code&gt; and &lt;code&gt;"claim"&lt;/code&gt;, are both valid types.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>The ID of the root object from which all paths will
start</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="pathValues" type="tns1:ArrayOfPathValue">
      <wsdl:documentation>Array of path values to set.  Each path value has a path,
starting from the root, and a value, which is the new
value to set on the field which is at the "leaf" of the
path.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-addActivityFromPatternResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addActivityFromPatternReturn" type="soapenc:string">
      <wsdl:documentation>The String of the newly created activity.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-addDocumentResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addDocumentReturn" type="soapenc:string">
      <wsdl:documentation>An EntityIdentifer containing the identifier of the newly created document.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-reopenExposureRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="exposureID" type="soapenc:string">
      <wsdl:documentation>The String that specifies the exposure to close</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="soapenc:string">
      <wsdl:documentation>Optional string giving the reason for closing the exposure</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-addNoteResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addNoteReturn" type="soapenc:string">
      <wsdl:documentation>An EntityIdentifer containing the identifier of the newly created note.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-reopenExposureResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IExposureAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>If the caller does not have all of the following permissions: VIEW_CLAIM, CREATE_ACTIVITY.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-addDocumentRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="exposureID" type="soapenc:string">
      <wsdl:documentation>The String that specifies the exposure with which to associate the document.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="doc" type="tns2:Document">
      <wsdl:documentation>The document to associate with the specified exposure.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-closeExposureResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IExposureAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-reopenExposureRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="exposureID" type="soapenc:string">
      <wsdl:documentation>The String that specifies the exposure to close</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reasonType" type="tns3:ExposureReopenedReason">
      <wsdl:documentation>ExposureReopenedReason typekey, or null</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="soapenc:string">
      <wsdl:documentation>Optional string giving the reason for closing the exposure</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-addActivityFromPatternRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="exposureID" type="soapenc:string">
      <wsdl:documentation>The ID of the exposure to which the activity should be added.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="activityPatternId" type="soapenc:string">
      <wsdl:documentation>The ID of the activity pattern that is to be used for the activity.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-EntityStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:EntityStateException">
      <wsdl:documentation>If there is an attempt to add an activity using an activity pattern that isn't available to the particular type of the given exposure, or that isn't available to a closed exposure (if the given exposure is closed).</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-SOAPServerException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPServerException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-reopenExposureResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IExposureAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:DataConversionException">
      <wsdl:documentation>If either the exposureID or activityPatternID does not exist.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-getExposureStateResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getExposureStateReturn" type="tns3:ExposureState">
      <wsdl:documentation>String representing the given exposure's state</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-addNoteRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="exposureID" type="soapenc:string">
      <wsdl:documentation>The String that specifies the exposure with which to associate the NoteData</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="note" type="tns2:Note">
      <wsdl:documentation>The note to associate with the specified exposure.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-getExposureStateRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="exposureID" type="soapenc:string">
      <wsdl:documentation>The String that specifies the exposure to get the state from</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IExposureAPI-closeExposureRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="exposureID" type="soapenc:string">
      <wsdl:documentation>The String that specifies the exposure to close</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="outcome" type="tns3:ExposureClosedOutcomeType">
      <wsdl:documentation>the outcome type key</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="reason" type="soapenc:string">
      <wsdl:documentation>Optional string giving the reason for closing the claim</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:RequiredFieldException">
      <wsdl:documentation>If any of the required fields are missing.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-addGroupResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addGroupReturn" type="soapenc:string">
      <wsdl:documentation>The public identifier of the group data object.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-getGroupResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getGroupReturn" type="tns1:Group">
      <wsdl:documentation>The GroupData representing the group</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-findPublicIdByNameResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findPublicIdByNameReturn" type="soapenc:string">
      <wsdl:documentation>the matching group's publicId, or &lt;code&gt;null&lt;/code&gt; if no Group exists with the given name.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:DataConversionException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-DuplicateKeyException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns3:DuplicateKeyException">
      <wsdl:documentation>If the group has a public id that exists already.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-findPublicIdByNameRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupName" type="soapenc:string">
      <wsdl:documentation>the name of the group to match</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-getGroupRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IGroupAPI-addGroupRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupData" type="tns1:Group">
      <wsdl:documentation>The &lt;code&gt;GroupData&lt;/code&gt; object</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-rebuildRolePrivilegesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IImportToolsAPI-csvToXmlRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="csvData" type="soapenc:string">
      <wsdl:documentation>A String containing CSV data</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dataSet" type="xsd:int">
      <wsdl:documentation>An int defining the number of the dataset to be imported.  Datasets are ordered by inclusion, and
the smallest dataset is always numbered 0.  Thus Dataset 0 is a subset of dataset 1, and datatset 1
is a subset of dataset 2, etc.  If this param is set to -1, all data will be imported.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="ignoreNullConstraintViolations" type="xsd:boolean">
      <wsdl:documentation>Whether to continue after detecting an empty field in the CSV that
corresponds to a property that is not nullable.  If false, throws an exception in this situation.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="ignoreAllErrors" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-xmlToCsvRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="xmlData" type="soapenc:string">
      <wsdl:documentation>String containing CSV data</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-importCsvDataRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="csvData" type="soapenc:string">
      <wsdl:documentation>The data to import, passed as a String.  This may not be null.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dataSet" type="xsd:int">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="ignoreNullConstraintViolations" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="ignoreAllErrors" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-rebuildRolePrivilegesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IImportToolsAPI-importXmlDataRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="xmlData" type="soapenc:string">
      <wsdl:documentation>The data to import, passed as a String.    This may not be null or empty.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-xmlToCsvResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="xmlToCsvReturn" type="soapenc:string">
      <wsdl:documentation>a String containing equivalent import data in CSV format.  The result of calling csvToXml on the result
should be an equivalent XML document to #xmlData.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-importXmlDataResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importXmlDataReturn" type="tns2:ImportResults">
      <wsdl:documentation>Set of results of the import (number of entities imported by type, and so on).  If the import failed,
ImportResults will have the ok flag set to &lt;code&gt;false&lt;/code&gt;, and the errorLog element will
contain descriptions of the errors that were encountered.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:RequiredFieldException">
      <wsdl:documentation>If csvData is null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-SOAPServerException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPServerException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-importCsvDataResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importCsvDataReturn" type="tns2:ImportResults">
      <wsdl:documentation>Set of results of the import (number of entities imported by type, and so on).  If the import failed,
ImportResults will have the ok flag set to &lt;code&gt;false&lt;/code&gt;, and the errorLog element will
contain descriptions of the errors that were encountered.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-importXmlDataAsByteArrayResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importXmlDataAsByteArrayReturn" type="tns2:ImportResults">
      <wsdl:documentation>Set of results of the import (number of entities imported by type, and so on).  If the import failed,
ImportResults will have the ok flag set to &lt;code&gt;false&lt;/code&gt;, and the errorLog element will
contain descriptions of the errors that were encountered.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-csvToXmlResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="csvToXmlReturn" type="soapenc:string">
      <wsdl:documentation>a String containing equivalent import data in XML format, suitable for import by #importXmlData(String)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:DataConversionException">
      <wsdl:documentation>If the data can't be imported because it violates duplicate key constraints, contains nulls in non-nullable fields, or otherwise can't be safely inserted into the database.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-importXmlDataAsByteArrayRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="xmlData" type="soapenc:base64Binary">
      <wsdl:documentation>The data to import, passed as a byte[] for the UTF-8 bytes representing the XML string.    This may not be null or empty.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-csvToXmlRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="csvData" type="soapenc:string">
      <wsdl:documentation>A String containing CSV data</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="ignoreNullConstraintViolations" type="xsd:boolean">
      <wsdl:documentation>Whether to continue after detecting an empty field in the CSV that
corresponds to a property that is not nullable.  If false, throws an exception in this situation.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="ignoreAllErrors" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IImportToolsAPI-csvToXmlResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="csvToXmlReturn" type="soapenc:string">
      <wsdl:documentation>a String containing equivalent import data in XML format, suitable for import by #importXmlData(String)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-WSSLogoutResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ILoginAPI-loginResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="loginReturn" type="soapenc:string">
      <wsdl:documentation>A valid session ID.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-WSSLoginResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="WSSLoginReturn" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-logoutRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="sessionID" type="soapenc:string">
      <wsdl:documentation>the session ID of the server session.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-WSSLoginRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="password" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-WSSLogoutRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-loginRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userName" type="soapenc:string">
      <wsdl:documentation>The user name to authenticate.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="password" type="soapenc:string">
      <wsdl:documentation>The password to authenticate with.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ILoginAPI-logoutResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ILoginAPI-LoginException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:LoginException">
      <wsdl:documentation>if the user cannot be authenticated or was denied access for some reason.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getValidBatchProcessNamesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:PermissionException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-notifyQueueWorkersResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-stopPluginResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-stopWorkQueueWorkersResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-batchProcessStatusByIDResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="batchProcessStatusByIDReturn" type="tns1:ProcessStatus">
      <wsdl:documentation>the status of that particular process invocation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-startBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="processName" type="soapenc:string">
      <wsdl:documentation>The name of the process to start</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueStatusResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getWorkQueueStatusReturn" type="tns1:WorkQueueStatus">
      <wsdl:documentation>The status of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-startWorkQueueWorkersResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-scheduleAggLimitRebuildOfClaimsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumbers" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>Claim numbers of the claims for which the aggregate limits need to be rebuilt</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-isBatchProcessNameValidResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="isBatchProcessNameValidReturn" type="xsd:boolean">
      <wsdl:documentation>boolean</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-stopWorkQueueWorkersRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>Name of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-isPluginStartedResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="isPluginStartedReturn" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-waitOnActiveWorkItemsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="waitOnActiveWorkItemsReturn" type="xsd:boolean">
      <wsdl:documentation>true if the queue is now empty</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-batchProcessStatusByIDRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pid" type="tns1:ProcessID">
      <wsdl:documentation>the process ID to retrieve the status of</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-whenStatsCalculatedResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="whenStatsCalculatedReturn" type="xsd:dateTime">
      <wsdl:documentation>date of the when the current statistics were calculated</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-stopPluginRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pluginName" type="soapenc:string">
      <wsdl:documentation>the name of the plugin</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-markPurgeReadyResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="markPurgeReadyReturn" type="soapenc:string">
      <wsdl:documentation>The results indicates if the claims were successuflly marked</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-markArchiveReadyResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="markArchiveReadyReturn" type="soapenc:string">
      <wsdl:documentation>A string containing the numbers of the claims that were scheduled for archive</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-requestTerminationOfBatchProcessByIDResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="requestTerminationOfBatchProcessByIDReturn" type="xsd:boolean">
      <wsdl:documentation>true if the request was successful, false if the process could not be terminated</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-scheduleAggLimitRebuildOfPoliciesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="policyNumbers" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>of the policies for which the aggregate limits need to be rebuilt</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-markArchiveReadyRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumbers" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>Claim numbers of the claims to schedule for archive</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-scheduleAggLimitRebuildOfPoliciesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="scheduleAggLimitRebuildOfPoliciesReturn" type="soapenc:string">
      <wsdl:documentation>An error or success String</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-setWorkQueueConfigRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>Name of the queue to modify</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="config" type="tns1:WorkQueueConfig">
      <wsdl:documentation>The configuration to establish.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueConfigRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>Name of the queue to query</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-notifyQueueWorkersRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>Name of the queue to notify workers</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-scheduleAggLimitRebuildAllLimitsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueConfigResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getWorkQueueConfigReturn" type="tns1:WorkQueueConfig">
      <wsdl:documentation>A WorkQueueConfig instance containing the current settings</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWQueueStatusResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getWQueueStatusReturn" type="tns1:WQueueStatus">
      <wsdl:documentation>The status of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-isBatchProcessNameValidRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="processName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-whenStatsCalculatedRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-scheduleAggLimitRebuildInvalidLimitsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="scheduleAggLimitRebuildInvalidLimitsReturn" type="soapenc:string">
      <wsdl:documentation>An error or success String</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-batchProcessStatusByNameResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="batchProcessStatusByNameReturn" type="tns1:ProcessStatus">
      <wsdl:documentation>the status of that particular process</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getValidBatchProcessNamesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getValidBatchProcessNamesReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>String[]</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueNamesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-scheduleAggLimitRebuildAllLimitsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="scheduleAggLimitRebuildAllLimitsReturn" type="soapenc:string">
      <wsdl:documentation>An error or success String</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-scheduleAggLimitRebuildOfClaimsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="scheduleAggLimitRebuildOfClaimsReturn" type="soapenc:string">
      <wsdl:documentation>An error or success String</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-terminateBatchProcessByIDRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pid" type="tns1:ProcessID">
      <wsdl:documentation>the process ID of the process for which to request termination</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-startPluginResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-getNumActiveWorkItemsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>name of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-isPluginStartedRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pluginName" type="soapenc:string">
      <wsdl:documentation>the name of the plugin to start</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-SOAPServerException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:SOAPServerException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-terminateBatchProcessByNameResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="terminateBatchProcessByNameReturn" type="xsd:boolean">
      <wsdl:documentation>true if the request was successful, false if the process could not be terminated</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-markPurgeReadyRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumbers" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The array of the claim numbers to be marked</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="purgeFromAggregateLimit" type="xsd:boolean">
      <wsdl:documentation>if true then purge each claim even if it is part of an aggregate limit.
If false, claims in an aggregate limit will not be purged and an error message will be returned</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-startPluginRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pluginName" type="soapenc:string">
      <wsdl:documentation>the name of the plugin to start</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-startWorkQueueWorkersRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>Name of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-terminateBatchProcessByIDResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="terminateBatchProcessByIDReturn" type="xsd:boolean">
      <wsdl:documentation>true if the request was successful, false if the process could not be terminated</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-markForPurgeRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumbers" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The list of claim numbers corresponding to the claims
to be marked for purge.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-restoreRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumbers" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="comment" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-SOAPSenderException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:SOAPSenderException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-batchProcessStatusByNameRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="processName" type="soapenc:string">
      <wsdl:documentation>the name of the process to retrieve the status of</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getNumActiveWorkItemsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getNumActiveWorkItemsReturn" type="xsd:int">
      <wsdl:documentation>The status of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-markForPurgeResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="markForPurgeReturn" type="soapenc:string">
      <wsdl:documentation>the results indicates if the claims were successfully marked for purged or not.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-waitOnActiveWorkItemsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>name of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-requestTerminationOfBatchProcessByIDRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="pid" type="tns1:ProcessID">
      <wsdl:documentation>the process ID of the process for which to request termination</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-terminateBatchProcessByNameRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="processName" type="soapenc:string">
      <wsdl:documentation>the name of the batch process for which to request termination</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueNamesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getWorkQueueNamesReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-getWorkQueueStatusRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>name of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-scheduleForArchiveRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumbers" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>Claim numbers of the claims to schedule for archive</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-scheduleForArchiveResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="scheduleForArchiveReturn" type="soapenc:string">
      <wsdl:documentation>A string containing the numbers of the claims that were scheduled for archive</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-restoreResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="restoreReturn" type="soapenc:string">
      <wsdl:documentation>The result indicates the claims processed and skipped</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-scheduleAggLimitRebuildInvalidLimitsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-requestTerminationOfBatchProcessByNameResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="requestTerminationOfBatchProcessByNameReturn" type="xsd:boolean">
      <wsdl:documentation>true if the request was successful, false if the process could not be terminated</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-requestTerminationOfBatchProcessByNameRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="processName" type="soapenc:string">
      <wsdl:documentation>the name of the batch process for which to request termination</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:SOAPException">
      <wsdl:documentation>if there is an exception thrown during the processing</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-setWorkQueueConfigResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMaintenanceToolsAPI-getWQueueStatusRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="queueName" type="soapenc:string">
      <wsdl:documentation>name of the queue</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMaintenanceToolsAPI-startBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="startBatchProcessReturn" type="tns1:ProcessID">
      <wsdl:documentation>The process ID that the caller can use to query for status</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resumeDestinationResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMessagingToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-acknowledgeMessageRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="ack" type="tns1:Acknowledgement">
      <wsdl:documentation>The acknowledgement to report</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resumeDestinationRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination id of the destination to resume</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-skipMessageResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="skipMessageReturn" type="xsd:boolean">
      <wsdl:documentation>Returns whether the message was successfully skipped.
If the message with this messageId does not exist, this returns false.
If the message is not in an active state(active states are:
pending send, inflight, error, retryable error and pending retry),
this returns false.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-ackMessageResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="ackMessageReturn" type="xsd:boolean">
      <wsdl:documentation>true if the message was found and acked, false otherwise.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getTotalStatisticsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination to get the message statistics.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesForCategoryResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="retryRetryableErrorMessagesForCategoryReturn" type="xsd:boolean">
      <wsdl:documentation>Returns true if all messages were successfully retried; false if any errors occurred.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-ackMessageRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="ack" type="tns1:Acknowledgement">
      <wsdl:documentation>The acknowledgement to report</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination that should be retried.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="retryLimit" type="xsd:int">
      <wsdl:documentation>Retry only messages with retryCount &lt; retryLimit; if retryLimit
is 0, retry all messages.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getMessageStatisticsForSafeOrderedObjectRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination to get the message statistics.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="safeOrderedObjectId" type="soapenc:string">
      <wsdl:documentation>The public id of the safe ordered object of interest</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:DataConversionException">
      <wsdl:documentation>If claim cannot be found.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesForCategoryRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination that should be retried.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="category" type="tns3:ErrorCategory">
      <wsdl:documentation>The error category of the messages that should be retried.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getMessageIdResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getMessageIdReturn" type="xsd:long">
      <wsdl:documentation>message id, or -1 if message is not found</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getTotalStatisticsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getTotalStatisticsReturn" type="tns1:MessageStatisticsData">
      <wsdl:documentation>the message statistics for the specified destination</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination that should be retried.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-resyncClaimRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination against which the claim should be resynced.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="claimID" type="soapenc:string">
      <wsdl:documentation>The identifier of the claim that should be resynced.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="retryRetryableErrorMessagesReturn" type="xsd:boolean">
      <wsdl:documentation>Returns true if all messages were successfully retried; false if any errors occurred.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getMessageIdRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="senderRefID" type="soapenc:string">
      <wsdl:documentation>The sender ref id for the message we want to get</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="destinationID" type="xsd:int">
      <wsdl:documentation>The destination id for the message we want to get. -1 would match all destination ids.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryRetryableErrorMessagesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="retryRetryableErrorMessagesReturn" type="xsd:boolean">
      <wsdl:documentation>Returns true if all messages were successfully retried; false if any errors occurred.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-retryMessageRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="messageID" type="xsd:long">
      <wsdl:documentation>The message to retry.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-acknowledgeMessageResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="acknowledgeMessageReturn" type="tns1:MessageOptionalFields">
      <wsdl:documentation>optional message fields that can be set</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-suspendDestinationRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="destID" type="xsd:int">
      <wsdl:documentation>The destination id of the destination to suspend</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-purgeCompletedMessagesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="cutoff" type="xsd:dateTime">
      <wsdl:documentation>Remove messages with send time less than this date.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-purgeCompletedMessagesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMessagingToolsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:SOAPException">
      <wsdl:documentation>If the ack could not be committed to the database</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-suspendDestinationResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMessagingToolsAPI-resyncClaimResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IMessagingToolsAPI-retryMessageResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="retryMessageReturn" type="xsd:boolean">
      <wsdl:documentation>Returns whether or not the message was successfully retried.
If the message with this messageID does not exist, this returns false.
If the message is not a retryable error message or an inflight message, this returns false.
Returning true does not necessarily mean that the retry was successful; it just means that the message was retried.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-getMessageStatisticsForSafeOrderedObjectResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getMessageStatisticsForSafeOrderedObjectReturn" type="tns1:MessageStatisticsData">
      <wsdl:documentation>the message statistics for the specified destination and safe order object</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IMessagingToolsAPI-skipMessageRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="messageID" type="xsd:long">
      <wsdl:documentation>The message to skip.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForWorkQueueResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForSubsequentWebSessionsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="type" type="tns1:BatchProcessType">
      <wsdl:documentation>batch process type</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForWorkQueueRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="type" type="tns1:BatchProcessType">
      <wsdl:documentation>batch process type</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForStartablePluginResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForBatchProcessAndWorkQueueResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForWebServiceResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForMessageDestinationResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IProfilerAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForMessageDestinationRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="destinationID" type="xsd:int">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForStartablePluginRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="pluginName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForSubsequentWebSessionsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="name" type="soapenc:string">
      <wsdl:documentation>name for the profiler session. optional; use null for the default name.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForWebServiceRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="serviceName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="operationName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IProfilerAPI-setEnableProfilerForBatchProcessAndWorkQueueRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="enable" type="xsd:boolean">
      <wsdl:documentation>whether to enable or disable</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="type" type="tns1:BatchProcessType">
      <wsdl:documentation>batch process type</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="hiResTime" type="xsd:boolean">
      <wsdl:documentation>whether to use hi-resolution clock for timing (Windows only)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableStackTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow stack tracing (expensive) or not. This is ignored if enable is false</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableQueryOptimizerTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow query optimizer tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="enableExtendedQueryTracing" type="xsd:boolean">
      <wsdl:documentation>whether to allow extended query tracing (expensive) or not. This is ignored if enable is false.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="dbmsCounterThresholdMs" type="xsd:int">
      <wsdl:documentation>The threshold for how long a database operation can take before generating a report using dbms
counters for the interval (start of profiling session, end of profiling session). Use 0 to disable.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="diffDbmsCounters" type="xsd:boolean">
      <wsdl:documentation>Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getActiveSessionDataResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getActiveSessionDataReturn" type="tns2:ArrayOfSessionData">
      <wsdl:documentation>all server session information.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-cancelUpdateStatsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getRecentAWRSnapshotInfoResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getRecentAWRSnapshotInfoReturn" type="tns2:ArrayOfDatabaseSnapshotInfo">
      <wsdl:documentation>String[]                    Requested AWR snapshot information</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-reloadLoggingConfigResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getDBCCStateRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getRecentAWRSnapshotInfoRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="numSnapshots" type="xsd:int">
      <wsdl:documentation>Number of snapshots to retrieve.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-verifyDatabaseSchemaResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="verifyDatabaseSchemaReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>String[] Any differences between the data model and the physical database.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getUpdateStatsStateResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getUpdateStatsStateReturn" type="tns3:WorkItemSetState">
      <wsdl:documentation>the state of the update stats process</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-updateLoggingLevelRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="logger" type="soapenc:string">
      <wsdl:documentation>The name of the logger to be updated - this should be a qualified class or package</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="level" type="soapenc:string">
      <wsdl:documentation>One of 5 possible logging levels: INFO, DEBUG, WARN, ERROR, TRACE</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-recalculateFileChecksumsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="recalculateFileChecksumsReturn" type="xsd:boolean">
      <wsdl:documentation>&lt;code&gt;true&lt;/code&gt; if checksums were recalcuted and &lt;code&gt;false&lt;/code&gt; if clustering or configuration verification were disabled.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-reportDatabaseCatalogStatisticsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="reportDatabaseCatalogStatisticsReturn" type="soapenc:base64Binary">
      <wsdl:documentation>a zip file of an HTML report to view the database catalog statistics.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitDmvReportBatchJobWithParamsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="submitDmvReportBatchJobWithParamsReturn" type="tns2:ProcessID">
      <wsdl:documentation>ProcessID  pid of batch job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getHighestRunlevelRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-submitDmvReportBatchJobResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="submitDmvReportBatchJobReturn" type="tns2:ProcessID">
      <wsdl:documentation>ProcessID  pid of batch job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getHighestRunlevelResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getHighestRunlevelReturn" type="tns3:SystemRunlevel">
      <wsdl:documentation>An int containing the highest runlevel of the cluster.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-checkPartialDatabaseConsistencyRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="returnAllResults" type="xsd:boolean">
      <wsdl:documentation>true - DBConsistencyCheckResult is returned for every check
false - DBConsistencyCheckResults returned only for failures.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="tablesToCheck" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - check all tables, else array of tables names to check</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="consistencyCheckTypesToCheck" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - check all types, else array of types to check
Must be valid &lt;code&gt;ConsistencyCheckType&lt;/code&gt;s.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getRunlevelResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getRunlevelReturn" type="tns3:SystemRunlevel">
      <wsdl:documentation>An int containing the runlevel</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitUpdateStatsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="description" type="soapenc:string">
      <wsdl:documentation>null - Description of the job</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="incremental" type="xsd:boolean">
      <wsdl:documentation>true: the process should perform an incremental update; false: the process should perform a full upgrade</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-checkPartialDatabaseConsistencyResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkPartialDatabaseConsistencyReturn" type="tns2:ArrayOfDBConsistencyCheckResult">
      <wsdl:documentation>DBConsistencyCheckResult[]  Describes results of consistency checks</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitAwrReportBatchJobRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="awrReportUserSettings" type="tns2:AWRReportUserSettings">
      <wsdl:documentation>All the settings to run the AWR report</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-recalculateFileChecksumsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-reportPartialDatabaseCatalogStatisticsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="tables" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - report on all tables, else array of tables names to on which to report</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="stagingTables" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - report on all staging tables, else array of staging tables names to on which to report</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="typelistTables" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - report on all typelist tables, else array of typelist tables names to on which to report</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getRunlevelRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getDBCCStateResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getDBCCStateReturn" type="tns3:WorkItemSetState">
      <wsdl:documentation>the state of the consistency checks process</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-reportPartialDatabaseCatalogStatisticsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="reportPartialDatabaseCatalogStatisticsReturn" type="soapenc:base64Binary">
      <wsdl:documentation>a zip file of an HTML report to view the database catalog statistics on the selected tables.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-verifyDatabaseSchemaRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-updateLoggingLevelResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-cancelUpdateStatsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-submitDmvReportBatchJobWithParamsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="includeDatabaseStatistics" type="xsd:boolean">
      <wsdl:documentation>The default is true.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getLoggingCategoriesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getLoggingCategoriesReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>An array of Strings containing all logger categories in the system</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-setRunlevelRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="runLevel" type="tns3:SystemRunlevel">
      <wsdl:documentation>The level at which the server should run.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitDBCCBatchJobResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="submitDBCCBatchJobReturn" type="tns2:ProcessID">
      <wsdl:documentation>ProcessID  Describes results of consistency checks</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-getUpdateStatsStateRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-SOAPServerException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPServerException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-setRunlevelResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-submitDmvReportBatchJobRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getActiveSessionDataRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-checkDatabaseConsistencyRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="returnAllResults" type="xsd:boolean">
      <wsdl:documentation>true - DBConsistencyCheckResult is returned for every check
false - DBConsistencyCheckResults returned only for failures.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitAwrReportBatchJobResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="submitAwrReportBatchJobReturn" type="tns2:ProcessID">
      <wsdl:documentation>ProcessID  pid of batch job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-reloadLoggingConfigRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-reportDatabaseCatalogStatisticsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getVersionRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getLoggingCategoriesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ISystemToolsAPI-getVersionResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getVersionReturn" type="tns2:ServerVersion">
      <wsdl:documentation>Version of the server, including application version and schema version.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:RequiredFieldException">
      <wsdl:documentation>If the logger field is null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitDBCCBatchJobRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="tablesToCheck" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - check all tables, else array of tables names to check</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="consistencyCheckTypesToCheck" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>null - check all types, else array of types to check
Must be valid &lt;code&gt;ConsistencyCheckType&lt;/code&gt;s.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-checkDatabaseConsistencyResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="checkDatabaseConsistencyReturn" type="tns2:ArrayOfDBConsistencyCheckResult">
      <wsdl:documentation>DBConsistencyCheckResult[] Describes results of consistency checks
(All checks if returnAllResults=true, otherwise all failures.)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ISystemToolsAPI-submitUpdateStatsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="clearErrorTable" type="soapenc:boolean">
      <wsdl:documentation>If true, the load error tables will be cleared
before executing integrity checking (defaults to true if this parameter is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="populateExclusionTable" type="soapenc:boolean">
      <wsdl:documentation>If true, populate exclusion table with any newly
excluded rows before executing integrity checking (defaults to true if this parameter
is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="allowRefsToExistingNonAdminRows" type="soapenc:boolean">
      <wsdl:documentation>If true, rows in the staging tables are allowed to reference
existing rows in any table, regardless of whether or not the tables
are admin tables.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-clearExclusionTableResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-clearExclusionTableRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-deleteExcludedRowsFromStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-clearStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-deleteExcludedRowsFromStagingTablesAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation>a ProcessID that can be used to query the status of the running load</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-encryptDataOnStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-populateExclusionTableAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="integrityCheckStagingTableContentsAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation>a ProcessID that can be used to retrieve the status of the job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-populateExclusionTableRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-encryptDataOnStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="encryptDataOnStagingTablesReturn" type="xsd:int">
      <wsdl:documentation>The number of staging tables whose columns were encrypted</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="clearErrorTable" type="soapenc:boolean">
      <wsdl:documentation>If true, the load error tables will be cleared
before executing integrity checking (defaults to true if this parameter is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="populateExclusionTable" type="soapenc:boolean">
      <wsdl:documentation>If true, populate exclusion table with any newly
excluded rows before executing integrity checking (defaults to true if this parameter
is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="allowRefsToExistingNonAdminRows" type="soapenc:boolean">
      <wsdl:documentation>If true, rows in the staging tables are allowed to reference
existing rows in any table, regardless of whether or not the tables
are admin tables.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-populateExclusionTableResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-clearErrorTableRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-deleteExcludedRowsFromStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-deleteExcludedRowsFromStagingTablesAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="deleteExcludedRowsFromStagingTablesAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation>a ProcessID that can be used to retrieve the status of the job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-updateStatisticsOnStagingTablesAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-updateStatisticsOnStagingTablesAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="updateStatisticsOnStagingTablesAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation>a ProcessID that can be used to retrieve the status of the job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-clearErrorTableResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="clearErrorTable" type="soapenc:boolean">
      <wsdl:documentation>If true, the load error tables will be cleared
before executing integrity checking (defaults to true if this parameter is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="populateExclusionTable" type="soapenc:boolean">
      <wsdl:documentation>If true, populate exclusion table with any newly
excluded rows before executing integrity checking (defaults to true if this parameter
is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="updateDBStatisticsWithEstimates" type="soapenc:boolean">
      <wsdl:documentation>If true, then update the database statistics on any table that will be loaded with
estimated changes based on the contents of the associated staging table.  When
loading large amounts of data which will cause a source table to grow significantly, the optimizer could choose
a bad query plan based on the existing state of the database statistics unless the loader updates the database
statistics to reflect the expected size of the table after the load has completed.  This
parameter is only meaningful when running against Oracle.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="allowRefsToExistingNonAdminRows" type="soapenc:boolean">
      <wsdl:documentation>If true, rows in the staging tables are allowed to reference
existing rows in any table, regardless of whether or not the tables
are admin tables.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-updateStatisticsOnStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="clearErrorTable" type="soapenc:boolean">
      <wsdl:documentation>If true, the load error tables will be cleared
before executing integrity checking (defaults to true if this parameter is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="populateExclusionTable" type="soapenc:boolean">
      <wsdl:documentation>If true, populate exclusion table with any newly
excluded rows before executing integrity checking (defaults to true if this parameter
is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="updateDBStatisticsWithEstimates" type="soapenc:boolean">
      <wsdl:documentation>If true, then update the database statistics on any table that will be loaded with
estimated changes based on the contents of the associated staging table.  When
loading large amounts of data which will cause a source table to grow significantly, the optimizer could choose
a bad query plan based on the existing state of the database statistics unless the loader updates the database
statistics to reflect the expected size of the table after the load has completed.  This
parameter is only meaningful when running against Oracle.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesReturn" type="tns2:TableImportResult">
      <wsdl:documentation>a TableImportResult object containing load error information and
any raised exception.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="integrityCheckStagingTableContentsReturn" type="tns2:TableImportResult">
      <wsdl:documentation>a TableImportResult object containing load error information and
any raised exception.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-clearStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITableImportAPI-populateExclusionTableAsBatchProcessResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="populateExclusionTableAsBatchProcessReturn" type="tns2:ProcessID">
      <wsdl:documentation>a ProcessID that can be used to retrieve the status of the job</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="clearErrorTable" type="soapenc:boolean">
      <wsdl:documentation>If true, the load error tables will be cleared
before executing integrity checking (defaults to true if this parameter is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="populateExclusionTable" type="soapenc:boolean">
      <wsdl:documentation>If true, populate exclusion table with any newly
excluded rows before executing integrity checking (defaults to true if this parameter
is null).</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="updateDBStatisticsWithEstimates" type="soapenc:boolean">
      <wsdl:documentation>If true, then update the database statistics on any table that will be loaded with
estimated changes based on the contents of the associated staging table.  When
loading large amounts of data which will cause a source table to grow significantly, the optimizer could choose
a bad query plan based on the existing state of the database statistics unless the loader updates the database
statistics to reflect the expected size of the table after the load has completed.  This
parameter is only meaningful when running against Oracle.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="allowRefsToExistingNonAdminRows" type="soapenc:boolean">
      <wsdl:documentation>If true, rows in the staging tables are allowed to reference
existing rows in any table, regardless of whether or not the tables
are admin tables.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="integrityCheckStagingTableContentsAndLoadSourceTablesReturn" type="tns2:TableImportResult">
      <wsdl:documentation>a TableImportResult object containing load error information and
any raised exception.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITableImportAPI-updateStatisticsOnStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITemplateToolsAPI-listTemplatesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="listTemplatesReturn" type="soapenc:string">
      <wsdl:documentation>A human-readable string detailing the templates available to the server.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITemplateToolsAPI-validateAllTemplatesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="validateAllTemplatesReturn" type="soapenc:string">
      <wsdl:documentation>A human-readable string detailing the operations performed and any errors encountered.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITemplateToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITemplateToolsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITemplateToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITemplateToolsAPI-validateAllTemplatesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITemplateToolsAPI-listTemplatesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="ITemplateToolsAPI-importFormFieldsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="contextObjectFileContents" type="soapenc:string">
      <wsdl:documentation>The contents of a file containing the context objects to be imported, in CSV format</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="fieldGroupFileContents" type="soapenc:string">
      <wsdl:documentation>The contents of a file contianing the field groups to be imported, in CSV format</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="fieldFileContents" type="soapenc:string">
      <wsdl:documentation>The contents of a file containing the fields to be imported, in CSV format.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="descriptorFileContents" type="soapenc:string">
      <wsdl:documentation>The contents of the descriptor file.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITemplateToolsAPI-validateTemplateResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="validateTemplateReturn" type="soapenc:string">
      <wsdl:documentation>A human-readable string detailing the operations performed and any errors encountered.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITemplateToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITemplateToolsAPI-importFormFieldsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importFormFieldsReturn" type="tns1:TemplateImportResults">
      <wsdl:documentation>A results object with fields for the new contents of the descriptor file, and a human-readable string detailing
the operations performed and any errors encountered.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITemplateToolsAPI-validateTemplateRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="templateID" type="soapenc:string">
      <wsdl:documentation>- The ID of the template (e.g. ReservationRights.doc)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypelistValuesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="typelistName" type="soapenc:string">
      <wsdl:documentation>the case-insensitive name of the typelist to look up. for example: "accidenttype"</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypeKeysByAliasRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="typelist" type="soapenc:string">
      <wsdl:documentation>the name of the given typelist (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="namespace" type="soapenc:string">
      <wsdl:documentation>the given namespace (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="alias" type="soapenc:string">
      <wsdl:documentation>the given alias (case-insensitive)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getAliasByInternalCodeRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="typelist" type="soapenc:string">
      <wsdl:documentation>the name of the given typelist (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="namespace" type="soapenc:string">
      <wsdl:documentation>the given namespace (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="code" type="soapenc:string">
      <wsdl:documentation>the given typecode (case-insensitive)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypeKeyByAliasRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="typelist" type="soapenc:string">
      <wsdl:documentation>the name of the given typelist (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="namespace" type="soapenc:string">
      <wsdl:documentation>the given namespace (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="alias" type="soapenc:string">
      <wsdl:documentation>the given alias (case-insensitive)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypeKeyByAliasResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getTypeKeyByAliasReturn" type="tns2:TypeKeyData">
      <wsdl:documentation>TypeKeyData instance corresponding to a typecode; null if no match found</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getAliasByInternalCodeResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAliasByInternalCodeReturn" type="soapenc:string">
      <wsdl:documentation>string corresponding to a typecode; null if no match found</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation>if more than one result is found for the given namespace/typecode</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getAliasesByInternalCodeResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getAliasesByInternalCodeReturn" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>string array of aliases, or a zero-length, non-null string array if no aliases match</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypelistValuesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getTypelistValuesReturn" type="tns2:ArrayOfTypeKeyData">
      <wsdl:documentation>an array of codes of typekeys contained within the typelist</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getTypeKeysByAliasResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getTypeKeysByAliasReturn" type="tns2:ArrayOfTypeKeyData">
      <wsdl:documentation>array of TypeKeyData objects, or a zero-length, non-null string array if no typecodes match</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ITypelistToolsAPI-getAliasesByInternalCodeRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="typelist" type="soapenc:string">
      <wsdl:documentation>the name of the given typelist (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="namespace" type="soapenc:string">
      <wsdl:documentation>the given namespace (case-insensitive)</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="code" type="soapenc:string">
      <wsdl:documentation>the given typecode (case-insensitive)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserRequest1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="data" type="tns2:User">
      <wsdl:documentation>The &lt;code&gt;User&lt;/code&gt; object, which must have valid &lt;code&gt;UserContact&lt;/code&gt;
and &lt;code&gt;Credential&lt;/code&gt; objects set as the contact and credential field.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="rolePublicIds" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The roles to assign the user.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="credentialName" type="soapenc:string">
      <wsdl:documentation>Ignored</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-removeUserAsMemberOfGroupResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-getUserRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserResponse1" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addUserReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the new user</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-doesExistRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="publicId" type="soapenc:string">
      <wsdl:documentation>The public identifier of the user in question.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-removeUserAsMemberOfGroupRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupID" type="soapenc:string">
      <wsdl:documentation>The identifier of the group.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The identifier of the user.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserAsMemberOfGroupRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupID" type="soapenc:string">
      <wsdl:documentation>The identifier of the group.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The identifier of the user.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserAsMemberOfGroupResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-removeRolesFromUserResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-findPublicIdByNameResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="findPublicIdByNameReturn" type="soapenc:string">
      <wsdl:documentation>the user's publicID, else null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-removeUserAttributesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-addRolesToUserResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-addUserAttributesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The ID of the user</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="attributeIDs" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>attribute public IDs to be added</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:DataConversionException">
      <wsdl:documentation>if the userID or roleID does not exist</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-isUserMemberOfGroupResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="isUserMemberOfGroupReturn" type="xsd:boolean">
      <wsdl:documentation>&lt;code&gt;true&lt;/code&gt; if the user is a member of the group specified, &lt;code&gt;false&lt;/code&gt; if not.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-removeRolesFromUserRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The ID of the user</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="roleIDs" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The public IDs of roles to be added.  This may be null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addRolesToUserRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The ID of the user</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="roleIDs" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The public IDs of roles to be added.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserAttributesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IUserAPI-addUserResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="addUserReturn" type="soapenc:string">
      <wsdl:documentation>The public id of the new user</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-removeUserAttributesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The ID of the user</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="attributeIDs" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>attribute public IDs to be removed</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-findPublicIdByNameRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userName" type="soapenc:string">
      <wsdl:documentation>the login name (credential name).</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:RequiredFieldException">
      <wsdl:documentation>if the passed in User is null, or if the passed in User.Contact is null, or if the passed in User.Credential is null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-addUserRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="userData" type="tns2:User">
      <wsdl:documentation>The &lt;code&gt;User&lt;/code&gt; object, which must have valid &lt;code&gt;UserContact&lt;/code&gt;
and &lt;code&gt;Credential&lt;/code&gt; objects set as the contact and credential field.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="rolePublicIds" type="impl:ArrayOf_soapenc_string">
      <wsdl:documentation>The public ids of the roles to assign the user.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-isUserMemberOfGroupRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="groupID" type="soapenc:string">
      <wsdl:documentation>The identifier of the group.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="userID" type="soapenc:string">
      <wsdl:documentation>The identifier of the user.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-doesExistResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="doesExistReturn" type="xsd:boolean">
      <wsdl:documentation>&lt;code&gt;true&lt;/code&gt; if the user specified by the identifier exists in the system,
&lt;code&gt;false&lt;/code&gt; otherwise.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IUserAPI-getUserResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getUserReturn" type="tns2:User">
      <wsdl:documentation>The UserData representing the user</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-completeRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="workflowID" type="soapenc:string">
      <wsdl:documentation>the public id of the workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-suspendRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="workflowID" type="soapenc:string">
      <wsdl:documentation>the public id of the workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-resumeWorkflowRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="workflowID" type="soapenc:string">
      <wsdl:documentation>the public id of the workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-isTriggerAvailableRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="workflowID" type="soapenc:string">
      <wsdl:documentation>The ID of the workflow</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="triggerKey" type="tns2:WorkflowTriggerKey">
      <wsdl:documentation>A workflow trigger key off the current workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>If the workflow id did not match a valid workflow.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-invokeTriggerResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-resumeAllWorkflowsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-resumeWorkflowResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-invokeTriggerRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="workflowID" type="soapenc:string">
      <wsdl:documentation>The ID of the workflow</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="triggerKey" type="tns2:WorkflowTriggerKey">
      <wsdl:documentation>A workflow trigger key off the current workflow</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-RequiredFieldException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:RequiredFieldException">
      <wsdl:documentation>If the workflow id is null.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-suspendResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-completeResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-EntityStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:EntityStateException">
      <wsdl:documentation>If the workflow is not currently in the error or suspended state.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IWorkflowAPI-resumeAllWorkflowsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IWorkflowAPI-isTriggerAvailableResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="isTriggerAvailableReturn" type="xsd:boolean">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-importToStagingResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="importToStagingReturn" type="xsd:int">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-importToStagingRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="countryCode" type="soapenc:string">
      <wsdl:documentation>the code for the country to which this data belongs</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="zoneData" type="soapenc:string">
      <wsdl:documentation>The data to import, passed as a String.</wsdl:documentation>
    </wsdl:part>
    <wsdl:part name="clearStaging" type="xsd:boolean">
      <wsdl:documentation>Clears the staging tables before doing the import, this only clears the staging
tables of the data for the specified country, if all data needs to be cleared, use table import instead</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:SOAPException">
      <wsdl:documentation>If the country code is not null and does not have a zone configuration defined or does not correspond to a valid country.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-clearProductionTablesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IZoneImportAPI-clearStagingTablesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="countryCode" type="soapenc:string">
      <wsdl:documentation>a valid country code or null. A null value here will clear all zone information.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns1:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IZoneImportAPI-clearStagingTablesResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="IZoneImportAPI-clearProductionTablesRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="countryCode" type="soapenc:string">
      <wsdl:documentation>a valid country code that has a zone configuartion defined or null.  A null value here will clear all zone information.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-giveUserClaimViewPermissionRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimPublicID" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
    <wsdl:part name="userName" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-giveUserClaimViewPermissionResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
  <wsdl:message name="PCClaimSearchIntegrationAPI-getClaimByClaimNumberRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="claimNumber" type="soapenc:string">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-searchForClaimsMultiCriteriaRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="criteria" type="tns1:ArrayOfPCClaimSearchCriteria">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-PermissionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:PermissionException">
      <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-getNumberOfClaimsMultiCriteriaRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="criteria" type="tns1:ArrayOfPCClaimSearchCriteria">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-getNumberOfClaimsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getNumberOfClaimsReturn" type="soapenc:int">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-BadIdentifierException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:BadIdentifierException">
      <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-getNumberOfClaimsMultiCriteriaResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getNumberOfClaimsMultiCriteriaReturn" type="soapenc:int">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-searchForClaimsResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="searchForClaimsReturn" type="tns1:ArrayOfPCClaim">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-getNumberOfClaimsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="criteria" type="tns1:PCClaimSearchCriteria">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-ServerStateException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:ServerStateException">
      <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-searchForClaimsRequest" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="criteria" type="tns1:PCClaimSearchCriteria">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-getClaimByClaimNumberResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="getClaimByClaimNumberReturn" type="tns1:PCClaimDetail">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-SOAPException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:SOAPException">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-searchForClaimsMultiCriteriaResponse" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="searchForClaimsMultiCriteriaReturn" type="tns1:ArrayOfPCClaim">
      <wsdl:documentation/>
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PCClaimSearchIntegrationAPI-DataConversionException" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:part name="fault" type="tns2:DataConversionException">
      <wsdl:documentation>If any of the required fields in PCClaimSearchCriteria is null</wsdl:documentation>
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="IBulkInvoiceAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>&lt;p&gt;
&lt;code&gt;IBulkInvoiceAPI&lt;/code&gt; provides methods for creating &lt;code&gt;BulkInvoice&lt;/code&gt; objects and adding/updating/deleting
&lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects.
&lt;/p&gt;&lt;p&gt;
Unless otherwise indicated, callers of this API should assume that returned entities contain foreign key
IDs for associated entities, rather than the entity itself.  For example, a call to &lt;code&gt;getItems()&lt;/code&gt; returns an
array of &lt;code&gt;BulkInvoiceItem&lt;/code&gt; beans, each bean contains a foreign key to the containing &lt;code&gt;BulkInvoice.&lt;/code&gt;
However, the API returns only the ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; and so you must make a separate call to
&lt;code&gt;getBulkInvoice()&lt;/code&gt; to actually get the &lt;code&gt;Invoice&lt;/code&gt;.  This separate call is more efficient for
constructing the API's SOAP response.
&lt;/p&gt;&lt;p&gt;
In practice, this also means that a caller of the &lt;code&gt;IBulkInvoiceAPI&lt;/code&gt;, must set the &lt;code&gt;Exposure&lt;/code&gt;
and &lt;code&gt;Claim&lt;/code&gt; on a &lt;code&gt;BulkInvoiceItem&lt;/code&gt; using the &lt;code&gt;PublicID&lt;/code&gt; of the &lt;code&gt;Claim&lt;/code&gt; or
&lt;code&gt;Exposure&lt;/code&gt;. Both the &lt;code&gt;setClaim()&lt;/code&gt; and &lt;code&gt;setExposure()&lt;/code&gt; methods take a
&lt;code&gt;String&lt;/code&gt; argument which must be a &lt;code&gt;PublicId&lt;/code&gt;.
&lt;/p&gt;
See {@link IBulkInvoiceAPISoapBindingStub#createContactByLinkId(String)} for example code.

@see gw.api.webservice.IDataObjectAPI

@author chsu</wsdl:documentation>
    <wsdl:operation name="addItems" parameterOrder="publicId items">
      <wsdl:documentation>&lt;p&gt;
Adds &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects to a &lt;code&gt;BulkInvoice&lt;/code&gt;.  The &lt;code&gt;BulkInvoiceIntimes&lt;/code&gt; must
contain the following values: public ID, claim, payment type, amount, status, and bulk invoice ID.
&lt;/p&gt;</wsdl:documentation>
      <wsdl:input name="addItemsRequest" message="impl:IBulkInvoiceAPI-addItemsRequest"/>
      <wsdl:output name="addItemsResponse" message="impl:IBulkInvoiceAPI-addItemsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="createBulkInvoice" parameterOrder="invoice">
      <wsdl:documentation>&lt;p&gt;
Creates a new unapproved &lt;code&gt;BulkInvoice&lt;/code&gt; entity with a &lt;code&gt;BulkInvoiceStatus&lt;/code&gt; of
&lt;code&gt;TC_draft&lt;/code&gt; and commits it. The caller must supply the following &lt;code&gt;BulkInvoice&lt;/code&gt; fields:
&lt;/P&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;publicID&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;payee&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;requestingUser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bulkInvoiceTotal&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

If the server is configured in multicurrency mode, a market rate will be selected for
&lt;code&gt;TransToReportingExchangeRate&lt;/code&gt;.</wsdl:documentation>
      <wsdl:input name="createBulkInvoiceRequest" message="impl:IBulkInvoiceAPI-createBulkInvoiceRequest"/>
      <wsdl:output name="createBulkInvoiceResponse" message="impl:IBulkInvoiceAPI-createBulkInvoiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IBulkInvoiceAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="createBulkInvoice" parameterOrder="invoice customExchangeRate customExchangeRateDescription">
      <wsdl:documentation>&lt;p&gt;
Creates a new unapproved &lt;code&gt;BulkInvoice&lt;/code&gt; entity with a status of {@link BulkInvoiceStatus#TC_DRAFT} and

commits it. The caller must supply the following &lt;code&gt;BulkInvoice&lt;/code&gt; fields:
&lt;/P&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;publicID&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;payee&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;requestingUser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bulkInvoiceTotal&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

If the server is configured in multicurrency mode, a market rate will be selected for
&lt;code&gt;TransToReportingExchangeRate&lt;/code&gt;.</wsdl:documentation>
      <wsdl:input name="createBulkInvoiceRequest1" message="impl:IBulkInvoiceAPI-createBulkInvoiceRequest1"/>
      <wsdl:output name="createBulkInvoiceResponse1" message="impl:IBulkInvoiceAPI-createBulkInvoiceResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IBulkInvoiceAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="createContactByLinkId" parameterOrder="contactLinkID">
      <wsdl:documentation>&lt;p&gt;
Create a &lt;code&gt;Contact&lt;/code&gt; in ClaimCenter by importing from and linking it to ContactManager.
&lt;/p&gt;&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt; Use the &lt;code&gt;PublicID&lt;/code&gt; of the new contact as a &lt;code&gt;Payee&lt;/code&gt; ID when creating a new
&lt;code&gt;BulkInvoice&lt;/code&gt;. When using the &lt;code&gt;IDataObjectAPI&lt;/code&gt; to update a &lt;code&gt;BulkInvoice&lt;/code&gt;,
prepend "Contact:" (its (super)entity name) to the front of the contact &lt;code&gt;PublicID&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;
&lt;pre&gt;
Contact newPayee = iBulkInvoiceApiClient.createContactByLinkId(contactCenterLinkID);&lt;br&gt;
String newPayeeId = newPayee.getPublicID();&lt;br&gt;
&lt;br&gt;
BulkInvoice bi = new BulkInvoice();&lt;br&gt;
bi.setPayee(newPayeeId);&lt;br&gt;
[...]&lt;br&gt;
bi = iBulkInvoiceApiClient.createBulkInvoice(bi);&lt;br&gt;
&lt;br&gt;
PathValue pv = new PathValue("payee", "Contact:" + newPayeeId);&lt;br&gt;
iDataObjectApiClient.setPathValues("BulkInvoice", bi.getPublicID(), new PathValue[] {pv});&lt;br&gt;
&lt;/pre&gt;
&lt;/code&gt;
&lt;p&gt;</wsdl:documentation>
      <wsdl:input name="createContactByLinkIdRequest" message="impl:IBulkInvoiceAPI-createContactByLinkIdRequest"/>
      <wsdl:output name="createContactByLinkIdResponse" message="impl:IBulkInvoiceAPI-createContactByLinkIdResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteItems" parameterOrder="publicId itemIds">
      <wsdl:documentation>Deletes &lt;code&gt;BulkInvoiceItems&lt;/code&gt; from a &lt;code&gt;BulkInvoice&lt;/code&gt;. If any invalid &lt;code&gt;BulkInvoiceItem&lt;/code&gt;
IDs are specified to be deleted, this method will throw an exception and not delete ANY items.</wsdl:documentation>
      <wsdl:input name="deleteItemsRequest" message="impl:IBulkInvoiceAPI-deleteItemsRequest"/>
      <wsdl:output name="deleteItemsResponse" message="impl:IBulkInvoiceAPI-deleteItemsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getBulkInvoice" parameterOrder="publicId">
      <wsdl:documentation>&lt;p&gt;
Searches for a specific &lt;code&gt;BulkInvoice&lt;/code&gt;.
&lt;/p&gt;</wsdl:documentation>
      <wsdl:input name="getBulkInvoiceRequest" message="impl:IBulkInvoiceAPI-getBulkInvoiceRequest"/>
      <wsdl:output name="getBulkInvoiceResponse" message="impl:IBulkInvoiceAPI-getBulkInvoiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getItems" parameterOrder="publicId">
      <wsdl:documentation>Gets all &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects linked to the specified &lt;code&gt;BulkInvoice&lt;/code&gt;.</wsdl:documentation>
      <wsdl:input name="getItemsRequest" message="impl:IBulkInvoiceAPI-getItemsRequest"/>
      <wsdl:output name="getItemsResponse" message="impl:IBulkInvoiceAPI-getItemsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getItems" parameterOrder="publicId claimId">
      <wsdl:documentation>Gets all the &lt;code&gt;BulkInvoiceItem&lt;/code&gt; entities with the specified claim ID linked to the specified
&lt;code&gt;BulkInvoice&lt;/code&gt;.</wsdl:documentation>
      <wsdl:input name="getItemsRequest1" message="impl:IBulkInvoiceAPI-getItemsRequest1"/>
      <wsdl:output name="getItemsResponse1" message="impl:IBulkInvoiceAPI-getItemsResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getItems" parameterOrder="publicId claimId amount">
      <wsdl:documentation>Gets all &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects with the specified claim ID and payment amount linked to the specified
&lt;code&gt;BulkInvoice&lt;/code&gt;.</wsdl:documentation>
      <wsdl:input name="getItemsRequest2" message="impl:IBulkInvoiceAPI-getItemsRequest2"/>
      <wsdl:output name="getItemsResponse2" message="impl:IBulkInvoiceAPI-getItemsResponse2"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="placeDownstreamHoldOnInvoice" parameterOrder="publicId">
      <wsdl:documentation>Sets the status of the &lt;code&gt;BulkInvoice&lt;/code&gt; to be &lt;code&gt;TC_ONHOLD&lt;/code&gt;.</wsdl:documentation>
      <wsdl:input name="placeDownstreamHoldOnInvoiceRequest" message="impl:IBulkInvoiceAPI-placeDownstreamHoldOnInvoiceRequest"/>
      <wsdl:output name="placeDownstreamHoldOnInvoiceResponse" message="impl:IBulkInvoiceAPI-placeDownstreamHoldOnInvoiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IBulkInvoiceAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="requestBulkInvoice" parameterOrder="publicId">
      <wsdl:documentation>&lt;p&gt;
Requests that the specified &lt;code&gt;BulkInvoice&lt;/code&gt; be escalated for submission to the downstream system. You can
only call this method on a &lt;code&gt;BulkdInvoice&lt;/code&gt; with a stauts of &lt;code&gt;TC_AWAITINGSUBMISSION&lt;/code&gt;.
&lt;/p&gt;&lt;p&gt;
Ordinarily, the system handles escalation automatically using the scheduled &lt;code&gt;bulkinvoicesescalation&lt;/code&gt;
batch process, but it is possible a &lt;code&gt;BulkInvoice&lt;/code&gt; must be escalated prior to the running of this process.
If a &lt;code&gt;BulkInvoice&lt;/code&gt; has a scheduled send date on the current day, calling &lt;code&gt;requestBulkInvoice()&lt;/code&gt;
causes the &lt;code&gt;BulkInvoice&lt;/code&gt; and its associated checks to move to the &lt;code&gt;BulkInvoiceStatus&lt;/code&gt; of
&lt;code&gt;TC_requesting&lt;/code&gt; and then to the &lt;code&gt;TC_requested&lt;/code&gt; status.  If the scheduled send date is not
today, then the invoice is unaffected.
&lt;/p&gt;</wsdl:documentation>
      <wsdl:input name="requestBulkInvoiceRequest" message="impl:IBulkInvoiceAPI-requestBulkInvoiceRequest"/>
      <wsdl:output name="requestBulkInvoiceResponse" message="impl:IBulkInvoiceAPI-requestBulkInvoiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="stopBulkInvoice" parameterOrder="publicId">
      <wsdl:documentation>&lt;p&gt;
Stops the specified &lt;code&gt;BulkInvoice&lt;/code&gt;. You should only stop a &lt;code&gt;BulkInvoice&lt;/code&gt; with a status of
&lt;code&gt;TC_REQUESTING&lt;/code&gt;, &lt;code&gt;TC_REQUESTED&lt;/code&gt;, or &lt;code&gt;TC_ISSUED&lt;/code&gt;.  After this method completes,
the status of the &lt;code&gt;BulkInvoice&lt;/code&gt; and all its items will be &lt;code&gt;TC_PENDINGSTOP&lt;/code&gt;.
&lt;/p&gt;</wsdl:documentation>
      <wsdl:input name="stopBulkInvoiceRequest" message="impl:IBulkInvoiceAPI-stopBulkInvoiceRequest"/>
      <wsdl:output name="stopBulkInvoiceResponse" message="impl:IBulkInvoiceAPI-stopBulkInvoiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IBulkInvoiceAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitBulkInvoice" parameterOrder="publicId">
      <wsdl:documentation>&lt;p&gt;
Submits the specified &lt;code&gt;BulkInvoice&lt;/code&gt; for approval. When the invoice is approved or if it doesn't need
approval, the items that were approved for the invoice are set to a status of &lt;code&gt;Approved&lt;/code&gt;, and then the
approved items are submitted for processing. At this point, the status of the invoice becomes
&lt;code&gt;Pending bulk invoice item validation&lt;/code&gt;. As each item is processed, its check is created or updated and
&lt;em&gt;it&lt;/em&gt; is submitted for approval. When the &lt;code&gt;BulkInvoiceWF&lt;/code&gt; batch process eventually runs, if all
of the checks have been approved, then it moves the invoice to &lt;code&gt;Awaiting submission&lt;/code&gt; status, which
makes the invoice eligible for escalation.
&lt;/p&gt;&lt;p&gt;
For this method to succeed, the invoice must be valid and have at least one item. The &lt;code&gt;BulkInvoiceStatus&lt;/code&gt;
must be one of the following:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TC_DRAFT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TC_REJECTED&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TC_ONHOLD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TC_PENDINGITEMVALIDATION&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</wsdl:documentation>
      <wsdl:input name="submitBulkInvoiceRequest" message="impl:IBulkInvoiceAPI-submitBulkInvoiceRequest"/>
      <wsdl:output name="submitBulkInvoiceResponse" message="impl:IBulkInvoiceAPI-submitBulkInvoiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="updateBulkInvoiceStatus" parameterOrder="publicId checkNumber issueDate status extensions">
      <wsdl:documentation>Updates the status of the &lt;code&gt;BulkInvoice&lt;/code&gt; and/or sets the check number or issue date of the associated
bulk check.  This method can set the &lt;code&gt;BulkInvoiceStatus&lt;/code&gt; to one of the following:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TC_ISSUED&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TC_CLEARED&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TC_VOIDED&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TC_STOPPED&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</wsdl:documentation>
      <wsdl:input name="updateBulkInvoiceStatusRequest" message="impl:IBulkInvoiceAPI-updateBulkInvoiceStatusRequest"/>
      <wsdl:output name="updateBulkInvoiceStatusResponse" message="impl:IBulkInvoiceAPI-updateBulkInvoiceStatusResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IBulkInvoiceAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="updateItems" parameterOrder="publicId updatedItems">
      <wsdl:documentation>Updates &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects for a given &lt;code&gt;BulkInvoice&lt;/code&gt;. All &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects must
refer to the correct &lt;code&gt;BulkInvoice&lt;/code&gt;. If any invalid &lt;code&gt;BulkInvoiceItem&lt;/code&gt; IDs are specified to be
updated, this method will throw an exception and not update ANY items. The invoice items must contain the following
fields: public ID, claim, payment type, amount, status, and bulk invoice ID.
&lt;/p&gt;&lt;p&gt;
&lt;b&gt;Important Usage Note:&lt;/b&gt; You must be sure that the &lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects you pass are fully populated,
as any &lt;code&gt;null&lt;/code&gt; values overwrite non-null values on existing items.  Similarly, if you added an array
extension field to the &lt;code&gt;BulkInvoiceItem&lt;/code&gt; entity, a call to this method must ensure that the array is
fully populated or the elements of are lost during the update.
&lt;p/&gt;


The status of each element of updatedItems will be set to Draft, and the BulkInvoice will be invalidated.</wsdl:documentation>
      <wsdl:input name="updateItemsRequest" message="impl:IBulkInvoiceAPI-updateItemsRequest"/>
      <wsdl:output name="updateItemsResponse" message="impl:IBulkInvoiceAPI-updateItemsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="validateBulkInvoice" parameterOrder="publicId">
      <wsdl:documentation>Validates the specified &lt;code&gt;BulkInvoice&lt;/code&gt;. If method succeeds, calling &lt;code&gt;isValid() on the &lt;code&gt;BulkInvoice&lt;/code&gt;
will return true.  If this fails, calling &lt;code&gt;isValid()&lt;/code&gt; will return false and &lt;code&gt;getValidationAlerts()&lt;/code&gt;
will return an array of &lt;code&gt;BIValidationAlerts&lt;/code&gt;.</wsdl:documentation>
      <wsdl:input name="validateBulkInvoiceRequest" message="impl:IBulkInvoiceAPI-validateBulkInvoiceRequest"/>
      <wsdl:output name="validateBulkInvoiceResponse" message="impl:IBulkInvoiceAPI-validateBulkInvoiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="voidBulkInvoice" parameterOrder="publicId">
      <wsdl:documentation>&lt;p&gt;
Voids the specified &lt;code&gt;BulkInvoice&lt;/code&gt;. You can only call this method on a &lt;code&gt;BulkInvoice&lt;/code&gt; with a
status of:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TC_REQUESTING&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TC_REQUESTED&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TC_ISSUED&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TC_CLEARED&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
After the method completes, the &lt;code&gt;BulkInvoice&lt;/code&gt;'s status and that of all its invoides will be
&lt;code&gt;TC_PENDINGVOID&lt;/code&gt;</wsdl:documentation>
      <wsdl:input name="voidBulkInvoiceRequest" message="impl:IBulkInvoiceAPI-voidBulkInvoiceRequest"/>
      <wsdl:output name="voidBulkInvoiceResponse" message="impl:IBulkInvoiceAPI-voidBulkInvoiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IBulkInvoiceAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IBulkInvoiceAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IBulkInvoiceAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IBulkInvoiceAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IBulkInvoiceAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IClaimAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IClaimAPI provides methods for adding claims and claim related items such as exposures, documents and
notes to ClaimCenter.
@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI} instead.
</wsdl:documentation>
    <wsdl:operation name="addActivityFromPattern" parameterOrder="claimPublicID activityPatternPublicId">
      <wsdl:documentation>Adds an activity to a claim using an activity pattern. First, attempts to generate an activity from the given
pattern.  The activity pattern must be from the list of activity patterns for the given claim that meet the
following criteria:
&lt;p/&gt;
1) if the claim is closed, then the activity pattern must be available to closed claims&lt;br&gt;
2) the activity pattern's loss type must either be null, or must match the claim's
loss type.
&lt;p/&gt;
If the activity pattern doesn't match the above criteria, an EntityStateException is thrown.
&lt;p/&gt;
The new activity is initialized with the following fields from the activity pattern:
Pattern, Type, Subject, Description, Mandatory, Priority, Recurring, Command
&lt;p/&gt;
The activity's target date is calculated using the pattern's targetStartPoint, TargetDays,
TargetHours, and TargetIncludeDays fields.  The activity's escalation date is calculated using the pattern's
escalationStartPoint, EscalationDays, EscalationHours, and EscalationIncludeDays fields.  If those fields aren't
included in the activity pattern, then the target and/or escalation date won't be set.  If the target date is
calculated to be after the escalation date, then the target date is set to be the same as the escalation date.
&lt;p/&gt;
The activity's claim ID is set to the given claim ID, and the exposure ID is set to null.  The activity's
previousUserID is set to the current user.
&lt;p/&gt;
The newly created activity is then assigned to a group and/or user using the Assignment Engine.  Finally, the
activity is saved in the database, and the public id of the newly created activity is returned.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createActivityFromPattern} instead.</wsdl:documentation>
      <wsdl:input name="addActivityFromPatternRequest" message="impl:IClaimAPI-addActivityFromPatternRequest"/>
      <wsdl:output name="addActivityFromPatternResponse" message="impl:IClaimAPI-addActivityFromPatternResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addActivityFromPatternWithOverride" parameterOrder="claimPublicID activityPatternPublicId activityFields">
      <wsdl:documentation>Adds an activity to a claim allowing for the specification of activity field values.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createActivity} instead.</wsdl:documentation>
      <wsdl:input name="addActivityFromPatternWithOverrideRequest" message="impl:IClaimAPI-addActivityFromPatternWithOverrideRequest"/>
      <wsdl:output name="addActivityFromPatternWithOverrideResponse" message="impl:IClaimAPI-addActivityFromPatternWithOverrideResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addClaimContactDocument" parameterOrder="claimPublicID claimContactID doc">
      <wsdl:documentation>Associates the given document with the claim specified by the identifier.  The document will also be associated
with the specified claim contact.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createDocument} instead.</wsdl:documentation>
      <wsdl:input name="addClaimContactDocumentRequest" message="impl:IClaimAPI-addClaimContactDocumentRequest"/>
      <wsdl:output name="addClaimContactDocumentResponse" message="impl:IClaimAPI-addClaimContactDocumentResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addClaimantActivityFromPattern" parameterOrder="claimPublicID claimantPublicID activityPatternPublicId">
      <wsdl:documentation>Adds an activity to a claim using an activity pattern. First, attempts to generate an activity from the given
pattern.  The activity pattern must be from the list of activity patterns for the given claim that meet
the following criteria:
&lt;p/&gt;
1) if the claim is closed, then the activity pattern must be available to closed claims&lt;br&gt;
2) the activity pattern's loss type must either be null, or must match the claim's loss type.
&lt;p/&gt;
If the activity pattern doesn't match the above criteria, an EntityStateException is thrown.
&lt;p/&gt;
The new activity is initialized with the following fields from the activity pattern:
Pattern, Type, Subject, Description, Mandatory, Priority, Recurring, Command
&lt;p/&gt;
The activity's target date is calculated using the pattern's targetStartPoint, TargetDays,
TargetHours, and TargetIncludeDays fields.  The activity's escalation date is calculated using the pattern's
escalationStartPoint, EscalationDays, EscalationHours, and EscalationIncludeDays fields.  If those fields aren't
included in the activity pattern, then the target and/or escalation date won't be set.  If the target date is
calculated to be after the escalation date, then the target date is set to be the same as the escalation date.
&lt;p/&gt;
The activity's claim ID is set to the given claim ID.  The activity's previousUserID is set to the current
user.
&lt;p/&gt;
The newly created activity is then assigned to a group and/or user using the Assignment Engine.  Finally, the
activity is saved in the database, and the public id of the newly created activity is returned.  The
activity is associated with the given claimant.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createActivity} instead.</wsdl:documentation>
      <wsdl:input name="addClaimantActivityFromPatternRequest" message="impl:IClaimAPI-addClaimantActivityFromPatternRequest"/>
      <wsdl:output name="addClaimantActivityFromPatternResponse" message="impl:IClaimAPI-addClaimantActivityFromPatternResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addClaimantDocument" parameterOrder="claimPublicID claimantID doc">
      <wsdl:documentation>Associates the given document with the claim specified by the identifier.  The document will also be associated
with the specified claimant contact.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createDocument} instead.</wsdl:documentation>
      <wsdl:input name="addClaimantDocumentRequest" message="impl:IClaimAPI-addClaimantDocumentRequest"/>
      <wsdl:output name="addClaimantDocumentResponse" message="impl:IClaimAPI-addClaimantDocumentResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addClaimantNote" parameterOrder="claimPublicID claimantID note">
      <wsdl:documentation>Adds a note to the given claim that is associated with the given contact.  The contact must be a claimant on the
claim or one of the claim's exposures.  The contact must also be the same version as the contact associated with
the claim or exposures; in other words, if a snapshot version of the contact is being used on the claim/exposures,
then that same snapshot version must be used in this method.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createNote} instead.</wsdl:documentation>
      <wsdl:input name="addClaimantNoteRequest" message="impl:IClaimAPI-addClaimantNoteRequest"/>
      <wsdl:output name="addClaimantNoteResponse" message="impl:IClaimAPI-addClaimantNoteResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addCustomHistory" parameterOrder="claimPublicID historyType">
      <wsdl:documentation>Adds a custom history event and a blank description to a claim with the given CustomHistoryType
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createCustomHistory} instead.</wsdl:documentation>
      <wsdl:input name="addCustomHistoryRequest" message="impl:IClaimAPI-addCustomHistoryRequest"/>
      <wsdl:output name="addCustomHistoryResponse" message="impl:IClaimAPI-addCustomHistoryResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addCustomHistoryWithDesc" parameterOrder="claimPublicID historyType description">
      <wsdl:documentation>Adds a custom history event to the a claim, overriding the value of Description present
in the custom history type list.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createCustomHistory} instead.</wsdl:documentation>
      <wsdl:input name="addCustomHistoryWithDescRequest" message="impl:IClaimAPI-addCustomHistoryWithDescRequest"/>
      <wsdl:output name="addCustomHistoryWithDescResponse" message="impl:IClaimAPI-addCustomHistoryWithDescResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addDocument" parameterOrder="claimPublicID doc">
      <wsdl:documentation>Associates the given document with the claim specified by the identifier
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createDocument} instead.</wsdl:documentation>
      <wsdl:input name="addDocumentRequest" message="impl:IClaimAPI-addDocumentRequest"/>
      <wsdl:output name="addDocumentResponse" message="impl:IClaimAPI-addDocumentResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addExposure" parameterOrder="claimPublicID exposure">
      <wsdl:documentation>Associates the given ExposureData with a claim.  If the claim's state is OPEN, then runs save and setup on the
new exposure.  If the claim's state is DRAFT, simply sets the exposure order on the claim.
&lt;p&gt;
&lt;b&gt;WARNING:&lt;/b&gt; Do not add new exposures to ClaimCenter via web service APIs while the financials
calculations are running.
&lt;p&gt;
saveAndSetup performs the following steps:
&lt;ol&gt;
&lt;li&gt; Set the exposure's claim order
&lt;li&gt; Runs the "Pre-setup" rules on the exposure
&lt;li&gt; Runs the segmentation rules on the exposure
&lt;li&gt; Runs the strategy rules on the exposure
&lt;li&gt; Runs the assignment rules on the exposure
&lt;li&gt; Runs the workplan rules on the exposure
&lt;li&gt; Runs the "Post-setup" rules on the exposure
&lt;li&gt; Sets the exposure's status to "open"
&lt;li&gt; Creates initial reserves
&lt;li&gt; Commits the exposures's bundle (which will contain the exposure,
activities, and other objects creating during the call)
&lt;/ol&gt;
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createExposure} instead.</wsdl:documentation>
      <wsdl:input name="addExposureRequest" message="impl:IClaimAPI-addExposureRequest"/>
      <wsdl:output name="addExposureResponse" message="impl:IClaimAPI-addExposureResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addExposureDocument" parameterOrder="claimPublicID exposureID doc">
      <wsdl:documentation>Associates the given document with the claim specified by the identifier.  The document will also be associated
with the specified claimant contact.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createDocument} instead.</wsdl:documentation>
      <wsdl:input name="addExposureDocumentRequest" message="impl:IClaimAPI-addExposureDocumentRequest"/>
      <wsdl:output name="addExposureDocumentResponse" message="impl:IClaimAPI-addExposureDocumentResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addFNOL" parameterOrder="fnol">
      <wsdl:documentation>Adds an FNOL claim to the system. FNOLs are run through the Loaded rules, an import History event is created
and the claim is then run through save and setup (details below), at the end of which the claim is OPEN.
Finally the claim is committed; this commit will include all exposures, activities etc. created during the
call. At commit time the pre update, validation and event messaging rules run. The claim is validated at the
"loadandsave" level.
&lt;p&gt;
Save and Setup performs the following steps:
&lt;ol&gt;
&lt;li&gt; Creates a new claim number (if one does not exist)
&lt;li&gt; Creates a claim snapshot
&lt;li&gt; Runs the "Pre-setup" rules on the claim and each exposure
&lt;li&gt; Runs the segmentation rules on each exposure, then the claim
&lt;li&gt; Runs the assignment rules on the claim, then each exposure
&lt;li&gt; Runs the workplan rules on the claim, then each exposure (generating the workplan)
&lt;li&gt; Runs the "Post-setup" rules on the claim and each exposure
&lt;li&gt; Updates history timestamps (for client-added history events to be correctly stamped)
&lt;li&gt; Sets the status of the claim and each exposure to "open"
&lt;li&gt; Makes sure that each exposure has a valid claim order field set
&lt;li&gt; Sets initial reserves
&lt;/ol&gt;
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#addFNOL} instead.</wsdl:documentation>
      <wsdl:input name="addFNOLRequest" message="impl:IClaimAPI-addFNOLRequest"/>
      <wsdl:output name="addFNOLResponse" message="impl:IClaimAPI-addFNOLResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addMatterDocument" parameterOrder="claimPublicID matterID doc">
      <wsdl:documentation>Associates the given document with the claim specified by the identifier.  The document will also be associated
with the specified claimant contact.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createDocument} instead.</wsdl:documentation>
      <wsdl:input name="addMatterDocumentRequest" message="impl:IClaimAPI-addMatterDocumentRequest"/>
      <wsdl:output name="addMatterDocumentResponse" message="impl:IClaimAPI-addMatterDocumentResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addNote" parameterOrder="claimPublicID note">
      <wsdl:documentation>Associates the given note with the claim identified by the given identifier.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createNote} instead.</wsdl:documentation>
      <wsdl:input name="addNoteRequest" message="impl:IClaimAPI-addNoteRequest"/>
      <wsdl:output name="addNoteResponse" message="impl:IClaimAPI-addNoteResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="bulkValidate" parameterOrder="loadCommandID">
      <wsdl:documentation>Schedules all imported claims whose loadCommandID matches the supplied value for validation.
The claim and its associated policy and exposures will be validated.
Bulk validation uses distributed work queues to spread the work of validating large
numbers of claims across multiple threads/nodes.  This method does NOT perform the validation;
instead, it creates a workitem for each claim to be validated.  These workitems are processed
by distributed worker instances that perform the validation.&lt;p&gt;

This method launches a batch process to generate the workitems; the process is NOT
guaranteed (or expected) to finish before the method returns.  The returned ProcessID
can be used to query the status of the batch process using the methods on IMaintenanceToolsAPI.
&lt;p&gt;

By default no worker instances are configured to run for this process.  In order to perform the actual validation,
use IMaintenanceToolsAPI.setWorkQueueConfig() to dynamically allocate worker instances.
&lt;p&gt;
The complete process is:
&lt;ol&gt;
&lt;li&gt;Load claims via ItableImportAPI.integrityCheckStagingTableContentsAndLoadSourceTables())&lt;/li&gt;
&lt;li&gt;Extract the loadCommandID from the returned TableImportResult object&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;Call IClaimAPI.bulkValidate(loadCommandID)&lt;/li&gt;
&lt;li&gt;Poll IMaintenanceToolsAPI.batchProcessStatusByID() using the returned processID until the batch process completes.&lt;/li&gt;
&lt;li&gt;Configure workers using IMaintenanceToolsAPI.setWorkQueueConfig() with work queue name "ClaimValidation"&lt;/li&gt;
&lt;li&gt;Notify workers using IMaintenanceToolsAPI.notifyQueueWorkers() with work queue name "ClaimValidation"&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#bulkValidate} instead.</wsdl:documentation>
      <wsdl:input name="bulkValidateRequest" message="impl:IClaimAPI-bulkValidateRequest"/>
      <wsdl:output name="bulkValidateResponse" message="impl:IClaimAPI-bulkValidateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="checkValid" parameterOrder="claimPublicID strValidationLevelCode">
      <wsdl:documentation>Checks to see if the claim is valid. Any exposures associated with the claim are checked, as well. Validity is
determined by applying the claim validation rules.  If the validationLevelCode is blank, or doesn't match an
existing ValidationLevel value, then the method returns false if any errors are found.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#checkValid} instead.</wsdl:documentation>
      <wsdl:input name="checkValidRequest" message="impl:IClaimAPI-checkValidRequest"/>
      <wsdl:output name="checkValidResponse" message="impl:IClaimAPI-checkValidResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="claimsExist" parameterOrder="claimNumbers">
      <wsdl:documentation>Check to see if the claims specified by the given claim numbers exist in
the system. Returns an array containing just the claim numbers that do
exist. If no numbers match returns an empty array. The order of the numbers
in the returned array is undefined - you should &lt;em&gt;not&lt;/em&gt; rely on it
being the same order as in the claimNumbers parameter.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#claimsExist} instead.</wsdl:documentation>
      <wsdl:input name="claimsExistRequest" message="impl:IClaimAPI-claimsExistRequest"/>
      <wsdl:output name="claimsExistResponse" message="impl:IClaimAPI-claimsExistResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="closeClaim" parameterOrder="claimPublicID outcomeType reason">
      <wsdl:documentation>Closes the claim specified by the identifier.  Uses the same logic that governs the Close Claim screen.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#closeClaim} instead.</wsdl:documentation>
      <wsdl:input name="closeClaimRequest" message="impl:IClaimAPI-closeClaimRequest"/>
      <wsdl:output name="closeClaimResponse" message="impl:IClaimAPI-closeClaimResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="completeActivity" parameterOrder="activityPublicID">
      <wsdl:documentation>Complete the activity  specified by the identifier.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#completeActivity} instead.</wsdl:documentation>
      <wsdl:input name="completeActivityRequest" message="impl:IClaimAPI-completeActivityRequest"/>
      <wsdl:output name="completeActivityResponse" message="impl:IClaimAPI-completeActivityResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="doesExist" parameterOrder="claimPublicID">
      <wsdl:documentation>Check to see if the claim specified by claimID exists in the system.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#doesExist} instead.</wsdl:documentation>
      <wsdl:input name="doesExistRequest" message="impl:IClaimAPI-doesExistRequest"/>
      <wsdl:output name="doesExistResponse" message="impl:IClaimAPI-doesExistResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="findPublicIdByClaimNumber" parameterOrder="claimNumber">
      <wsdl:documentation>Finds the public id of a claim by the claimNumber
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#findPublicIDByClaimNumber} instead.</wsdl:documentation>
      <wsdl:input name="findPublicIdByClaimNumberRequest" message="impl:IClaimAPI-findPublicIdByClaimNumberRequest"/>
      <wsdl:output name="findPublicIdByClaimNumberResponse" message="impl:IClaimAPI-findPublicIdByClaimNumberResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaim" parameterOrder="claimPublicID objectFilter">
      <wsdl:documentation>Retrieves a claim given the claim identifier
&lt;br&gt;@deprecated The ObjectFilter class is deprecated. Instead, rewrite integration code as custom web service APIs for each integration point, defining most application logic within the web service. Before this release, external code requested large objects and used ObjectFilter to define arbitrary fields to return so that the data transfer is not too large. Instead, design your new custom web services to return only what is needed. You might want to create new Gosu classes or non-persistent business entities for some integration points to encapsulate data passed to the web service or returned from the web service.</wsdl:documentation>
      <wsdl:input name="getClaimRequest" message="impl:IClaimAPI-getClaimRequest"/>
      <wsdl:output name="getClaimResponse" message="impl:IClaimAPI-getClaimResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimInfo" parameterOrder="claimPublicID">
      <wsdl:documentation>Retrieves a claim info given the claim public ID
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#getClaimInfo} instead.</wsdl:documentation>
      <wsdl:input name="getClaimInfoRequest" message="impl:IClaimAPI-getClaimInfoRequest"/>
      <wsdl:output name="getClaimInfoResponse" message="impl:IClaimAPI-getClaimInfoResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimInfo" parameterOrder="claimPublicID objectFilter">
      <wsdl:documentation>Retrieves a claim info given the claim public ID
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#getClaimInfo} instead.</wsdl:documentation>
      <wsdl:input name="getClaimInfoRequest1" message="impl:IClaimAPI-getClaimInfoRequest1"/>
      <wsdl:output name="getClaimInfoResponse1" message="impl:IClaimAPI-getClaimInfoResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimState" parameterOrder="claimPublicID">
      <wsdl:documentation>Returns the code of the claim's state (a typekey from the ClaimState typelist) as a string.  If for some reason
the claim's state is not defined, returns a null string.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#getClaimState} instead.</wsdl:documentation>
      <wsdl:input name="getClaimStateRequest" message="impl:IClaimAPI-getClaimStateRequest"/>
      <wsdl:output name="getClaimStateResponse" message="impl:IClaimAPI-getClaimStateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="giveUserPermissionsOnClaim" parameterOrder="claimPublicID userPublicID types">
      <wsdl:documentation>Give a user permission on a claim
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#giveUserPermissionsOnClaim} instead.</wsdl:documentation>
      <wsdl:input name="giveUserPermissionsOnClaimRequest" message="impl:IClaimAPI-giveUserPermissionsOnClaimRequest"/>
      <wsdl:output name="giveUserPermissionsOnClaimResponse" message="impl:IClaimAPI-giveUserPermissionsOnClaimResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importAcordClaimFromXML" parameterOrder="xml">
      <wsdl:documentation>Adds an FNOL claim to the system, populated from the given ACORD XML by using
the out of box gw.fnolmapper.acord.AcordFNOLMapper mapper class. This is just a
convenience interface which calls importClaimFromXML with gw.fnolmapper.acord.AcordFNOLMapper
as the mapperClassName argument
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#importAcordClaimFromXML} instead.</wsdl:documentation>
      <wsdl:input name="importAcordClaimFromXMLRequest" message="impl:IClaimAPI-importAcordClaimFromXMLRequest"/>
      <wsdl:output name="importAcordClaimFromXMLResponse" message="impl:IClaimAPI-importAcordClaimFromXMLResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importClaimFromXML" parameterOrder="xml mapperClassName">
      <wsdl:documentation>Adds an FNOL claim to the system, populated from the given XML by using the
named mapper class. A new, empty, claim is created then an instance of the
given mapper class is created and called to populate the claim from the XML.
The populated claim is then processed in the same way as a normal addFNOL call:
the loaded rules are called, a history event is added and save and setup is
performed. See the addFNOL documentation for details.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#importClaimFromXML} instead.</wsdl:documentation>
      <wsdl:input name="importClaimFromXMLRequest" message="impl:IClaimAPI-importClaimFromXMLRequest"/>
      <wsdl:output name="importClaimFromXMLResponse" message="impl:IClaimAPI-importClaimFromXMLResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="isFlagged" parameterOrder="claimPublicID">
      <wsdl:documentation>Check to see if a claim has been flagged.  If the Claim.Flagged field equals TC_IS_FLAGGED,
then method returns true.  Otherwise, returns false.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#isFlagged} instead.</wsdl:documentation>
      <wsdl:input name="isFlaggedRequest" message="impl:IClaimAPI-isFlaggedRequest"/>
      <wsdl:output name="isFlaggedResponse" message="impl:IClaimAPI-isFlaggedResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="migrateClaim" parameterOrder="claim assignedGroupId assignedUserId">
      <wsdl:documentation>Adds a claim to the system. The claim must past level0 (loadsave) validation before it will be added
to the system. The claim that is being added is presumed to have been worked on in another system and
is being migrated to ClaimCenter, so it will not go through the load rules or the setup process that
is executed by {@link #addFNOL}. The claim is marked as being in the "Open" state.
&lt;p&gt;
The steps executed by this method are
&lt;ol&gt;
&lt;li&gt;Sets the claim state to Open
&lt;li&gt;Assign the claim to the given user and group
&lt;li&gt;Commit the claim; this will run pre-update rules, validate the claim at the loadsave level and run event rules
&lt;/ol&gt;
&lt;p&gt;
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#migrateClaim} instead.</wsdl:documentation>
      <wsdl:input name="migrateClaimRequest" message="impl:IClaimAPI-migrateClaimRequest"/>
      <wsdl:output name="migrateClaimResponse" message="impl:IClaimAPI-migrateClaimResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="migrateClaim" parameterOrder="claim state assignedGroupId assignedUserId">
      <wsdl:documentation>Adds a claim to the system. The claim must past level0 (loadsave) validation before it will be added
to the system. The claim that is being added is presumed to have been worked on in another system and
is being migrated to ClaimCenter, so it will not go through the load rules or the setup process that
is executed by {@link #addFNOL}. The claim is marked as being in the given state.
&lt;p&gt;
The steps executed by this method are
&lt;ol&gt;
&lt;li&gt;Sets the claim state to the given state
&lt;li&gt;Assign the claim to the given user and group
&lt;li&gt;Commit the claim; this will run pre-update rules, validate the claim at the loadsave level and run event rules
&lt;/ol&gt;
&lt;p&gt;
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#migrateClaim} instead.</wsdl:documentation>
      <wsdl:input name="migrateClaimRequest1" message="impl:IClaimAPI-migrateClaimRequest1"/>
      <wsdl:output name="migrateClaimResponse1" message="impl:IClaimAPI-migrateClaimResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="previewAssignment" parameterOrder="claimData">
      <wsdl:documentation>Processes the given claim through the assignment engine, and produces an AssignmentResponse instance
that indicates the assignment found for this item.  Does NOT commit the item to the database.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#previewAssignment} instead.</wsdl:documentation>
      <wsdl:input name="previewAssignmentRequest" message="impl:IClaimAPI-previewAssignmentRequest"/>
      <wsdl:output name="previewAssignmentResponse" message="impl:IClaimAPI-previewAssignmentResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="refreshPolicy" parameterOrder="claimPublicID">
      <wsdl:documentation>Cause the policy on the claim to be refreshed with the latest information from the Policy store
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#refreshPolicy} instead.</wsdl:documentation>
      <wsdl:input name="refreshPolicyRequest" message="impl:IClaimAPI-refreshPolicyRequest"/>
      <wsdl:output name="refreshPolicyResponse" message="impl:IClaimAPI-refreshPolicyResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="reopenClaim" parameterOrder="claimPublicID reason">
      <wsdl:documentation>Reopens the claim specified by the identifier.  Uses the same logic that governs the Reopen Claim screen.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#reopenClaim} instead.</wsdl:documentation>
      <wsdl:input name="reopenClaimRequest" message="impl:IClaimAPI-reopenClaimRequest"/>
      <wsdl:output name="reopenClaimResponse" message="impl:IClaimAPI-reopenClaimResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="reopenClaim" parameterOrder="claimPublicID reasonType reason">
      <wsdl:documentation>Reopens the claim specified by the identifier.  Uses the same logic that governs the Reopen Claim screen
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#reopenClaim} instead.</wsdl:documentation>
      <wsdl:input name="reopenClaimRequest1" message="impl:IClaimAPI-reopenClaimRequest1"/>
      <wsdl:output name="reopenClaimResponse1" message="impl:IClaimAPI-reopenClaimResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="restoreClaim" parameterOrder="claimPublicIDs comment">
      <wsdl:documentation>Restore claims from the archive database
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#restoreClaim} instead.</wsdl:documentation>
      <wsdl:input name="restoreClaimRequest" message="impl:IClaimAPI-restoreClaimRequest"/>
      <wsdl:output name="restoreClaimResponse" message="impl:IClaimAPI-restoreClaimResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="scheduleForArchive" parameterOrder="claimNumbers">
      <wsdl:documentation>Schedules the claims with the given claim numbers for archive. The claims are looked up and,
providing they are closed, are immediately scheduled for archive by creating a high priority
work item that will be picked up by the archiving work queue. Note that the archiving work
queue is processed asynchronously so it is unlikely that any of the claims will actually be
archived by the time this call returns.
&lt;p&gt;
There is a race condition that can affect this call. If a claim to be archived references a
newly created admin object, such as a new user, there is a chance the archiving of the claim
will fail because the new admin object has not yet been copied to the archiving database. This
is a rare edge case as most claims to be archived are old, closed, claims which have not been
altered for a long time. The chances of hitting this race condition can be minimized by
explicitly running the archive batch process before calling this method, though this is
expensive and is not recommended as a general practice.
&lt;p&gt;
Throws SOAPException if claims cannot be scheduled for archive because they cannot be found,
are closed or because an archive work item could not be created. If any of the claims is not
found or is not closed then the call fails before attempting to archive any other claims.
However if all the claims are present and closed it is possible, though very unlikely, for
some work items to be created successfully and others to fail.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#scheduleForArchive} instead.</wsdl:documentation>
      <wsdl:input name="scheduleForArchiveRequest" message="impl:IClaimAPI-scheduleForArchiveRequest"/>
      <wsdl:output name="scheduleForArchiveResponse" message="impl:IClaimAPI-scheduleForArchiveResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="scheduleForArchiveByPublicId" parameterOrder="publicIds">
      <wsdl:documentation>Schedules the claims with the given public ids for archive. The claims are looked up and,
providing they are closed, are immediately scheduled for archive by creating a high priority
work item that will be picked up by the archiving work queue. Note that the archiving work
queue is processed asynchronously so it is unlikely that any of the claims will actually be
archived by the time this call returns.
&lt;p&gt;
There is a race condition that can affect this call. If a claim to be archived references a
newly created admin object, such as a new user, there is a chance the archiving of the claim
will fail because the new admin object has not yet been copied to the archiving database. This
is a rare edge case as most claims to be archived are old, closed, claims which have not been
altered for a long time. The chances of hitting this race condition can be minimized by
explicitly running the archive batch process before calling this method, though this is
expensive and is not recommended as a general practice.
&lt;p&gt;
Throws SOAPException if claims cannot be scheduled for archive because they cannot be found,
are closed or because an archive work item could not be created. If any of the claims is not
found or is not closed then the call fails before attempting to archive any other claims.
However if all the claims are present and closed it is possible, though very unlikely, for
some work items to be created successfully and others to fail.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#scheduleForArchiveByPublicID} instead.</wsdl:documentation>
      <wsdl:input name="scheduleForArchiveByPublicIdRequest" message="impl:IClaimAPI-scheduleForArchiveByPublicIdRequest"/>
      <wsdl:output name="scheduleForArchiveByPublicIdResponse" message="impl:IClaimAPI-scheduleForArchiveByPublicIdResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setPolicy" parameterOrder="claimPublicID policySummary">
      <wsdl:documentation>Cause the policy on the Claim to be set to a new policy instance found using the given information.
If the specified policy is already set on the claim, then the policy information will be refreshed.
NOTE: Changing the policy can have many side effects, especially if the old and new policies do not contain
the same set of sub-objects (such as vehicles). This method should be used with caution
NOTE2: The PolicySummary parameter should be populated with whatever information might be required to
retrieve the appropriate Policy from the Policy adapter. It need not be as fully populated as it would be
were it to be displayed in the UI.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#setPolicy} instead.</wsdl:documentation>
      <wsdl:input name="setPolicyRequest" message="impl:IClaimAPI-setPolicyRequest"/>
      <wsdl:output name="setPolicyResponse" message="impl:IClaimAPI-setPolicyResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="skipActivity" parameterOrder="activityPublicID">
      <wsdl:documentation>Skip the activity specified by the identifier.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#skipActivity} instead.</wsdl:documentation>
      <wsdl:input name="skipActivityRequest" message="impl:IClaimAPI-skipActivityRequest"/>
      <wsdl:output name="skipActivityResponse" message="impl:IClaimAPI-skipActivityResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IClaimFinancialsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>The Claim Financials API provides methods for importing claim financials
data when the system is using the "Financials View" integration mode and
for updating the status of a requested check when the system is using the
"Financials Entry" integration mode.</wsdl:documentation>
    <wsdl:operation name="addClaimFinancials" parameterOrder="transactionSet">
      <wsdl:documentation>Imports financial data for a single claim. This API should be used only
when financials entry happens outside ClaimCenter. Note that this method
executes Validation rules when committing to the database.
&lt;p/&gt;
Only transaction sets with status "approved" are allowed to be imported.
&lt;p/&gt;
All transactions in the transaction set must have a status of "submitted",
"pendingvoid", "voided", "pendingstop", "stopped", or "recoded".
&lt;p/&gt;
All checks in the transaction set must have a status of "requested",
"pendingvoid", "voided", "pendingstop", "stopped", "issued", or "cleared".</wsdl:documentation>
      <wsdl:input name="addClaimFinancialsRequest" message="impl:IClaimFinancialsAPI-addClaimFinancialsRequest"/>
      <wsdl:output name="addClaimFinancialsResponse" message="impl:IClaimFinancialsAPI-addClaimFinancialsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimFinancialsAPI-DataConversionException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimFinancialsAPI-EntityStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addClaimFinancials" parameterOrder="transactionSet exchangeRate exchangeRateDescription">
      <wsdl:documentation>Imports financial data for a single claim. This API should  be used only
when financials entry happens outside ClaimCenter. Note that this method
executes Validation rules when committing to the database.
&lt;p/&gt;
Only transaction sets with status "approved" are allowed to be imported.
&lt;p/&gt;
All transactions in the transaction set must have a status of "submitted",
"pendingvoid", "voided", "pendingstop", "stopped", or "recoded".
&lt;p/&gt;
All checks in the transaction set must have a status of "requested",
"pendingvoid", "voided", "pendingstop", "stopped", "issued", or "cleared".</wsdl:documentation>
      <wsdl:input name="addClaimFinancialsRequest1" message="impl:IClaimFinancialsAPI-addClaimFinancialsRequest1"/>
      <wsdl:output name="addClaimFinancialsResponse1" message="impl:IClaimFinancialsAPI-addClaimFinancialsResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimFinancialsAPI-DataConversionException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimFinancialsAPI-EntityStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addClaimFinancialsWithValidation" parameterOrder="transactionSetData checkForDuplicateChecks">
      <wsdl:documentation>Imports a single TransactionSet for a claim. Unlike addClaimFinancials(TransactionSetData), this method
submits the TransactionSet for approval, and fires Transaction Post-Setup rules
after the data is approved. This method runs Validation rules twice: before
submitting for approval, and when committing to the database.
&lt;p/&gt;
This method should be used as a means to create financial transactions in an automated way, since it runs the
imported data through the same steps as transactions entered through the UI.</wsdl:documentation>
      <wsdl:input name="addClaimFinancialsWithValidationRequest" message="impl:IClaimFinancialsAPI-addClaimFinancialsWithValidationRequest"/>
      <wsdl:output name="addClaimFinancialsWithValidationResponse" message="impl:IClaimFinancialsAPI-addClaimFinancialsWithValidationResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimFinancialsAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addClaimFinancialsWithValidation" parameterOrder="transactionSetData checkForDuplicateChecks exchangeRate exchangeRateDescription">
      <wsdl:documentation>Imports a single TransactionSet for a claim. Unlike addClaimFinancials(TransactionSetData), this method
submits the TransactionSet for approval, and fires Transaction Post-Setup rules
after the data is approved. This method runs Validation rules twice: before
submitting for approval, and when committing to the database.
&lt;p/&gt;
This method should be used as a means to create financial transactions in an automated way, since it runs the
imported data through the same steps as transactions entered through the UI.</wsdl:documentation>
      <wsdl:input name="addClaimFinancialsWithValidationRequest1" message="impl:IClaimFinancialsAPI-addClaimFinancialsWithValidationRequest1"/>
      <wsdl:output name="addClaimFinancialsWithValidationResponse1" message="impl:IClaimFinancialsAPI-addClaimFinancialsWithValidationResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IClaimFinancialsAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="applyForeignExchangeAdjustmentToCheck" parameterOrder="checkId newClaimAmount">
      <wsdl:documentation>Adjusts this check's claim and/or reporting amounts to the specified values. Such adjustments are intended for
cases where better values for the amounts are determined later, after the check is created and escalated. For
example, if a check is written from a claim-currency bank account, the amount actually deducted from
that account's balance will be determined by exchange rates in effect at the time the check clears. This method
allows, for example, the claim amounts of the payments to be adjusted to reflect that amount for which the check
actually cleared.Adjustments are distributed proportionally among the payment's line
items. For example, if the payment has four line items with claim amounts of $40, $20, $10, and $10 (a total of
$80), and &lt;code&gt;newClaimAmount&lt;/code&gt; is $100, then the claim amounts will be adjused to $50, $25, $12.50, and
$12.50. In this example, each claim amount was increased by 25% (equal to the total relative increase), and each
new claim amount comprises the same fraction of the total as it did before the adjustment.

In this variant of the method, only a claim amount is specified, and an adjustment to the reporting amount is
selected automatically. For example, if the reporting currency equals the transaction currency, then the reporting
amount is not adjusted. If the payment's claim is in the reporting currency, then the reporting amount is adjusted
to &lt;code&gt;newClaimAmount&lt;/code&gt;. Otherwise, the adjusted reporting amount is determined by converting
&lt;code&gt;newClaimAmount&lt;/code&gt; to the reporting currency using this payment's claim-to-reporting exchange rate.

When this method is called, the system must be configured in multicurrency mode and the check must:
&lt;ul&gt;
&lt;li&gt;have already been escalated and sent downstream but not been canceled or transferred
&lt;li&gt;not be part of a multi-payee (grouped) check
&lt;/ul&gt;

Foreign exchange adjustments only affect total incurred and total paid calculations.  They do not further erode reserves.</wsdl:documentation>
      <wsdl:input name="applyForeignExchangeAdjustmentToCheckRequest" message="impl:IClaimFinancialsAPI-applyForeignExchangeAdjustmentToCheckRequest"/>
      <wsdl:output name="applyForeignExchangeAdjustmentToCheckResponse" message="impl:IClaimFinancialsAPI-applyForeignExchangeAdjustmentToCheckResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimFinancialsAPI-EntityStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="applyForeignExchangeAdjustmentToCheck" parameterOrder="checkId newClaimAmount newReportingAmount">
      <wsdl:documentation>Adjusts this check's claim and/or reporting amounts to the specified values. Such adjustments are intended for
cases where better values for the amounts are determined later, after the check is created and escalated. For
example, if a check is written from a claim-currency bank account, the amount actually deducted from
that account's balance will be determined by exchange rates in effect at the time the check clears. This method
allows, for example, the claim amounts of the payments to be adjusted to reflect that amount for which the check
actually cleared. Null may be passed for &lt;code&gt;newClaimAmount&lt;/code&gt; or &lt;code&gt;newReportingAmount&lt;/code&gt;, in which
case no adjustment is made to that amount. Adjustments are distributed proportionally among the payment's line
items. For example, if the payment has four line items with claim amounts of $40, $20, $10, and $10 (a total of
$80), and &lt;code&gt;newClaimAmount&lt;/code&gt; is $100, then the claim amounts will be adjused to $50, $25, $12.50, and
$12.50. In this example, each claim amount was increased by 25% (equal to the total relative increase), and each
new claim amount comprises the same fraction of the total as it did before the adjustment. Adjustments to the claim
and reporting amounts are largely independent.

When this method is called, the system must be configured in multicurrency mode and the check must:
&lt;ul&gt;
&lt;li&gt;have already been escalated and sent downstream but not been canceled or transferred
&lt;li&gt;not be part of a multi-payee (grouped) check
&lt;/ul&gt;

Foreign exchange adjustments only affect total incurred and total paid calculations.  They do not further erode reserves.</wsdl:documentation>
      <wsdl:input name="applyForeignExchangeAdjustmentToCheckRequest1" message="impl:IClaimFinancialsAPI-applyForeignExchangeAdjustmentToCheckRequest1"/>
      <wsdl:output name="applyForeignExchangeAdjustmentToCheckResponse1" message="impl:IClaimFinancialsAPI-applyForeignExchangeAdjustmentToCheckResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimFinancialsAPI-EntityStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="applyForeignExchangeAdjustmentToPayment" parameterOrder="paymentId newClaimAmount">
      <wsdl:documentation>Adjusts this payment's claim and/or reporting amounts to the specified values. Such adjustments are intended for
cases where better values for the amounts are determined later, after the check is created and escalated. For
example, if a check is written from a claim-currency bank account, the amount actually deducted from
that account's balance will be determined by exchange rates in effect at the time the check clears. This method
allows, for example, the claim amount of the payment to be adjusted to reflect that amount for which the check
actually cleared.Adjustments are distributed proportionally among the payment's line
items. For example, if the payment has four line items with claim amounts of $40, $20, $10, and $10 (a total of
$80), and &lt;code&gt;newClaimAmount&lt;/code&gt; is $100, then the claim amounts will be adjused to $50, $25, $12.50, and
$12.50. In this example, each claim amount was increased by 25% (equal to the total relative increase), and each
new claim amount comprises the same fraction of the total as it did before the adjustment.

In this variant of the method, only a claim amount is specified, and an adjustment to the reporting amount is
selected automatically. For example, if the reporting currency equals the transaction currency, then the reporting
amount is not adjusted. If the payment's claim is in the reporting currency, then the reporting amount is adjusted
to &lt;code&gt;newClaimAmount&lt;/code&gt;. Otherwise, the adjusted reporting amount is determined by converting
&lt;code&gt;newClaimAmount&lt;/code&gt; to the reporting currency using this payment's claim-to-reporting exchange rate.

When this method is called, the system must be configured in multicurrency mode and the payment must:
&lt;ul&gt;
&lt;li&gt;be on a check that has already been escalated and sent downstream but not been canceled or transferred
&lt;li&gt;not have been recoded
&lt;li&gt;not be an offset payment
&lt;li&gt;not be part of a multi-payee (grouped) check
&lt;/ul&gt;

Foreign exchange adjustments only affect total incurred and total paid calculations.  They do not further erode reserves.</wsdl:documentation>
      <wsdl:input name="applyForeignExchangeAdjustmentToPaymentRequest" message="impl:IClaimFinancialsAPI-applyForeignExchangeAdjustmentToPaymentRequest"/>
      <wsdl:output name="applyForeignExchangeAdjustmentToPaymentResponse" message="impl:IClaimFinancialsAPI-applyForeignExchangeAdjustmentToPaymentResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimFinancialsAPI-EntityStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="applyForeignExchangeAdjustmentToPayment" parameterOrder="paymentId newClaimAmount newReportingAmount">
      <wsdl:documentation>Adjusts this payment's claim and/or reporting amounts to the specified values. Such adjustments are intended for
cases where better values for the amounts are determined later, after the check is created and escalated. For
example, if a check is written from a claim-currency bank account, the amount actually deducted from
that account's balance will be determined by exchange rates in effect at the time the check clears. This method
allows, for example, the claim amount of the payment to be adjusted to reflect that amount for which the check
actually cleared. Null may be passed for &lt;code&gt;newClaimAmount&lt;/code&gt; or &lt;code&gt;newReportingAmount&lt;/code&gt;, in which
case no adjustment is made to that amount. Adjustments are distributed proportionally among the payment's line
items. For example, if the payment has four line items with claim amounts of $40, $20, $10, and $10 (a total of
$80), and &lt;code&gt;newClaimAmount&lt;/code&gt; is $100, then the claim amounts will be adjused to $50, $25, $12.50, and
$12.50. In this example, each claim amount was increased by 25% (equal to the total relative increase), and each
new claim amount comprises the same fraction of the total as it did before the adjustment. Adjustments to the claim
and reporting amounts are largely independent.

When this method is called, the system must be configured in multicurrency mode and the payment must:
&lt;ul&gt;
&lt;li&gt;be on a check that has already been escalated and sent downstream but not been canceled or transferred
&lt;li&gt;not have been recoded
&lt;li&gt;not be an offset payment
&lt;li&gt;not be part of a multi-payee (grouped) check
&lt;/ul&gt;

Foreign exchange adjustments only affect total incurred and total paid calculations.  They do not further erode reserves.</wsdl:documentation>
      <wsdl:input name="applyForeignExchangeAdjustmentToPaymentRequest1" message="impl:IClaimFinancialsAPI-applyForeignExchangeAdjustmentToPaymentRequest1"/>
      <wsdl:output name="applyForeignExchangeAdjustmentToPaymentResponse1" message="impl:IClaimFinancialsAPI-applyForeignExchangeAdjustmentToPaymentResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimFinancialsAPI-EntityStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="denyCheck" parameterOrder="checkId">
      <wsdl:documentation>API for performing a downstream denial of the checks.
A denied check can be resubmitted as is, deleted, or left in denied state.
&lt;b&gt;Important Note: Only single payee checks can be denied&lt;/b&gt;</wsdl:documentation>
      <wsdl:input name="denyCheckRequest" message="impl:IClaimFinancialsAPI-denyCheckRequest"/>
      <wsdl:output name="denyCheckResponse" message="impl:IClaimFinancialsAPI-denyCheckResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimFinancialsAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimFinancialsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="denyRecovery" parameterOrder="recoveryId">
      <wsdl:documentation>API for performing a downstream denial of the recovery transaction.
A denied recovery can be resubmitted as is, deleted, or left in denied state.</wsdl:documentation>
      <wsdl:input name="denyRecoveryRequest" message="impl:IClaimFinancialsAPI-denyRecoveryRequest"/>
      <wsdl:output name="denyRecoveryResponse" message="impl:IClaimFinancialsAPI-denyRecoveryResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IClaimFinancialsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimAmounts" parameterOrder="claimNumbers financialsCalculationType costCategory costType">
      <wsdl:documentation>Fetches financials information for a set of claims (designated by claim number) and based on a given financials
calculation type, cost type, and cost category.  Note that not all financials values map to a specific cost category
or cost type, so if you need the overall information for a claim those parameters should be left null.</wsdl:documentation>
      <wsdl:input name="getClaimAmountsRequest" message="impl:IClaimFinancialsAPI-getClaimAmountsRequest"/>
      <wsdl:output name="getClaimAmountsResponse" message="impl:IClaimFinancialsAPI-getClaimAmountsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimFinancialsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
      <wsdl:fault name="SOAPSenderException" message="impl:IClaimFinancialsAPI-SOAPSenderException"/>
    </wsdl:operation>
    <wsdl:operation name="getExposureAmounts" parameterOrder="exposureIDs financialsCalculationType costCategory costType">
      <wsdl:documentation>Fetches financials information for a set of exposures (designated by public id) and based on a given financials
calculation type, cost type, and cost category.  Note that not all financials values map to a specific cost category
or cost type, so if you need the overall information for an exposure those parameters should be left null.</wsdl:documentation>
      <wsdl:input name="getExposureAmountsRequest" message="impl:IClaimFinancialsAPI-getExposureAmountsRequest"/>
      <wsdl:output name="getExposureAmountsResponse" message="impl:IClaimFinancialsAPI-getExposureAmountsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IClaimFinancialsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
      <wsdl:fault name="SOAPSenderException" message="impl:IClaimFinancialsAPI-SOAPSenderException"/>
    </wsdl:operation>
    <wsdl:operation name="stopAndReissueCheck" parameterOrder="checkID reason">
      <wsdl:documentation>Stops and reissues one Check in a CheckGroup. Each Check in a CheckGroup represents one payee (or set of
joint payees)--and therefore one physical check--for a multi-payee "check". This method requires that the
following criteria are met:
&lt;ul&gt;
&lt;li&gt;The user has the "stop" permission.
&lt;li&gt;The original Check is Reissuable and has one of these statuses:&lt;ul&gt;
&lt;li&gt; {@link TransactionStatus#TC_REQUESTING}
&lt;li&gt; {@link TransactionStatus#TC_REQUESTED}
&lt;li&gt; {@link TransactionStatus#TC_ISSUED}
&lt;li&gt; {@link TransactionStatus#TC_NOTIFYING}
&lt;/ul&gt;
&lt;/ul&gt;
A new, replacement Check is created, the status of the original Check is set to
{@link TransactionStatus#TC_PENDINGSTOP}, and then reissuance proceeds as follows:
&lt;ol&gt;
&lt;li&gt;If the original Check was the primary Check for the CheckGroup, the new Check becomes the primary Check
and the original Check is converted to a secondary Check (still in the same CheckGroup), and all of the
Payments and Deductions are moved to the new Check
&lt;li&gt;Regardless of whether the original Check already had a CheckPortion, a new, fixed-amount CheckPortion is
created for it so that, in case it was not already defined by a fixed portion, its amount will not
fluctuate (e.g., if it previously used a percentage portion)
&lt;li&gt;A CheckRpt is created for the new Check
&lt;li&gt;On the new Check, CheckNumber and IssueDate are set to null, ScheduledSendDate is set to today, and Status is
is set to {@link TransactionStatus#TC_AWAITINGSUBMISSION}
&lt;/ol&gt;</wsdl:documentation>
      <wsdl:input name="stopAndReissueCheckRequest" message="impl:IClaimFinancialsAPI-stopAndReissueCheckRequest"/>
      <wsdl:output name="stopAndReissueCheckResponse" message="impl:IClaimFinancialsAPI-stopAndReissueCheckResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="stopCheck" parameterOrder="checkID">
      <wsdl:documentation>Issues a stop payment on a check.  Offsetting reserves are created only if
the payment is not a supplement (since supplement payments never affect
open reserves in the first place) and either of the following holds:
- the payment's exposure is closed (open reserves should always be zero for a closed exposure)
- the open reserves for the payment's exposure's costtype is zero
Offsetting reserves are included in this check's CheckSet.
&lt;p/&gt;
The status of the check and all payments on the check are set to pending
stop.  The status of any offsetting reserves is set to pending submission.
&lt;p/&gt;
If this check belongs to a CheckGroup, then all checks in the group are stopped.
&lt;p/&gt;
This action does not require approval.</wsdl:documentation>
      <wsdl:input name="stopCheckRequest" message="impl:IClaimFinancialsAPI-stopCheckRequest"/>
      <wsdl:output name="stopCheckResponse" message="impl:IClaimFinancialsAPI-stopCheckResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="stopCheck" parameterOrder="checkID reason">
      <wsdl:documentation>Issues a stop payment on a check.  Offsetting reserves are created only if
the payment is not a supplement (since supplement payments never affect
open reserves in the first place) and either of the following holds:
- the payment's exposure is closed (open reserves should always be zero for a closed exposure)
- the open reserves for the payment's exposure's costtype is zero
Offsetting reserves are included in this check's CheckSet.
&lt;p/&gt;
The status of the check and all payments on the check are set to pending
stop.  The status of any offsetting reserves is set to pending submission.
&lt;p/&gt;
If this check belongs to a CheckGroup, then all checks in the group are stopped.
&lt;p/&gt;
This action does not require approval.</wsdl:documentation>
      <wsdl:input name="stopCheckRequest1" message="impl:IClaimFinancialsAPI-stopCheckRequest1"/>
      <wsdl:output name="stopCheckResponse1" message="impl:IClaimFinancialsAPI-stopCheckResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="updateCheckStatus" parameterOrder="checkID checkNumber issueDate status extensions">
      <wsdl:documentation>Updates the status of a check that has been requested by a user in ClaimCenter.
For example, this API should be invoked when the status of the check
changes from "requested" to "issued".  This should be used only when
financials entry happens in ClaimCenter.
&lt;p/&gt;
Allowed check status are "issued", "cleared", "voided", and "stopped".  The "Issued" and "Cleared" statuses
are not legal options if this check is part of a multi-payee check group that has been voided or stopped.
&lt;p/&gt;
If the check status is changed to "voided" or "stopped", the status on the
payments are updated to this, as well.
&lt;p/&gt;
checkNumber and issueDate is used when updating the check status to "issued".
For other updates, these two fields can be left as NULL.
&lt;p/&gt;
Note that if the check is pending stop or pending void and the new status
is issued or cleared, the statuses of the check and its payments are updated
and a warning activity is created and assigned to the user who attempted to
void or stop the check so that the user knows that the check was not voided.</wsdl:documentation>
      <wsdl:input name="updateCheckStatusRequest" message="impl:IClaimFinancialsAPI-updateCheckStatusRequest"/>
      <wsdl:output name="updateCheckStatusResponse" message="impl:IClaimFinancialsAPI-updateCheckStatusResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="EntityStateException" message="impl:IClaimFinancialsAPI-EntityStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="voidAndReissueCheck" parameterOrder="checkID reason">
      <wsdl:documentation>Voids and reissues one Check in a CheckGroup. Each Check in a CheckGroup represents one payee (or set of
joint payees)--and therefore one physical check--for a multi-payee "check". This method requires that the
following criteria are met:
&lt;ul&gt;
&lt;li&gt;The user has the "void" permission.
&lt;li&gt;If the Check was cleared, the user has the "voidclearedpmt" permission.
&lt;li&gt;The Check is Reissuable and has one of these statuses:&lt;ul&gt;
&lt;li&gt; {@link TransactionStatus#TC_REQUESTING}
&lt;li&gt; {@link TransactionStatus#TC_REQUESTED}
&lt;li&gt; {@link TransactionStatus#TC_ISSUED}
&lt;li&gt; {@link TransactionStatus#TC_NOTIFYING}
&lt;li&gt; {@link TransactionStatus#TC_CLEARED}
&lt;/ul&gt;
&lt;/ul&gt;
A new, replacement Check is created, the status of the original Check is set to
{@link TransactionStatus#TC_PENDINGVOID}, and then reissuance proceeds as follows:
&lt;ol&gt;
&lt;li&gt;If the original Check was the primary Check for the CheckGroup, the new Check becomes the primary Check
and the original Check is converted to a secondary Check (still in the same CheckGroup), and all of the
Payments and Deductions are moved to the new Check
&lt;li&gt;Regardless of whether the original Check already had a CheckPortion, a new, fixed-amount CheckPortion is
created for it so that, in case it was not already defined by a fixed portion, its amount will not
fluctuate (e.g., if it previously used a percentage portion)
&lt;li&gt;A CheckRpt is created for the new Check
&lt;li&gt;On the new Check, CheckNumber and IssueDate are set to null, ScheduledSendDate is set to today, and Status is
is set to {@link TransactionStatus#TC_AWAITINGSUBMISSION}
&lt;/ol&gt;</wsdl:documentation>
      <wsdl:input name="voidAndReissueCheckRequest" message="impl:IClaimFinancialsAPI-voidAndReissueCheckRequest"/>
      <wsdl:output name="voidAndReissueCheckResponse" message="impl:IClaimFinancialsAPI-voidAndReissueCheckResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="voidCheck" parameterOrder="checkID">
      <wsdl:documentation>&lt;p/&gt;
If this check belongs to a CheckGroup, then all checks in the group are voided.
&lt;p/&gt;
This action does not require approval.</wsdl:documentation>
      <wsdl:input name="voidCheckRequest" message="impl:IClaimFinancialsAPI-voidCheckRequest"/>
      <wsdl:output name="voidCheckResponse" message="impl:IClaimFinancialsAPI-voidCheckResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="voidCheck" parameterOrder="checkID reason">
      <wsdl:documentation>Voids a check. Creates offsetting payments to offset each payment on the check.
Also creates offsetting reserves if a payment on the check is
eroding and either of the following is true:
- the payment's exposure is closed (open reserves should always be zero for a closed exposure)
- open reserves on the payment's ReserveLine would become negative without an offsetting reserve
Offsetting reserves are included in this check's CheckSet.
&lt;p/&gt;
The status of the check and the original payments on the check are set to pending
void. The offsetting payments are set to Submitting status. The status of any offsetting
reserves is set to submitting.
&lt;p/&gt;
If this check belongs to a CheckGroup, then all checks in the group are voided.
&lt;p/&gt;
This action does not require approval.</wsdl:documentation>
      <wsdl:input name="voidCheckRequest1" message="impl:IClaimFinancialsAPI-voidCheckRequest1"/>
      <wsdl:output name="voidCheckResponse1" message="impl:IClaimFinancialsAPI-voidCheckResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IClaimFinancialsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IClaimFinancialsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IClaimFinancialsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IContactAutoSyncAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>API for submitting Contacts for automatic synchronization from an external system
(This is normally used by ContactManager, but can be used by any system implementing linking
and sync-ing via IAddressBookAPI)

This webservice has been deprecated in ClaimCenter 7.0 and replaced with the ContactAPI
@deprecated Use gw.webservice.cc.contact.ContactAPI
</wsdl:documentation>
    <wsdl:operation name="autoSyncContactWithABUID" parameterOrder="addressBookUID">
      <wsdl:documentation>Submits the Contacts associated with this AddressBookUID to be automatically synchronized.
If the system config parameter, "InstantaneousContactAutoSync" is set to true, then system
will begin synchronizing contacts immediately.  If the parameter is set to false, the system
will add the AddressBookUID to the Contact Autosync work queue and will start synchronizing
contacts when the batch job is next run.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="autoSyncContactWithABUIDRequest" message="impl:IContactAutoSyncAPI-autoSyncContactWithABUIDRequest"/>
      <wsdl:output name="autoSyncContactWithABUIDResponse" message="impl:IContactAutoSyncAPI-autoSyncContactWithABUIDResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IContactAutoSyncAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IContactAutoSyncAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IContactAutoSyncAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IDataExtractionAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>Guidewire Software
Data extraction API that uses Gosu to render the results
@deprecated This web service is deprecated and should be replaced by custom web services, which can be tailored to take exactly the right parameters and to construct a string using Gosu code or templates
</wsdl:documentation>
    <wsdl:operation name="findClaimAndRenderWithTemplateByName" parameterOrder="policyNumber policyId params templateFileName">
      <wsdl:documentation>Finds the claims with the given policy number and then evaluates the named template. The list of matching claims
is available as "claim" in the evaluation context of the template. Also, the array of parameters is available in
the context as a Map called "parameters"
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="findClaimAndRenderWithTemplateByNameRequest" message="impl:IDataExtractionAPI-findClaimAndRenderWithTemplateByNameRequest"/>
      <wsdl:output name="findClaimAndRenderWithTemplateByNameResponse" message="impl:IDataExtractionAPI-findClaimAndRenderWithTemplateByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataExtractionAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataExtractionAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataExtractionAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataExtractionAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="findCreatedExposuresAndRenderWithTemplateByName" parameterOrder="startDate endDate templateFileName">
      <wsdl:documentation>Finds the exposures created in the given time period and then evaluates the named template. The list of exposures
is available as "exposures" in the evaluation context of the template. Also, the array of parameters is available
in the context as a Map called "parameters"
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="findCreatedExposuresAndRenderWithTemplateByNameRequest" message="impl:IDataExtractionAPI-findCreatedExposuresAndRenderWithTemplateByNameRequest"/>
      <wsdl:output name="findCreatedExposuresAndRenderWithTemplateByNameResponse" message="impl:IDataExtractionAPI-findCreatedExposuresAndRenderWithTemplateByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataExtractionAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataExtractionAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataExtractionAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataExtractionAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="findEntityAndRenderWithTemplateByName" parameterOrder="entityType entityPublicId params templateName">
      <wsdl:documentation>Finds the specified entity and evaluates the given template, given by its name. The entity is available as
"entityRoot" in the evaluation context of the template. Also, the array of parameters is available in the
context as a Map called "parameters"
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="findEntityAndRenderWithTemplateByNameRequest" message="impl:IDataExtractionAPI-findEntityAndRenderWithTemplateByNameRequest"/>
      <wsdl:output name="findEntityAndRenderWithTemplateByNameResponse" message="impl:IDataExtractionAPI-findEntityAndRenderWithTemplateByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataExtractionAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataExtractionAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataExtractionAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataExtractionAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="viewClaimAndRenderWithTemplateByName" parameterOrder="claimNumber claimId params templateFileName">
      <wsdl:documentation>Looks up a claim by number or public id and evaluates the named template. The claim is available as "claim"
in the evaluation context of the template. Also, the array of parameters is available in the context as a Map
called "parameters"
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="viewClaimAndRenderWithTemplateByNameRequest" message="impl:IDataExtractionAPI-viewClaimAndRenderWithTemplateByNameRequest"/>
      <wsdl:output name="viewClaimAndRenderWithTemplateByNameResponse" message="impl:IDataExtractionAPI-viewClaimAndRenderWithTemplateByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataExtractionAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataExtractionAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataExtractionAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataExtractionAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="viewUserAndRenderWithTemplateByName" parameterOrder="userName getActivities getClaims params templateFileName">
      <wsdl:documentation>Finds the user with the given user name and then evaluates the named template. The user is available as "user"
in the evaluation context of the template. Optionally also makes available the user's activities ("activities")
and claims ("claims"). The array of parameters is available in the context as a Map called "parameters"
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="viewUserAndRenderWithTemplateByNameRequest" message="impl:IDataExtractionAPI-viewUserAndRenderWithTemplateByNameRequest"/>
      <wsdl:output name="viewUserAndRenderWithTemplateByNameResponse" message="impl:IDataExtractionAPI-viewUserAndRenderWithTemplateByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataExtractionAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataExtractionAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataExtractionAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataExtractionAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IDataObjectAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>Deprecated interface. There is no replacement. Instead, you should write your own Gosu class and publish
it as a web service by marking it with the &lt;code&gt;@RpcWebService&lt;/code&gt; annotation.
&lt;p/&gt;
Methods in this class use XPath.  The notation draws heavily from
the new "Service Data Object" spec from BEA and IBM. See their
&lt;a href="http://xml.coverpages.org/IBM-BEA-SDOv10.pdf"&gt;Service Data Ojbects&lt;/a&gt;
specification.
Please note that certain characters need to be escaped in XPath notation.  Specifically:
' goes to &amp;apos; &lt;br/&gt;
" goes to &amp;qout; &lt;br/&gt;
&lt; goes to &amp;lt; &lt;br/&gt;
&gt; goes to &amp;gt; &lt;br/&gt;
&amp; goes to &amp;amp;  &lt;br/&gt;

@author mshaw
@version Jan 16, 2004 4:15:21 PM
@deprecated Write your own Gosu class and publish it as a web service.
</wsdl:documentation>
    <wsdl:operation name="find" parameterOrder="entityType alias whereClause filter">
      <wsdl:documentation>&lt;p&gt;
Find a set of objects of the same type using the Gosu finder notation.
See the &lt;i&gt;Gosu Reference Guide&lt;/i&gt; for details on how to build a &lt;b&gt;where&lt;/b&gt; clause.
The result set's size is capped by default at 100 objects. To override
the default, set the &lt;code&gt;GW_MAX_OBJECT_RETRIEVAL_PROPERTY&lt;/code&gt; property in the SOAP
header using &lt;code&gt;SOAPOutboundHandler&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;This method is deprecated&lt;/b&gt;. Returning all the matching object data without first knowing the
size of the matching set can be expensive. Instead, use &lt;code&gt;findIds&lt;/code&gt; to find the matching set of ids and
&lt;code&gt;getObjectById&lt;/code&gt; or &lt;code&gt;getPathValues&lt;/code&gt; to load the associated entity data.
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="findRequest" message="impl:IDataObjectAPI-findRequest"/>
      <wsdl:output name="findResponse" message="impl:IDataObjectAPI-findResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="findIds" parameterOrder="entityType alias whereClause">
      <wsdl:documentation>&lt;p&gt;
Find a set of public Ids of the same type using the Gosu finder
notation. See the &lt;i&gt;Gosu Reference Guide&lt;/i&gt; for details on how to build a
where clause. The size of the result set is capped by default at 100
objects. To override this default set the &lt;code&gt;GW_MAX_OBJECT_RETRIEVAL_PROPERTY&lt;/code&gt;
property in the soap header using &lt;code&gt;SOAPOutboundHandler&lt;/code&gt;.
&lt;/p&gt;
&lt;h4&gt;Example&lt;/H4&gt;
In the following example,  a Gosu finder expression is translated into a call to &lt;code&gt;findIds()&lt;/code&gt;:
The following Gosu expression:
&lt;/P&gt;
&lt;pre&gt;
&lt;code&gt;findIds(Claim with c in Claim where c.LossType == "AUTO" and c.AccidentType != "46")&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Becomes the following with IDataObjectAPI call:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;findIds("Claim", "c", "c.LossType == \"AUTO\" and c.AccidentType != \"46\"")&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;
Use &lt;code&gt;getObjectById&lt;/code&gt; to load the associated object data.
&lt;/p&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="findIdsRequest" message="impl:IDataObjectAPI-findIdsRequest"/>
      <wsdl:output name="findIdsResponse" message="impl:IDataObjectAPI-findIdsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getNextSequenceNumber" parameterOrder="sequenceKey minValue">
      <wsdl:documentation>&lt;p&gt;
Get the next sequence number for a sequence key.
&lt;/p&gt;&lt;p&gt;
If this is a new sequence key a new sequence is created with initial value
&lt;i&gt;minValue&lt;/i&gt;. If the sequence exists then the next number in the sequence is
returned. The sequence numbers are unique across a cluster.
&lt;/p&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getNextSequenceNumberRequest" message="impl:IDataObjectAPI-getNextSequenceNumberRequest"/>
      <wsdl:output name="getNextSequenceNumberResponse" message="impl:IDataObjectAPI-getNextSequenceNumberResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getObjectById" parameterOrder="entityType publicId filter">
      <wsdl:documentation>&lt;p&gt;
Get an object graph by the public Id of the root object.
&lt;/p&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getObjectByIdRequest" message="impl:IDataObjectAPI-getObjectByIdRequest"/>
      <wsdl:output name="getObjectByIdResponse" message="impl:IDataObjectAPI-getObjectByIdResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getPathValues" parameterOrder="entityType publicId paths">
      <wsdl:documentation>&lt;p&gt;
Returns properties accessed from a root entity. Specify the paths as
strings. A single path may return multiple values if the path traverses an
array. Multiple paths return a two-dimensional array of values,
an array for each path specified.
&lt;/p&gt;&lt;p&gt;
A path can traverse any entity property but only a writeable property's
value can be set. This is the same set of properties that is accessible
from Gosu. See the Gosu API Reference in Studio for a list of
accessible properties. The set of available properties is a super-set of
the "exportable" properties that exist on SOAP entities.
&lt;/p&gt;&lt;p&gt;
The path leaf must reference a "simple" property (not an entity or
array) but the path can traverse through entities and arrays.
&lt;/p&gt;&lt;p&gt;
Specify the path in XPath notation. The notation draws heavily from
the new "Service Data Object" spec from BEA and IBM. See their
&lt;a href="http://xml.coverpages.org/IBM-BEA-SDOv10.pdf"&gt;Service Data Ojbects&lt;/a&gt;
specification.
&lt;/p&gt;&lt;p&gt;
&lt;b&gt;NOTE:&lt;/b&gt; Array elements are indexed starting at 1 not 0.
&lt;/p&gt;
&lt;h4&gt;Example&lt;/h4&gt;
&lt;p&gt;
Get the names of all the users in a group.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
String[] path = new String[1]
path[0] = "users/user/credential/username"
api.getPathValues("group", "315", path)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Get the public Ids of all the users in a group with a LoadFactor &gt; 50
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
String[] path = new String[1]
path[0] = "users[LoadFactor &gt;= 50]/user/publicId"
api.getPathValues("group", "315", path)
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="getPathValuesRequest" message="impl:IDataObjectAPI-getPathValuesRequest"/>
      <wsdl:output name="getPathValuesResponse" message="impl:IDataObjectAPI-getPathValuesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setPathValues" parameterOrder="entityType publicId add update remove">
      <wsdl:documentation>&lt;p&gt;
Add, update, and remove values on entities relative to a root entity. All
changes are made in the same transaction. If one change fails none of
the changes are applied.
&lt;/p&gt;&lt;p&gt;
A path can traverse any entity property but only a writeable property's
value can be set. An entity's writeable properties are the same set of
properties accessible from Gosu. See the API Help in Studio for a list of
accessible properties. The set of accessible properties is a super-set of
the "exportable" properties available to SOAP entities.
&lt;/p&gt;&lt;p&gt;
A path's leaf must reference a "simple" property (not an entity or
array) but the path can traverse through entities and arrays.
&lt;/p&gt;&lt;p&gt;
Specify the path in XPath notation. The notation draws heavily from
the &lt;a href="http://xml.coverpages.org/IBM-BEA-SDOv10.pdf"&gt;"Service Data Object"&lt;/a&gt;
specification put out by BEA and IBM.

&lt;/p&gt;&lt;p&gt;
&lt;b&gt;NOTE:&lt;/b&gt; Array elements are indexed starting at 1 not 0.
&lt;/p&gt;
&lt;H4&gt;Add Example&lt;/H4&gt;
&lt;p&gt;
This example associates an existing user to a group by adding a new &lt;code&gt;GroupUser&lt;/code&gt; entity
linking the two. The value of &lt;code&gt;newGroupUser/user&lt;/code&gt; on the &lt;code&gt;newGroupUser&lt;/code&gt; is
in the form &lt;i&gt;entityType:publicId&lt;/i&gt;, where &lt;code&gt;user&lt;/code&gt; is the &lt;i&gt;entityType&lt;/i&gt; and
&lt;code&gt;74&lt;/code&gt; is the user's &lt;i&gt;publicId&lt;/i&gt;.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
InsertPathValue[] add = new InsertPathValue[1]
add[0] = new InsertPathValue()
add[0].setPath("users")
add[0].setRefId("newGroupUser")
PathValue[] update = new PathValue[2]
update[0] = new PathValue()
update[0].setPath("newGroupUser/user")
update[0].setValue("user:74")
update[1] = new PathValue()
update[1].setPath("newGroupUser/loadfactor")
update[1].setValue("80")
String remove = new String[0]
api.setPathValues("group", "315", add, update, remove)
&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;H4&gt;Remove Example&lt;/H4&gt;
&lt;p&gt;
Disassociate a user from a group by removing the &lt;code&gt;GroupUser&lt;/code&gt; entity that
links them. &lt;code&gt;74&lt;/code&gt; is &lt;i&gt;publicId&lt;/i&gt; of the user being removed from the group.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
InsertPathValue[] add = new InsertPathValue[0]
PathValue[] update = new PathValue[0]
String[] remove = new String[1]
remove[0] = "users[user/publicId='74']"
api.setPathValues("group", "315", add, update, remove)
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setPathValuesRequest" message="impl:IDataObjectAPI-setPathValuesRequest"/>
      <wsdl:output name="setPathValuesResponse" message="impl:IDataObjectAPI-setPathValuesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setPathValues" parameterOrder="entityType publicId pathValues">
      <wsdl:documentation>&lt;p&gt;
Update values on entities relative to a root entity. All changes will be
made in the same transaction. If one change fails none of the changes will
be applied.
&lt;/p&gt;&lt;p&gt;
A path can traverse any entity property but only a writeable property's
value can be set. This is the same set of properties that is accessible
from Gosu. This &lt;i&gt;Gosu API Reference&lt;/i&gt; contains a list of
accessible properties. The set of available properties is a super-set of
the "exportable" properties that exist on SOAP entities.
&lt;/p&gt;&lt;p&gt;
The leaf of a path must reference a "simple" property (not an entity or
array) but the path can traverse through entities and arrays.
&lt;/p&gt;&lt;p&gt;
Specify the path in XPath notation. The notation draws heavily from
the &lt;a href="http://xml.coverpages.org/IBM-BEA-SDOv10.pdf"&gt;"Service Data Object"&lt;/a&gt;
specification put out by BEA and IBM.
&lt;/p&gt;&lt;p&gt;
&lt;b&gt;NOTE:&lt;/b&gt; Array elements are indexed starting at 1 not 0.
&lt;/p&gt;
&lt;H4&gt;Example&lt;/H4&gt;
&lt;p&gt;
Change the load factor of a group's parent.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
PathValue[] update = new PathValue[1]
update[0].setPath("parent/group/loadfactor")
update[0].setValue("50")
api.setPathValues("group", "315", update)
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;@deprecated </wsdl:documentation>
      <wsdl:input name="setPathValuesRequest1" message="impl:IDataObjectAPI-setPathValuesRequest1"/>
      <wsdl:output name="setPathValuesResponse1" message="impl:IDataObjectAPI-setPathValuesResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IDataObjectAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IDataObjectAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IDataObjectAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IDataObjectAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IExposureAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IExposureAPI encapsulates the mechanisms available for the manipulation of exposures in the system. External
systems make ClaimCenter aware of new exposures by associating them with or adding them to a claim.
@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI} instead.
</wsdl:documentation>
    <wsdl:operation name="addActivityFromPattern" parameterOrder="exposureID activityPatternId">
      <wsdl:documentation>Adds an activity to a exposure using an activity pattern. First, attempts to generate an activity from the given
pattern.  The activity pattern must be from the list of activity patterns for the given exposure's claim that meet
the following criteria:
&lt;p/&gt;
1) if the exposure's claim is closed, then the activity pattern must be available to closed claims&lt;br&gt;
2) the activity pattern's loss type must either be null, or must match the exposure's claim's loss type.
&lt;p/&gt;
If the activity pattern doesn't match the above criteria, an EntityStateException is thrown.
&lt;p/&gt;
The new activity is initialized with the following fields from the activity pattern:
Pattern, Type, Subject, Description, Mandatory, Priority, Recurring, Command
&lt;p/&gt;
The activity's target date is calculated using the pattern's targetStartPoint, TargetDays,
TargetHours, and TargetIncludeDays fields.  The activity's escalation date is calculated using the pattern's
escalationStartPoint, EscalationDays, EscalationHours, and EscalationIncludeDays fields.  If those fields aren't
included in the activity pattern, then the target and/or escalation date won't be set.  If the target date is
calculated to be after the escalation date, then the target date is set to be the same as the escalation date.
&lt;p/&gt;
The activity's exposure ID is set to the given exposure ID.  The activity's previousUserID is set to the current
user.
&lt;p/&gt;
The newly created activity is then assigned to a group and/or user using the Assignment Engine.  Finally, the
activity is saved in the database, and the String of the newly created activity is returned.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createActivityFromPattern} instead.</wsdl:documentation>
      <wsdl:input name="addActivityFromPatternRequest" message="impl:IExposureAPI-addActivityFromPatternRequest"/>
      <wsdl:output name="addActivityFromPatternResponse" message="impl:IExposureAPI-addActivityFromPatternResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IExposureAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IExposureAPI-DataConversionException"/>
      <wsdl:fault name="EntityStateException" message="impl:IExposureAPI-EntityStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IExposureAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IExposureAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addDocument" parameterOrder="exposureID doc">
      <wsdl:documentation>Associates the given document with the claim specified by the identifier.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createDocument} instead.</wsdl:documentation>
      <wsdl:input name="addDocumentRequest" message="impl:IExposureAPI-addDocumentRequest"/>
      <wsdl:output name="addDocumentResponse" message="impl:IExposureAPI-addDocumentResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IExposureAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IExposureAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IExposureAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IExposureAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IExposureAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IExposureAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addNote" parameterOrder="exposureID note">
      <wsdl:documentation>Associates the given note with the exposure identified by the given identifier.  Also associates the note with
the exposure's claim.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#createNote} instead.</wsdl:documentation>
      <wsdl:input name="addNoteRequest" message="impl:IExposureAPI-addNoteRequest"/>
      <wsdl:output name="addNoteResponse" message="impl:IExposureAPI-addNoteResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IExposureAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IExposureAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IExposureAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IExposureAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IExposureAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IExposureAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="closeExposure" parameterOrder="exposureID outcome reason">
      <wsdl:documentation>Closes the exposure specified by the identifier.  Uses the same logic that governs the Close Exposure screen.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#closeExposure} instead.</wsdl:documentation>
      <wsdl:input name="closeExposureRequest" message="impl:IExposureAPI-closeExposureRequest"/>
      <wsdl:output name="closeExposureResponse" message="impl:IExposureAPI-closeExposureResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IExposureAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IExposureAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IExposureAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IExposureAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IExposureAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IExposureAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getExposureState" parameterOrder="exposureID">
      <wsdl:documentation>Returns the code of the exposure's state (a typekey from the ExposureState typelist) as a string.  If for some
reason the exposure's state is not defined, returns a null string.
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#getExposureState} instead.</wsdl:documentation>
      <wsdl:input name="getExposureStateRequest" message="impl:IExposureAPI-getExposureStateRequest"/>
      <wsdl:output name="getExposureStateResponse" message="impl:IExposureAPI-getExposureStateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IExposureAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IExposureAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IExposureAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IExposureAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IExposureAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IExposureAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="reopenExposure" parameterOrder="exposureID reason">
      <wsdl:documentation>Reopens the exposure specified by the identifier.  Uses the same logic that governs the Reopen Exposure screen
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#reopenExposure} instead.</wsdl:documentation>
      <wsdl:input name="reopenExposureRequest" message="impl:IExposureAPI-reopenExposureRequest"/>
      <wsdl:output name="reopenExposureResponse" message="impl:IExposureAPI-reopenExposureResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IExposureAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IExposureAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IExposureAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IExposureAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IExposureAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IExposureAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="reopenExposure" parameterOrder="exposureID reasonType reason">
      <wsdl:documentation>Reopens the exposure specified by the identifier.  Uses the same logic that governs the Reopen Exposure screen
&lt;br&gt;@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI#reopenExposure} instead.</wsdl:documentation>
      <wsdl:input name="reopenExposureRequest1" message="impl:IExposureAPI-reopenExposureRequest1"/>
      <wsdl:output name="reopenExposureResponse1" message="impl:IExposureAPI-reopenExposureResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IExposureAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IExposureAPI-DataConversionException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IExposureAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IExposureAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IExposureAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IExposureAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IGroupAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IGroupAPI provides mechanisms for adding new Groups to and obtaining information for
existing Groups from ClaimCenter</wsdl:documentation>
    <wsdl:operation name="addGroup" parameterOrder="groupData">
      <wsdl:documentation>Adds the given group data to the system.
if the data object doesn't contain a PublicID, one will be assigned.
The parent, grouptype, and securityzone of the group data cannot be null.</wsdl:documentation>
      <wsdl:input name="addGroupRequest" message="impl:IGroupAPI-addGroupRequest"/>
      <wsdl:output name="addGroupResponse" message="impl:IGroupAPI-addGroupResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IGroupAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IGroupAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IGroupAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IGroupAPI-PermissionException"/>
      <wsdl:fault name="DuplicateKeyException" message="impl:IGroupAPI-DuplicateKeyException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IGroupAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="findPublicIdByName" parameterOrder="groupName">
      <wsdl:documentation>Finds the public id of a group by the name.</wsdl:documentation>
      <wsdl:input name="findPublicIdByNameRequest" message="impl:IGroupAPI-findPublicIdByNameRequest"/>
      <wsdl:output name="findPublicIdByNameResponse" message="impl:IGroupAPI-findPublicIdByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IGroupAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IGroupAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IGroupAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getGroup" parameterOrder="groupID">
      <wsdl:documentation>Retrieves a group given the group identifier or returns null if no group could be found.</wsdl:documentation>
      <wsdl:input name="getGroupRequest" message="impl:IGroupAPI-getGroupRequest"/>
      <wsdl:output name="getGroupResponse" message="impl:IGroupAPI-getGroupResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IGroupAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IGroupAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IGroupAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IImportToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IImportToolsAPI is a remote interface to a set of tools to import XML data to the
server.
&lt;p/&gt;
The XML import format is defined by dynamically-generated XML Schema Definition (XSD) files. Regenerate the XSD
files with the regen-xsd task. After XSD regeneration, you will find the XSD files in dist/xsd/import,
including the three XSD files: xx_typelists.xsd, xx_entities.xsd, xx_import.xsd (with "xx" replaced by the Guidewire
product code, e.g., "cc" for ClaimCenter).</wsdl:documentation>
    <wsdl:operation name="csvToXml" parameterOrder="csvData ignoreNullConstraintViolations ignoreAllErrors">
      <wsdl:documentation>Convert CSV data to XML data suitable to be imported by {@link #importXmlData(String)}</wsdl:documentation>
      <wsdl:input name="csvToXmlRequest" message="impl:IImportToolsAPI-csvToXmlRequest"/>
      <wsdl:output name="csvToXmlResponse" message="impl:IImportToolsAPI-csvToXmlResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IImportToolsAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="csvToXml" parameterOrder="csvData dataSet ignoreNullConstraintViolations ignoreAllErrors">
      <wsdl:documentation>Convert CSV data to XML data suitable to be imported {@link #importXmlData(String)}</wsdl:documentation>
      <wsdl:input name="csvToXmlRequest1" message="impl:IImportToolsAPI-csvToXmlRequest1"/>
      <wsdl:output name="csvToXmlResponse1" message="impl:IImportToolsAPI-csvToXmlResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IImportToolsAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importCsvData" parameterOrder="csvData dataSet ignoreNullConstraintViolations ignoreAllErrors">
      <wsdl:documentation>Import CSV data.

Note that importing data through this call does not generate events for the newly imported objects.
&lt;p&gt;
&lt;b&gt;WARNING&lt;/b&gt;: this is &lt;em&gt;only&lt;/em&gt; supported for administrative database tables (such as User)
because these XML import routines do not perform complete data validation tests on imported data.
Any other use (claims, policies, etc) is dangerous and is &lt;b&gt;NOT&lt;/b&gt; supported</wsdl:documentation>
      <wsdl:input name="importCsvDataRequest" message="impl:IImportToolsAPI-importCsvDataRequest"/>
      <wsdl:output name="importCsvDataResponse" message="impl:IImportToolsAPI-importCsvDataResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IImportToolsAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IImportToolsAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importXmlData" parameterOrder="xmlData">
      <wsdl:documentation>Import XML data.
To improve performance, the XML data string can be wrapped with CDATA tags.
For example:
&lt;pre&gt;&amp;lt;![CDATA[&lt;br&gt;
...import XML...&lt;br&gt;
]]&gt;&lt;/pre&gt;

Note that importing data through this call does not generate events for the newly imported objects.
&lt;p&gt;
&lt;b&gt;WARNING&lt;/b&gt;: this is &lt;em&gt;only&lt;/em&gt; supported for administrative database tables (such as User)
because these XML import routines do not perform complete data validation tests on imported data.
Any other use (claims, policies, etc) is dangerous and is &lt;b&gt;NOT&lt;/b&gt; supported</wsdl:documentation>
      <wsdl:input name="importXmlDataRequest" message="impl:IImportToolsAPI-importXmlDataRequest"/>
      <wsdl:output name="importXmlDataResponse" message="impl:IImportToolsAPI-importXmlDataResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IImportToolsAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IImportToolsAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importXmlDataAsByteArray" parameterOrder="xmlData">
      <wsdl:documentation>Import XML data, passing the data as an array of UTF-8 bytes representing the XML string.
To improve performance, the XML data string can be wrapped with CDATA tags.
For example:
&lt;pre&gt;&amp;lt;![CDATA[&lt;br&gt;
...import XML...&lt;br&gt;
]]&gt;&lt;/pre&gt;

Note that importing data through this call does not generate events for the newly imported objects.
&lt;p&gt;
&lt;b&gt;WARNING&lt;/b&gt;: this is &lt;em&gt;only&lt;/em&gt; supported for administrative database tables (such as User)
because these XML import routines do not perform complete data validation tests on imported data.
Any other use (claims, policies, etc) is dangerous and is &lt;b&gt;NOT&lt;/b&gt; supported

@see #importXmlData(String)</wsdl:documentation>
      <wsdl:input name="importXmlDataAsByteArrayRequest" message="impl:IImportToolsAPI-importXmlDataAsByteArrayRequest"/>
      <wsdl:output name="importXmlDataAsByteArrayResponse" message="impl:IImportToolsAPI-importXmlDataAsByteArrayResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IImportToolsAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IImportToolsAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="rebuildRolePrivileges">
      <wsdl:documentation>Rebuild the role privileges data by deleting the priviliges data in the database, and then
re-importing the roleprivileges.csv file.</wsdl:documentation>
      <wsdl:input name="rebuildRolePrivilegesRequest" message="impl:IImportToolsAPI-rebuildRolePrivilegesRequest"/>
      <wsdl:output name="rebuildRolePrivilegesResponse" message="impl:IImportToolsAPI-rebuildRolePrivilegesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IImportToolsAPI-SOAPServerException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="xmlToCsv" parameterOrder="xmlData">
      <wsdl:documentation>Export XML data into CSV data.  The reverse operation from #csvToXml(String)</wsdl:documentation>
      <wsdl:input name="xmlToCsvRequest" message="impl:IImportToolsAPI-xmlToCsvRequest"/>
      <wsdl:output name="xmlToCsvResponse" message="impl:IImportToolsAPI-xmlToCsvResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IImportToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IImportToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IImportToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IImportToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ILoginAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>&lt;p&gt;
A remote interface that allows a user to log in and out of a system. The system uses conversations to implement SOAP
authentication in a Guidewire application  (e.g. BillingCenter, ClaimCenter, PolicyCenter). When connecting to Guidewire
applications the caller must first authenticate using the &lt;code&gt;ILoginAPI.login()&lt;/code&gt; method.  This method returns the
the session ID of the server session.
&lt;/p&gt;
&lt;p&gt;
On each successive call in the conversation, pass the session ID in the SOAP header
{@link gw.pl.util.webservices.Globals#GW_AUTHENTICATION_SECURITY_TOKEN_CONTEXT_PROPERTY}. You must call
&lt;code&gt;logout()&lt;/code&gt; when you are done with the conversation.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; This API is intended for users who are using Guidewire's web services from languages other
than Java.   If you are using Java, you should use the &lt;code&gt;APILocator&lt;/code&gt; instead.
&lt;/p&gt;</wsdl:documentation>
    <wsdl:operation name="WSSLogin" parameterOrder="userName password">
      <wsdl:documentation>&lt;p&gt;
Logs the user in preparation for a Web Service Security (WSS) conversation. A WSS conversation is one in which
user credentials are passed using the WSS &lt;code&gt;UsernameToken&lt;/code&gt; profile.
&lt;/p&gt;&lt;p&gt;
&lt;b&gt;NOTE:&lt;/b&gt; The Guidewire Toolkit does not currently support this method. This method is available
for access by all other SOAP clients.
&lt;/p&gt;</wsdl:documentation>
      <wsdl:input name="WSSLoginRequest" message="impl:ILoginAPI-WSSLoginRequest"/>
      <wsdl:output name="WSSLoginResponse" message="impl:ILoginAPI-WSSLoginResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ILoginAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ILoginAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ILoginAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ILoginAPI-BadIdentifierException"/>
      <wsdl:fault name="LoginException" message="impl:ILoginAPI-LoginException"/>
    </wsdl:operation>
    <wsdl:operation name="WSSLogout" parameterOrder="userName">
      <wsdl:documentation>Terminates a WSS conversation. Attempts to log out a user not logged in are siltently ignored.
&lt;p/&gt;
NOTE: Usage of this method by the Guidewire Toolkit is not currently supported. This is available
for access by all other SOAP clients.</wsdl:documentation>
      <wsdl:input name="WSSLogoutRequest" message="impl:ILoginAPI-WSSLogoutRequest"/>
      <wsdl:output name="WSSLogoutResponse" message="impl:ILoginAPI-WSSLogoutResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ILoginAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ILoginAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ILoginAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ILoginAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="login" parameterOrder="userName password">
      <wsdl:documentation>Logs the user into a Guidewire application (e.g. ClaimCenter, PolicyCenter, BillingCenter). Returns the session ID
of the server session.</wsdl:documentation>
      <wsdl:input name="loginRequest" message="impl:ILoginAPI-loginRequest"/>
      <wsdl:output name="loginResponse" message="impl:ILoginAPI-loginResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ILoginAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ILoginAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ILoginAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ILoginAPI-BadIdentifierException"/>
      <wsdl:fault name="LoginException" message="impl:ILoginAPI-LoginException"/>
    </wsdl:operation>
    <wsdl:operation name="logout" parameterOrder="sessionID">
      <wsdl:documentation>Logs the user out of the session.  The session will timeout if this method is not called.</wsdl:documentation>
      <wsdl:input name="logoutRequest" message="impl:ILoginAPI-logoutRequest"/>
      <wsdl:output name="logoutResponse" message="impl:ILoginAPI-logoutResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ILoginAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ILoginAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ILoginAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ILoginAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IMaintenanceToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation/>
    <wsdl:operation name="batchProcessStatusByID" parameterOrder="pid">
      <wsdl:documentation>Gets the status of a particular batch process invocation.  If that invocation is still running,
the status will indicate as much, and only the startDate and opsCompleted fields will be filled in.
Otherwise the returned object will contain information about
the completed run (see ProcessStatus for information about all the fields returned).</wsdl:documentation>
      <wsdl:input name="batchProcessStatusByIDRequest" message="impl:IMaintenanceToolsAPI-batchProcessStatusByIDRequest"/>
      <wsdl:output name="batchProcessStatusByIDResponse" message="impl:IMaintenanceToolsAPI-batchProcessStatusByIDResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
      <wsdl:fault name="SOAPSenderException" message="impl:IMaintenanceToolsAPI-SOAPSenderException"/>
    </wsdl:operation>
    <wsdl:operation name="batchProcessStatusByName" parameterOrder="processName">
      <wsdl:documentation>Gets the status of the given batch process, indicating whether or not the process is running and,
if so, its current progress.</wsdl:documentation>
      <wsdl:input name="batchProcessStatusByNameRequest" message="impl:IMaintenanceToolsAPI-batchProcessStatusByNameRequest"/>
      <wsdl:output name="batchProcessStatusByNameResponse" message="impl:IMaintenanceToolsAPI-batchProcessStatusByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getNumActiveWorkItems" parameterOrder="queueName">
      <wsdl:documentation>Retrieves the number of active work items for a queue</wsdl:documentation>
      <wsdl:input name="getNumActiveWorkItemsRequest" message="impl:IMaintenanceToolsAPI-getNumActiveWorkItemsRequest"/>
      <wsdl:output name="getNumActiveWorkItemsResponse" message="impl:IMaintenanceToolsAPI-getNumActiveWorkItemsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getValidBatchProcessNames">
      <wsdl:documentation>Return the set of valid batch process names</wsdl:documentation>
      <wsdl:input name="getValidBatchProcessNamesRequest" message="impl:IMaintenanceToolsAPI-getValidBatchProcessNamesRequest"/>
      <wsdl:output name="getValidBatchProcessNamesResponse" message="impl:IMaintenanceToolsAPI-getValidBatchProcessNamesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getWQueueStatus" parameterOrder="queueName">
      <wsdl:documentation>Retrieves the status of active executors for that particular queue. Each executor contains information
about last 25 workers ran by each executor.</wsdl:documentation>
      <wsdl:input name="getWQueueStatusRequest" message="impl:IMaintenanceToolsAPI-getWQueueStatusRequest"/>
      <wsdl:output name="getWQueueStatusResponse" message="impl:IMaintenanceToolsAPI-getWQueueStatusResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueConfig" parameterOrder="queueName">
      <wsdl:documentation>Get the current configuration of distributed workers for the
specified work queue.</wsdl:documentation>
      <wsdl:input name="getWorkQueueConfigRequest" message="impl:IMaintenanceToolsAPI-getWorkQueueConfigRequest"/>
      <wsdl:output name="getWorkQueueConfigResponse" message="impl:IMaintenanceToolsAPI-getWorkQueueConfigResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueNames">
      <wsdl:documentation>Returns the list of work queue names for this product.
These names may be used in {@link #getWorkQueueConfig}
and {@link #setWorkQueueConfig}.</wsdl:documentation>
      <wsdl:input name="getWorkQueueNamesRequest" message="impl:IMaintenanceToolsAPI-getWorkQueueNamesRequest"/>
      <wsdl:output name="getWorkQueueNamesResponse" message="impl:IMaintenanceToolsAPI-getWorkQueueNamesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueStatus" parameterOrder="queueName">
      <wsdl:documentation>Retrieves the worker status with information about work queues across a cluster.
&lt;br&gt;@deprecated use the method {@link #getWQueueStatus(String)} instead.  It returns more detailed and accurate
information about a worker queue executors and workers.</wsdl:documentation>
      <wsdl:input name="getWorkQueueStatusRequest" message="impl:IMaintenanceToolsAPI-getWorkQueueStatusRequest"/>
      <wsdl:output name="getWorkQueueStatusResponse" message="impl:IMaintenanceToolsAPI-getWorkQueueStatusResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="isBatchProcessNameValid" parameterOrder="processName">
      <wsdl:documentation>Return whether a given batch process name is valid</wsdl:documentation>
      <wsdl:input name="isBatchProcessNameValidRequest" message="impl:IMaintenanceToolsAPI-isBatchProcessNameValidRequest"/>
      <wsdl:output name="isBatchProcessNameValidResponse" message="impl:IMaintenanceToolsAPI-isBatchProcessNameValidResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="isPluginStarted" parameterOrder="pluginName">
      <wsdl:documentation>whether the plugin is started.</wsdl:documentation>
      <wsdl:input name="isPluginStartedRequest" message="impl:IMaintenanceToolsAPI-isPluginStartedRequest"/>
      <wsdl:output name="isPluginStartedResponse" message="impl:IMaintenanceToolsAPI-isPluginStartedResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="markArchiveReady" parameterOrder="claimNumbers">
      <wsdl:documentation>Schedules the claims with the given claim numbers for archive. This method is
only present for backwards compatibility new code should use scheduleForArchive.
This method actually calls scheduleForArchive internally. Scheduling a claim
archive is the closest equivalent to marking a claim as archive ready in pre
5.0.6 versions of ClaimCenter.
&lt;br&gt;@deprecated Use scheduleForArchive instead</wsdl:documentation>
      <wsdl:input name="markArchiveReadyRequest" message="impl:IMaintenanceToolsAPI-markArchiveReadyRequest"/>
      <wsdl:output name="markArchiveReadyResponse" message="impl:IMaintenanceToolsAPI-markArchiveReadyResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="markForPurge" parameterOrder="claimNumbers">
      <wsdl:documentation>Marks the claims represented by the claim numbers for purge.  Does not actually
do the purge.  Can be run in maintainence or multi-user mode.
&lt;br&gt;@deprecated To be retired and replaced with #markPurgeReady in bedrock</wsdl:documentation>
      <wsdl:input name="markForPurgeRequest" message="impl:IMaintenanceToolsAPI-markForPurgeRequest"/>
      <wsdl:output name="markForPurgeResponse" message="impl:IMaintenanceToolsAPI-markForPurgeResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="markPurgeReady" parameterOrder="claimNumbers purgeFromAggregateLimit">
      <wsdl:documentation>Marks the purge ready flag on claim for the claim purging batch process</wsdl:documentation>
      <wsdl:input name="markPurgeReadyRequest" message="impl:IMaintenanceToolsAPI-markPurgeReadyRequest"/>
      <wsdl:output name="markPurgeReadyResponse" message="impl:IMaintenanceToolsAPI-markPurgeReadyResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="notifyQueueWorkers" parameterOrder="queueName">
      <wsdl:documentation>Wakes up all workers for the specified queue across the cluster.
Workers will check for workitems and will continue
processing any found until the workitem table for the
queue is empty.</wsdl:documentation>
      <wsdl:input name="notifyQueueWorkersRequest" message="impl:IMaintenanceToolsAPI-notifyQueueWorkersRequest"/>
      <wsdl:output name="notifyQueueWorkersResponse" message="impl:IMaintenanceToolsAPI-notifyQueueWorkersResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="requestTerminationOfBatchProcessByID" parameterOrder="pid">
      <wsdl:documentation>Requests termination of the given batch process, if it's currently running. Note that it's possible that
this particular invocation could have finished and another invocation of the same process
begun, in which case this won't request the termination of the current invocation.

This method does not wait for the batch process to actually terminate</wsdl:documentation>
      <wsdl:input name="requestTerminationOfBatchProcessByIDRequest" message="impl:IMaintenanceToolsAPI-requestTerminationOfBatchProcessByIDRequest"/>
      <wsdl:output name="requestTerminationOfBatchProcessByIDResponse" message="impl:IMaintenanceToolsAPI-requestTerminationOfBatchProcessByIDResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
      <wsdl:fault name="SOAPSenderException" message="impl:IMaintenanceToolsAPI-SOAPSenderException"/>
    </wsdl:operation>
    <wsdl:operation name="requestTerminationOfBatchProcessByName" parameterOrder="processName">
      <wsdl:documentation>Requests termination of the given batch process, if it's currently running.

This method does not wait for the batch process to actually terminate</wsdl:documentation>
      <wsdl:input name="requestTerminationOfBatchProcessByNameRequest" message="impl:IMaintenanceToolsAPI-requestTerminationOfBatchProcessByNameRequest"/>
      <wsdl:output name="requestTerminationOfBatchProcessByNameResponse" message="impl:IMaintenanceToolsAPI-requestTerminationOfBatchProcessByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="restore" parameterOrder="claimNumbers comment">
      <wsdl:documentation>Restore the claim</wsdl:documentation>
      <wsdl:input name="restoreRequest" message="impl:IMaintenanceToolsAPI-restoreRequest"/>
      <wsdl:output name="restoreResponse" message="impl:IMaintenanceToolsAPI-restoreResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="scheduleAggLimitRebuildAllLimits">
      <wsdl:documentation>Marks invalid and then rebuilds the AggregateLimitRpts and ClaimAggregateLimitRpts
associated for all AggregateLimits in the system.
&lt;p&gt;
These tables are a denormalization of the LimitUsed values for aggregate limits and this method
will rebuild them from the transactions associated with the claims.
&lt;p&gt;
Throws SOAPException if a problem occurs while creating the WorkItems necessary for the work queue
to run the job.</wsdl:documentation>
      <wsdl:input name="scheduleAggLimitRebuildAllLimitsRequest" message="impl:IMaintenanceToolsAPI-scheduleAggLimitRebuildAllLimitsRequest"/>
      <wsdl:output name="scheduleAggLimitRebuildAllLimitsResponse" message="impl:IMaintenanceToolsAPI-scheduleAggLimitRebuildAllLimitsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="scheduleAggLimitRebuildInvalidLimits">
      <wsdl:documentation>Rebuilds the AggregateLimitRpts and ClaimAggregateLimitRpts
associated with invalid AggregateLimits in the system.
&lt;p&gt;
These tables are a denormalization of the LimitUsed values for aggregate limits and this method
will rebuild them from the transactions associated with the claims.
&lt;p&gt;
Throws SOAPException if a problem occurs while creating the WorkItems necessary for the work queue
to run the job.</wsdl:documentation>
      <wsdl:input name="scheduleAggLimitRebuildInvalidLimitsRequest" message="impl:IMaintenanceToolsAPI-scheduleAggLimitRebuildInvalidLimitsRequest"/>
      <wsdl:output name="scheduleAggLimitRebuildInvalidLimitsResponse" message="impl:IMaintenanceToolsAPI-scheduleAggLimitRebuildInvalidLimitsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="scheduleAggLimitRebuildOfClaims" parameterOrder="claimNumbers">
      <wsdl:documentation>Rebuilds the AggregateLimitRpts and ClaimAggregateLimitRpts associated for the AggregateLimits
which are defined for the same policy period as the claims passed in.
&lt;p&gt;
These tables are a denormalization of the LimitUsed values for aggregate limits and this method
will rebuild them from the transactions associated with the claims.  A separate batch job is available
which can rebuild all the aggregate limits in the system.
&lt;p&gt;
Throws SOAPException if a problem occurs while creating the WorkItems necessary for the work queue
to run the job.
&lt;p&gt;</wsdl:documentation>
      <wsdl:input name="scheduleAggLimitRebuildOfClaimsRequest" message="impl:IMaintenanceToolsAPI-scheduleAggLimitRebuildOfClaimsRequest"/>
      <wsdl:output name="scheduleAggLimitRebuildOfClaimsResponse" message="impl:IMaintenanceToolsAPI-scheduleAggLimitRebuildOfClaimsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="scheduleAggLimitRebuildOfPolicies" parameterOrder="policyNumbers">
      <wsdl:documentation>Rebuilds the AggregateLimitRpts and ClaimAggregateLimitRpts associated for the AggregateLimits
which are defined for the same policy period as the policies passed in.
&lt;p&gt;
These tables are a denormalization of the LimitUsed values for aggregate limits and this method
will rebuild them from the transactions associated with the claims.  A separate batch job is available
which can rebuild all the aggregate limits in the system.
&lt;p&gt;
Throws SOAPException if a problem occurs while creating the WorkItems necessary for the work queue
to run the job.
&lt;p&gt;</wsdl:documentation>
      <wsdl:input name="scheduleAggLimitRebuildOfPoliciesRequest" message="impl:IMaintenanceToolsAPI-scheduleAggLimitRebuildOfPoliciesRequest"/>
      <wsdl:output name="scheduleAggLimitRebuildOfPoliciesResponse" message="impl:IMaintenanceToolsAPI-scheduleAggLimitRebuildOfPoliciesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="scheduleForArchive" parameterOrder="claimNumbers">
      <wsdl:documentation>Schedules the claims with the given claim numbers for archive. The claims are looked up and,
providing they are closed, are immediately scheduled for archive by creating a high priority
work item that will be picked up by the archiving work queue. Note that the archiving work
queue is processed asynchronously so it is unlikely that any of the claims will actually be
archived by the time this call returns.
&lt;p&gt;
There is a race condition that can affect this call. If a claim to be archived references a
newly created admin object, such as a new user, there is a chance the archiving of the claim
will fail because the new admin object has not yet been copied to the archiving database. This
is a rare edge case as most claims to be archived are old, closed, claims which have not been
altered for a long time. The chances of hitting this race condition can be minimized by
explicitly running the archive batch process before calling this method, though this is
expensive and is not recommended as a general practice.
&lt;p&gt;
Throws SOAPException if claims cannot be scheduled for archive because they cannot be found,
are closed or because an archive work item could not be created. If any of the claims is not
found or is not closed then the call fails before attempting to archive any other claims.
However if all the claims are present and closed it is possible, though very unlikely, for
some work items to be created successfully and others to fail.
&lt;p&gt;
This call is, internally, identical to IClaimAPI.scheduleForArchive and is only included here
for convenience, so it can be called by the command line maintenance tools.</wsdl:documentation>
      <wsdl:input name="scheduleForArchiveRequest" message="impl:IMaintenanceToolsAPI-scheduleForArchiveRequest"/>
      <wsdl:output name="scheduleForArchiveResponse" message="impl:IMaintenanceToolsAPI-scheduleForArchiveResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setWorkQueueConfig" parameterOrder="queueName config">
      <wsdl:documentation>Sets the configuration for distributed workers for the
specified work queue.  Any currently running worker
instances will be stopped after the current workitem in process
is completed.  New worker instances as specified by the passed
in config will be created and started.  Note that the
changes made here are temporary if the server is restarted,
the initial values from config.xml will be used when creating
and starting workers.</wsdl:documentation>
      <wsdl:input name="setWorkQueueConfigRequest" message="impl:IMaintenanceToolsAPI-setWorkQueueConfigRequest"/>
      <wsdl:output name="setWorkQueueConfigResponse" message="impl:IMaintenanceToolsAPI-setWorkQueueConfigResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="startBatchProcess" parameterOrder="processName">
      <wsdl:documentation>Overridde to ensure correct permission checking.  Starts the given batch process.  If the process is already running on the server,
an exception will be thrown.</wsdl:documentation>
      <wsdl:input name="startBatchProcessRequest" message="impl:IMaintenanceToolsAPI-startBatchProcessRequest"/>
      <wsdl:output name="startBatchProcessResponse" message="impl:IMaintenanceToolsAPI-startBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="startPlugin" parameterOrder="pluginName">
      <wsdl:documentation>Starts the given startable plugin.</wsdl:documentation>
      <wsdl:input name="startPluginRequest" message="impl:IMaintenanceToolsAPI-startPluginRequest"/>
      <wsdl:output name="startPluginResponse" message="impl:IMaintenanceToolsAPI-startPluginResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="startWorkQueueWorkers" parameterOrder="queueName">
      <wsdl:documentation>This will start the workqueue wokers</wsdl:documentation>
      <wsdl:input name="startWorkQueueWorkersRequest" message="impl:IMaintenanceToolsAPI-startWorkQueueWorkersRequest"/>
      <wsdl:output name="startWorkQueueWorkersResponse" message="impl:IMaintenanceToolsAPI-startWorkQueueWorkersResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="stopPlugin" parameterOrder="pluginName">
      <wsdl:documentation>Stop the given startable plugin.</wsdl:documentation>
      <wsdl:input name="stopPluginRequest" message="impl:IMaintenanceToolsAPI-stopPluginRequest"/>
      <wsdl:output name="stopPluginResponse" message="impl:IMaintenanceToolsAPI-stopPluginResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="stopWorkQueueWorkers" parameterOrder="queueName">
      <wsdl:documentation>This will stop the specified ied work queue.</wsdl:documentation>
      <wsdl:input name="stopWorkQueueWorkersRequest" message="impl:IMaintenanceToolsAPI-stopWorkQueueWorkersRequest"/>
      <wsdl:output name="stopWorkQueueWorkersResponse" message="impl:IMaintenanceToolsAPI-stopWorkQueueWorkersResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="terminateBatchProcessByID" parameterOrder="pid">
      <wsdl:documentation>Requests termination of the given batch process, if it's currently running. Note that it's possible that
this particular invocation could have finished and another invocation of the same process
begun, in which case this won't request the termination of the current invocation.

This method does not wait for the batch process to actually terminate
&lt;br&gt;@deprecated Use requestTerminationOfBatchProcessByID() instead</wsdl:documentation>
      <wsdl:input name="terminateBatchProcessByIDRequest" message="impl:IMaintenanceToolsAPI-terminateBatchProcessByIDRequest"/>
      <wsdl:output name="terminateBatchProcessByIDResponse" message="impl:IMaintenanceToolsAPI-terminateBatchProcessByIDResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
      <wsdl:fault name="SOAPSenderException" message="impl:IMaintenanceToolsAPI-SOAPSenderException"/>
    </wsdl:operation>
    <wsdl:operation name="terminateBatchProcessByName" parameterOrder="processName">
      <wsdl:documentation>Requests termination of the given batch process, if it's currently running.

This method does not wait for the batch process to actually terminate
&lt;br&gt;@deprecated Use requestTerminationOfBatchProcessByName() instead</wsdl:documentation>
      <wsdl:input name="terminateBatchProcessByNameRequest" message="impl:IMaintenanceToolsAPI-terminateBatchProcessByNameRequest"/>
      <wsdl:output name="terminateBatchProcessByNameResponse" message="impl:IMaintenanceToolsAPI-terminateBatchProcessByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="waitOnActiveWorkItems" parameterOrder="queueName">
      <wsdl:documentation>Wait on the active work items for a queue</wsdl:documentation>
      <wsdl:input name="waitOnActiveWorkItemsRequest" message="impl:IMaintenanceToolsAPI-waitOnActiveWorkItemsRequest"/>
      <wsdl:output name="waitOnActiveWorkItemsResponse" message="impl:IMaintenanceToolsAPI-waitOnActiveWorkItemsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:IMaintenanceToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="whenStatsCalculated">
      <wsdl:documentation>Return the date when the current statistics were calculated.</wsdl:documentation>
      <wsdl:input name="whenStatsCalculatedRequest" message="impl:IMaintenanceToolsAPI-whenStatsCalculatedRequest"/>
      <wsdl:output name="whenStatsCalculatedResponse" message="impl:IMaintenanceToolsAPI-whenStatsCalculatedResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMaintenanceToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMaintenanceToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMaintenanceToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMaintenanceToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IMessagingToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>MessagingTools is a remote interface to a set of tools to get messaging
statistics and perform operations on messages.</wsdl:documentation>
    <wsdl:operation name="ackMessage" parameterOrder="ack">
      <wsdl:documentation>Acknowledges message</wsdl:documentation>
      <wsdl:input name="ackMessageRequest" message="impl:IMessagingToolsAPI-ackMessageRequest"/>
      <wsdl:output name="ackMessageResponse" message="impl:IMessagingToolsAPI-ackMessageResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="acknowledgeMessage" parameterOrder="ack">
      <wsdl:documentation>Acknowledges message
&lt;br&gt;@deprecated MessageOptionalFields are no longer supported.
Please use {@link #ackMessage(Acknowledgement)} instead.</wsdl:documentation>
      <wsdl:input name="acknowledgeMessageRequest" message="impl:IMessagingToolsAPI-acknowledgeMessageRequest"/>
      <wsdl:output name="acknowledgeMessageResponse" message="impl:IMessagingToolsAPI-acknowledgeMessageResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getMessageId" parameterOrder="senderRefID destinationID">
      <wsdl:documentation>Gets the message id for a message with a specific sender ref id and a specific destination id.
If the destination id passed in is -1, then this would find messages from any destination that matches the sender ref id.
Returns -1 if no message is found that has given sender ref id and destination id.
If there are multiple messages that match, this will return the first one.</wsdl:documentation>
      <wsdl:input name="getMessageIdRequest" message="impl:IMessagingToolsAPI-getMessageIdRequest"/>
      <wsdl:output name="getMessageIdResponse" message="impl:IMessagingToolsAPI-getMessageIdResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getMessageStatisticsForSafeOrderedObject" parameterOrder="destID safeOrderedObjectId">
      <wsdl:documentation>Gets all the message statistics of a given destination and safe ordered object.</wsdl:documentation>
      <wsdl:input name="getMessageStatisticsForSafeOrderedObjectRequest" message="impl:IMessagingToolsAPI-getMessageStatisticsForSafeOrderedObjectRequest"/>
      <wsdl:output name="getMessageStatisticsForSafeOrderedObjectResponse" message="impl:IMessagingToolsAPI-getMessageStatisticsForSafeOrderedObjectResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getTotalStatistics" parameterOrder="destID">
      <wsdl:documentation>Gets all the message statistics of a given destination.</wsdl:documentation>
      <wsdl:input name="getTotalStatisticsRequest" message="impl:IMessagingToolsAPI-getTotalStatisticsRequest"/>
      <wsdl:output name="getTotalStatisticsResponse" message="impl:IMessagingToolsAPI-getTotalStatisticsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="purgeCompletedMessages" parameterOrder="cutoff">
      <wsdl:documentation>Purges the message history table of completed messages.
Deletes all messages with send time less than supplied before date.</wsdl:documentation>
      <wsdl:input name="purgeCompletedMessagesRequest" message="impl:IMessagingToolsAPI-purgeCompletedMessagesRequest"/>
      <wsdl:output name="purgeCompletedMessagesResponse" message="impl:IMessagingToolsAPI-purgeCompletedMessagesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="resumeDestination" parameterOrder="destID">
      <wsdl:documentation>Resumes the destination with the specified destination id</wsdl:documentation>
      <wsdl:input name="resumeDestinationRequest" message="impl:IMessagingToolsAPI-resumeDestinationRequest"/>
      <wsdl:output name="resumeDestinationResponse" message="impl:IMessagingToolsAPI-resumeDestinationResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="resyncClaim" parameterOrder="destID claimID">
      <wsdl:documentation>Resync the claim against specified destination</wsdl:documentation>
      <wsdl:input name="resyncClaimRequest" message="impl:IMessagingToolsAPI-resyncClaimRequest"/>
      <wsdl:output name="resyncClaimResponse" message="impl:IMessagingToolsAPI-resyncClaimResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IMessagingToolsAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="retryMessage" parameterOrder="messageID">
      <wsdl:documentation>Retries a single message (retryable error or inflight).</wsdl:documentation>
      <wsdl:input name="retryMessageRequest" message="impl:IMessagingToolsAPI-retryMessageRequest"/>
      <wsdl:output name="retryMessageResponse" message="impl:IMessagingToolsAPI-retryMessageResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessages" parameterOrder="destID">
      <wsdl:documentation>Retries all messages in retryable error state for the given destination.</wsdl:documentation>
      <wsdl:input name="retryRetryableErrorMessagesRequest" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesRequest"/>
      <wsdl:output name="retryRetryableErrorMessagesResponse" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessages" parameterOrder="destID retryLimit">
      <wsdl:documentation>Retries messages in retryable error state for the given destination where the message
has previously been retried fewer than retryLimit times.  Each message maintains a retry
count; attempts to retry the message increment the retry count.  If there are messages
whose retry count &gt;= retryLimit, they will not be retried.
&lt;p/&gt;
Specifying a retryLimit of 0 retries all retryable error messages,
and is identical to retryRetryableErrorMessages(int destID).</wsdl:documentation>
      <wsdl:input name="retryRetryableErrorMessagesRequest1" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesRequest1"/>
      <wsdl:output name="retryRetryableErrorMessagesResponse1" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessagesForCategory" parameterOrder="destID category">
      <wsdl:documentation>Retries messages in retryable error state for the given destination and error category,</wsdl:documentation>
      <wsdl:input name="retryRetryableErrorMessagesForCategoryRequest" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesForCategoryRequest"/>
      <wsdl:output name="retryRetryableErrorMessagesForCategoryResponse" message="impl:IMessagingToolsAPI-retryRetryableErrorMessagesForCategoryResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="skipMessage" parameterOrder="messageID">
      <wsdl:documentation>Skips a single message (error or inflight).</wsdl:documentation>
      <wsdl:input name="skipMessageRequest" message="impl:IMessagingToolsAPI-skipMessageRequest"/>
      <wsdl:output name="skipMessageResponse" message="impl:IMessagingToolsAPI-skipMessageResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="suspendDestination" parameterOrder="destID">
      <wsdl:documentation>Suspends the destination with the specified destination id</wsdl:documentation>
      <wsdl:input name="suspendDestinationRequest" message="impl:IMessagingToolsAPI-suspendDestinationRequest"/>
      <wsdl:output name="suspendDestinationResponse" message="impl:IMessagingToolsAPI-suspendDestinationResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IMessagingToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IMessagingToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IMessagingToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IMessagingToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IProfilerAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>API to access services offered by the Guidewire Profiler.</wsdl:documentation>
    <wsdl:operation name="setEnableProfilerForBatchProcess" parameterOrder="enable type hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for batch processes of the given type</wsdl:documentation>
      <wsdl:input name="setEnableProfilerForBatchProcessRequest" message="impl:IProfilerAPI-setEnableProfilerForBatchProcessRequest"/>
      <wsdl:output name="setEnableProfilerForBatchProcessResponse" message="impl:IProfilerAPI-setEnableProfilerForBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForBatchProcessAndWorkQueue" parameterOrder="enable type hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for batch processes of the given type and their associated work queue</wsdl:documentation>
      <wsdl:input name="setEnableProfilerForBatchProcessAndWorkQueueRequest" message="impl:IProfilerAPI-setEnableProfilerForBatchProcessAndWorkQueueRequest"/>
      <wsdl:output name="setEnableProfilerForBatchProcessAndWorkQueueResponse" message="impl:IProfilerAPI-setEnableProfilerForBatchProcessAndWorkQueueResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForMessageDestination" parameterOrder="enable destinationID hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for the given message destinations</wsdl:documentation>
      <wsdl:input name="setEnableProfilerForMessageDestinationRequest" message="impl:IProfilerAPI-setEnableProfilerForMessageDestinationRequest"/>
      <wsdl:output name="setEnableProfilerForMessageDestinationResponse" message="impl:IProfilerAPI-setEnableProfilerForMessageDestinationResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForStartablePlugin" parameterOrder="enable pluginName hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for the given StartablePlugin</wsdl:documentation>
      <wsdl:input name="setEnableProfilerForStartablePluginRequest" message="impl:IProfilerAPI-setEnableProfilerForStartablePluginRequest"/>
      <wsdl:output name="setEnableProfilerForStartablePluginResponse" message="impl:IProfilerAPI-setEnableProfilerForStartablePluginResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForSubsequentWebSessions" parameterOrder="name enable hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for subsequent new web sessions. Not recommended for production systems</wsdl:documentation>
      <wsdl:input name="setEnableProfilerForSubsequentWebSessionsRequest" message="impl:IProfilerAPI-setEnableProfilerForSubsequentWebSessionsRequest"/>
      <wsdl:output name="setEnableProfilerForSubsequentWebSessionsResponse" message="impl:IProfilerAPI-setEnableProfilerForSubsequentWebSessionsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForWebService" parameterOrder="enable serviceName operationName hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for the given web service (service name, operation name) pair</wsdl:documentation>
      <wsdl:input name="setEnableProfilerForWebServiceRequest" message="impl:IProfilerAPI-setEnableProfilerForWebServiceRequest"/>
      <wsdl:output name="setEnableProfilerForWebServiceResponse" message="impl:IProfilerAPI-setEnableProfilerForWebServiceResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForWorkQueue" parameterOrder="enable type hiResTime enableStackTracing enableQueryOptimizerTracing enableExtendedQueryTracing dbmsCounterThresholdMs diffDbmsCounters">
      <wsdl:documentation>Enable or disable the profiler for work queues associated with the given batch process type</wsdl:documentation>
      <wsdl:input name="setEnableProfilerForWorkQueueRequest" message="impl:IProfilerAPI-setEnableProfilerForWorkQueueRequest"/>
      <wsdl:output name="setEnableProfilerForWorkQueueResponse" message="impl:IProfilerAPI-setEnableProfilerForWorkQueueResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IProfilerAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IProfilerAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IProfilerAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ISystemToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>System maintenance interface.</wsdl:documentation>
    <wsdl:operation name="cancelUpdateStats">
      <wsdl:documentation>Cancel the update stats process if running. Please use getUpdateStatsState() to check on the state of the run.</wsdl:documentation>
      <wsdl:input name="cancelUpdateStatsRequest" message="impl:ISystemToolsAPI-cancelUpdateStatsRequest"/>
      <wsdl:output name="cancelUpdateStatsResponse" message="impl:ISystemToolsAPI-cancelUpdateStatsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="checkDatabaseConsistency" parameterOrder="returnAllResults">
      <wsdl:documentation>Check the consistency of the underlying physical database.</wsdl:documentation>
      <wsdl:input name="checkDatabaseConsistencyRequest" message="impl:ISystemToolsAPI-checkDatabaseConsistencyRequest"/>
      <wsdl:output name="checkDatabaseConsistencyResponse" message="impl:ISystemToolsAPI-checkDatabaseConsistencyResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="checkPartialDatabaseConsistency" parameterOrder="returnAllResults tablesToCheck consistencyCheckTypesToCheck">
      <wsdl:documentation>Run a subset of the consistency checks on the underlying physical database.</wsdl:documentation>
      <wsdl:input name="checkPartialDatabaseConsistencyRequest" message="impl:ISystemToolsAPI-checkPartialDatabaseConsistencyRequest"/>
      <wsdl:output name="checkPartialDatabaseConsistencyResponse" message="impl:ISystemToolsAPI-checkPartialDatabaseConsistencyResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessionData">
      <wsdl:documentation>Returns all server session information.  The session information is returned as an array of SessionData objects,
each of which contains the user's name, ID, and session ID for a session that's currently open.</wsdl:documentation>
      <wsdl:input name="getActiveSessionDataRequest" message="impl:ISystemToolsAPI-getActiveSessionDataRequest"/>
      <wsdl:output name="getActiveSessionDataResponse" message="impl:ISystemToolsAPI-getActiveSessionDataResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getDBCCState">
      <wsdl:documentation>Returns the state of the consistency checks process. Only one set of consistency checks can be running at
any given moment.</wsdl:documentation>
      <wsdl:input name="getDBCCStateRequest" message="impl:ISystemToolsAPI-getDBCCStateRequest"/>
      <wsdl:output name="getDBCCStateResponse" message="impl:ISystemToolsAPI-getDBCCStateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getHighestRunlevel">
      <wsdl:documentation>Gets the highest run level of the cluster.  See the definition of the run level constants for details of how to
interpret this value.</wsdl:documentation>
      <wsdl:input name="getHighestRunlevelRequest" message="impl:ISystemToolsAPI-getHighestRunlevelRequest"/>
      <wsdl:output name="getHighestRunlevelResponse" message="impl:ISystemToolsAPI-getHighestRunlevelResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getLoggingCategories">
      <wsdl:documentation>Get a list of all of the logger categories available in the system. These can be used
directly in logging.properties.</wsdl:documentation>
      <wsdl:input name="getLoggingCategoriesRequest" message="impl:ISystemToolsAPI-getLoggingCategoriesRequest"/>
      <wsdl:output name="getLoggingCategoriesResponse" message="impl:ISystemToolsAPI-getLoggingCategoriesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:ISystemToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getRecentAWRSnapshotInfo" parameterOrder="numSnapshots">
      <wsdl:documentation>Retrieve the latest N Oracle AWR snapshots.</wsdl:documentation>
      <wsdl:input name="getRecentAWRSnapshotInfoRequest" message="impl:ISystemToolsAPI-getRecentAWRSnapshotInfoRequest"/>
      <wsdl:output name="getRecentAWRSnapshotInfoResponse" message="impl:ISystemToolsAPI-getRecentAWRSnapshotInfoResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getRunlevel">
      <wsdl:documentation>Gets the run level of the server.  See the definition of the run level constants for details of how to interpret
this value.</wsdl:documentation>
      <wsdl:input name="getRunlevelRequest" message="impl:ISystemToolsAPI-getRunlevelRequest"/>
      <wsdl:output name="getRunlevelResponse" message="impl:ISystemToolsAPI-getRunlevelResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getUpdateStatsState">
      <wsdl:documentation>Checks whether the update stats process is currently running. Only one set of update stats statements can be
Returns the state of the update stats process. Only one update stats process can be running at
any given moment.</wsdl:documentation>
      <wsdl:input name="getUpdateStatsStateRequest" message="impl:ISystemToolsAPI-getUpdateStatsStateRequest"/>
      <wsdl:output name="getUpdateStatsStateResponse" message="impl:ISystemToolsAPI-getUpdateStatsStateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getVersion">
      <wsdl:documentation>Get the version of the server, including application version and schema version.
The application version is in the format: &lt;tt&gt;[major].[minor].[build]&lt;/tt&gt;.
The scheme version is in the format: &lt;tt&gt;[base].[vertical]&lt;/tt&gt;.</wsdl:documentation>
      <wsdl:input name="getVersionRequest" message="impl:ISystemToolsAPI-getVersionRequest"/>
      <wsdl:output name="getVersionResponse" message="impl:ISystemToolsAPI-getVersionResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="recalculateFileChecksums">
      <wsdl:documentation>Recalculates the file checksums used for clustered configuration verification.  Returns true
if checksums were recalcuted and false if clustering or configuration verification were disabled.</wsdl:documentation>
      <wsdl:input name="recalculateFileChecksumsRequest" message="impl:ISystemToolsAPI-recalculateFileChecksumsRequest"/>
      <wsdl:output name="recalculateFileChecksumsResponse" message="impl:ISystemToolsAPI-recalculateFileChecksumsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:ISystemToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="reloadLoggingConfig">
      <wsdl:documentation>Causes a reload of the logging.properties.</wsdl:documentation>
      <wsdl:input name="reloadLoggingConfigRequest" message="impl:ISystemToolsAPI-reloadLoggingConfigRequest"/>
      <wsdl:output name="reloadLoggingConfigResponse" message="impl:ISystemToolsAPI-reloadLoggingConfigResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="reportDatabaseCatalogStatistics">
      <wsdl:documentation>Creates a report of the state of the database catalog statistics for all tables.</wsdl:documentation>
      <wsdl:input name="reportDatabaseCatalogStatisticsRequest" message="impl:ISystemToolsAPI-reportDatabaseCatalogStatisticsRequest"/>
      <wsdl:output name="reportDatabaseCatalogStatisticsResponse" message="impl:ISystemToolsAPI-reportDatabaseCatalogStatisticsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="reportPartialDatabaseCatalogStatistics" parameterOrder="tables stagingTables typelistTables">
      <wsdl:documentation>Creates a report of the state of the database catalog statistics for all tables.</wsdl:documentation>
      <wsdl:input name="reportPartialDatabaseCatalogStatisticsRequest" message="impl:ISystemToolsAPI-reportPartialDatabaseCatalogStatisticsRequest"/>
      <wsdl:output name="reportPartialDatabaseCatalogStatisticsResponse" message="impl:ISystemToolsAPI-reportPartialDatabaseCatalogStatisticsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="setRunlevel" parameterOrder="runLevel">
      <wsdl:documentation>Sets the run level of the server. If the server is currently undergoing a runlevel change, this method will block
until that level change has completed.
&lt;p/&gt;
The valid run levels that the server can be set to through this method are &lt;code&gt;SystemRunlevel.GW_DB_MAINTENANCE&lt;/code&gt;,
&lt;code&gt;SystemRunlevel.GW_MAINTENANCE&lt;/code&gt;, and &lt;code&gt;SystemRunlevel.GW_MULTIUSER&lt;/code&gt;.  See the definitions of those constants
for more information.</wsdl:documentation>
      <wsdl:input name="setRunlevelRequest" message="impl:ISystemToolsAPI-setRunlevelRequest"/>
      <wsdl:output name="setRunlevelResponse" message="impl:ISystemToolsAPI-setRunlevelResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitAwrReportBatchJob" parameterOrder="awrReportUserSettings">
      <wsdl:documentation>Submit the Oracle AWR Performance Report batch job</wsdl:documentation>
      <wsdl:input name="submitAwrReportBatchJobRequest" message="impl:ISystemToolsAPI-submitAwrReportBatchJobRequest"/>
      <wsdl:output name="submitAwrReportBatchJobResponse" message="impl:ISystemToolsAPI-submitAwrReportBatchJobResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitDBCCBatchJob" parameterOrder="tablesToCheck consistencyCheckTypesToCheck">
      <wsdl:documentation>Submit the consistency checks batch job on the underlying physical database.</wsdl:documentation>
      <wsdl:input name="submitDBCCBatchJobRequest" message="impl:ISystemToolsAPI-submitDBCCBatchJobRequest"/>
      <wsdl:output name="submitDBCCBatchJobResponse" message="impl:ISystemToolsAPI-submitDBCCBatchJobResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitDmvReportBatchJob">
      <wsdl:documentation>Submit the SQL Server DMV Performance Report batch job using defaults values for
includeDatabaseStatistics (true)</wsdl:documentation>
      <wsdl:input name="submitDmvReportBatchJobRequest" message="impl:ISystemToolsAPI-submitDmvReportBatchJobRequest"/>
      <wsdl:output name="submitDmvReportBatchJobResponse" message="impl:ISystemToolsAPI-submitDmvReportBatchJobResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitDmvReportBatchJobWithParams" parameterOrder="includeDatabaseStatistics">
      <wsdl:documentation>Submit the SQL Server DMV Performance Report batch job with parameters.</wsdl:documentation>
      <wsdl:input name="submitDmvReportBatchJobWithParamsRequest" message="impl:ISystemToolsAPI-submitDmvReportBatchJobWithParamsRequest"/>
      <wsdl:output name="submitDmvReportBatchJobWithParamsResponse" message="impl:ISystemToolsAPI-submitDmvReportBatchJobWithParamsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="submitUpdateStats" parameterOrder="description incremental">
      <wsdl:documentation>Run the update stats process on the underlying physical database. Please use isUpdateStatsRunning() to check on
the state of the run.</wsdl:documentation>
      <wsdl:input name="submitUpdateStatsRequest" message="impl:ISystemToolsAPI-submitUpdateStatsRequest"/>
      <wsdl:output name="submitUpdateStatsResponse" message="impl:ISystemToolsAPI-submitUpdateStatsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ISystemToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="updateLoggingLevel" parameterOrder="logger level">
      <wsdl:documentation>Dynamically updates the logging level of the given logger.</wsdl:documentation>
      <wsdl:input name="updateLoggingLevelRequest" message="impl:ISystemToolsAPI-updateLoggingLevelRequest"/>
      <wsdl:output name="updateLoggingLevelResponse" message="impl:ISystemToolsAPI-updateLoggingLevelResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:ISystemToolsAPI-RequiredFieldException"/>
      <wsdl:fault name="SOAPServerException" message="impl:ISystemToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="verifyDatabaseSchema">
      <wsdl:documentation>Verify that the data mode matches the physical database</wsdl:documentation>
      <wsdl:input name="verifyDatabaseSchemaRequest" message="impl:ISystemToolsAPI-verifyDatabaseSchemaRequest"/>
      <wsdl:output name="verifyDatabaseSchemaResponse" message="impl:ISystemToolsAPI-verifyDatabaseSchemaResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ISystemToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPServerException" message="impl:ISystemToolsAPI-SOAPServerException"/>
      <wsdl:fault name="PermissionException" message="impl:ISystemToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ISystemToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ITableImportAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>This interface provides methods for integrity checking and loading data via
the  staging tables.
&lt;p/&gt;
In particular, it allows the caller to instruct the server
to perform the following staging table operations:
&lt;ol&gt;
&lt;li&gt;Clear error table.&lt;/li&gt;
&lt;li&gt;Clear exclusion table.&lt;/li&gt;
&lt;li&gt;Clear staging tables.&lt;/li&gt;
&lt;li&gt;Delete rows from staging tables based on contents of exclusion table.&lt;/li&gt;
&lt;li&gt;Populate exclusion table with rows to be excluded.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the staging tables.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the Zone staging tables and load Zone source tables if no errors.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the staging tables and load source tables if no errors.&lt;/li&gt;
&lt;/ol&gt;</wsdl:documentation>
    <wsdl:operation name="clearErrorTable">
      <wsdl:documentation>Instructs the server to clear the error tables.</wsdl:documentation>
      <wsdl:input name="clearErrorTableRequest" message="impl:ITableImportAPI-clearErrorTableRequest"/>
      <wsdl:output name="clearErrorTableResponse" message="impl:ITableImportAPI-clearErrorTableResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="clearExclusionTable">
      <wsdl:documentation>Instructs the  server to clear the exclusion table.</wsdl:documentation>
      <wsdl:input name="clearExclusionTableRequest" message="impl:ITableImportAPI-clearExclusionTableRequest"/>
      <wsdl:output name="clearExclusionTableResponse" message="impl:ITableImportAPI-clearExclusionTableResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="clearStagingTables">
      <wsdl:documentation>Instructs the server to clear all staging tables.</wsdl:documentation>
      <wsdl:input name="clearStagingTablesRequest" message="impl:ITableImportAPI-clearStagingTablesRequest"/>
      <wsdl:output name="clearStagingTablesResponse" message="impl:ITableImportAPI-clearStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteExcludedRowsFromStagingTables">
      <wsdl:documentation>Instructs the server to delete rows from staging tables
based on the contents of the exclusion table (delete all rows in all
staging tables where the LUWID matches a LUWID in the exclusion table.)</wsdl:documentation>
      <wsdl:input name="deleteExcludedRowsFromStagingTablesRequest" message="impl:ITableImportAPI-deleteExcludedRowsFromStagingTablesRequest"/>
      <wsdl:output name="deleteExcludedRowsFromStagingTablesResponse" message="impl:ITableImportAPI-deleteExcludedRowsFromStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteExcludedRowsFromStagingTablesAsBatchProcess">
      <wsdl:documentation>Instructs the server to delete rows from staging tables
based on the contents of the exclusion table (delete all rows in all
staging tables where the LUWID matches a LUWID in the exclusion table.)
&lt;p/&gt;
The same as deleteExcludedRowsFromStagingTables except that the operation
is done asynchronously in a batch process.  Note that this batch process
can't be terminated.</wsdl:documentation>
      <wsdl:input name="deleteExcludedRowsFromStagingTablesAsBatchProcessRequest" message="impl:ITableImportAPI-deleteExcludedRowsFromStagingTablesAsBatchProcessRequest"/>
      <wsdl:output name="deleteExcludedRowsFromStagingTablesAsBatchProcessResponse" message="impl:ITableImportAPI-deleteExcludedRowsFromStagingTablesAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="encryptDataOnStagingTables">
      <wsdl:documentation>Encrypt columns configured to be encrypted in the staging tables</wsdl:documentation>
      <wsdl:input name="encryptDataOnStagingTablesRequest" message="impl:ITableImportAPI-encryptDataOnStagingTablesRequest"/>
      <wsdl:output name="encryptDataOnStagingTablesResponse" message="impl:ITableImportAPI-encryptDataOnStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContents" parameterOrder="clearErrorTable populateExclusionTable allowRefsToExistingNonAdminRows">
      <wsdl:documentation>Instructs the  server to check the integrity of the contents of the staging
tables, inserting details about any failures into the load error tables.</wsdl:documentation>
      <wsdl:input name="integrityCheckStagingTableContentsRequest" message="impl:ITableImportAPI-integrityCheckStagingTableContentsRequest"/>
      <wsdl:output name="integrityCheckStagingTableContentsResponse" message="impl:ITableImportAPI-integrityCheckStagingTableContentsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAndLoadSourceTables" parameterOrder="clearErrorTable populateExclusionTable updateDBStatisticsWithEstimates allowRefsToExistingNonAdminRows">
      <wsdl:documentation>Instructs the server to check the integrity of the contents of the staging
tables, inserting details about any failures into the error tables. If no integrity check
errors are detected, the server will load the source tables (the main application
tables) with the contents of the staging tables.</wsdl:documentation>
      <wsdl:input name="integrityCheckStagingTableContentsAndLoadSourceTablesRequest" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesRequest"/>
      <wsdl:output name="integrityCheckStagingTableContentsAndLoadSourceTablesResponse" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcess" parameterOrder="clearErrorTable populateExclusionTable updateDBStatisticsWithEstimates allowRefsToExistingNonAdminRows">
      <wsdl:documentation>Instructs the server to check the integrity of the contents of the staging
tables, inserting details about any failures into the load error tables. If no integrity check
errors are detected, the server will load the source tables (the main application
tables) with the contents of the staging tables.  This method does the load asynchronously
via the batch process mechanism, and the process ID that is returned can be used to query
the status of the load and find out if it succeeded or failed (or is still running).  After
completion, the process status will indicate whether or not the load succeeded, and the
failedOps field will contain the number of validation errors that occurred (if any).  Note that this batch process
can't be terminated.</wsdl:documentation>
      <wsdl:input name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessRequest" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessRequest"/>
      <wsdl:output name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessResponse" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAsBatchProcess" parameterOrder="clearErrorTable populateExclusionTable allowRefsToExistingNonAdminRows">
      <wsdl:documentation>Instructs the  server to check the integrity of the contents of the staging
tables, inserting details about any failures into the load error tables.  Works like
integrityCheckStagingTableContents, but does so in a batch process. After
completion, the process status will indicate whether or not the load succeeded, and the
failedOps field will contain the number of integrity check errors that occurred (if any).  Note that this batch process
can't be terminated.</wsdl:documentation>
      <wsdl:input name="integrityCheckStagingTableContentsAsBatchProcessRequest" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAsBatchProcessRequest"/>
      <wsdl:output name="integrityCheckStagingTableContentsAsBatchProcessResponse" message="impl:ITableImportAPI-integrityCheckStagingTableContentsAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTables" parameterOrder="clearErrorTable populateExclusionTable updateDBStatisticsWithEstimates">
      <wsdl:documentation>Instructs the server to check the integrity of the contents of the Zone staging
tables, inserting details about any failures into the error tables. If no integrity check
errors are detected, the server will load the Zone source tables (the Zone main application
tables) with the contents of the staging tables.</wsdl:documentation>
      <wsdl:input name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesRequest" message="impl:ITableImportAPI-integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesRequest"/>
      <wsdl:output name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesResponse" message="impl:ITableImportAPI-integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="populateExclusionTable">
      <wsdl:documentation>Instructs the server to populate the exclusion table
with rows to be excluded (add rows to the exclusion table for every
unique LUWID in the load error tables that is not already in the exclusion table).</wsdl:documentation>
      <wsdl:input name="populateExclusionTableRequest" message="impl:ITableImportAPI-populateExclusionTableRequest"/>
      <wsdl:output name="populateExclusionTableResponse" message="impl:ITableImportAPI-populateExclusionTableResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="populateExclusionTableAsBatchProcess">
      <wsdl:documentation>Instructs the  server to populate the exclusion table
with rows to be excluded (add rows to the exclusion table for every
unique LUWID in the error tables that is not already in the exclusion table).
&lt;p/&gt;
The same as deleteExcludedRowsFromStagingTables except that the operation
is done asynchronously in a batch process. Note that this batch process
can't be terminated.</wsdl:documentation>
      <wsdl:input name="populateExclusionTableAsBatchProcessRequest" message="impl:ITableImportAPI-populateExclusionTableAsBatchProcessRequest"/>
      <wsdl:output name="populateExclusionTableAsBatchProcessResponse" message="impl:ITableImportAPI-populateExclusionTableAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="updateStatisticsOnStagingTables">
      <wsdl:documentation>Instructs the  server to update the database statistics on the staging tables.
(Database statistics will not be updated on the other tables.)</wsdl:documentation>
      <wsdl:input name="updateStatisticsOnStagingTablesRequest" message="impl:ITableImportAPI-updateStatisticsOnStagingTablesRequest"/>
      <wsdl:output name="updateStatisticsOnStagingTablesResponse" message="impl:ITableImportAPI-updateStatisticsOnStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="updateStatisticsOnStagingTablesAsBatchProcess">
      <wsdl:documentation>Instructs the  server to update the database statistics on the staging tables.
(Database statistics will not be updated on the other tables.)  The same as updateStatisticsOnStagingTables
except that the process will be performed asynchronously in a batch process.  After completion,
the process status will contain the number of tables that were updated in the opsCompleted field.
Note that this batch process can't be terminated.</wsdl:documentation>
      <wsdl:input name="updateStatisticsOnStagingTablesAsBatchProcessRequest" message="impl:ITableImportAPI-updateStatisticsOnStagingTablesAsBatchProcessRequest"/>
      <wsdl:output name="updateStatisticsOnStagingTablesAsBatchProcessResponse" message="impl:ITableImportAPI-updateStatisticsOnStagingTablesAsBatchProcessResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITableImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITableImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITableImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITableImportAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ITemplateToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>ITemplateToolsAPI provides adminstrative and programmer support tools for document
templates.</wsdl:documentation>
    <wsdl:operation name="importFormFields" parameterOrder="contextObjectFileContents fieldGroupFileContents fieldFileContents descriptorFileContents">
      <wsdl:documentation>Imports context objects, field groups, and fields from the provided .csv file contents into the corresponding
template descriptor file.</wsdl:documentation>
      <wsdl:input name="importFormFieldsRequest" message="impl:ITemplateToolsAPI-importFormFieldsRequest"/>
      <wsdl:output name="importFormFieldsResponse" message="impl:ITemplateToolsAPI-importFormFieldsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITemplateToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITemplateToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITemplateToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITemplateToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <wsdl:documentation>List the templates which the server currently knows about. Useful for sanity-checking arguments to
the validation commands.</wsdl:documentation>
      <wsdl:input name="listTemplatesRequest" message="impl:ITemplateToolsAPI-listTemplatesRequest"/>
      <wsdl:output name="listTemplatesResponse" message="impl:ITemplateToolsAPI-listTemplatesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITemplateToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITemplateToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITemplateToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITemplateToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="validateAllTemplates">
      <wsdl:documentation>Performs the validation done in validateTemplate for all of the template descriptors the server can find</wsdl:documentation>
      <wsdl:input name="validateAllTemplatesRequest" message="impl:ITemplateToolsAPI-validateAllTemplatesRequest"/>
      <wsdl:output name="validateAllTemplatesResponse" message="impl:ITemplateToolsAPI-validateAllTemplatesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITemplateToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITemplateToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITemplateToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITemplateToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="validateTemplate" parameterOrder="templateID">
      <wsdl:documentation>Validate that the given template descriptor is in a valid format, and that all of the Gosu used in the descriptor
(for ContextObjects and FormFields) is valid given the current datamodel.
Current Validation includes the following items:
1) Check that the Gosu expressions in the descriptor (including ContextObject default and possible
value expressions, which must be defined in terms of the available objects, and FormField expressions, which
must be defined in terms of those objects plus the ContestObjects).
2) Check that the permissionRequired attribute, if specified, is a valid system permission code.
3) Check that the default-security-type attribute, if specified, is a valid document security type code.
4) Check that the type attribute, if specified, is a valid document type code.
5) Check that the section attribute, if specified, is a valid section type code.</wsdl:documentation>
      <wsdl:input name="validateTemplateRequest" message="impl:ITemplateToolsAPI-validateTemplateRequest"/>
      <wsdl:output name="validateTemplateResponse" message="impl:ITemplateToolsAPI-validateTemplateResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITemplateToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITemplateToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITemplateToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITemplateToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ITypelistToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>ITypelistToolsAPI provides methods that allow for the extraction of typelist data from the
system.</wsdl:documentation>
    <wsdl:operation name="getAliasByInternalCode" parameterOrder="typelist namespace code">
      <wsdl:documentation>For use during exports, returns a string corresponding to an alias to an internal typecode given a typelist, a
namespace, and an internal code.  If no match is found, returns null.  If more than one match is found, throws a
SOAPException.</wsdl:documentation>
      <wsdl:input name="getAliasByInternalCodeRequest" message="impl:ITypelistToolsAPI-getAliasByInternalCodeRequest"/>
      <wsdl:output name="getAliasByInternalCodeResponse" message="impl:ITypelistToolsAPI-getAliasByInternalCodeResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITypelistToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITypelistToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITypelistToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITypelistToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getAliasesByInternalCode" parameterOrder="typelist namespace code">
      <wsdl:documentation>For use during exports, returns an array of strings representing external aliases to internal typecodes given
a typelist, a namespace, and an internal code.  If no aliases are found, then a zero-length, non-null array is
returned.  A namespace generally corresponds to an external integration source, but multiple namespaces per source
are allowed. NOTE: this method allows multiple aliases to correspond to the same namespace-typecode tuple.  If you
require a namespace-typecode to resolve to a single alias, please use getAliasByInternalCode.</wsdl:documentation>
      <wsdl:input name="getAliasesByInternalCodeRequest" message="impl:ITypelistToolsAPI-getAliasesByInternalCodeRequest"/>
      <wsdl:output name="getAliasesByInternalCodeResponse" message="impl:ITypelistToolsAPI-getAliasesByInternalCodeResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITypelistToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITypelistToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITypelistToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITypelistToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getTypeKeyByAlias" parameterOrder="typelist namespace alias">
      <wsdl:documentation>For use during imports, returns a TypeKeyData instance corresponding to a typecode in the given typelist that
matches the given namespace/alias.  If no match is found, returns null.  If more than one match is found, throws a
SOAPException.</wsdl:documentation>
      <wsdl:input name="getTypeKeyByAliasRequest" message="impl:ITypelistToolsAPI-getTypeKeyByAliasRequest"/>
      <wsdl:output name="getTypeKeyByAliasResponse" message="impl:ITypelistToolsAPI-getTypeKeyByAliasResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITypelistToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITypelistToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITypelistToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITypelistToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getTypeKeysByAlias" parameterOrder="typelist namespace alias">
      <wsdl:documentation>For use during imports, returns an array of TypeKeyData objects given a typelist, a namespace, and an
alias.  If no typecodes are found, will return a zero-length, non-null array.  A namespace generally corresponds
to an external integration source, but multiple namespaces per source are allowed.  NOTE: this method allows
multiple typecodes to use the same namespace-alias tuple.  If you require a namespace-alias to resolve to a
single typecode, please use getTypeKeyByAlias.</wsdl:documentation>
      <wsdl:input name="getTypeKeysByAliasRequest" message="impl:ITypelistToolsAPI-getTypeKeysByAliasRequest"/>
      <wsdl:output name="getTypeKeysByAliasResponse" message="impl:ITypelistToolsAPI-getTypeKeysByAliasResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITypelistToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITypelistToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITypelistToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITypelistToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getTypelistValues" parameterOrder="typelistName">
      <wsdl:documentation>Given the name of a typelist, returns an array of all the typekey instances contained within.  An exception is
thrown if no typelist exists with the given name.</wsdl:documentation>
      <wsdl:input name="getTypelistValuesRequest" message="impl:ITypelistToolsAPI-getTypelistValuesRequest"/>
      <wsdl:output name="getTypelistValuesResponse" message="impl:ITypelistToolsAPI-getTypelistValuesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:ITypelistToolsAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:ITypelistToolsAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:ITypelistToolsAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:ITypelistToolsAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IUserAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>UserAPI is used to perform operations on users.  This includes creating and modifying.</wsdl:documentation>
    <wsdl:operation name="addRolesToUser" parameterOrder="userID roleIDs">
      <wsdl:documentation>Adds roles to an User.
If an role is already belongs to the user, it's ignored.</wsdl:documentation>
      <wsdl:input name="addRolesToUserRequest" message="impl:IUserAPI-addRolesToUserRequest"/>
      <wsdl:output name="addRolesToUserResponse" message="impl:IUserAPI-addRolesToUserResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addUser" parameterOrder="userData rolePublicIds">
      <wsdl:documentation>Adds the given user to the system. Only the contact field and credential properties are required.
The user will be created and given the roles specified by the &lt;code&gt;roles&lt;/code&gt; parameter.
&lt;p&gt;
The Contact field should be set to an object of type UserContact, which should have at least its last
name set. The Credential field should be set to an object of type Credential which should have the
user name and password fields set. For example:
&lt;pre&gt;
User user = new User()
UserContact userContact = new UserContact()
userContact.FirstName = "John"
userContact.LastName = "Smith"
user.Contact = userContact
Credential credential = new Credential()
credential.UserName  = "jsmith"
credential.Password = "initialPassword"
user.Credential = credential
userAPI.addUser(user, new String[]{"rolex", "roley"})
&lt;/pre&gt;</wsdl:documentation>
      <wsdl:input name="addUserRequest" message="impl:IUserAPI-addUserRequest"/>
      <wsdl:output name="addUserResponse" message="impl:IUserAPI-addUserResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IUserAPI-RequiredFieldException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addUser" parameterOrder="data rolePublicIds credentialName">
      <wsdl:documentation>Adds the given user to the system. This method is included for backwards compatibility but
all new code should use the form of addUser that does &lt;em&gt;not&lt;/em&gt; take a credentialName parameter.
&lt;br&gt;@deprecated use the version of addUser with no credentialName parameter instead
@scriptable-all</wsdl:documentation>
      <wsdl:input name="addUserRequest1" message="impl:IUserAPI-addUserRequest1"/>
      <wsdl:output name="addUserResponse1" message="impl:IUserAPI-addUserResponse1"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserAsMemberOfGroup" parameterOrder="groupID userID">
      <wsdl:documentation>Adds the user as a member of the group.  Both the user and group must already exist.</wsdl:documentation>
      <wsdl:input name="addUserAsMemberOfGroupRequest" message="impl:IUserAPI-addUserAsMemberOfGroupRequest"/>
      <wsdl:output name="addUserAsMemberOfGroupResponse" message="impl:IUserAPI-addUserAsMemberOfGroupResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserAttributes" parameterOrder="userID attributeIDs">
      <wsdl:documentation>Adds attributes to an User.</wsdl:documentation>
      <wsdl:input name="addUserAttributesRequest" message="impl:IUserAPI-addUserAttributesRequest"/>
      <wsdl:output name="addUserAttributesResponse" message="impl:IUserAPI-addUserAttributesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="doesExist" parameterOrder="publicId">
      <wsdl:documentation>Indicates whether the given user exists in the system.</wsdl:documentation>
      <wsdl:input name="doesExistRequest" message="impl:IUserAPI-doesExistRequest"/>
      <wsdl:output name="doesExistResponse" message="impl:IUserAPI-doesExistResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="findPublicIdByName" parameterOrder="userName">
      <wsdl:documentation>Finds the public id of a user by the user login name.</wsdl:documentation>
      <wsdl:input name="findPublicIdByNameRequest" message="impl:IUserAPI-findPublicIdByNameRequest"/>
      <wsdl:output name="findPublicIdByNameResponse" message="impl:IUserAPI-findPublicIdByNameResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getUser" parameterOrder="userID">
      <wsdl:documentation>Retrieves a user given the user identifier</wsdl:documentation>
      <wsdl:input name="getUserRequest" message="impl:IUserAPI-getUserRequest"/>
      <wsdl:output name="getUserResponse" message="impl:IUserAPI-getUserResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="isUserMemberOfGroup" parameterOrder="groupID userID">
      <wsdl:documentation>Returns &lt;code&gt;true&lt;/code&gt; if the user is a member of the group specified, &lt;code&gt;false&lt;/code&gt; if not.</wsdl:documentation>
      <wsdl:input name="isUserMemberOfGroupRequest" message="impl:IUserAPI-isUserMemberOfGroupRequest"/>
      <wsdl:output name="isUserMemberOfGroupResponse" message="impl:IUserAPI-isUserMemberOfGroupResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="removeRolesFromUser" parameterOrder="userID roleIDs">
      <wsdl:documentation>Remove roles from a User.
If any of the roles does not belongs to the user, it will be ignored.</wsdl:documentation>
      <wsdl:input name="removeRolesFromUserRequest" message="impl:IUserAPI-removeRolesFromUserRequest"/>
      <wsdl:output name="removeRolesFromUserResponse" message="impl:IUserAPI-removeRolesFromUserResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="removeUserAsMemberOfGroup" parameterOrder="groupID userID">
      <wsdl:documentation>Removes the user as a member of the group.  Both the user and group must
already exist.</wsdl:documentation>
      <wsdl:input name="removeUserAsMemberOfGroupRequest" message="impl:IUserAPI-removeUserAsMemberOfGroupRequest"/>
      <wsdl:output name="removeUserAsMemberOfGroupResponse" message="impl:IUserAPI-removeUserAsMemberOfGroupResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="removeUserAttributes" parameterOrder="userID attributeIDs">
      <wsdl:documentation>Remove attributes to an User.
If an attribute does not belongs to the user, it's ignored.</wsdl:documentation>
      <wsdl:input name="removeUserAttributesRequest" message="impl:IUserAPI-removeUserAttributesRequest"/>
      <wsdl:output name="removeUserAttributesResponse" message="impl:IUserAPI-removeUserAttributesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IUserAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:IUserAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:IUserAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IUserAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IUserAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IWorkflowAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>External API for performing operations on workflows.</wsdl:documentation>
    <wsdl:operation name="complete" parameterOrder="workflowID">
      <wsdl:documentation>Sets the state of the workflow with public ID &lt;code&gt;workflowID&lt;/code&gt;
to WorkflowState#TC_COMPLETED.</wsdl:documentation>
      <wsdl:input name="completeRequest" message="impl:IWorkflowAPI-completeRequest"/>
      <wsdl:output name="completeResponse" message="impl:IWorkflowAPI-completeResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IWorkflowAPI-RequiredFieldException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="invokeTrigger" parameterOrder="workflowID triggerKey">
      <wsdl:documentation>Invokes the triggerKey on the current step of the specified workflow causing
the workflow to advance to the next step.
If a null or invalid workflow ID is passed in, an exception will be thrown.  In
addition, if the triggerkey is null or the trigger is not available, an
exception will be thrown.</wsdl:documentation>
      <wsdl:input name="invokeTriggerRequest" message="impl:IWorkflowAPI-invokeTriggerRequest"/>
      <wsdl:output name="invokeTriggerResponse" message="impl:IWorkflowAPI-invokeTriggerResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IWorkflowAPI-RequiredFieldException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="isTriggerAvailable" parameterOrder="workflowID triggerKey">
      <wsdl:documentation>True if the given trigger is available in the Workflow; i.e. if it is OK to pass the
trigger ID to the invokeTrigger method.</wsdl:documentation>
      <wsdl:input name="isTriggerAvailableRequest" message="impl:IWorkflowAPI-isTriggerAvailableRequest"/>
      <wsdl:output name="isTriggerAvailableResponse" message="impl:IWorkflowAPI-isTriggerAvailableResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IWorkflowAPI-RequiredFieldException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="resumeAllWorkflows">
      <wsdl:documentation>Resumes all workflows in the state
WorkflowState#TC_ERROR or WorkflowState#TC_SUSPENDED.

The workflow engine will subsequently attempt to advance these workflows
to their next steps. For each one, if an error occurs again, the error
will be logged and the workflow's state set to WorkflowState#TC_ERROR.</wsdl:documentation>
      <wsdl:input name="resumeAllWorkflowsRequest" message="impl:IWorkflowAPI-resumeAllWorkflowsRequest"/>
      <wsdl:output name="resumeAllWorkflowsResponse" message="impl:IWorkflowAPI-resumeAllWorkflowsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="resumeWorkflow" parameterOrder="workflowID">
      <wsdl:documentation>Resumes the workflow with public ID &lt;code&gt;workflowID&lt;/code&gt;.

The workflow engine will subsequently attempt to advance the workflow
to its next step. If an error occurs again, the error
will be logged and the workflow's state set to WorkflowState#TC_ERROR.</wsdl:documentation>
      <wsdl:input name="resumeWorkflowRequest" message="impl:IWorkflowAPI-resumeWorkflowRequest"/>
      <wsdl:output name="resumeWorkflowResponse" message="impl:IWorkflowAPI-resumeWorkflowResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IWorkflowAPI-RequiredFieldException"/>
      <wsdl:fault name="EntityStateException" message="impl:IWorkflowAPI-EntityStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="suspend" parameterOrder="workflowID">
      <wsdl:documentation>Suspends the workflow with public ID &lt;code&gt;workflowID&lt;/code&gt;.</wsdl:documentation>
      <wsdl:input name="suspendRequest" message="impl:IWorkflowAPI-suspendRequest"/>
      <wsdl:output name="suspendResponse" message="impl:IWorkflowAPI-suspendResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IWorkflowAPI-ServerStateException"/>
      <wsdl:fault name="RequiredFieldException" message="impl:IWorkflowAPI-RequiredFieldException"/>
      <wsdl:fault name="SOAPException" message="impl:IWorkflowAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IWorkflowAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IWorkflowAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="IZoneImportAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IZoneImportAPI is a remote interface to a set of tools to import zone data (in csv format)
into the staging tables.  See documentation for the zone data csv format.</wsdl:documentation>
    <wsdl:operation name="clearProductionTables" parameterOrder="countryCode">
      <wsdl:documentation>Clears the production tables that contain zone data in preparation for
zone data to be imported from the staging tables via the Table Import Tools.
This should be called after the staging tables have gone through an integrity check
and any offending rows are excluded/corrected.</wsdl:documentation>
      <wsdl:input name="clearProductionTablesRequest" message="impl:IZoneImportAPI-clearProductionTablesRequest"/>
      <wsdl:output name="clearProductionTablesResponse" message="impl:IZoneImportAPI-clearProductionTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IZoneImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IZoneImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IZoneImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IZoneImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="clearStagingTables" parameterOrder="countryCode">
      <wsdl:documentation>Clears the staging tables tables that contain zone data in preparation for
zone data to be imported to the staging tables.  If countryCode is specified
and is a valid value, only rows for that country are cleared.</wsdl:documentation>
      <wsdl:input name="clearStagingTablesRequest" message="impl:IZoneImportAPI-clearStagingTablesRequest"/>
      <wsdl:output name="clearStagingTablesResponse" message="impl:IZoneImportAPI-clearStagingTablesResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IZoneImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IZoneImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IZoneImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IZoneImportAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="importToStaging" parameterOrder="countryCode zoneData clearStaging">
      <wsdl:documentation>Import csv formatted data containg zone information.  See the documentation
for details of the expected csv format.
This gives you the option of clearing out the staging tables before loading the data.</wsdl:documentation>
      <wsdl:input name="importToStagingRequest" message="impl:IZoneImportAPI-importToStagingRequest"/>
      <wsdl:output name="importToStagingResponse" message="impl:IZoneImportAPI-importToStagingResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:IZoneImportAPI-ServerStateException"/>
      <wsdl:fault name="SOAPException" message="impl:IZoneImportAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:IZoneImportAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:IZoneImportAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="PCClaimSearchIntegrationAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation/>
    <wsdl:operation name="getClaimByClaimNumber" parameterOrder="claimNumber">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="getClaimByClaimNumberRequest" message="impl:PCClaimSearchIntegrationAPI-getClaimByClaimNumberRequest"/>
      <wsdl:output name="getClaimByClaimNumberResponse" message="impl:PCClaimSearchIntegrationAPI-getClaimByClaimNumberResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:PCClaimSearchIntegrationAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:PCClaimSearchIntegrationAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:PCClaimSearchIntegrationAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:PCClaimSearchIntegrationAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:PCClaimSearchIntegrationAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfClaims" parameterOrder="criteria">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="getNumberOfClaimsRequest" message="impl:PCClaimSearchIntegrationAPI-getNumberOfClaimsRequest"/>
      <wsdl:output name="getNumberOfClaimsResponse" message="impl:PCClaimSearchIntegrationAPI-getNumberOfClaimsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:PCClaimSearchIntegrationAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:PCClaimSearchIntegrationAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:PCClaimSearchIntegrationAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:PCClaimSearchIntegrationAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:PCClaimSearchIntegrationAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfClaimsMultiCriteria" parameterOrder="criteria">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="getNumberOfClaimsMultiCriteriaRequest" message="impl:PCClaimSearchIntegrationAPI-getNumberOfClaimsMultiCriteriaRequest"/>
      <wsdl:output name="getNumberOfClaimsMultiCriteriaResponse" message="impl:PCClaimSearchIntegrationAPI-getNumberOfClaimsMultiCriteriaResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:PCClaimSearchIntegrationAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:PCClaimSearchIntegrationAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:PCClaimSearchIntegrationAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:PCClaimSearchIntegrationAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:PCClaimSearchIntegrationAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="giveUserClaimViewPermission" parameterOrder="claimPublicID userName">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="giveUserClaimViewPermissionRequest" message="impl:PCClaimSearchIntegrationAPI-giveUserClaimViewPermissionRequest"/>
      <wsdl:output name="giveUserClaimViewPermissionResponse" message="impl:PCClaimSearchIntegrationAPI-giveUserClaimViewPermissionResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:PCClaimSearchIntegrationAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:PCClaimSearchIntegrationAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:PCClaimSearchIntegrationAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:PCClaimSearchIntegrationAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:PCClaimSearchIntegrationAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="searchForClaims" parameterOrder="criteria">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="searchForClaimsRequest" message="impl:PCClaimSearchIntegrationAPI-searchForClaimsRequest"/>
      <wsdl:output name="searchForClaimsResponse" message="impl:PCClaimSearchIntegrationAPI-searchForClaimsResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:PCClaimSearchIntegrationAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:PCClaimSearchIntegrationAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:PCClaimSearchIntegrationAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:PCClaimSearchIntegrationAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:PCClaimSearchIntegrationAPI-BadIdentifierException"/>
    </wsdl:operation>
    <wsdl:operation name="searchForClaimsMultiCriteria" parameterOrder="criteria">
      <wsdl:documentation>null</wsdl:documentation>
      <wsdl:input name="searchForClaimsMultiCriteriaRequest" message="impl:PCClaimSearchIntegrationAPI-searchForClaimsMultiCriteriaRequest"/>
      <wsdl:output name="searchForClaimsMultiCriteriaResponse" message="impl:PCClaimSearchIntegrationAPI-searchForClaimsMultiCriteriaResponse"/>
      <wsdl:fault name="ServerStateException" message="impl:PCClaimSearchIntegrationAPI-ServerStateException"/>
      <wsdl:fault name="DataConversionException" message="impl:PCClaimSearchIntegrationAPI-DataConversionException"/>
      <wsdl:fault name="SOAPException" message="impl:PCClaimSearchIntegrationAPI-SOAPException"/>
      <wsdl:fault name="PermissionException" message="impl:PCClaimSearchIntegrationAPI-PermissionException"/>
      <wsdl:fault name="BadIdentifierException" message="impl:PCClaimSearchIntegrationAPI-BadIdentifierException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IBulkInvoiceAPISoapBinding" type="impl:IBulkInvoiceAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="addItems">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addItemsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addItemsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createBulkInvoice">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createBulkInvoiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="createBulkInvoiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if the invoice to be created has a public ID already in use or if it has a null public ID</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createBulkInvoice">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createBulkInvoiceRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="createBulkInvoiceResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if the invoice to be created has a public ID already in use or if it has a null public ID</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createContactByLinkId">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createContactByLinkIdRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="createContactByLinkIdResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If a communication error occurs</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteItems">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="deleteItemsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="deleteItemsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBulkInvoice">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getBulkInvoiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getBulkInvoiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getItems">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getItemsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getItemsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getItems">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getItemsRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getItemsResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getItems">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getItemsRequest2">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getItemsResponse2">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="placeDownstreamHoldOnInvoice">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="placeDownstreamHoldOnInvoiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="placeDownstreamHoldOnInvoiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>if the invoice status was not requesting or requested</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestBulkInvoice">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="requestBulkInvoiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="requestBulkInvoiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopBulkInvoice">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="stopBulkInvoiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="stopBulkInvoiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>if the status of the BulkInvoice does not allow for it to be stopped</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitBulkInvoice">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitBulkInvoiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitBulkInvoiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBulkInvoiceStatus">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateBulkInvoiceStatusRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="updateBulkInvoiceStatusResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If the new check status is invalid</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateItems">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateItemsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="updateItemsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateBulkInvoice">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="validateBulkInvoiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="validateBulkInvoiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="voidBulkInvoice">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="voidBulkInvoiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="voidBulkInvoiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>if the status of the BulkInvoice does not allow for it to be voided.</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if an invalid public ID is given</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IClaimAPISoapBinding" type="impl:IClaimAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="addActivityFromPattern">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addActivityFromPatternRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addActivityFromPatternResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If either the claimID or activityPatternID does not exist.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If there is an attempt to add an activity using an activity pattern that isn't available to the particular type of the given claim, or that isn't available to a closed claim (if the given claim is closed).</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have all of the following permissions: VIEW_CLAIM, CREATE_ACTIVITY.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addActivityFromPatternWithOverride">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addActivityFromPatternWithOverrideRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addActivityFromPatternWithOverrideResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If either the claimID or activityPatternID does not exist.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If there is an attempt to add an activity using an activity pattern that isn't available to the particular type of the given claim, or that isn't available to a closed claim (if the given claim is closed).</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have all of the following permissions: VIEW_CLAIM, CREATE_ACTIVITY.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addClaimContactDocument">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addClaimContactDocumentRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addClaimContactDocumentResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException. If the contact isn't associated with the claim, throws DataConversionException.GeneralConversionException</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the VIEW_CLAIM permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addClaimantActivityFromPattern">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addClaimantActivityFromPatternRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addClaimantActivityFromPatternResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If either the claimID or activityPatternID does not exist.  If the contact isn't a claimant on the claim, throws DataConversionException.GeneralConversionException.  If the contact isn't associated with the claim at all, throws DataConversionException.GeneralConversionException</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If there is an attempt to add an activity using an activity pattern that isn't available to the particular type of the given exposure, or that isn't available to a closed exposure (if the given exposure is closed).</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have all of the following permissions: VIEW_CLAIM, CREATE_ACTIVITY.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addClaimantDocument">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addClaimantDocumentRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addClaimantDocumentResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.  If the contact isn't a claimant on the claim, throws DataConversionException.GeneralConversionException.  If the contact isn't associated with the claim at all, throws DataConversionException.GeneralConversionException</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the VIEW_CLAIM permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addClaimantNote">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addClaimantNoteRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addClaimantNoteResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.  If the contact isn't a claimant on either the claim or the exposures, throws DataConversionException.GeneralConversionException.  If the contact isn't associated with the claim at all, throws DataConversionException.GeneralConversionException</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have both the EDIT_CLAIM permission and the ADD_NOTE permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCustomHistory">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addCustomHistoryRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addCustomHistoryResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCustomHistoryWithDesc">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addCustomHistoryWithDescRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addCustomHistoryWithDescResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocument">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addDocumentRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addDocumentResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addExposure">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addExposureRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addExposureResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If the claim has been marked closed or closed pending approval.</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have both the EDIT_CLAIM permission and the CREATE_NEW_EXPOSURE permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addExposureDocument">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addExposureDocumentRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addExposureDocumentResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException. If the contact isn't associated with the claim, throws DataConversionException.GeneralConversionException</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the VIEW_CLAIM permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addFNOL">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addFNOLRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addFNOLResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the claim number is not unique, a DataConversionException.DuplicateKeyException is thrown.  If the claim number isn't found on the claim, then a DataConversionException.RequiredFieldException is thrown.  If the policy isn't found on the claim, then a DataConversionException.RequiredFieldException is thrown.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>Thrown if no assignment target is found for the claim, or if a ConcurrentDataChange exception is thrown by the server.  In addition, other unexpected server exceptions will be wrapped by this exception.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the EDIT_CLAIM permission</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addMatterDocument">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addMatterDocumentRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addMatterDocumentResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException. If the contact isn't associated with the claim, throws DataConversionException.GeneralConversionException</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the VIEW_CLAIM permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNote">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addNoteRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addNoteResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have both the EDIT_CLAIM permission and the ADD_NOTE permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bulkValidate">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="bulkValidateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="bulkValidateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkValid">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="checkValidRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="checkValidResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the VIEW_CLAIM permission</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="claimsExist">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="claimsExistRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="claimsExistResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="closeClaim">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="closeClaimRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="closeClaimResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation> If the public id doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>If the claim fails open/close validation rules.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the CLOSE_CLAIM_OR_EXPOSURE permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="completeActivity">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="completeActivityRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="completeActivityResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the VIEW_CLAIM, CREATE_ACTIVITY permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the public id doesn't correspond to an existing activity.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doesExist">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="doesExistRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="doesExistResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findPublicIdByClaimNumber">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findPublicIdByClaimNumberRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findPublicIdByClaimNumberResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaim">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getClaimRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getClaimResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the claimID does not exist.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have VIEW_CLAIM permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimInfo">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getClaimInfoRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getClaimInfoResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the claim with such public ID does not exist.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimInfo">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getClaimInfoRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getClaimInfoResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the claim with such public ID does not exist.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimState">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getClaimStateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getClaimStateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the public id doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="giveUserPermissionsOnClaim">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="giveUserPermissionsOnClaimRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="giveUserPermissionsOnClaimResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If user doesn't exist, will thrown LoginException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importAcordClaimFromXML">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importAcordClaimFromXMLRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importAcordClaimFromXMLResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the claim number is not unique, a DataConversionException.DuplicateKeyException is thrown.  If the claim number isn't found on the claim, then a DataConversionException.RequiredFieldException is thrown.  If the policy isn't found on the claim, then a DataConversionException.RequiredFieldException is thrown.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>Thrown if no assignment target is found for the claim, or if a ConcurrentDataChange exception is thrown by the server.  In addition, other unexpected server exceptions will be wrapped by this exception.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the EDIT_CLAIM permission</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importClaimFromXML">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importClaimFromXMLRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importClaimFromXMLResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the claim number is not unique, a DataConversionException.DuplicateKeyException is thrown.  If the claim number isn't found on the claim, then a DataConversionException.RequiredFieldException is thrown.  If the policy isn't found on the claim, then a DataConversionException.RequiredFieldException is thrown.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>Thrown if no assignment target is found for the claim, or if a ConcurrentDataChange exception is thrown by the server.  In addition, other unexpected server exceptions will be wrapped by this exception.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the EDIT_CLAIM permission</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isFlagged">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isFlaggedRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="isFlaggedResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the ClaimIdentifier doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="migrateClaim">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="migrateClaimRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="migrateClaimResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="migrateClaim">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="migrateClaimRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="migrateClaimResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="previewAssignment">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="previewAssignmentRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="previewAssignmentResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>If the assignment adapter cannot be loaded.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshPolicy">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="refreshPolicyRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="refreshPolicyResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the public id doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException. If the claim's loss date is null, throws DataConversionException.RequiredFieldException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reopenClaim">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="reopenClaimRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="reopenClaimResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the public id doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>If the claim fails reopen validation rules.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the REOPEN_CLAIM_OR_EXPOSURE permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reopenClaim">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="reopenClaimRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="reopenClaimResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the public id doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>If the claim fails reopen validation rules.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the REOPEN_CLAIM_OR_EXPOSURE permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="restoreClaim">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="restoreClaimRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="restoreClaimResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduleForArchive">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="scheduleForArchiveRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="scheduleForArchiveResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If claims cannot be found or cannot be scheduled for archive</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduleForArchiveByPublicId">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="scheduleForArchiveByPublicIdRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="scheduleForArchiveByPublicIdResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If claims cannot be found or cannot be scheduled for archive</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPolicy">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setPolicyRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setPolicyResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the public id doesn't correspond to an existing claim, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="skipActivity">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="skipActivityRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="skipActivityResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have the VIEW_CLAIM, CREATE_ACTIVITY permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the public id doesn't correspond to an existing activity.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IClaimFinancialsAPISoapBinding" type="impl:IClaimFinancialsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="addClaimFinancials">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addClaimFinancialsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addClaimFinancialsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>Thrown if there's a problem in the imported data; for example, a bad typecode or missing required field.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>Thrown if there's a transaction or check with an invalid status in in the transaction set.</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addClaimFinancials">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addClaimFinancialsRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addClaimFinancialsResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If there's a problem in the imported data; For example, a bad typecode or missing required field.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If there's a transaction or check with an invalid status in in the transaction set.</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addClaimFinancialsWithValidation">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addClaimFinancialsWithValidationRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addClaimFinancialsWithValidationResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>Thrown if there's a problem in the imported data; Also thrown if the imported transaction fails the parameters  AllowMultilineTransactions and AllowMultiplePayments</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown if the calling user doesn't have permission to perform the operation.  lso thrown if approval adapter determines that the requesting user has no authority to import the TransactionSet.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addClaimFinancialsWithValidation">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addClaimFinancialsWithValidationRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addClaimFinancialsWithValidationResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If there is a problem in the imported data; Also thrown if the imported transaction fails the parameters AllowMultilineTransactions and AllowMultiplePayments</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the calling user doesn't have permission to perform the operation. Also thrown if approval adapter determines that the requesting user has no authority to import the TransactionSet.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyForeignExchangeAdjustmentToCheck">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="applyForeignExchangeAdjustmentToCheckRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="applyForeignExchangeAdjustmentToCheckResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If the check has an invalid status - something other than Requesting, Requested, Issued or Cleared.  Or if the check is not valid for receiving a foreign exchange adjustment (according to the criteria listed above).</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyForeignExchangeAdjustmentToCheck">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="applyForeignExchangeAdjustmentToCheckRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="applyForeignExchangeAdjustmentToCheckResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If the check has an invalid status - something other than Requesting, Requested, Issued or Cleared.  Or if the check is not valid for receiving a foreign exchange adjustment (according to the criteria listed above).</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyForeignExchangeAdjustmentToPayment">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="applyForeignExchangeAdjustmentToPaymentRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="applyForeignExchangeAdjustmentToPaymentResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>if the payment is not valid for receiving a foreign exchange adjustment (according to the criteria listed above).</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyForeignExchangeAdjustmentToPayment">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="applyForeignExchangeAdjustmentToPaymentRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="applyForeignExchangeAdjustmentToPaymentResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>if the payment is not valid for receiving a foreign exchange adjustment (according to the criteria listed above).</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyCheck">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="denyCheckRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="denyCheckResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>if the check status is not one of the following: TransactionStatus.TC_SUBMITTING,
TransactionStatus.TC_SUBMITTED</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>Thrown if an unexpected error occurs on the server while updating the check.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyRecovery">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="denyRecoveryRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="denyRecoveryResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>Thrown if an unexpected error occurs on the server while updating the recovery.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimAmounts">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getClaimAmountsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getClaimAmountsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPSenderException">
        <wsdlsoap:fault name="SOAPSenderException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExposureAmounts">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getExposureAmountsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getExposureAmountsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>If the calculation associated with the passed {@link FinancialsCalculationType} cannot be found.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPSenderException">
        <wsdl:documentation>If either exposureIDs or FinancialsCalculationType are null.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPSenderException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopAndReissueCheck">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="stopAndReissueCheckRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="stopAndReissueCheckResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the calling user doesn't have permission to perform the operation.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the identified check is not found.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopCheck">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="stopCheckRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="stopCheckResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopCheck">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="stopCheckRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="stopCheckResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the calling user doesn't have permission to perform the operation.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the identified check is not found.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCheckStatus">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateCheckStatusRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="updateCheckStatusResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>Thrown if the new check status is invalid</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="voidAndReissueCheck">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="voidAndReissueCheckRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="voidAndReissueCheckResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the calling user doesn't have permission to perform the operation.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the identified check is not found.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="voidCheck">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="voidCheckRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="voidCheckResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="voidCheck">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="voidCheckRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="voidCheckResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the calling user doesn't have permission to perform the operation.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the identified check is not found.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IContactAutoSyncAPISoapBinding" type="impl:IContactAutoSyncAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="autoSyncContactWithABUID">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="autoSyncContactWithABUIDRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="autoSyncContactWithABUIDResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IDataExtractionAPISoapBinding" type="impl:IDataExtractionAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="findClaimAndRenderWithTemplateByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findClaimAndRenderWithTemplateByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findClaimAndRenderWithTemplateByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permissions.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findCreatedExposuresAndRenderWithTemplateByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findCreatedExposuresAndRenderWithTemplateByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findCreatedExposuresAndRenderWithTemplateByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permissions.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findEntityAndRenderWithTemplateByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findEntityAndRenderWithTemplateByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findEntityAndRenderWithTemplateByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permissions.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="viewClaimAndRenderWithTemplateByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="viewClaimAndRenderWithTemplateByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="viewClaimAndRenderWithTemplateByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permissions.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="viewUserAndRenderWithTemplateByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="viewUserAndRenderWithTemplateByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="viewUserAndRenderWithTemplateByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permissions.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IDataObjectAPISoapBinding" type="impl:IDataObjectAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="find">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findIds">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findIdsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findIdsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNextSequenceNumber">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getNextSequenceNumberRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getNextSequenceNumberResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectById">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getObjectByIdRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getObjectByIdResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPathValues">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getPathValuesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getPathValuesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type or public id is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPathValues">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setPathValuesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setPathValuesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type or public id is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPathValues">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setPathValuesRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setPathValuesResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the entity type or public id is invalid</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IExposureAPISoapBinding" type="impl:IExposureAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="addActivityFromPattern">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addActivityFromPatternRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addActivityFromPatternResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If either the exposureID or activityPatternID does not exist.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If there is an attempt to add an activity using an activity pattern that isn't available to the particular type of the given exposure, or that isn't available to a closed exposure (if the given exposure is closed).</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have all of the following permissions: VIEW_CLAIM, CREATE_ACTIVITY.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDocument">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addDocumentRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addDocumentResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the String doesn't correspond to an existing exposure, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have VIEW_CLAIM permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNote">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addNoteRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addNoteResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the String doesn't correspond to an existing exposure, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have both the VIEW_CLAIM and the ADD_NOTE permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="closeExposure">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="closeExposureRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="closeExposureResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the String doesn't correspond to an existing exposure, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>If the exposure fails open/close validation rules</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have CLOSE_CLAIM_OR_EXPOSURE permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExposureState">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getExposureStateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getExposureStateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the String doesn't correspond to an existing exposure, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reopenExposure">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="reopenExposureRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="reopenExposureResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the String doesn't correspond to an existing exposure, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>If the exposure fails open/close validation rules</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have REOPEN_CLAIM_OR_EXPOSURE permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reopenExposure">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="reopenExposureRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="reopenExposureResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the String doesn't correspond to an existing exposure, throws DataConversionException.BadIdentifierException.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>If the exposure fails open/close validation rules</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the caller does not have REOPEN_CLAIM_OR_EXPOSURE permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IGroupAPISoapBinding" type="impl:IGroupAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="addGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addGroupRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addGroupResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If any of the required fields are missing.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateKeyException">
        <wsdl:documentation>If the group has a public id that exists already.</wsdl:documentation>
        <wsdlsoap:fault name="DuplicateKeyException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findPublicIdByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findPublicIdByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findPublicIdByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getGroupRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getGroupResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IImportToolsAPISoapBinding" type="impl:IImportToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="csvToXml">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="csvToXmlRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="csvToXmlResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="csvToXml">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="csvToXmlRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="csvToXmlResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importCsvData">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importCsvDataRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importCsvDataResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If csvData is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the data can't be imported because it violates duplicate key constraints, contains nulls in non-nullable fields, or otherwise can't be safely inserted into the database.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importXmlData">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importXmlDataRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importXmlDataResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If xmlData is null or empty.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the data can't be imported because it violates duplicate key constraints, contains nulls in non-nullable fields, or otherwise can't be safely inserted into the database.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importXmlDataAsByteArray">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importXmlDataAsByteArrayRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importXmlDataAsByteArrayResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If xmlData is null or empty.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If the data can't be imported because it violates duplicate key constraints, contains nulls in non-nullable fields, or otherwise can't be safely inserted into the database.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rebuildRolePrivileges">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="rebuildRolePrivilegesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="rebuildRolePrivilegesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="xmlToCsv">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="xmlToCsvRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="xmlToCsvResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP Admin permission.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ILoginAPISoapBinding" type="impl:ILoginAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="WSSLogin">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="WSSLoginRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="WSSLoginResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="LoginException">
        <wsdl:documentation>if the user cannot be authenticated or was denied access for some reason.</wsdl:documentation>
        <wsdlsoap:fault name="LoginException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="WSSLogout">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="WSSLogoutRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="WSSLogoutResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have sufficient permissions</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="login">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="loginRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="loginResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="LoginException">
        <wsdl:documentation>if the user cannot be authenticated.</wsdl:documentation>
        <wsdlsoap:fault name="LoginException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="logoutRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="logoutResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IMaintenanceToolsAPISoapBinding" type="impl:IMaintenanceToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="batchProcessStatusByID">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="batchProcessStatusByIDRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="batchProcessStatusByIDResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPSenderException">
        <wsdlsoap:fault name="SOAPSenderException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="batchProcessStatusByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="batchProcessStatusByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="batchProcessStatusByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNumActiveWorkItems">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getNumActiveWorkItemsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getNumActiveWorkItemsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getValidBatchProcessNames">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getValidBatchProcessNamesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getValidBatchProcessNamesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if there is an exception thrown during the processing</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWQueueStatus">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getWQueueStatusRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getWQueueStatusResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueConfig">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getWorkQueueConfigRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getWorkQueueConfigResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueNames">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getWorkQueueNamesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getWorkQueueNamesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkQueueStatus">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getWorkQueueStatusRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getWorkQueueStatusResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isBatchProcessNameValid">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isBatchProcessNameValidRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="isBatchProcessNameValidResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>if there is an exception thrown during the processing</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isPluginStarted">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isPluginStartedRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="isPluginStartedResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if user does not have toolspluginview</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="markArchiveReady">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="markArchiveReadyRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="markArchiveReadyResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If claims cannot be found or cannot be scheduled for archive</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="markForPurge">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="markForPurgeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="markForPurgeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If there is exception thrown during the processing</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have both SOAP ADMIN and PURGE permissions.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="markPurgeReady">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="markPurgeReadyRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="markPurgeReadyResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>Upon any error</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="notifyQueueWorkers">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="notifyQueueWorkersRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="notifyQueueWorkersResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestTerminationOfBatchProcessByID">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="requestTerminationOfBatchProcessByIDRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="requestTerminationOfBatchProcessByIDResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPSenderException">
        <wsdlsoap:fault name="SOAPSenderException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestTerminationOfBatchProcessByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="requestTerminationOfBatchProcessByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="requestTerminationOfBatchProcessByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="restore">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="restoreRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="restoreResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>Upon any error</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduleAggLimitRebuildAllLimits">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="scheduleAggLimitRebuildAllLimitsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="scheduleAggLimitRebuildAllLimitsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If aggregate limits cannot be marked invalid or the work items could not be created</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduleAggLimitRebuildInvalidLimits">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="scheduleAggLimitRebuildInvalidLimitsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="scheduleAggLimitRebuildInvalidLimitsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If the work items could not be created</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduleAggLimitRebuildOfClaims">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="scheduleAggLimitRebuildOfClaimsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="scheduleAggLimitRebuildOfClaimsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If aggregate limits cannot be rebuilt</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduleAggLimitRebuildOfPolicies">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="scheduleAggLimitRebuildOfPoliciesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="scheduleAggLimitRebuildOfPoliciesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If aggregate limits cannot be rebuilt</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduleForArchive">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="scheduleForArchiveRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="scheduleForArchiveResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If claims cannot be found or cannot be scheduled for archive</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setWorkQueueConfig">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setWorkQueueConfigRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setWorkQueueConfigResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="startBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="startBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>If the user does not have SOAP ADMIN permissions or if the process is a Purge and the user does not have PURGE permissions.</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startPlugin">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="startPluginRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="startPluginResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if user does not have toolspluginedit</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startWorkQueueWorkers">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="startWorkQueueWorkersRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="startWorkQueueWorkersResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopPlugin">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="stopPluginRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="stopPluginResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if user does not have toolspluginedit</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopWorkQueueWorkers">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="stopWorkQueueWorkersRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="stopWorkQueueWorkersResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="terminateBatchProcessByID">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="terminateBatchProcessByIDRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="terminateBatchProcessByIDResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPSenderException">
        <wsdlsoap:fault name="SOAPSenderException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="terminateBatchProcessByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="terminateBatchProcessByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="terminateBatchProcessByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="waitOnActiveWorkItems">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="waitOnActiveWorkItemsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="waitOnActiveWorkItemsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="whenStatsCalculated">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="whenStatsCalculatedRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="whenStatsCalculatedResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if there is an exception thrown during the processing</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IMessagingToolsAPISoapBinding" type="impl:IMessagingToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="ackMessage">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="ackMessageRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="ackMessageResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="acknowledgeMessage">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="acknowledgeMessageRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="acknowledgeMessageResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessageId">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getMessageIdRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getMessageIdResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessageStatisticsForSafeOrderedObject">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getMessageStatisticsForSafeOrderedObjectRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getMessageStatisticsForSafeOrderedObjectResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTotalStatistics">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getTotalStatisticsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getTotalStatisticsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="purgeCompletedMessages">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="purgeCompletedMessagesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="purgeCompletedMessagesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resumeDestination">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resumeDestinationRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="resumeDestinationResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resyncClaim">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resyncClaimRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="resyncClaimResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If claim cannot be found.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retryMessage">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="retryMessageRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="retryMessageResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessages">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="retryRetryableErrorMessagesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="retryRetryableErrorMessagesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessages">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="retryRetryableErrorMessagesRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="retryRetryableErrorMessagesResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retryRetryableErrorMessagesForCategory">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="retryRetryableErrorMessagesForCategoryRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="retryRetryableErrorMessagesForCategoryResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="skipMessage">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="skipMessageRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="skipMessageResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="suspendDestination">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="suspendDestinationRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="suspendDestinationResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IProfilerAPISoapBinding" type="impl:IProfilerAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="setEnableProfilerForBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForBatchProcessAndWorkQueue">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForBatchProcessAndWorkQueueRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForBatchProcessAndWorkQueueResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForMessageDestination">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForMessageDestinationRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForMessageDestinationResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForStartablePlugin">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForStartablePluginRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForStartablePluginResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForSubsequentWebSessions">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForSubsequentWebSessionsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForSubsequentWebSessionsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForWebService">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForWebServiceRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForWebServiceResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setEnableProfilerForWorkQueue">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setEnableProfilerForWorkQueueRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setEnableProfilerForWorkQueueResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ISystemToolsAPISoapBinding" type="impl:ISystemToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="cancelUpdateStats">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="cancelUpdateStatsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="cancelUpdateStatsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkDatabaseConsistency">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="checkDatabaseConsistencyRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="checkDatabaseConsistencyResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkPartialDatabaseConsistency">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="checkPartialDatabaseConsistencyRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="checkPartialDatabaseConsistencyResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessionData">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getActiveSessionDataRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getActiveSessionDataResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDBCCState">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getDBCCStateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getDBCCStateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHighestRunlevel">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getHighestRunlevelRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getHighestRunlevelResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoggingCategories">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getLoggingCategoriesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getLoggingCategoriesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecentAWRSnapshotInfo">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getRecentAWRSnapshotInfoRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getRecentAWRSnapshotInfoResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRunlevel">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getRunlevelRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getRunlevelResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUpdateStatsState">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getUpdateStatsStateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getUpdateStatsStateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersion">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getVersionRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getVersionResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="recalculateFileChecksums">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="recalculateFileChecksumsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="recalculateFileChecksumsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reloadLoggingConfig">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="reloadLoggingConfigRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="reloadLoggingConfigResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reportDatabaseCatalogStatistics">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="reportDatabaseCatalogStatisticsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="reportDatabaseCatalogStatisticsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reportPartialDatabaseCatalogStatistics">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="reportPartialDatabaseCatalogStatisticsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="reportPartialDatabaseCatalogStatisticsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRunlevel">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="setRunlevelRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="setRunlevelResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>if the server is already at that level or if the specified run level is not one of the allowed constants.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitAwrReportBatchJob">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitAwrReportBatchJobRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitAwrReportBatchJobResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitDBCCBatchJob">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitDBCCBatchJobRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitDBCCBatchJobResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitDmvReportBatchJob">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitDmvReportBatchJobRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitDmvReportBatchJobResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitDmvReportBatchJobWithParams">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitDmvReportBatchJobWithParamsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitDmvReportBatchJobWithParamsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitUpdateStats">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="submitUpdateStatsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="submitUpdateStatsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>SOAPException</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLoggingLevel">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateLoggingLevelRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="updateLoggingLevelResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the logger field is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdl:documentation>If the logging level is not valid.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyDatabaseSchema">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="verifyDatabaseSchemaRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="verifyDatabaseSchemaResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPServerException">
        <wsdlsoap:fault name="SOAPServerException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ITableImportAPISoapBinding" type="impl:ITableImportAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="clearErrorTable">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="clearErrorTableRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="clearErrorTableResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearExclusionTable">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="clearExclusionTableRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="clearExclusionTableResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="clearStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="clearStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteExcludedRowsFromStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="deleteExcludedRowsFromStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="deleteExcludedRowsFromStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteExcludedRowsFromStagingTablesAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="deleteExcludedRowsFromStagingTablesAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="deleteExcludedRowsFromStagingTablesAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="encryptDataOnStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="encryptDataOnStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="encryptDataOnStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContents">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="integrityCheckStagingTableContentsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="integrityCheckStagingTableContentsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAndLoadSourceTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="integrityCheckStagingTableContentsAndLoadSourceTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="integrityCheckStagingTableContentsAndLoadSourceTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="integrityCheckStagingTableContentsAndLoadSourceTablesAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckStagingTableContentsAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="integrityCheckStagingTableContentsAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="integrityCheckStagingTableContentsAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="integrityCheckZoneStagingTableContentsAndLoadZoneSourceTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="populateExclusionTable">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="populateExclusionTableRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="populateExclusionTableResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="populateExclusionTableAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="populateExclusionTableAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="populateExclusionTableAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateStatisticsOnStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateStatisticsOnStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="updateStatisticsOnStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateStatisticsOnStagingTablesAsBatchProcess">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateStatisticsOnStagingTablesAsBatchProcessRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="updateStatisticsOnStagingTablesAsBatchProcessResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ITemplateToolsAPISoapBinding" type="impl:ITemplateToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="importFormFields">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importFormFieldsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importFormFieldsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="listTemplatesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="listTemplatesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateAllTemplates">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="validateAllTemplatesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="validateAllTemplatesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateTemplate">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="validateTemplateRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="validateTemplateResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ITypelistToolsAPISoapBinding" type="impl:ITypelistToolsAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="getAliasByInternalCode">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAliasByInternalCodeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAliasByInternalCodeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if more than one result is found for the given namespace/typecode</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAliasesByInternalCode">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getAliasesByInternalCodeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getAliasesByInternalCodeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTypeKeyByAlias">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getTypeKeyByAliasRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getTypeKeyByAliasResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if more than one result is found for the given namespace/alias</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTypeKeysByAlias">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getTypeKeysByAliasRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getTypeKeysByAliasResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTypelistValues">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getTypelistValuesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getTypelistValuesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>if no typelist exists with the given name</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the caller does not have all of the following permissions: ADMIN</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IUserAPISoapBinding" type="impl:IUserAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="addRolesToUser">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addRolesToUserRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addRolesToUserResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the userID or roleID does not exist</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addUserRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addUserResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>if the passed in User is null, or if the passed in User.Contact is null, or if the passed in User.Credential is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if a user already exists with the given credential name or if one of the specified roles doesn't exist.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addUserRequest1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addUserResponse1">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if a user already exists with the given credential name or if one of the specified roles doesn't exist.</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserAsMemberOfGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addUserAsMemberOfGroupRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addUserAsMemberOfGroupResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the user or group is not found</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserAttributes">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addUserAttributesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="addUserAttributesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the userID or attributeID does not exist</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doesExist">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="doesExistRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="doesExistResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findPublicIdByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findPublicIdByNameRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="findPublicIdByNameResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUser">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getUserRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getUserResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the userID does not exist</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If multiple users match the given user id.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>if the user does not have permission</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserMemberOfGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isUserMemberOfGroupRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="isUserMemberOfGroupResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the user or group is not found</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRolesFromUser">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removeRolesFromUserRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="removeRolesFromUserResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the userID or one of the roleIDs does not exist</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUserAsMemberOfGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removeUserAsMemberOfGroupRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="removeUserAsMemberOfGroupResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the user or group is not found</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUserAttributes">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removeUserAttributesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="removeUserAttributesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>if the userID or attributeIDs do not exist</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IWorkflowAPISoapBinding" type="impl:IWorkflowAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="complete">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="completeRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="completeResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the workflow id is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the workflow id did not match a valid workflow.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="invokeTrigger">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="invokeTriggerRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="invokeTriggerResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the trigger key or workflow id is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If no workspace matches the given workflow id or the trigger is invalid or not available.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isTriggerAvailable">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isTriggerAvailableRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="isTriggerAvailableResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the trigger key or workflow id is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If no workspace matches the given workflow id.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resumeAllWorkflows">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resumeAllWorkflowsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="resumeAllWorkflowsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resumeWorkflow">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resumeWorkflowRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="resumeWorkflowResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the workflow id is null.</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="EntityStateException">
        <wsdl:documentation>If the workflow is not currently in the error or suspended state.</wsdl:documentation>
        <wsdlsoap:fault name="EntityStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the workflow id did not match a valid workflow.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="suspend">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="suspendRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="suspendResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="RequiredFieldException">
        <wsdl:documentation>If the workflow id is null</wsdl:documentation>
        <wsdlsoap:fault name="RequiredFieldException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>If the workflow id did not match a valid workflow.</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IZoneImportAPISoapBinding" type="impl:IZoneImportAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="clearProductionTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="clearProductionTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="clearProductionTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If the country code is not null and does not have a zone configuration defined or does not correspond to a valid country.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearStagingTables">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="clearStagingTablesRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="clearStagingTablesResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If the country code is not null and does not correspond to a valid country.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importToStaging">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="importToStagingRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="importToStagingResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdl:documentation>If the country code provided does not correspond to a valid country that has a zone configuation defined.</wsdl:documentation>
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="PCClaimSearchIntegrationAPISoapBinding" type="impl:PCClaimSearchIntegrationAPI" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
    <wsdl:operation name="getClaimByClaimNumber">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getClaimByClaimNumberRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getClaimByClaimNumberResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If any of the required fields in PCClaimSearchCriteria is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfClaims">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getNumberOfClaimsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getNumberOfClaimsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If any of the required fields in PCClaimSearchCriteria is null or the end date is before the begin date</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfClaimsMultiCriteria">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getNumberOfClaimsMultiCriteriaRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="getNumberOfClaimsMultiCriteriaResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If any of the required fields in PCClaimSearchCriteria is null or the end date is before the begin date</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="giveUserClaimViewPermission">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="giveUserClaimViewPermissionRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="giveUserClaimViewPermissionResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If either claimPublicID or userName is null</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForClaims">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="searchForClaimsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="searchForClaimsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If any of the required fields in PCClaimSearchCriteria is null or the end date is before the begin date</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForClaimsMultiCriteria">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="searchForClaimsMultiCriteriaRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:input>
      <wsdl:output name="searchForClaimsMultiCriteriaResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="encoded" namespace="http://api.webservices.cc.guidewire.com/"/>
      </wsdl:output>
      <wsdl:fault name="ServerStateException">
        <wsdl:documentation>Thrown when a request is made at a time the server is in a state that disallows the request.</wsdl:documentation>
        <wsdlsoap:fault name="ServerStateException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="DataConversionException">
        <wsdl:documentation>If any of the required fields in PCClaimSearchCriteria is null or the end date is before the begin date</wsdl:documentation>
        <wsdlsoap:fault name="DataConversionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="SOAPException">
        <wsdlsoap:fault name="SOAPException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionException">
        <wsdl:documentation>Thrown when the authenticated SOAP user does not have permission to perform the requested operation</wsdl:documentation>
        <wsdlsoap:fault name="PermissionException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
      <wsdl:fault name="BadIdentifierException">
        <wsdl:documentation>Thrown when an internal public ID doesn't map to a real bean (problem could be that type was incorrect)</wsdl:documentation>
        <wsdlsoap:fault name="BadIdentifierException" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://api.webservices.cc.guidewire.com/" use="encoded"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IBulkInvoiceAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>&lt;p&gt;
&lt;code&gt;IBulkInvoiceAPI&lt;/code&gt; provides methods for creating &lt;code&gt;BulkInvoice&lt;/code&gt; objects and adding/updating/deleting
&lt;code&gt;BulkInvoiceItem&lt;/code&gt; objects.
&lt;/p&gt;&lt;p&gt;
Unless otherwise indicated, callers of this API should assume that returned entities contain foreign key
IDs for associated entities, rather than the entity itself.  For example, a call to &lt;code&gt;getItems()&lt;/code&gt; returns an
array of &lt;code&gt;BulkInvoiceItem&lt;/code&gt; beans, each bean contains a foreign key to the containing &lt;code&gt;BulkInvoice.&lt;/code&gt;
However, the API returns only the ID of the &lt;code&gt;BulkInvoice&lt;/code&gt; and so you must make a separate call to
&lt;code&gt;getBulkInvoice()&lt;/code&gt; to actually get the &lt;code&gt;Invoice&lt;/code&gt;.  This separate call is more efficient for
constructing the API's SOAP response.
&lt;/p&gt;&lt;p&gt;
In practice, this also means that a caller of the &lt;code&gt;IBulkInvoiceAPI&lt;/code&gt;, must set the &lt;code&gt;Exposure&lt;/code&gt;
and &lt;code&gt;Claim&lt;/code&gt; on a &lt;code&gt;BulkInvoiceItem&lt;/code&gt; using the &lt;code&gt;PublicID&lt;/code&gt; of the &lt;code&gt;Claim&lt;/code&gt; or
&lt;code&gt;Exposure&lt;/code&gt;. Both the &lt;code&gt;setClaim()&lt;/code&gt; and &lt;code&gt;setExposure()&lt;/code&gt; methods take a
&lt;code&gt;String&lt;/code&gt; argument which must be a &lt;code&gt;PublicId&lt;/code&gt;.
&lt;/p&gt;
See {@link IBulkInvoiceAPISoapBindingStub#createContactByLinkId(String)} for example code.

@see gw.api.webservice.IDataObjectAPI

@author chsu</wsdl:documentation>
    <wsdl:port name="IBulkInvoiceAPI" binding="impl:IBulkInvoiceAPISoapBinding">
      <wsdlsoap:address location="local:///IBulkInvoiceAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IClaimAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IClaimAPI provides methods for adding claims and claim related items such as exposures, documents and
notes to ClaimCenter.
@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI} instead.
</wsdl:documentation>
    <wsdl:port name="IClaimAPI" binding="impl:IClaimAPISoapBinding">
      <wsdlsoap:address location="local:///IClaimAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IClaimFinancialsAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>The Claim Financials API provides methods for importing claim financials
data when the system is using the "Financials View" integration mode and
for updating the status of a requested check when the system is using the
"Financials Entry" integration mode.</wsdl:documentation>
    <wsdl:port name="IClaimFinancialsAPI" binding="impl:IClaimFinancialsAPISoapBinding">
      <wsdlsoap:address location="local:///IClaimFinancialsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IContactAutoSyncAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>API for submitting Contacts for automatic synchronization from an external system
(This is normally used by ContactManager, but can be used by any system implementing linking
and sync-ing via IAddressBookAPI)

This webservice has been deprecated in ClaimCenter 7.0 and replaced with the ContactAPI
@deprecated Use gw.webservice.cc.contact.ContactAPI
</wsdl:documentation>
    <wsdl:port name="IContactAutoSyncAPI" binding="impl:IContactAutoSyncAPISoapBinding">
      <wsdlsoap:address location="local:///IContactAutoSyncAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IDataExtractionAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>Guidewire Software
Data extraction API that uses Gosu to render the results
@deprecated This web service is deprecated and should be replaced by custom web services, which can be tailored to take exactly the right parameters and to construct a string using Gosu code or templates
</wsdl:documentation>
    <wsdl:port name="IDataExtractionAPI" binding="impl:IDataExtractionAPISoapBinding">
      <wsdlsoap:address location="local:///IDataExtractionAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IDataObjectAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>Deprecated interface. There is no replacement. Instead, you should write your own Gosu class and publish
it as a web service by marking it with the &lt;code&gt;@RpcWebService&lt;/code&gt; annotation.
&lt;p/&gt;
Methods in this class use XPath.  The notation draws heavily from
the new "Service Data Object" spec from BEA and IBM. See their
&lt;a href="http://xml.coverpages.org/IBM-BEA-SDOv10.pdf"&gt;Service Data Ojbects&lt;/a&gt;
specification.
Please note that certain characters need to be escaped in XPath notation.  Specifically:
' goes to &amp;apos; &lt;br/&gt;
" goes to &amp;qout; &lt;br/&gt;
&lt; goes to &amp;lt; &lt;br/&gt;
&gt; goes to &amp;gt; &lt;br/&gt;
&amp; goes to &amp;amp;  &lt;br/&gt;

@author mshaw
@version Jan 16, 2004 4:15:21 PM
@deprecated Write your own Gosu class and publish it as a web service.
</wsdl:documentation>
    <wsdl:port name="IDataObjectAPI" binding="impl:IDataObjectAPISoapBinding">
      <wsdlsoap:address location="local:///IDataObjectAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IExposureAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IExposureAPI encapsulates the mechanisms available for the manipulation of exposures in the system. External
systems make ClaimCenter aware of new exposures by associating them with or adding them to a claim.
@deprecated Use the WS-I version {@link gw.webservice.cc.cc801.claim.ClaimAPI} instead.
</wsdl:documentation>
    <wsdl:port name="IExposureAPI" binding="impl:IExposureAPISoapBinding">
      <wsdlsoap:address location="local:///IExposureAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IGroupAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns3="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IGroupAPI provides mechanisms for adding new Groups to and obtaining information for
existing Groups from ClaimCenter</wsdl:documentation>
    <wsdl:port name="IGroupAPI" binding="impl:IGroupAPISoapBinding">
      <wsdlsoap:address location="local:///IGroupAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IImportToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IImportToolsAPI is a remote interface to a set of tools to import XML data to the
server.
&lt;p/&gt;
The XML import format is defined by dynamically-generated XML Schema Definition (XSD) files. Regenerate the XSD
files with the regen-xsd task. After XSD regeneration, you will find the XSD files in dist/xsd/import,
including the three XSD files: xx_typelists.xsd, xx_entities.xsd, xx_import.xsd (with "xx" replaced by the Guidewire
product code, e.g., "cc" for ClaimCenter).</wsdl:documentation>
    <wsdl:port name="IImportToolsAPI" binding="impl:IImportToolsAPISoapBinding">
      <wsdlsoap:address location="local:///IImportToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ILoginAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>&lt;p&gt;
A remote interface that allows a user to log in and out of a system. The system uses conversations to implement SOAP
authentication in a Guidewire application  (e.g. BillingCenter, ClaimCenter, PolicyCenter). When connecting to Guidewire
applications the caller must first authenticate using the &lt;code&gt;ILoginAPI.login()&lt;/code&gt; method.  This method returns the
the session ID of the server session.
&lt;/p&gt;
&lt;p&gt;
On each successive call in the conversation, pass the session ID in the SOAP header
{@link gw.pl.util.webservices.Globals#GW_AUTHENTICATION_SECURITY_TOKEN_CONTEXT_PROPERTY}. You must call
&lt;code&gt;logout()&lt;/code&gt; when you are done with the conversation.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; This API is intended for users who are using Guidewire's web services from languages other
than Java.   If you are using Java, you should use the &lt;code&gt;APILocator&lt;/code&gt; instead.
&lt;/p&gt;</wsdl:documentation>
    <wsdl:port name="ILoginAPI" binding="impl:ILoginAPISoapBinding">
      <wsdlsoap:address location="local:///ILoginAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IMaintenanceToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation/>
    <wsdl:port name="IMaintenanceToolsAPI" binding="impl:IMaintenanceToolsAPISoapBinding">
      <wsdlsoap:address location="local:///IMaintenanceToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IMessagingToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>MessagingTools is a remote interface to a set of tools to get messaging
statistics and perform operations on messages.</wsdl:documentation>
    <wsdl:port name="IMessagingToolsAPI" binding="impl:IMessagingToolsAPISoapBinding">
      <wsdlsoap:address location="local:///IMessagingToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IProfilerAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://enumeration.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>API to access services offered by the Guidewire Profiler.</wsdl:documentation>
    <wsdl:port name="IProfilerAPI" binding="impl:IProfilerAPISoapBinding">
      <wsdlsoap:address location="local:///IProfilerAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ISystemToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>System maintenance interface.</wsdl:documentation>
    <wsdl:port name="ISystemToolsAPI" binding="impl:ISystemToolsAPISoapBinding">
      <wsdlsoap:address location="local:///ISystemToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ITableImportAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>This interface provides methods for integrity checking and loading data via
the  staging tables.
&lt;p/&gt;
In particular, it allows the caller to instruct the server
to perform the following staging table operations:
&lt;ol&gt;
&lt;li&gt;Clear error table.&lt;/li&gt;
&lt;li&gt;Clear exclusion table.&lt;/li&gt;
&lt;li&gt;Clear staging tables.&lt;/li&gt;
&lt;li&gt;Delete rows from staging tables based on contents of exclusion table.&lt;/li&gt;
&lt;li&gt;Populate exclusion table with rows to be excluded.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the staging tables.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the Zone staging tables and load Zone source tables if no errors.&lt;/li&gt;
&lt;li&gt;Integrity check the contents of the staging tables and load source tables if no errors.&lt;/li&gt;
&lt;/ol&gt;</wsdl:documentation>
    <wsdl:port name="ITableImportAPI" binding="impl:ITableImportAPISoapBinding">
      <wsdlsoap:address location="local:///ITableImportAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ITemplateToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>ITemplateToolsAPI provides adminstrative and programmer support tools for document
templates.</wsdl:documentation>
    <wsdl:port name="ITemplateToolsAPI" binding="impl:ITemplateToolsAPISoapBinding">
      <wsdlsoap:address location="local:///ITemplateToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="ITypelistToolsAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>ITypelistToolsAPI provides methods that allow for the extraction of typelist data from the
system.</wsdl:documentation>
    <wsdl:port name="ITypelistToolsAPI" binding="impl:ITypelistToolsAPISoapBinding">
      <wsdlsoap:address location="local:///ITypelistToolsAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IUserAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://entity.webservices.cc.guidewire.com/" xmlns:tns3="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>UserAPI is used to perform operations on users.  This includes creating and modifying.</wsdl:documentation>
    <wsdl:port name="IUserAPI" binding="impl:IUserAPISoapBinding">
      <wsdlsoap:address location="local:///IUserAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IWorkflowAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:tns2="http://enumeration.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>External API for performing operations on workflows.</wsdl:documentation>
    <wsdl:port name="IWorkflowAPI" binding="impl:IWorkflowAPISoapBinding">
      <wsdlsoap:address location="local:///IWorkflowAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="IZoneImportAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation>IZoneImportAPI is a remote interface to a set of tools to import zone data (in csv format)
into the staging tables.  See documentation for the zone data csv format.</wsdl:documentation>
    <wsdl:port name="IZoneImportAPI" binding="impl:IZoneImportAPISoapBinding">
      <wsdlsoap:address location="local:///IZoneImportAPI"/>
    </wsdl:port>
  </wsdl:service>
  <wsdl:service name="PCClaimSearchIntegrationAPIService" xmlns="" xmlns:impl="http://api.webservices.cc.guidewire.com/" xmlns:intf="http://api.webservices.cc.guidewire.com/" xmlns:tns1="http://entity.webservices.cc.guidewire.com/" xmlns:tns2="http://fault.webservices.cc.guidewire.com/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:documentation/>
    <wsdl:port name="PCClaimSearchIntegrationAPI" binding="impl:PCClaimSearchIntegrationAPISoapBinding">
      <wsdlsoap:address location="local:///PCClaimSearchIntegrationAPI"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>