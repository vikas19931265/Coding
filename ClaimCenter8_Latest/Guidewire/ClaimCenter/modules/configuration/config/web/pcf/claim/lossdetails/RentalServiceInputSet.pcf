<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="pcf.xsd">
  <InputSet
    id="RentalServiceInputSet">
    <Require
      name="rentalServiceRequest"
      type="ServiceRequest"/>
    <Require
      name="vehicleIncident"
      type="VehicleIncident"/>
    <Require
      name="unusedServices"
      type="java.util.Set&lt;ServiceRequest&gt;"/>
    <Variable
      initialValue="gw.vendormanagement.SpecialistServiceCodeConstants.AUTORENTAL"
      name="autoRentalServiceCode"
      type="String"/>
    <Variable
      initialValue="vehicleIncident.getCoverageDescription(vehicleIncident.Claim.Policy.RentalCoverageType)"
      name="coverageValue"
      type="String"/>
    <Variable
      initialValue="rentalServiceRequest != null"
      name="rentalSelected"
      type="boolean"/>
    <InputGroup
      allowToggle="isEditableServiceRequest()"
      childrenVisible="rentalSelected"
      id="RentalInputGroup"
      label="coverageValue != null ? displaykey.Web.VehicleIncidentRentalDV.Rental.ValueLabel : displaykey.Web.VehicleIncidentRentalDV.LabelNoCoverage"
      onToggle="toggleServiceRequest(VALUE)">
      <InputSet
        visible="rentalSelected">
        <Input
          id="RentalCoverage"
          label="displaykey.Web.VehicleIncidentRentalDV.RentalCoverage.Label"
          value="coverageValue == null ? displaykey.Web.VehicleIncidentRentalDV.RentalCoverage.NoCoverage.Value : coverageValue"/>
        <DateInput
          available="true"
          editable="true"
          id="RentalBeginDate"
          label="displaykey.Web.VehicleIncidentRentalDV.RentalBeginDate.Label"
          required="true"
          value="RentalBeginDate">
          <PostOnChange/>
        </DateInput>
        <DateInput
          available="true"
          editable="true"
          id="RentalEndDate"
          label="displaykey.Web.VehicleIncidentRentalDV.RentalEndDate.Label"
          required="true"
          validationExpression="vehicleIncident.RentalBeginDate != null and vehicleIncident.RentalEndDate != null and vehicleIncident.RentalEndDate &lt; vehicleIncident.RentalBeginDate ? displaykey.Java.Validation.AdminCatastrophe.Date.ForbidValidReverse : null"
          value="RentalEndDate">
          <PostOnChange/>
        </DateInput>
        <Input
          available="true"
          editable="true"
          id="RentalRate"
          label="displaykey.Web.VehicleIncidentRentalDV.RentalDailyRate.Label"
          required="true"
          value="RentalRate">
          <PostOnChange/>
        </Input>
        <Input
          available="true"
          editable="true"
          id="ReservationNumber"
          label="displaykey.Web.VehicleIncidentRentalDV.ReservationNumber.Label"
          value="ReservationNumber">
          <PostOnChange/>
        </Input>
        <ClaimContactInput
          claim="vehicleIncident.Claim"
          editable="rentalServiceRequest.IsEditableInUI"
          id="RentalAgency"
          label="displaykey.Web.VehicleIncidentRentalDV.RentalAgency.Label"
          newContactMenu="ClaimNewVendorOnlyPickerMenuItemSet"
          required="true"
          specialistServices="{SpecialistService.getForCode(autoRentalServiceCode)}"
          value="rentalServiceRequest.SpecialistAndCreateClaimContact"
          valueRange="vehicleIncident.Claim.RelatedCompanyArray">
          <PostOnChange
            target="OtherServiceRequestInfo"/>
        </ClaimContactInput>
        <InputSet
          id="OtherServiceRequestInfo"
          visible="rentalServiceRequest.Specialist != null">
          <Input
            id="RentalAgencyAddress"
            label="displaykey.Web.VehicleIncidentRentalDV.RentalAgencyLocation.Label"
            value="rentalServiceRequest.Specialist.PrimaryAddress"/>
          <Input
            id="RentalAgencyPhone"
            label="displaykey.Web.VehicleIncidentDV.RentalAgencyPhone"
            value="rentalServiceRequest.Specialist.PrimaryPhoneValue"/>
          <InputSetRef
            def="NewServiceRequestInstructionInputSet(rentalServiceRequest, displaykey.Web.VehicleIncidentTowingDV.PickUpLocation, null)"
            editable="isEditableServiceRequest()"
            mode="&quot;rental&quot;"/>
        </InputSet>
      </InputSet>
    </InputGroup>
    <Code><![CDATA[uses gw.vendormanagement.SpecialistServiceCodeConstants
uses java.util.Date
uses gw.vendormanagement.ServiceRequestPrefixedAdditionalInstructionsTextHelper
uses gw.api.financials.CurrencyAmount
uses com.guidewire.pl.system.util.DateFormatUtil
uses com.guidewire.pl.system.util.CurrencyFormatUtil

function isEditableServiceRequest() : boolean {
  return rentalServiceRequest == null or rentalServiceRequest.IsEditableInUI
}

function updateInstructionText() {
  ServiceRequestPrefixedAdditionalInstructionsTextHelper.updateInstructionText(rentalServiceRequest, getInstructionTextPrefix())
}

private function getInstructionTextPrefix() : String {  
  return displaykey.Web.VehicleIncidentRentalDV.InstructionPrefix(getFormattedDate(RentalBeginDate), getFormattedDate(RentalEndDate), FormattedRentalRate)
}

property get FormattedRentalRate() : String {
  return vehicleIncident.RentalDailyRate != null ?
   CurrencyFormatUtil.getCurrencyFormat(vehicleIncident.RentalDailyRate.Currency.toString()).render(vehicleIncident.RentalDailyRate, false)
   : null
}

function getFormattedDate(date : Date) : String {
  return date != null ? DateFormatUtil.getOutputDateFormat(null, null).format(date) : null
}

property get RentalBeginDate() : Date {
  return vehicleIncident.RentalBeginDate
}

property set RentalBeginDate(beginDate : Date) {
  vehicleIncident.RentalBeginDate = beginDate
  if (!isEditableServiceRequest()) {
    var reasonForChange = displaykey.Web.VehicleIncidentRentalDV.ServiceRequestChange.RentalBeginDateChanged(getFormattedDate(RentalBeginDate))
    rentalServiceRequest.recordChange(reasonForChange, null, null, User.util.CurrentUser.Contact)
  } else {
    updateInstructionText()
  }
}

property get RentalEndDate() : Date {
  return vehicleIncident.RentalEndDate
}

property set RentalEndDate(endDate : Date) {
  vehicleIncident.RentalEndDate = endDate
  rentalServiceRequest.RequestedServiceCompletionDateMoveToEndOfDay = endDate
  if (!isEditableServiceRequest()) {
    var reasonForChange = displaykey.Web.VehicleIncidentRentalDV.ServiceRequestChange.RentalEndDateChanged(getFormattedDate(RentalEndDate))
    rentalServiceRequest.recordChange(reasonForChange, null, null, User.util.CurrentUser.Contact)
  } else {
    updateInstructionText()
  }
}

property get RentalRate() : CurrencyAmount {
  return vehicleIncident.RentalDailyRate
}

property set RentalRate(rate : CurrencyAmount) {
  vehicleIncident.RentalDailyRate = rate
  if (!isEditableServiceRequest()) {
    var reasonForChange = displaykey.Web.VehicleIncidentRentalDV.ServiceRequestChange.RentalDailyRateChanged(FormattedRentalRate)
    rentalServiceRequest.recordChange(reasonForChange, null, null, User.util.CurrentUser.Contact)
  } else {
    updateInstructionText()
  }
}

property get ReservationNumber() : String{
  return vehicleIncident.RentalReserveNo
}

property set ReservationNumber(resNum : String) {
  vehicleIncident.RentalReserveNo = resNum
  rentalServiceRequest.ServiceRequestReferenceNumber = resNum
  if (!isEditableServiceRequest()) {
    var reasonForChange = displaykey.Web.VehicleIncidentRentalDV.ServiceRequestChange.RentalReserveNoChanged(rentalServiceRequest.ServiceRequestReferenceNumber)
    rentalServiceRequest.recordChange(reasonForChange, null, null, User.util.CurrentUser.Contact)
  }
}

function toggleServiceRequest(checkboxValue : boolean) {
  if (rentalServiceRequest == null) {
    if (checkboxValue) {
      rentalServiceRequest = vehicleIncident.Claim.newServiceRequest(vehicleIncident.Claim.maincontact, vehicleIncident)
      rentalServiceRequest.Instruction.addServiceFoundByCode(autoRentalServiceCode)
      rentalServiceRequest.Kind = ServiceRequestKind.TC_SERVICEONLY
    }
  } else {
    if (not checkboxValue) {
      unusedServices.add(rentalServiceRequest)
    } else {
      unusedServices.remove(rentalServiceRequest)
    }
  }
  rentalSelected = checkboxValue
}]]></Code>
  </InputSet>
</PCF>