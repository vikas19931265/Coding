function FileData_Pairs(x)
{
x.t("upgrade","issue");
x.t("example","null-safe");
x.t("example","uses");
x.t("example","type");
x.t("example","want");
x.t("example","certain");
x.t("example","objects");
x.t("example","something");
x.t("example","function");
x.t("example","following");
x.t("complex","non-java-backed");
x.t("differently","claimcenter");
x.t("statements","assume");
x.t("statements","java");
x.t("statements","ensure");
x.t("properties","example");
x.t("properties","always");
x.t("properties","call");
x.t("properties","operator");
x.t("method","exists");
x.t("method","statically");
x.t("method","java");
x.t("method","invocation");
x.t("method","overloading");
x.t("method","work");
x.t("method","class");
x.t("protected","package-protected");
x.t("rather","throw");
x.t("rather","wrapping");
x.t("right","side");
x.t("detected","compile");
x.t("7.0.0","new");
x.t("intended","behavior");
x.t("cast","method");
x.t("cast","array");
x.t("cast","number");
x.t("cast","--");
x.t("within","expression");
x.t("subtle","impossible");
x.t("non-private","variable");
x.t("describes","changes");
x.t("studio","flag");
x.t("package-local","java");
x.t("create","package-local");
x.t("create","gosu");
x.t("create","private");
x.t("create","java");
x.t("static","hash");
x.t("static","initializer");
x.t("built-in","types");
x.t("always","short-circuit");
x.t("kinds","errors");
x.t("coming","gosu");
x.t("related","change");
x.t("variables","subclasses");
x.t("variables","superclasses");
x.t("flag","compile");
x.t("summary","review");
x.t("0.0","false");
x.t("arguments","issue");
x.t("topic","describes");
x.t("null-safe","property");
x.t("null-safe","claimcenter");
x.t("null-safe","addition");
x.t("null-safe","operators");
x.t("null-safe","non-null-safe");
x.t("null-safe","arithmetic");
x.t("null-safe","math");
x.t("null-safe","even");
x.t("null-safe","object");
x.t("refers","internal");
x.t("try","//");
x.t("try","catch");
x.t("uses","default");
x.t("uses","guidewire");
x.t("uses","java.lang.integer");
x.t("uses","mycompany.myclass");
x.t("uses","xsd");
x.t("short-circuit","false");
x.t("hash","map");
x.t("implemented","gosu");
x.t("declared","private");
x.t("text_val.select","link");
x.t("errors","find");
x.t("errors","review");
x.t("errors","warning");
x.t("errors","difficult");
x.t("errors","occur");
x.t("statement","trigger");
x.t("statement","gosu");
x.t("statement","caught");
x.t("interface","that\u2019s");
x.t("change","example");
x.t("change","encourages");
x.t("change","standard");
x.t("change","fields");
x.t("change","affects");
x.t("change","catch");
x.t("type","example");
x.t("type","uses");
x.t("type","property");
x.t("type","element");
x.t("type","name");
x.t("type","loading");
x.t("type","attempt");
x.t("type","error");
x.t("type","non-primitive");
x.t("type","xmlelement");
x.t("type","information");
x.t("type","cases");
x.t("type","including");
x.t("type","var");
x.t("type","object");
x.t("time","errors");
x.t("time","type");
x.t("time","change");
x.t("time","gosu");
x.t("time","avoid");
x.t("time","issues");
x.t("time","private");
x.t("time","compile");
x.t("time","implementation");
x.t("time","warning");
x.t("time","behavior");
x.t("compiler","gosu");
x.t("public","modifier");
x.t("public","private");
x.t("packages","jvm");
x.t("explicitly","starting");
x.t("left","period");
x.t("left","side");
x.t("calls","gosu");
x.t("calls","code");
x.t("hierarchy","return");
x.t("reflectutil","invoke");
x.t("what\u2019s","new");
x.t("sections","list");
x.t("however","obj");
x.t("however","following");
x.t("however","behavior");
x.t("down","java");
x.t("(object)","method");
x.t("releases","java");
x.t("trigger","gosu");
x.t("trigger","similar");
x.t("regardless","runtime");
x.t("guidewire","studio");
x.t("guidewire","entity");
x.t("default","value");
x.t("default","called");
x.t("detect","upgrade");
x.t("text","particular");
x.t("primitive","properties");
x.t("primitive","property");
x.t("primitive","types");
x.t("primitive","expression");
x.t("property","however");
x.t("property","access");
x.t("property","int");
x.t("property","operators");
x.t("property","collection");
x.t("property","expression");
x.t("property","called");
x.t("property","short-circuiting");
x.t("count","enhancement");
x.t("that\u2019s","implemented");
x.t("link","directly");
x.t("new","changed");
x.t("new","xsd.myxsd.myelementtype");
x.t("new","illegalargumentexception");
x.t("new","integer");
x.t("new","myclass");
x.t("access","properties");
x.t("access","method");
x.t("access","null-safe");
x.t("access","primitive");
x.t("access","modifier");
x.t("access","claimcenter");
x.t("access","private");
x.t("access","java");
x.t("details","null-safe");
x.t("details","informed");
x.t("element","example");
x.t("want","cast");
x.t("objects","package");
x.t("objects","pass");
x.t("java.lang.integer","var");
x.t("certain","classes");
x.t("refactor","code");
x.t("thrown","throw");
x.t("choice","explicitly");
x.t("clinit","method");
x.t("catches","exceptions");
x.t("messsage","claimcenter");
x.t("list","changes");
x.t("initialization","error");
x.t("initialization","ordering");
x.t("suddenly","starts");
x.t("add","public");
x.t("machine","(jvm)");
x.t("machine","priority");
x.t("illegalaccesserrors","exceptions");
x.t("strict","regarding");
x.t("incorrect","corresponds");
x.t("guide","what\u2019s");
x.t("guide","priority");
x.t("guide","run");
x.t("due","changes");
x.t("due","changing");
x.t("simple","operator");
x.t("callsomegosu","catch");
x.t("assume","exceptions");
x.t("throws","illegalaccesserrors");
x.t("throws","null");
x.t("throws","exception");
x.t("throws","exceptions");
x.t("false","null");
x.t("false","appropriate");
x.t("false","typically");
x.t("soap","web");
x.t("directly","cast");
x.t("directly","correspond");
x.t("directly","java");
x.t("directly","page");
x.t("directly","illegalargumentexception");
x.t("handle","illegal");
x.t("handle","null");
x.t("puts","something");
x.t("test","previous");
x.t("via","reflectutil");
x.t("e.getcause","//");
x.t("text_val.focus","text_val.select");
x.t("no","explicit");
x.t("no","longer");
x.t("no","compile-time");
x.t("name","variables");
x.t("name","access");
x.t("name","parent");
x.t("name","private");
x.t("name","variable");
x.t("name","integer");
x.t("name","matching");
x.t("jvm","change");
x.t("jvm","throws");
x.t("functionality","example");
x.t("functionality","relied");
x.t("libraries","audit");
x.t("gosu","null-safe");
x.t("gosu","uses");
x.t("gosu","type");
x.t("gosu","compiler");
x.t("gosu","calls");
x.t("gosu","detect");
x.t("gosu","strict");
x.t("gosu","callsomegosu");
x.t("gosu","throws");
x.t("gosu","no");
x.t("gosu","inconsistent");
x.t("gosu","disallows");
x.t("gosu","equivalent");
x.t("gosu","private");
x.t("gosu","compile");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","expects");
x.t("gosu","7.0");
x.t("gosu","classes");
x.t("gosu","priority");
x.t("gosu","wrapped");
x.t("gosu","treats");
x.t("gosu","run");
x.t("gosu","class");
x.t("gosu","behavior");
x.t("gosu","invoke");
x.t("changed","7.0.0");
x.t("changed","guide");
x.t("changed","gosu");
x.t("changed","problem");
x.t("tasks","order");
x.t("initialize","jvm");
x.t("references","type");
x.t("corresponds","run");
x.t("modifier","default");
x.t("modifier","omit");
x.t("modifier","words");
x.t("modifier","priority");
x.t("virtual","machine");
x.t("avoid","relying");
x.t("old","behavior");
x.t("argument","example");
x.t("argument","exception");
x.t("dynamically-generated","soap");
x.t("dynamically-generated","xsd");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","java");
x.t("encourages","coders");
x.t("exists","arrays");
x.t("boolean","properties");
x.t("boolean","types");
x.t("useful","run");
x.t("omit","access");
x.t("find","problem");
x.t("standard","period");
x.t("standard","types");
x.t("standard","arithmetic");
x.t("obj.intprop","gets");
x.t("non-java-backed","types");
x.t("(jvm)","considers");
x.t("decision","handle");
x.t("arrays","guidewire");
x.t("arrays","dynamically-generated");
x.t("arrays","non-java-backed");
x.t("arrays","pcf");
x.t("arrays","pass");
x.t("enhancement","property");
x.t("null-short-circuiting","property");
x.t("loading","initialization");
x.t("loading","arrays");
x.t("loading","ordering");
x.t("loading","order");
x.t("loading","run");
x.t("map","static");
x.t("map","class");
x.t("web","service");
x.t("somegosu","throw");
x.t("claimcenter","new");
x.t("claimcenter","6.0");
x.t("claimcenter","7.0");
x.t("package-protected","create");
x.t("implies","type");
x.t("implies","matching");
x.t("fix","issue");
x.t("fix","call");
x.t("entire","expression");
x.t("array","type");
x.t("array","property");
x.t("array","array");
x.t("array","casts");
x.t("array","different");
x.t("array","integer");
x.t("array","contains");
x.t("attempt","gosu");
x.t("int","code");
x.t("regarding","null-safety");
x.t("short-circuits","value");
x.t("impossible","debug");
x.t("write","java");
x.t("fields","properly");
x.t("fields","matching");
x.t("6.0","property");
x.t("6.0","subclass");
x.t("6.0","either");
x.t("addition","operator");
x.t("informed","decision");
x.t("arrayofint.cast","(integer)");
x.t("contain","null");
x.t("temporarily","within");
x.t("worked","especially");
x.t("earlier","rely");
x.t("rely","class");
x.t("(o)","array");
x.t("(o)","catching");
x.t("solely","run");
x.t("exception-handling","code");
x.t("inconsistent","claimcenter");
x.t("legal","symbol");
x.t("error","kinds");
x.t("error","change");
x.t("error","refactor");
x.t("error","implies");
x.t("error","occurred");
x.t("review","code");
x.t("review","project");
x.t("disallows","create");
x.t("sometimes","intended");
x.t("something","static");
x.t("notice","errors");
x.t("equivalent","run");
x.t("semantically","incorrect");
x.t("operators","example");
x.t("operators","no");
x.t("operators","gosu");
x.t("operators","standard");
x.t("operators","array");
x.t("operators","handling");
x.t("operators","semantics");
x.t("logical","error");
x.t("arrayofint","number");
x.t("arrayofint","integer");
x.t("(integer)","priority");
x.t("especially","boolean");
x.t("period","value");
x.t("period","operator");
x.t("mycompany.myclass","var");
x.t("evaluationexception","instead");
x.t("evaluationexception","exception");
x.t("evaluationexception","illegalargumentexception");
x.t("issues","due");
x.t("issues","gosu");
x.t("issues","function");
x.t("issues","accessing");
x.t("throw","statement");
x.t("throw","new");
x.t("throw","null");
x.t("collection","types");
x.t("initializer","class");
x.t("first","references");
x.t("affects","gosu");
x.t("affects","arrays");
x.t("means","better");
x.t("guidewire_selectall","var");
x.t("side","primitive");
x.t("side","count");
x.t("side","boolean");
x.t("side","expression");
x.t("side","operator");
x.t("number","integer");
x.t("number","//");
x.t("initializes","class");
x.t("function","somegosu");
x.t("function","guidewire_selectall");
x.t("casts","primitive");
x.t("casts","keyword");
x.t("length","short-circuits");
x.t("statically","initializes");
x.t("better","write");
x.t("parent","class");
x.t("cannot","detected");
x.t("cannot","create");
x.t("cannot","access");
x.t("words","add");
x.t("private","variables");
x.t("private","access");
x.t("private","keyword");
x.t("private","variable");
x.t("different","packages");
x.t("different","array");
x.t("different","class");
x.t("expressions","gosu");
x.t("expressions","reference");
x.t("particular","issue");
x.t("accessing","package-local");
x.t("starting","claimcenter");
x.t("starting","server");
x.t("instead","change");
x.t("instead","throwing");
x.t("changes","primitive");
x.t("changes","gosu");
x.t("changes","arrays");
x.t("changes","array");
x.t("changes","claimcenter");
x.t("changes","private");
x.t("changes","affect");
x.t("changes","java");
x.t("changes","null");
x.t("changes","run");
x.t("changes","class");
x.t("compile","errors");
x.t("compile","time");
x.t("compile","down");
x.t("compile","directly");
x.t("types","method");
x.t("types","built-in");
x.t("types","arguments");
x.t("types","directly");
x.t("types","no");
x.t("types","gosu");
x.t("types","standard");
x.t("types","arrays");
x.t("types","contain");
x.t("types","java");
x.t("types","null");
x.t("types","typeof");
x.t("types","non-primitive");
x.t("types","exception");
x.t("types","note");
x.t("types","warning");
x.t("keyword","cast");
x.t("keyword","no");
x.t("properly","value");
x.t("properly","separate");
x.t("returned","expected");
x.t("handling","null");
x.t("internal","method");
x.t("pcf","types");
x.t("superclass","correct");
x.t("superclass","subclass");
x.t("important","information");
x.t("important","following");
x.t("explicit","access");
x.t("expected","however");
x.t("expected","array");
x.t("expected","answer");
x.t("ordering","due");
x.t("ordering","functionality");
x.t("ordering","previous");
x.t("xsd.myxsd.myelementtype","example");
x.t("code","package-local");
x.t("code","try");
x.t("code","uses");
x.t("code","calls");
x.t("code","catches");
x.t("code","via");
x.t("code","rely");
x.t("code","issues");
x.t("code","first");
x.t("code","changes");
x.t("code","similar");
x.t("code","valid");
x.t("code","work");
x.t("code","catch");
x.t("code","checked");
x.t("loader","gosu");
x.t("loader","java");
x.t("reference","type");
x.t("reference","guide");
x.t("reference","types");
x.t("non-null-safe","choice");
x.t("correspond","gosu");
x.t("often","logical");
x.t("safety","arithmetic");
x.t("return","less");
x.t("expects","catch");
x.t("affect","run");
x.t("issue","try");
x.t("issue","type");
x.t("issue","fix");
x.t("issue","affects");
x.t("issue","compile");
x.t("issue","happens");
x.t("issue","priority");
x.t("issue","mark");
x.t("issue","operator");
x.t("issue","contains");
x.t("least","temporarily");
x.t("relied","class");
x.t("previous","releases");
x.t("previous","versions");
x.t("superclasses","name");
x.t("java","interface");
x.t("java","gosu");
x.t("java","virtual");
x.t("java","exception-handling");
x.t("java","code");
x.t("java","classes");
x.t("java","class");
x.t("java","bytecode");
x.t("java","catch");
x.t("java","matching");
x.t("considers","different");
x.t("actual","exception");
x.t("illegal","argument");
x.t("variable","non-private");
x.t("variable","name");
x.t("variable","gosu");
x.t("variable","legal");
x.t("variable","parent");
x.t("variable","superclass");
x.t("variable","subclass");
x.t("variable","warning");
x.t("ensure","catch");
x.t("occurred","messsage");
x.t("changing","gosu");
x.t("project","issue");
x.t("longer","null-safe");
x.t("longer","wrapped");
x.t("null","rather");
x.t("null","right");
x.t("null","entire");
x.t("null","properly");
x.t("null","safety");
x.t("null","value");
x.t("null","exception");
x.t("null","expression");
x.t("null","values");
x.t("null","causes");
x.t("null","pointer");
x.t("null","coerced");
x.t("obj","value");
x.t("extremely","careful");
x.t("typeof","new");
x.t("typeof","typesystem.getfromobject");
x.t("typeof","operator");
x.t("less","useful");
x.t("seen","java");
x.t("iae","(illegalargumentexception)");
x.t("null-safety","operators");
x.t("non-primitive","type");
x.t("non-primitive","types");
x.t("similar","obj.intprop");
x.t("similar","issue");
x.t("value","0.0");
x.t("value","left");
x.t("value","reference");
x.t("value","least");
x.t("value","null");
x.t("unusual","null");
x.t("unusual","behavior");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("--","work");
x.t("invocation","null-safe");
x.t("several","exceptions");
x.t("throwing","null");
x.t("overloading","involving");
x.t("implementation","type");
x.t("exception","related");
x.t("exception","type");
x.t("exception","text");
x.t("exception","claimcenter");
x.t("exception","types");
x.t("exception","important");
x.t("exception","java");
x.t("exception","variable");
x.t("exception","several");
x.t("exception","although");
x.t("exception","runtimeexception");
x.t("exception","created");
x.t("exception","run");
x.t("exception","object");
x.t("force","null-short-circuiting");
x.t("native","java");
x.t("xmlelement","result");
x.t("expression","throws");
x.t("expression","instead");
x.t("expression","null");
x.t("expression","unusual");
x.t("expression","evaluated");
x.t("expression","returns");
x.t("although","old");
x.t("valid","types");
x.t("wrapping","means");
x.t("page","error");
x.t("separate","superclass");
x.t("separate","warning");
x.t("compile-time","semantics");
x.t("information","null-safe");
x.t("information","non-java-backed");
x.t("information","unavailable");
x.t("correct","behavior");
x.t("semantics","simple");
x.t("semantics","changed");
x.t("appropriate","primitive");
x.t("result","semantically");
x.t("happens","catch");
x.t("runtimeexception","case");
x.t("values","details");
x.t("values","expressions");
x.t("values","warning");
x.t("answer","claimcenter");
x.t("typesystem.getfromobject","(object)");
x.t("typesystem.getfromobject","(o)");
x.t("unavailable","example");
x.t("illegalargumentexception","rather");
x.t("illegalargumentexception","test");
x.t("illegalargumentexception","iae");
x.t("illegalargumentexception","//");
x.t("case","catch");
x.t("runtime","behavior");
x.t("7.0","changed");
x.t("7.0","gosu");
x.t("7.0","java");
x.t("7.0","null");
x.t("7.0","subclass");
x.t("7.0","exceptions");
x.t("called","puts");
x.t("called","length");
x.t("called","package");
x.t("problem","review");
x.t("problem","cannot");
x.t("t1","typeof");
x.t("(illegalargumentexception)","e.getcause");
x.t("classes","example");
x.t("classes","regardless");
x.t("classes","gosu");
x.t("classes","different");
x.t("classes","java");
x.t("classes","typeof");
x.t("classes","package");
x.t("classes","behavior");
x.t("classes","load");
x.t("priority","starting");
x.t("integer","property");
x.t("integer","objects");
x.t("integer","argument");
x.t("integer","//");
x.t("integer","var");
x.t("short-circuiting","claimcenter");
x.t("short-circuiting","class");
x.t("note","information");
x.t("t2","typeof");
x.t("mark","java");
x.t("work","expected");
x.t("work","//");
x.t("cases","worked");
x.t("typically","returned");
x.t("debug","extremely");
x.t("debug","order");
x.t("t3","typeof");
x.t("wrapped","differently");
x.t("wrapped","evaluationexception");
x.t("audit","catch");
x.t("treats","separate");
x.t("package","protected");
x.t("package","hierarchy");
x.t("package","name");
x.t("package","gosu");
x.t("package","implies");
x.t("package","cannot");
x.t("order","subtle");
x.t("order","gosu");
x.t("order","changes");
x.t("order","classes");
x.t("order","priority");
x.t("order","warning");
x.t("call","cast");
x.t("call","methods");
x.t("call","code");
x.t("causes","null");
x.t("created","unusual");
x.t("involving","non-java-backed");
x.t("subclass","create");
x.t("subclass","declared");
x.t("subclass","parent");
x.t("subclass","cannot");
x.t("subclass","versions");
x.t("run","time");
x.t("following","topic");
x.t("following","sections");
x.t("following","tasks");
x.t("following","code");
x.t("either","side");
x.t("pointer","exception");
x.t("pointer","exceptions");
x.t("used","null");
x.t("starts","loading");
x.t("elements","native");
x.t("entity","libraries");
x.t("entity","types");
x.t("service","types");
x.t("class","refers");
x.t("class","public");
x.t("class","access");
x.t("class","suddenly");
x.t("class","no");
x.t("class","name");
x.t("class","gosu");
x.t("class","loading");
x.t("class","map");
x.t("class","private");
x.t("class","loader");
x.t("class","called");
x.t("class","package");
x.t("class","following");
x.t("class","class");
x.t("class","load");
x.t("warning","gosu");
x.t("warning","rely");
x.t("relying","run");
x.t("relying","class");
x.t("arithmetic","operators");
x.t("arithmetic","expressions");
x.t("//","cast");
x.t("//","directly");
x.t("//","handle");
x.t("//","call");
x.t("//","var");
x.t("difficult","impossible");
x.t("symbol","classes");
x.t("bytecode","changes");
x.t("bytecode","types");
x.t("bytecode","order");
x.t("evaluated","null");
x.t("pass","type");
x.t("returns","null");
x.t("letting","primitive");
x.t("xsd","type");
x.t("xsd","types");
x.t("catch","statements");
x.t("catch","statement");
x.t("catch","evaluationexception");
x.t("catch","actual");
x.t("catch","illegalargumentexception");
x.t("catch","wrapped");
x.t("catch","exceptions");
x.t("behavior","complex");
x.t("behavior","change");
x.t("behavior","guidewire");
x.t("behavior","solely");
x.t("behavior","sometimes");
x.t("behavior","private");
x.t("behavior","changes");
x.t("behavior","important");
x.t("behavior","often");
x.t("behavior","following");
x.t("behavior","letting");
x.t("coders","null-safe");
x.t("operator","null-safe");
x.t("operator","property");
x.t("operator","gosu");
x.t("operator","null");
x.t("operator","force");
x.t("operator","typesystem.getfromobject");
x.t("operator","used");
x.t("load","initialize");
x.t("load","earlier");
x.t("load","ordering");
x.t("load","order");
x.t("occur","relying");
x.t("myclass","however");
x.t("invoke","method");
x.t("invoke","directly");
x.t("caught","exception");
x.t("names","subclass");
x.t("var","text_val=eval");
x.t("var","arrayofint.cast");
x.t("var","arrayofint");
x.t("var","t1");
x.t("var","t2");
x.t("var","t3");
x.t("coerced","false");
x.t("versions","fields");
x.t("versions","notice");
x.t("including","java");
x.t("catching","exceptions");
x.t("exceptions","coming");
x.t("exceptions","thrown");
x.t("exceptions","clinit");
x.t("exceptions","gosu");
x.t("exceptions","array");
x.t("exceptions","changes");
x.t("exceptions","java");
x.t("exceptions","wrapped");
x.t("exceptions","following");
x.t("exceptions","warning");
x.t("exceptions","exceptions");
x.t("math","operators");
x.t("even","primitive");
x.t("careful","rely");
x.t("matching","package");
x.t("matching","class");
x.t("matching","names");
x.t("server","summary");
x.t("object","left");
x.t("object","seen");
x.t("object","either");
x.t("contains","details");
x.t("contains","elements");
x.t("gets","integer");
x.t("checked","exceptions");
}
