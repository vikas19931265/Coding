function FileData_Pairs(x)
{
x.t("example","xsdgday");
x.t("dates","xsd:datetime");
x.t("construct","java.lang.string");
x.t("construct","java.util.calendar");
x.t("method","gosu");
x.t("method","return");
x.t("method","date");
x.t("method","specify");
x.t("date.tocalendar","tz");
x.t("exist","xsd:datetime");
x.t("xsd:datetime","related");
x.t("xsd:datetime","type");
x.t("xsd:datetime","without");
x.t("xsd:datetime","object");
x.t("abstractxsddatetype","construct");
x.t("related","dates");
x.t("related","types");
x.t("text_val.select","link");
x.t("type","convert");
x.t("type","specification");
x.t("type","corresponding");
x.t("type","gw.xml.xsd.types.xsdgday");
x.t("time","zone");
x.t("formats","specified");
x.t("however","gosu");
x.t("apis","structured");
x.t("structured","xml");
x.t("convert","back");
x.t("back","calendar");
x.t("default","time");
x.t("link","directly");
x.t("timezone","method");
x.t("messsage","gosu");
x.t("guide","gosu");
x.t("calendar","fields");
x.t("calendar","object\u2019s");
x.t("calendar","object");
x.t("java.lang.string","standard");
x.t("throws","illegalstateexception");
x.t("directly","page");
x.t("specified","w3c");
x.t("defaults","except");
x.t("text_val.focus","text_val.select");
x.t("common","superclass");
x.t("gosu","type");
x.t("gosu","throws");
x.t("gosu","counterparts");
x.t("gosu","sets");
x.t("gosu","xml");
x.t("gosu","reference");
x.t("counterparts","package");
x.t("illegalstateexception","include");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("alternatively","construct");
x.t("boolean","specifying");
x.t("standard","xml");
x.t("sets","calendar");
x.t("fields","defaults");
x.t("fields","significant");
x.t("legacy","xml");
x.t("error","occurred");
x.t("guidewire_selectall","var");
x.t("w3c","xml");
x.t("function","guidewire_selectall");
x.t("share","common");
x.t("whether","include");
x.t("handling","xsds");
x.t("xml","apis");
x.t("xml","legacy");
x.t("xml","schema");
x.t("xml","using");
x.t("types","related");
x.t("types","gosu");
x.t("types","share");
x.t("superclass","abstractxsddatetype");
x.t("format","alternatively");
x.t("tocalendar","method");
x.t("tostring","method");
x.t("java.util.calendar","object");
x.t("reference","guide");
x.t("return","format");
x.t("schema","specification");
x.t("schema","date/time");
x.t("occurred","messsage");
x.t("include","time");
x.t("include","calendar");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("page","error");
x.t("specifying","whether");
x.t("information","call");
x.t("information","application-specific");
x.t("meaning","xsd:datetime");
x.t("zone","exist");
x.t("zone","time");
x.t("zone","information");
x.t("zone","meaning");
x.t("specification","call");
x.t("date","type");
x.t("date","handling");
x.t("date","types");
x.t("object\u2019s","time");
x.t("significant","xsd:datetime");
x.t("package","gw.api.xml.xsd.types");
x.t("xsdgday","xsd");
x.t("date/time","formats");
x.t("call","date.tocalendar");
x.t("call","tocalendar");
x.t("call","tostring");
x.t("gw.api.xml.xsd.types","example");
x.t("corresponding","gosu");
x.t("except","fields");
x.t("xsds","function");
x.t("xsds","date");
x.t("xsds","xsd");
x.t("using","xsds");
x.t("xsd","type");
x.t("xsd","types");
x.t("without","time");
x.t("var","text_val=eval");
x.t("passing","boolean");
x.t("tz","timezone");
x.t("gw.xml.xsd.types.xsdgday","date");
x.t("object","however");
x.t("object","tocalendar");
x.t("object","passing");
x.t("application-specific","call");
x.t("specify","default");
}
