function FileData_Pairs(x)
{
x.t("example","below");
x.t("example","subtle");
x.t("example","note");
x.t("example","entity");
x.t("example","returns");
x.t("example","fetches");
x.t("example","extract");
x.t("passed","select");
x.t("looks","inside");
x.t("(person)","//");
x.t("complex","example");
x.t("complex","calculations");
x.t("columns","provide");
x.t("columns","current");
x.t("columns","optimize");
x.t("columns","gosu");
x.t("columns","references");
x.t("columns","string");
x.t("columns","select");
x.t("columns","person");
x.t("columns","database");
x.t("columns","data");
x.t("columns","result");
x.t("columns","assuming");
x.t("columns","following");
x.t("method","refer");
x.t("method","signature");
x.t("method","accepts");
x.t("method","gosu");
x.t("method","compile");
x.t("method","takes");
x.t("method","query");
x.t("method","following");
x.t("method","returns");
x.t("queryobject","select");
x.t("provide","results");
x.t("properties","backed");
x.t("properties","enhancement");
x.t("properties","named");
x.t("properties","mentioned");
x.t("properties","load");
x.t("properties","var");
x.t("available","query");
x.t("below","gosu");
x.t("else","return");
x.t("anything","specify");
x.t("backed","database");
x.t("backed","actual");
x.t("hashmap","string");
x.t("within","block");
x.t("within","function");
x.t("full","method");
x.t("cast","final");
x.t("cast","becomes");
x.t("cast","associated");
x.t("row.primaryaddress.state","final");
x.t("subtle","example");
x.t("subtle","fetches");
x.t("myentity","hashmap");
x.t("computation","row.a");
x.t("shown","example");
x.t("relational","database");
x.t("implement","complex");
x.t(":a","row.a");
x.t("alternate","select");
x.t("refer","properties");
x.t("refer","data");
x.t("static","methods");
x.t("table","return");
x.t("kinds","tasks");
x.t("kinds","sql");
x.t("10","shown");
x.t("10",":e");
x.t("10","return");
x.t("10","e1_minus_e2");
x.t("few","columns");
x.t("performs","calculation");
x.t("detecting","referenced");
x.t("referenced","address1");
x.t("tables","restrictions");
x.t("current","result");
x.t(":e","row.e.e1");
x.t("program","type");
x.t("field","selections");
x.t("hash","map");
x.t("uses","gw.api.database.query");
x.t("line","computation");
x.t("working","row");
x.t("text_val.select","link");
x.t("state","var");
x.t("[firstname]","row");
x.t("qt","rt");
x.t("myobject",":a");
x.t("type","anything");
x.t("type","want");
x.t("type","need");
x.t("type","iterable");
x.t("type","fine");
x.t("type","choose");
x.t("type","returns");
x.t("e1","e2");
x.t("calculations","block");
x.t("calculations","row");
x.t("calculations","following");
x.t("(testa)",".select");
x.t("vary","depending");
x.t("time","gosu");
x.t("time","determine");
x.t("time","aware");
x.t(".lastname","//");
x.t("e2","var");
x.t("row.a","10");
x.t("row.a","row.e");
x.t("row.a","1000");
x.t("row.a","row.e.e1");
x.t("calculation","gosu");
x.t("inside","block");
x.t("inside","gosu");
x.t("apis","working");
x.t("property","properties");
x.t("property","address");
x.t("link","directly");
x.t("certain","kinds");
x.t("objects","tables");
x.t("objects","accepts");
x.t("want","return");
x.t("want","result");
x.t("signature","alternate");
x.t("element","returned");
x.t("new","hashmap");
x.t("new","myobject");
x.t("block","passed");
x.t("block","applies");
x.t("block","references");
x.t("block","argument");
x.t("block","loaded");
x.t("block","in-line");
x.t("block","body");
x.t("block","important");
x.t("block","replaces");
x.t("block","column");
x.t("block","run");
x.t("block","pass");
x.t("block","without");
x.t("block","item");
x.t(".primaryaddress.state","string");
x.t("row.e","final");
x.t("messsage","gosu");
x.t("need","few");
x.t("need","match");
x.t("need","setting");
x.t("generics","blocks");
x.t("generics","help");
x.t("complete","entity");
x.t("optimize","rows");
x.t("guide","query");
x.t("results","involve");
x.t("results","query");
x.t("results","entity");
x.t("results","sql");
x.t("applies","complex");
x.t("accepts","block");
x.t("accepts","gosu");
x.t("become","database");
x.t("large","data");
x.t("directly","page");
x.t("iterable","hashmap");
x.t("iterable","specifically");
x.t("iterable","rt");
x.t("iterable","object");
x.t("test","profile");
x.t("text_val.focus","text_val.select");
x.t("[lastname]","row");
x.t("gosu","looks");
x.t("gosu","calculations");
x.t("gosu","block");
x.t("gosu","permits");
x.t("gosu","blocks");
x.t("gosu","loads");
x.t("gosu","inspects");
x.t("gosu","reference");
x.t("gosu","imposes");
x.t("gosu","knows");
x.t("gosu","runs");
x.t("gosu","executes");
x.t("gosu","sql");
x.t("iterate","across");
x.t("dictionary","determine");
x.t("tasks","inside");
x.t("references","row.a");
x.t("references","block");
x.t("references","become");
x.t("references","row.firstname");
x.t("references","database");
x.t("references","following");
x.t("references","entity");
x.t("exactly","column");
x.t("query.make","(person)");
x.t("query.make","(testa)");
x.t("query.make","(myentity)");
x.t("myentity.e","references");
x.t("performance","large");
x.t("performance","characteristics");
x.t("performance","impact");
x.t("aggregate","queries");
x.t("neither","entity");
x.t("argument","selected");
x.t("argument","database");
x.t("virtual","properties");
x.t("custom","anonymous");
x.t("initializing","two");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","within");
x.t("methods","dbfunction");
x.t("methods","entity");
x.t("inner","class");
x.t("up","row");
x.t("determine","properties");
x.t("determine","performance");
x.t("determine","database");
x.t("loaded","database");
x.t("constants","selected");
x.t("profile","query");
x.t("fine","choose");
x.t("map","members");
x.t("map","declaration");
x.t("address","entity");
x.t("enhancement","methods");
x.t("final","output");
x.t("final","result");
x.t("a_plus_ten","row.a");
x.t("string","array");
x.t("string","row");
x.t("string","integer");
x.t("string","//");
x.t("array","string");
x.t("array","row");
x.t("array","code");
x.t("array","elements");
x.t("array","//");
x.t("array","var");
x.t(".firstname","//");
x.t("addition","sometimes");
x.t("in-line","function");
x.t("contain","exactly");
x.t("three","columns");
x.t("three","database");
x.t("permits","line");
x.t("selected","columns");
x.t("selected","row");
x.t("selected","column");
x.t("lastname","var");
x.t("[state]","previous");
x.t("1000",":e");
x.t("queries","example");
x.t("queries","working");
x.t("queries","neither");
x.t("queries","up");
x.t("queries","select");
x.t("queries","function");
x.t("queries","cannot");
x.t("queries","instead");
x.t("queries","achieve");
x.t("error","occurred");
x.t("sometimes","need");
x.t("whatever","want");
x.t("whatever","convenient");
x.t("body","//");
x.t("blocks","generics");
x.t("involve","sql");
x.t("outer","joins");
x.t("members","key2");
x.t("loads","determine");
x.t("loads","database");
x.t("loads","column");
x.t("row.firstname","row.lastname");
x.t("select","method");
x.t("select","columns");
x.t("select","block");
x.t("select","row");
x.t("select","return");
x.t("select","resultrow");
x.t("(myentity)",".select");
x.t("means","method");
x.t("feature","called");
x.t("collection","apis");
x.t("guidewire_selectall","var");
x.t("gw.api.database.query","//");
x.t("computed","columns");
x.t("function","static");
x.t("function","block");
x.t("function","guidewire_selectall");
x.t("function","define");
x.t("computations","relational");
x.t("cannot","virtual");
x.t("cannot","achieve");
x.t("define","within");
x.t("define","constants");
x.t("define","collection");
x.t("person","table");
x.t("carefully","performance");
x.t("row","refer");
x.t("row","[firstname]");
x.t("row",".lastname");
x.t("row",".primaryaddress.state");
x.t("row","test");
x.t("row","[lastname]");
x.t("row","array");
x.t("row",".firstname");
x.t("row","string");
x.t("row","[state]");
x.t("row","queries");
x.t("row","loads");
x.t("row","return");
x.t("row","key1");
x.t("row","resultrows");
x.t("row","query");
x.t("row","print");
x.t("instead","gosu");
x.t("instead","addition");
x.t("arbitrary","type");
x.t("aware","implementation");
x.t("characteristics","vary");
x.t("achieve","certain");
x.t("achieve","results");
x.t("match","native");
x.t("types","columns");
x.t("inspects","block");
x.t("compile","time");
x.t("returned","row");
x.t("calling","select");
x.t("important","block");
x.t("important","choose");
x.t("impact","gosu");
x.t("reference","cast");
x.t("reference","guide");
x.t("reference","additionally");
x.t("end","hash");
x.t("end","select");
x.t("replaces","values");
x.t("code","similar");
x.t("rows","query.make");
x.t("rows","computations");
x.t("return","columns");
x.t("return","type");
x.t("return","new");
x.t("return","selected");
x.t("return","row");
x.t("return","result");
x.t("database","columns");
x.t("database","full");
x.t("database","cast");
x.t("database","performs");
x.t("database","row.a");
x.t("database","gosu");
x.t("database","references");
x.t("database","select");
x.t("database","function");
x.t("database","row");
x.t("database","instead");
x.t("database","query");
x.t("previous","example");
x.t("key1","resultrow.objectpathexpression1");
x.t("actual","database");
x.t("resultrows","query");
x.t("resultrows","//");
x.t("occurred","messsage");
x.t("resultrow","//");
x.t("key2","resultrow.objectpathexpression2");
x.t("rules","kinds");
x.t("imposes","following");
x.t("specifically","iqueryresult");
x.t("convenient","program");
x.t("running","detecting");
x.t("similar","following");
x.t("named","e1");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("declaration","//");
x.t("knows","load");
x.t("rt","means");
x.t("rt","extends");
x.t("implementation","detail");
x.t("depending","type");
x.t("builder","apis");
x.t("native","types");
x.t("e1_minus_e2","row.e.e1");
x.t("extends","iterable");
x.t("takes","object");
x.t("runs","block");
x.t("page","error");
x.t("output","example");
x.t("help","define");
x.t("query","type");
x.t("query","objects");
x.t("query","gosu");
x.t("query","query.make");
x.t("query","performance");
x.t("query","select");
x.t("query","compile");
x.t("query","calling");
x.t("query","builder");
x.t("graph","cases");
x.t("data","need");
x.t("data","dictionary");
x.t("data","loads");
x.t("becomes","database");
x.t("result","complete");
x.t("result","gosu");
x.t("result","references");
x.t("result","carefully");
x.t("result","row");
x.t("result","var");
x.t("address1","property");
x.t("assuming","myentity.e");
x.t("values","database");
x.t("values","column");
x.t("values","item");
x.t("selections","available");
x.t("selections","hash");
x.t("selections","gosu");
x.t("choose","type");
x.t("choose","gosu");
x.t("choose","whatever");
x.t("firstname","var");
x.t("print","array");
x.t("print","row");
x.t("called","computed");
x.t("column","row");
x.t("column","reference");
x.t("column","values");
x.t("column","selections");
x.t("column","names");
x.t("executes","block");
x.t("note","references");
x.t("integer","a_plus_ten");
x.t("integer","previous");
x.t("integer","iqueryresult");
x.t("two","properties");
x.t("joins","cases");
x.t("cases","row");
x.t("mentioned","block");
x.t("dbfunction","class");
x.t("entity","gosu");
x.t("entity","methods");
x.t("entity","queries");
x.t("entity","object");
x.t("entity","contains");
x.t("following","example");
x.t("following","complex");
x.t("following","queryobject");
x.t("following","subtle");
x.t("following","uses");
x.t("following","rules");
x.t("run","time");
x.t("elements","selected");
x.t("anonymous","inner");
x.t("setting","up");
x.t("//","field");
x.t("//","element");
x.t("//","block");
x.t("//","select");
x.t("//","define");
x.t("//","end");
x.t("//","return");
x.t("//","print");
x.t("class","initializing");
x.t("class","contain");
x.t("class","extends");
x.t("additionally","column");
x.t("iqueryresult","myentity");
x.t("iqueryresult","qt");
x.t("iqueryresult","class");
x.t("pass","select");
x.t("returns","iterable");
x.t("returns","custom");
x.t("returns","whatever");
x.t("returns","iqueryresult");
x.t("across","result");
x.t("row.e.e1","row.e.e2");
x.t("sql","results");
x.t("sql","aggregate");
x.t("sql","outer");
x.t("sql","feature");
x.t("without","running");
x.t("load","iterate");
x.t("load","address1");
x.t("names","values");
x.t("associated","cast");
x.t("row.e.e2","columns");
x.t("row.e.e2","else");
x.t("row.e.e2","gosu");
x.t("row.e.e2","important");
x.t("row.e.e2","returns");
x.t("var","state");
x.t("var","text_val=eval");
x.t("var","lastname");
x.t("var","rows");
x.t("var","resultrows");
x.t("var","query");
x.t("var","firstname");
x.t("restrictions","cannot");
x.t("\\row-","row.a");
x.t("\\row-","new");
x.t("resultrow.objectpathexpression1","//");
x.t("fetches","three");
x.t(".select","\\row-");
x.t("object","type");
x.t("object","graph");
x.t("object","query");
x.t("specify","arbitrary");
x.t("resultrow.objectpathexpression2","//");
x.t("item","database");
x.t("item","result");
x.t("extract","three");
x.t("row.lastname","row.primaryaddress.state");
x.t("contains","properties");
x.t("detail","implement");
}
