function FileData_Pairs(x)
{
x.t("example","indicates");
x.t("example","namespace");
x.t("example","earlier");
x.t("example","xml");
x.t("example","consider");
x.t("example","following");
x.t("example","attributes");
x.t("root","within");
x.t("root","veh");
x.t("root","element");
x.t("root","part");
x.t("root","empty");
x.t("root","case");
x.t("ignore","division");
x.t("complex","example");
x.t("particularly","xsd-based");
x.t("differently","depending");
x.t("construct","xmlelement");
x.t("manner","whenever");
x.t("provide","backing");
x.t("properties","shown");
x.t("properties","element");
x.t("properties","methods");
x.t("properties","xsd-based");
x.t("properties","xsd");
x.t("method","string");
x.t("dates","technically");
x.t("localpart","constructor");
x.t("localpart","namespace");
x.t("localpart","string");
x.t("serialization","may");
x.t("within","example");
x.t("within","namespace");
x.t("suggested","prefix");
x.t("full","uri");
x.t("shown","following");
x.t("http://www.w3.org/2001/xmlschema-instance","suggested");
x.t("create","basic");
x.t("create","multiple");
x.t("table","xmlelement");
x.t("description","qname");
x.t("required","non-empty");
x.t("instance","default");
x.t("instance","element");
x.t("instance","typeinstance");
x.t("instance","xml");
x.t("instance","nillness");
x.t("instance","typically");
x.t("instance","using");
x.t("instance","contains");
x.t("related","information");
x.t("el","new");
x.t("components","string");
x.t("parts","separated");
x.t("responsible","element\u2019s");
x.t("veh","example");
x.t("veh","e.addchild");
x.t("veh","followed");
x.t("veh","represent");
x.t("veh","var");
x.t("version=","1.0");
x.t("backing","type");
x.t("backing","types");
x.t("gw.xsd.w3c.xmlschema.types.complex.anytype","instantiate");
x.t("gw.xsd.w3c.xmlschema.types.complex.anytype","subclass");
x.t("creates","new");
x.t("creates","in-memory");
x.t("later","xml");
x.t("later","serializes");
x.t("guaranteed","upon");
x.t("declared","namespace");
x.t("xmlns:veh=","http://mycompany.com/schema/vehiclexsd");
x.t("uses","default");
x.t("uses","gw.xml.xmlelement");
x.t("uses","javax.xml.namespace.qname");
x.t("e.addchild","(e2)");
x.t("(e2)","e.print");
x.t("e.print","prints");
x.t("text_val.select","link");
x.t("essentially","untyped");
x.t("necessary","remember");
x.t("introduction","xml");
x.t("type","complex");
x.t("type","description");
x.t("type","instance");
x.t("type","gw.xsd.w3c.xmlschema.types.complex.anytype");
x.t("type","automatically");
x.t("type","getting");
x.t("type","simple");
x.t("type","gosu");
x.t("type","contain");
x.t("type","gw.xml.xsd.w3c.xmlschema.types.complex.anytype");
x.t("type","represents");
x.t("type","instances");
x.t("type","information");
x.t("type","optional");
x.t("basic","types");
x.t("basic","xmlelement");
x.t("colon","followed");
x.t("colon","veh:root");
x.t("e2","new");
x.t("time","distinction");
x.t("followed","colon");
x.t("followed","uri");
x.t("followed","local");
x.t("however","xml");
x.t("however","practice");
x.t("multiple","qname");
x.t("whenever","construct");
x.t("inside","gosu");
x.t("text","followed");
x.t("text","contents");
x.t("text","xmlns:veh");
x.t("text","content");
x.t("apis","namespace");
x.t("apis","qname");
x.t("default","backing");
x.t("default","type");
x.t("default","namespace");
x.t("property","type");
x.t("property","element");
x.t("property","name");
x.t("property","returns");
x.t("automatically","based");
x.t("automatically","used");
x.t("typesafe","manner");
x.t("division","labor");
x.t("summarize","xmlelement");
x.t("element","root");
x.t("element","differently");
x.t("element","related");
x.t("element","responsible");
x.t("element","backing");
x.t("element","uses");
x.t("element","summarize");
x.t("element","prefix");
x.t("element","element");
x.t("element","document");
x.t("element","directly");
x.t("element","name");
x.t("element","gosu");
x.t("element","nil");
x.t("element","contain");
x.t("element","nillable");
x.t("element","allowed");
x.t("element","xml");
x.t("element","important");
x.t("element","whose");
x.t("element","dollar");
x.t("element","nillness");
x.t("element","class");
x.t("element","xsd");
x.t("element","child");
x.t("element","names");
x.t("element","contains");
x.t("link","directly");
x.t("consists","following");
x.t("items","element");
x.t("items","following");
x.t("advanced","definition");
x.t("prefix","properties");
x.t("prefix","veh");
x.t("prefix","guaranteed");
x.t("prefix","property");
x.t("prefix","name");
x.t("prefix","constructor");
x.t("prefix","implicitly");
x.t("prefix","qname");
x.t("objects","backing");
x.t("objects","empty");
x.t("objects","purposes");
x.t("objects","easily");
x.t("details","creating");
x.t("getting","data");
x.t("access","manipulate");
x.t("access","nillness");
x.t("new","xmlelement");
x.t("new","qname");
x.t("one-argument","constructor");
x.t("contents","xml");
x.t("document","root");
x.t("document","name");
x.t("document","empty");
x.t("document","earlier");
x.t("document","specifies");
x.t("document","xml");
x.t("document","elements");
x.t("typeinstance","gw.xsd.w3c.xmlschema.types.complex.anytype");
x.t("typeinstance","property");
x.t("messsage","gosu");
x.t("uri","example");
x.t("uri","shortcut");
x.t("uri","local");
x.t("uri","means");
x.t("uri","http://mycompany.com/schema/vehiclexsd");
x.t("file","declared");
x.t("file","element");
x.t("indicates","xml");
x.t("distinction","useful");
x.t("distinction","important");
x.t("distinction","typically");
x.t("javax.xml.xmlconstants.null_ns_uri","recommended");
x.t("guide","gosu");
x.t("simple","type");
x.t("simple","string");
x.t("simple","types");
x.t("simple","value");
x.t("simple","values");
x.t("veh:childelement/","/veh:root");
x.t("xmlnamespace","details");
x.t("xmlnamespace","returns");
x.t("xmlnamespace","object");
x.t("url","implicitly");
x.t("recommended","approach");
x.t("remember","element");
x.t("directly","contain");
x.t("directly","page");
x.t("true","xml");
x.t("text_val.focus","text_val.select");
x.t("name","root");
x.t("name","prefix");
x.t("name","simple");
x.t("name","gosu");
x.t("name","constructor");
x.t("name","childelement");
x.t("name","local");
x.t("name","sometimes");
x.t("name","(qname)");
x.t("name","syntax");
x.t("name","simply");
x.t("name","qualified");
x.t("name","dollar");
x.t("name","defined");
x.t("name","called");
x.t("name","strictly");
x.t("definition","name");
x.t("conflicts","example");
x.t("creating","qualified");
x.t("creating","qname");
x.t("no","explicit");
x.t("no","child");
x.t("gosu","later");
x.t("gosu","uses");
x.t("gosu","introduction");
x.t("gosu","type");
x.t("gosu","handles");
x.t("gosu","sets");
x.t("gosu","function");
x.t("gosu","xml");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","natively");
x.t("gosu","main");
x.t("gosu","exposes");
x.t("gosu","created");
x.t("gosu","object");
x.t("constructor","namespace");
x.t("constructor","equivalent");
x.t("constructor","xmlelement");
x.t("constructor","specifying");
x.t("constructor","qname");
x.t("constructor","either");
x.t("exactly","null");
x.t("part","suggested");
x.t("part","prefix");
x.t("part","name");
x.t("part","namespace");
x.t("part","three");
x.t("part","called");
x.t("argument","create");
x.t("nil","no");
x.t("nil","exactly");
x.t("nil","xml");
x.t("nil","information");
x.t("handles","properties");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("shortcut","veh");
x.t("shortcut","prefix");
x.t("shortcut","name");
x.t("useful","sometimes");
x.t("boolean","specifies");
x.t("methods","xml");
x.t("namespace","full");
x.t("namespace","whenever");
x.t("namespace","prefix");
x.t("namespace","typeinstance");
x.t("namespace","uri");
x.t("namespace","xmlnamespace");
x.t("namespace","url");
x.t("namespace","gosu");
x.t("namespace","argument");
x.t("namespace","shortcut");
x.t("namespace","technically");
x.t("namespace","xml");
x.t("namespace","value");
x.t("namespace","optional");
x.t("namespace","http://mycompany.com/schema/vehiclexsd");
x.t("namespace","qname");
x.t("namespace","var");
x.t("namespace","even");
x.t("sign","prefix");
x.t("childelement","within");
x.t("childelement","veh");
x.t("string","localpart");
x.t("string","prefix");
x.t("string","one-argument");
x.t("string","constructor");
x.t("string","namespaceuri");
x.t("string","value");
x.t("string","convenience");
x.t("local","part");
x.t("empty","namespace");
x.t("empty","qname");
x.t("sets","backing");
x.t("critical","information");
x.t("earlier","file");
x.t("earlier","section");
x.t("three","constructors");
x.t("attribute","names");
x.t("contain","inside");
x.t("contain","element\u2019s");
x.t("contain","two");
x.t("contain","either");
x.t("contain","child");
x.t("concept","whether");
x.t("concept","null");
x.t("prints","following");
x.t("manipulate","child");
x.t("in-memory","gosu");
x.t("error","occurred");
x.t("sometimes","ignore");
x.t("sometimes","critical");
x.t("equivalent","passing");
x.t("(qname)","element\u2019s");
x.t("syntax","two");
x.t("1.0","veh:root");
x.t("nillable","means");
x.t("means","later");
x.t("means","element");
x.t("allowed","nil");
x.t("guidewire_selectall","var");
x.t("constructors","qname");
x.t("function","guidewire_selectall");
x.t("approach","creating");
x.t("gw.xml.xsd.w3c.xmlschema.types.complex.anytype","valid");
x.t("anytype","type");
x.t("anytype","either");
x.t("represents","advanced");
x.t("represents","element");
x.t("represents","namespace");
x.t("represents","local");
x.t("represents","attribute");
x.t("represents","xml");
x.t("represents","specific");
x.t("represents","element\u2019s");
x.t("define","whether");
x.t("define","qname");
x.t("may","conflicts");
x.t("specifies","namespace");
x.t("specifies","whether");
x.t("words","no");
x.t("words","namespace");
x.t("whether","element");
x.t("technically","gosu");
x.t("technically","constant");
x.t("accessing","properties");
x.t("xml","version=");
x.t("xml","introduction");
x.t("xml","type");
x.t("xml","apis");
x.t("xml","element");
x.t("xml","document");
x.t("xml","file");
x.t("xml","concept");
x.t("xml","elements");
x.t("things","true");
x.t("namespaceuri","string");
x.t("format","using");
x.t("types","create");
x.t("types","gosu");
x.t("types","subclass");
x.t("types","numbers");
x.t("types","content");
x.t("section","information");
x.t("simply","string");
x.t("simply","pass");
x.t("explicit","backing");
x.t("explicit","xsd");
x.t("important","particularly");
x.t("important","accessing");
x.t("el.typeinstance","property");
x.t("reference","guide");
x.t("reference","gosu");
x.t("code","creates");
x.t("instantiate","type");
x.t("adds","child");
x.t("upon","serialization");
x.t("whose","name");
x.t("occurred","messsage");
x.t("consider","following");
x.t("longer","uri");
x.t("constructing","element");
x.t("null","element");
x.t("null","access");
x.t("null","string");
x.t("qualified","name");
x.t("qualified","names");
x.t("natively","represents");
x.t("instances","access");
x.t("main","class");
x.t("value","http://www.w3.org/2001/xmlschema-instance");
x.t("value","type");
x.t("value","define");
x.t("value","represents");
x.t("value","represent");
x.t("value","fully-qualified");
x.t("veh:root","root");
x.t("veh:root","xmlns:veh=");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("element\u2019s","name");
x.t("element\u2019s","gosu");
x.t("element\u2019s","namespace");
x.t("element\u2019s","behavior");
x.t("constant","javax.xml.xmlconstants.null_ns_uri");
x.t("specific","element");
x.t("specific","subclass");
x.t("gw.xml.xmlelement","uses");
x.t("depending","whether");
x.t("xmlelement","root");
x.t("xmlelement","instance");
x.t("xmlelement","backing");
x.t("xmlelement","essentially");
x.t("xmlelement","property");
x.t("xmlelement","new");
x.t("xmlelement","name");
x.t("xmlelement","explicit");
x.t("xmlelement","simply");
x.t("xmlelement","xmlelement");
x.t("xmlelement","takes");
x.t("xmlelement","following");
x.t("xmlelement","without");
x.t("xmlelement","object");
x.t("xmlns:veh","text");
x.t("exposes","properties");
x.t("represent","full");
x.t("represent","simple");
x.t("represent","longer");
x.t("valid","backing");
x.t("takes","string");
x.t("page","error");
x.t("specifying","namespace");
x.t("specifying","local");
x.t("purposes","example");
x.t("nodes","words");
x.t("convenience","method");
x.t("output","qname");
x.t("optional","constructing");
x.t("optional","utility");
x.t("information","type");
x.t("information","automatically");
x.t("information","getting");
x.t("information","access");
x.t("information","adding");
x.t("data","format");
x.t("data","xml");
x.t("dollar","sign");
x.t("defined","within");
x.t("read-only","property");
x.t("practice","distinction");
x.t("http://mycompany.com/schema/vehiclexsd","root");
x.t("http://mycompany.com/schema/vehiclexsd","however");
x.t("http://mycompany.com/schema/vehiclexsd","text");
x.t("http://mycompany.com/schema/vehiclexsd","veh:childelement/");
x.t("http://mycompany.com/schema/vehiclexsd","childelement");
x.t("implicitly","empty");
x.t("utility","class");
x.t("nillness","element");
x.t("nillness","boolean");
x.t("element's","backing");
x.t("case","el.typeinstance");
x.t("values","time");
x.t("fully-qualified","name");
x.t("called","localpart");
x.t("called","xmlnamespace");
x.t("called","qname");
x.t("qname","example");
x.t("qname","objects");
x.t("qname","constructor");
x.t("qname","string");
x.t("qname","represents");
x.t("qname","words");
x.t("qname","null");
x.t("qname","read-only");
x.t("qname","http://mycompany.com/schema/vehiclexsd");
x.t("qname","qname");
x.t("qname","class");
x.t("qname","object");
x.t("two","parts");
x.t("two","basic");
x.t("easily","namespace");
x.t("based","subclass");
x.t("based","xsd");
x.t("typically","necessary");
x.t("typically","specific");
x.t("javax.xml.namespace.qname","qname");
x.t("javax.xml.namespace.qname","var");
x.t("created","based");
x.t("subclass","anytype");
x.t("subclass","xmlelement");
x.t("subclass","class");
x.t("labor","xmlelement");
x.t("numbers","dates");
x.t("following","table");
x.t("following","components");
x.t("following","items");
x.t("following","gosu");
x.t("following","xml");
x.t("following","things");
x.t("following","code");
x.t("separated","colon");
x.t("elements","text");
x.t("elements","getting");
x.t("elements","simple");
x.t("elements","gosu");
x.t("elements","namespace");
x.t("elements","contain");
x.t("elements","attributes");
x.t("used","typesafe");
x.t("untyped","nodes");
x.t("either","qname");
x.t("either","xsd-based");
x.t("either","child");
x.t("class","represents");
x.t("class","xmlelement");
x.t("class","called");
x.t("class","javax.xml.namespace.qname");
x.t("class","returns");
x.t("using","xsd");
x.t("additionally","xsd");
x.t("serializes","element");
x.t("non-empty","gosu");
x.t("xsd","provide");
x.t("xsd","distinction");
x.t("xsd","gosu");
x.t("xsd","define");
x.t("xsd","types");
x.t("xsd","adds");
x.t("xsd","data");
x.t("returns","instance");
x.t("returns","xmlnamespace");
x.t("returns","element\u2019s");
x.t("returns","element's");
x.t("xsd-based","type");
x.t("xsd-based","element");
x.t("xsd-based","types");
x.t("pass","element");
x.t("adding","child");
x.t("/veh:root","output");
x.t("/veh:root","following");
x.t("child","element");
x.t("child","elements");
x.t("names","element");
x.t("names","namespace");
x.t("names","defined");
x.t("names","qname");
x.t("behavior","contain");
x.t("without","xsd");
x.t("var","el");
x.t("var","e2");
x.t("var","new");
x.t("var","text_val=eval");
x.t("passing","new");
x.t("strictly","required");
x.t("even","default");
x.t("object","consists");
x.t("object","empty");
x.t("object","string");
x.t("object","represents");
x.t("object","contains");
x.t("contains","properties");
x.t("contains","text");
x.t("contains","simple");
x.t("contains","reference");
x.t("contains","following");
x.t("attributes","element");
x.t("attributes","additionally");
x.t("content","backing");
x.t("content","however");
x.t("content","child");
}
