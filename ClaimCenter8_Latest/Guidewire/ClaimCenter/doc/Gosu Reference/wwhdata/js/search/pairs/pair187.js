function FileData_Pairs(x)
{
x.t("supports","node");
x.t("uniquely","identify");
x.t("example","link");
x.t("example","suppose");
x.t("example","two");
x.t("example","following");
x.t("root","xmlns:xsi=");
x.t("root","xsd:complextype");
x.t("properties","subobjects");
x.t("properties","print");
x.t("ref=","category");
x.t("gw.mytest.category","//");
x.t("reserialize","xml");
x.t("within","document");
x.t("within","xml");
x.t("within","configuration");
x.t("cast","idref");
x.t("cast","id");
x.t("cast","operation");
x.t("cast","category");
x.t("create","file");
x.t("create","gosu");
x.t("create","xml");
x.t("http://www.w3.org/2001/xmlschema-instance","xsi:nonamespaceschemalocation=");
x.t("xmlns:xsi=","http://www.w3.org/2001/xmlschema-instance");
x.t("name=","root");
x.t("name=","categoryid");
x.t("name=","itemname");
x.t("name=","categoryref");
x.t("name=","categoryname");
x.t("name=","category");
x.t("name=","item");
x.t("topic","however");
x.t("version=","1.0");
x.t("xsd:complextype","xsd:sequence");
x.t("xsd:complextype","xsd:attribute");
x.t("uses","id");
x.t("uses","java.io.file");
x.t("uses","xsd");
x.t("text_val.select","link");
x.t("ixmlnodewithid","element");
x.t("ixmlnodewithid","idref");
x.t("ixmlnodewithid","run");
x.t("interface","ixmlnodewithid");
x.t("type","ixmlnodewithid");
x.t("type","however");
x.t("type","find");
x.t("type","representation");
x.t("type","xsd:idref");
x.t("type","words");
x.t("type","node");
x.t("type","linked-to");
x.t("type","xsd:id");
x.t("type","object");
x.t("populate","idref");
x.t("infinite","recursion");
x.t("usual","node");
x.t("http://www.w3.org/2001/xmlschema","xsd:element");
x.t("/xsd:complextype","/xsd:element");
x.t("time","populate");
x.t("explicitly","gosu");
x.t("hierarchy","test");
x.t("hierarchy","package");
x.t("identify","element");
x.t("however","gosu");
x.t("however","note");
x.t("however","typically");
x.t("xmlns:xsd=","http://www.w3.org/2001/xmlschema");
x.t("apis","structured");
x.t("structured","xml");
x.t("text","values");
x.t("automatically","implements");
x.t("automatically","guess");
x.t("automatically","assigns");
x.t("property","type");
x.t("property","link");
x.t("property","idref");
x.t("property","id");
x.t("property","links");
x.t("property","category");
x.t("property","item");
x.t("original","id");
x.t("scratchpad","uses");
x.t("link","element");
x.t("link","directly");
x.t("link","category");
x.t("element","properties");
x.t("element","within");
x.t("element","id");
x.t("element","desired");
x.t("element","attribute");
x.t("element","xml");
x.t("element","xsds");
x.t("element","contains");
x.t("element","item");
x.t("idref","cast");
x.t("idref","property");
x.t("idref","idref");
x.t("idref","gosu");
x.t("idref","corresponds");
x.t("idref","called");
x.t("idref","print");
x.t("want","gosu");
x.t("want","import");
x.t("/xsd:element","xsd:element");
x.t("/xsd:element","/xsd:schema");
x.t("/xsd:element","/xsd:sequence");
x.t("objects","using");
x.t("objects","var");
x.t("new","file");
x.t("document","xml");
x.t("document","automatically-assigned");
x.t("messsage","gosu");
x.t("ixmlnode","actions");
x.t("file","uses");
x.t("file","name");
x.t("file","path");
x.t("file","/my_xml_files/mytest.xml");
x.t("id","explicitly");
x.t("id","element");
x.t("id","no");
x.t("id","conflicts");
x.t("id","references");
x.t("id","gosu");
x.t("id","parsed");
x.t("id","xml");
x.t("id","reference");
x.t("id","values");
x.t("assign","object");
x.t("actions","ixmlnode");
x.t("actions","documented");
x.t("guide","gosu");
x.t("unless","id");
x.t("xsd:sequence","xsd:element");
x.t(".itemname","//");
x.t("throws","exception");
x.t("parse","xml");
x.t("directly","idref");
x.t("directly","gosu");
x.t("directly","page");
x.t("converts","gosu");
x.t("converts","following");
x.t("desired","type");
x.t("desired","element");
x.t("test","xml");
x.t("unbounded","minoccurs=");
x.t("true","//");
x.t("text_val.focus","text_val.select");
x.t("no","danger");
x.t("danger","infinite");
x.t("conflicts","within");
x.t("operation","uses");
x.t("name","within");
x.t("definition","categoryref");
x.t("path","/my_xml_files/mytest.xml");
x.t("gosu","supports");
x.t("gosu","type");
x.t("gosu","automatically");
x.t("gosu","scratchpad");
x.t("gosu","throws");
x.t("gosu","converts");
x.t("gosu","provides");
x.t("gosu","cannot");
x.t("gosu","xml");
x.t("gosu","types");
x.t("gosu","node");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","object");
x.t("references","link");
x.t("references","directly");
x.t("references","links");
x.t("references","xsds");
x.t("follows","schema");
x.t("retains","original");
x.t("corresponds","categoryid");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","intuitive");
x.t("encoding=","utf-8");
x.t("find","return");
x.t("destination","type");
x.t("xsd:element","ref=");
x.t("xsd:element","name=");
x.t("lines","boldface");
x.t("attribute","type");
x.t("attribute","idref");
x.t("attribute","specify");
x.t("earlier","topic");
x.t("subobjects","cast");
x.t("contain","element");
x.t("boldface","item");
x.t("sake","example");
x.t("categoryname=","category");
x.t("legacy","xml");
x.t(".categoryref","gw.mytest.category");
x.t("error","occurred");
x.t("notice","two");
x.t("representation","linked-to");
x.t("suppose","want");
x.t("1.0","encoding=");
x.t("categoryid","property");
x.t("categoryid","type=");
x.t("next","create");
x.t("categoryref=","foo1");
x.t("guidewire_selectall","var");
x.t("xsd:attribute","name=");
x.t("foo1","categoryname=");
x.t("foo1","itemname=");
x.t("xml.items","[0]");
x.t("function","guidewire_selectall");
x.t("implements","interface");
x.t("implements","ixmlnodewithid");
x.t("foo2","categoryname=");
x.t("cannot","automatically");
x.t("xsd:idref","/xsd:complextype");
x.t("xsd:idref","next");
x.t("xsd:idref","becomes");
x.t("parsed","xml");
x.t("words","cast");
x.t("/my_xml_files/mytest.xml","root");
x.t("/my_xml_files/mytest.xml","//");
x.t("xsi:nonamespaceschemalocation=","mytest.xsd");
x.t("against","xsd");
x.t("dereference","node");
x.t("itemname","type=");
x.t("xsd:string","/xsd:complextype");
x.t("xsd:string","xsd:attribute");
x.t("xml","version=");
x.t("xml","however");
x.t("xml","apis");
x.t("xml","document");
x.t("xml","file");
x.t("xml","legacy");
x.t("xml","against");
x.t("xml","node");
x.t("xml","test.mytest.root.parse");
x.t("xml","graph");
x.t("xml","result");
x.t("xml","using");
x.t("xml","xsd");
x.t("xml","var");
x.t("types","follows");
x.t("types","node");
x.t("keyword","gosu");
x.t("node","idref");
x.t("node","id");
x.t("node","actions");
x.t("node","directly");
x.t("node","gosu");
x.t("node","ids");
x.t("node","represent");
x.t("node","appropriate");
x.t("simply","assign");
x.t("reference","type");
x.t("reference","element");
x.t("reference","guide");
x.t("reference","node");
x.t("reference","linked-to");
x.t("reference","value");
x.t("reference","using");
x.t("guess","type");
x.t("linked-to","object");
x.t("categoryref","sake");
x.t("categoryref","attribute");
x.t("categoryref","type=");
x.t("code","gosu");
x.t("code","parses");
x.t("test.mytest.root.parse","true");
x.t("ids","reserialize");
x.t("ids","text");
x.t("ids","gosu");
x.t("ids","function");
x.t("ids","xml");
x.t("ids","node");
x.t("assigns","id");
x.t("return","desired");
x.t("schema","element");
x.t("/xsd:schema","notice");
x.t("xsd:id","automatically");
x.t("xsd:id","xsd:attribute");
x.t("xsd:id","simply");
x.t("java.io.file","//");
x.t("occurred","messsage");
x.t("configuration","module");
x.t("value","destination");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("exception","example");
x.t("import","following");
x.t("type=","xsd:idref");
x.t("type=","xsd:string");
x.t("type=","xsd:id");
x.t("represent","node");
x.t("[0]",".itemname");
x.t("[0]",".categoryref");
x.t("page","error");
x.t("/xsd:sequence","/xsd:complextype");
x.t("itemname=","item");
x.t("becomes","property");
x.t("graph","contain");
x.t("module","hierarchy");
x.t("xsd:schema","xmlns:xsd=");
x.t("maxoccurs=","unbounded");
x.t("parses","xml");
x.t("result","retains");
x.t("appropriate","xmlnode");
x.t("categoryname","type=");
x.t("save","following");
x.t("values","uniquely");
x.t("values","unless");
x.t("automatically-assigned","node");
x.t("documented","earlier");
x.t("specification","node");
x.t("called","categoryref");
x.t("called","mytest.xsd");
x.t("print","category.categoryname");
x.t("print","xml.items");
x.t("two","lines");
x.t("two","category");
x.t("note","definition");
x.t("typically","want");
x.t("package","hierarchy");
x.t("utf-8","xsd:schema");
x.t("minoccurs=","xsd:complextype");
x.t("minoccurs=","xsd:element");
x.t("categoryid=","foo1");
x.t("categoryid=","foo2");
x.t("links","property");
x.t("links","node");
x.t("links","category");
x.t("following","example");
x.t("following","file");
x.t("following","code");
x.t("following","xsd");
x.t("run","time");
x.t("elements","item");
x.t("using","keyword");
x.t("using","categoryref");
x.t("using","xsds");
x.t("xsds","converts");
x.t("xsds","xml");
x.t("xsds","node");
x.t("recursion","id");
x.t("//","property");
x.t("//","parse");
x.t("//","gosu");
x.t("//","load");
x.t("//","item");
x.t("xsd","example");
x.t("xsd","types");
x.t("xsd","specification");
x.t("xsd","called");
x.t("xsd","following");
x.t("xmlnode","type");
x.t("load","xml");
x.t("var","new");
x.t("var","text_val=eval");
x.t("var","xml");
x.t("var","category");
x.t("intuitive","dereference");
x.t("category","xsd:complextype");
x.t("category","element");
x.t("category","objects");
x.t("category","xml.items");
x.t("category","maxoccurs=");
x.t("category","save");
x.t("category","categoryid=");
x.t("category","elements");
x.t("category","category");
x.t("category","item");
x.t("object","properties");
x.t("object","cast");
x.t("object","usual");
x.t("object","gosu");
x.t("object","xsd:attribute");
x.t("object","implements");
x.t("mytest.xsd","create");
x.t("mytest.xsd","category");
x.t("item","element");
x.t("item","categoryref=");
x.t("item","node");
x.t("item","maxoccurs=");
x.t("item","links");
x.t("item","/root");
x.t("contains","idref");
x.t("specify","type");
x.t("/root","create");
}
