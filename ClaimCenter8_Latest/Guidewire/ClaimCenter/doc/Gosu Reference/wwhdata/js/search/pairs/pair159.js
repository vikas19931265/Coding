function FileData_Pairs(x)
{
x.t("ignore","division");
x.t("example","element");
x.t("example","add");
x.t("example","e.autocost");
x.t("example","natural-looking");
x.t("example","final");
x.t("example","suppose");
x.t("example","call");
x.t("example","numbers");
x.t("example","following");
x.t("example","xsd");
x.t("debugging","print");
x.t("readable","code");
x.t("c1","new");
x.t("getchild2fromqname","e.getchild");
x.t("myelement","color=");
x.t("properties","related");
x.t("properties","methods");
x.t("properties","types");
x.t("method","getchild");
x.t("method","signature");
x.t("method","throws");
x.t("method","requires");
x.t("method","gosu");
x.t("method","instead");
x.t("method","pass");
x.t("method","names");
x.t("parameter","example");
x.t("dates","element\u2019s");
x.t("c2","new");
x.t("setattributevalue","qname");
x.t("provide","natural");
x.t("serialization","example");
x.t("serialization","xml");
x.t("full","reference");
x.t("lists","find");
x.t("every","type");
x.t("create","instance");
x.t("create","new");
x.t("create","simple");
x.t("pre-serialized","graph");
x.t("static","methods");
x.t("xmlsimplevalue.makeintinstance","(5)");
x.t("alternate","method");
x.t("alternate","signature");
x.t("instance","represents");
x.t("instance","xml");
x.t("instance","typically");
x.t("instance","xmlsimplevalue");
x.t("instance","com.guidewire.pl.docexamples.gosu.xml.demochildprops.anonymous.elements.element1_child2");
x.t("instance","using");
x.t("instance","associated");
x.t("instance","contains");
x.t("/child2","/element1");
x.t("/child2","removing");
x.t("doing","want");
x.t("reusing","code");
x.t("related","attributes");
x.t("responsible","nearly");
x.t("name=","child1");
x.t("name=","child2");
x.t("name=","element1");
x.t("/element1","note");
x.t("backing","type");
x.t("gw.xsd.w3c.xmlschema.types.complex.anytype","gosu");
x.t("xsd:complextype","xsd:sequence");
x.t("gw.xml.xmlsimplevalue","//");
x.t("version=","1.0");
x.t("topic","depending");
x.t("creates","qname");
x.t("removechildren","expect");
x.t("removechildren","(qname)");
x.t("uses","gw.xml.xmlsimplevalue");
x.t("e.addchild","(c2)");
x.t("e.addchild","(c1)");
x.t("e.print","code");
x.t("until","serialization");
x.t("getchild","expect");
x.t("getchild","(qname)");
x.t("attributenames","property");
x.t("text_val.select","link");
x.t("statement","serializes");
x.t("support","common");
x.t("type","method");
x.t("type","instance");
x.t("type","java.util.set");
x.t("type","list");
x.t("type","add");
x.t("type","applies");
x.t("type","namespace");
x.t("type","means");
x.t("type","instances");
x.t("type","value");
x.t("type","xsd:anytype");
x.t("type","xsd:int");
x.t("type","call");
x.t("type","without");
x.t("type","specify");
x.t("basic","types");
x.t("introduction","xml");
x.t("http://www.w3.org/2001/xmlschema","xsd:element");
x.t("/xsd:complextype","/xsd:element");
x.t("tends","result");
x.t("time","introduction");
x.t("xmlns:xsd=","http://www.w3.org/2001/xmlschema");
x.t("non-serialized","value");
x.t("variants","method");
x.t("variants","simple");
x.t("c2.$value","c2.$value");
x.t("c2.$value","print");
x.t("c2.$value","//");
x.t("however","common");
x.t("multiple","matches");
x.t("java.util.set","qname");
x.t("division","labor");
x.t("property","type");
x.t("property","name");
x.t("property","string");
x.t("property","accessor");
x.t("property","prints");
x.t("property","simplevalue");
x.t("property","children");
x.t("property","called");
x.t("property","mentioned");
x.t("property","subclass");
x.t("property","using");
x.t("property","xsd");
x.t("property","names");
x.t("property","contains");
x.t("property","gets");
x.t("text","full");
x.t("text","property");
x.t("text","simple");
x.t("text","data");
x.t("text","content");
x.t("default","type");
x.t("uninitialized","c2.$simplevalue");
x.t("removes","child");
x.t("assumes","empty");
x.t("apis","instead");
x.t("getting","data");
x.t("getting","setting");
x.t("getting","child");
x.t("element","example");
x.t("element","parameter");
x.t("element","responsible");
x.t("element","name=");
x.t("element","e.addchild");
x.t("element","attributenames");
x.t("element","type");
x.t("element","getting");
x.t("element","color");
x.t("element","simple");
x.t("element","remove");
x.t("element","no");
x.t("element","name");
x.t("element","gosu");
x.t("element","contain");
x.t("element","legal");
x.t("element","function");
x.t("element","whose");
x.t("element","main");
x.t("element","named");
x.t("element","several");
x.t("element","happens");
x.t("element","children");
x.t("element","call");
x.t("element","using");
x.t("element","xsd-based");
x.t("element","behavior");
x.t("element","contains");
x.t("element","subelements");
x.t("element","object");
x.t("link","directly");
x.t("prefix","$value");
x.t("prefix","instead");
x.t("prefix","$text");
x.t("prefix","$simplevalue");
x.t("/xsd:element","/xsd:schema");
x.t("start","example");
x.t("access","child");
x.t("new","element");
x.t("new","com.guidewire.pl.docexamples.gosu.xml.demochildprops.element1");
x.t("new","com.guidewire.pl.docexamples.gosu.xml.demochildprops.anonymous.elements.element1_child1");
x.t("new","com.guidewire.pl.docexamples.gosu.xml.demochildprops.anonymous.elements.element1_child2");
x.t("new","child");
x.t("c.count","print");
x.t("want","collections");
x.t("want","iterate");
x.t("want","gosu");
x.t("want","child");
x.t("items","want");
x.t("details","however");
x.t("signature","gosu");
x.t("signature","takes");
x.t("single","child");
x.t("objects","property");
x.t("speaking","xsds");
x.t("nearly","element");
x.t("usually","ignore");
x.t("document","invalid");
x.t("color","size");
x.t("color","xmlsimplevalue.makestringinstance");
x.t("size","attributes");
x.t("size","generally");
x.t("messsage","gosu");
x.t("distinction","useful");
x.t("list","type");
x.t("list","element");
x.t("list","single");
x.t("list","searches");
x.t("list","java.util.list");
x.t("list","xmlelement");
x.t("list","children");
x.t("list","two");
x.t("list","child");
x.t("lets","easily");
x.t("add","property");
x.t("add","dollar");
x.t("add","following");
x.t("add","child");
x.t("during","serialization");
x.t("expect","multiple");
x.t("expect","match");
x.t("getchildren","method");
x.t("getchildren","expect");
x.t("getchildren","(qname)");
x.t("guide","gosu");
x.t("simple","type");
x.t("simple","text");
x.t("simple","syntax");
x.t("simple","types");
x.t("simple","value");
x.t("simple","values");
x.t("xsd:sequence","xsd");
x.t("applies","xsd:anytype");
x.t("according","xsd");
x.t("results","example");
x.t("remove","name");
x.t("remove","child");
x.t("collections","details");
x.t("throws","exception");
x.t("directly","create");
x.t("directly","page");
x.t("byte","array");
x.t("desired","data");
x.t("specified","name");
x.t("specified","local");
x.t("specified","qname");
x.t("requires","exactly");
x.t("text_val.focus","text_val.select");
x.t("name","method");
x.t("name","alternate");
x.t("name","reusing");
x.t("name","removechildren");
x.t("name","support");
x.t("name","multiple");
x.t("name","property");
x.t("name","prefix");
x.t("name","want");
x.t("name","usually");
x.t("name","remove");
x.t("name","specified");
x.t("name","dollar");
x.t("name","removechild");
x.t("name","qname");
x.t("name","//");
x.t("name","attributes");
x.t("no","text");
x.t("no","explicit");
x.t("no","child");
x.t("definition","element");
x.t("creating","instances");
x.t("e.autocost","xsd-based");
x.t("common","want");
x.t("common","case");
x.t("gosu","provides");
x.t("gosu","stores");
x.t("gosu","xml");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","serialize");
x.t("gosu","adds");
x.t("gosu","manipulating");
x.t("gosu","exposes");
x.t("gosu","internally");
x.t("gosu","enhancements");
x.t("(c2)","e.$children");
x.t("iterate","across");
x.t("searches","content");
x.t("exactly","child");
x.t("bytes","encoded");
x.t("bytes","string");
x.t("natural-looking","gosu");
x.t("natural-looking","code");
x.t("part","name");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("useful","instantiate");
x.t("methods","properties");
x.t("methods","variants");
x.t("methods","xml");
x.t("methods","xmlsimplevalue");
x.t("provides","simple");
x.t("provides","methods");
x.t("$children","element");
x.t("sign","prefix");
x.t("namespace","setattributevalue");
x.t("namespace","specified");
x.t("namespace","setattributesimplevalue");
x.t("namespace","previous");
x.t("namespace","getattributevalue");
x.t("namespace","using");
x.t("namespace","xsd");
x.t("find","items");
x.t("find","desired");
x.t("getchild1","e.getchild");
x.t("allows","directly");
x.t("encoded","text");
x.t("final","print");
x.t("empty","list");
x.t("empty","namespace");
x.t("empty","null");
x.t("empty","namespce");
x.t("xsd:element","name=");
x.t("array","using");
x.t("string","until");
x.t("string","getchild");
x.t("string","attribute");
x.t("string","instead");
x.t("string","value");
x.t("string","var");
x.t("string","object");
x.t("natural","syntax");
x.t("natural","concise");
x.t("natural","value");
x.t("accessor","lets");
x.t("sets","value");
x.t("sets","attributes");
x.t("local","part");
x.t("lines","second");
x.t("setattributesimplevalue","qname");
x.t("myelement.getattributevalue","size");
x.t("contain","element\u2019s");
x.t("contain","two");
x.t("contain","integer");
x.t("contain","either");
x.t("prints","results");
x.t("prints","null");
x.t("prints","following");
x.t("earlier","topic");
x.t("second","child");
x.t("attribute","simple");
x.t("attribute","value");
x.t("child1","no");
x.t("child1","--");
x.t("child1","//");
x.t("legal","xsd");
x.t("metadata","element");
x.t("error","occurred");
x.t("child2","/child2");
x.t("child2","type");
x.t("child2","element");
x.t("child2","type=");
x.t("child2","print");
x.t("notice","xsd");
x.t("approaches","value");
x.t("com.guidewire.pl.docexamples.gosu.xml.demochildprops.element1","var");
x.t("suppose","following");
x.t("syntax","getting");
x.t("syntax","using");
x.t("syntax","child");
x.t("1.0","child2");
x.t("1.0","element1");
x.t("(qname)","list");
x.t("(qname)","searches");
x.t("(qname)","string");
x.t("(qname)","attribute");
x.t("(qname)","xmlelement");
x.t("means","default");
x.t("means","definition");
x.t("e.$value","using");
x.t("child1/","child2");
x.t("concise","syntax");
x.t("guidewire_selectall","var");
x.t("addchild","method");
x.t("$value","example");
x.t("$value","c2.$value");
x.t("$value","children");
x.t("$value","$simplevalue");
x.t("function","guidewire_selectall");
x.t("parent","element");
x.t("parent","element\u2019s");
x.t("approach","tends");
x.t("different","cases");
x.t("represents","integer");
x.t("java.util.list","xmlelement");
x.t("instead","property");
x.t("instead","getchildren");
x.t("instead","shortcuts");
x.t("instead","qname");
x.t("stores","pre-serialized");
x.t("stores","information");
x.t("xml","version=");
x.t("xml","type");
x.t("xml","element");
x.t("xml","getting");
x.t("xml","document");
x.t("xml","exporting");
x.t("xml","export");
x.t("xml","elements");
x.t("types","example");
x.t("types","bytes");
x.t("types","following");
x.t("types","content");
x.t("types","specify");
x.t("things","notice");
x.t("match","removechildren");
x.t("match","getchildren");
x.t("important","note");
x.t("works","without");
x.t("explicit","type");
x.t("node","var");
x.t("reference","guide");
x.t("reference","simple");
x.t("reference","xml");
x.t("invalid","according");
x.t("simplevalue","property");
x.t("code","example");
x.t("code","creating");
x.t("code","prints");
x.t("code","e.$value");
x.t("code","adds");
x.t("code","previous");
x.t("code","gets");
x.t("myelement.setattributevalue","color");
x.t("instantiate","type");
x.t("serialize","simple");
x.t("serialize","xmlsimplevalue");
x.t("adds","provide");
x.t("adds","two");
x.t("return","list");
x.t("color=","blue");
x.t("size=","huge");
x.t("/xsd:schema","things");
x.t("memory","gosu");
x.t("matches","method");
x.t("matches","alternate");
x.t("matches","getchildren");
x.t("matches","removechild");
x.t("previous","example");
x.t("previous","node");
x.t("whose","type");
x.t("occurred","messsage");
x.t("null","add");
x.t("null","xml");
x.t("null","--");
x.t("null","$simplevalue");
x.t("shortcuts","gosu");
x.t("instances","specified");
x.t("instances","xmlsimplevalue");
x.t("instances","child");
x.t("exporting","byte");
x.t("serialized","xml");
x.t("main","variants");
x.t("main","work");
x.t("value","readable");
x.t("value","time");
x.t("value","property");
x.t("value","element");
x.t("value","during");
x.t("value","name");
x.t("value","gosu");
x.t("value","methods");
x.t("value","empty");
x.t("value","local");
x.t("value","important");
x.t("value","simplevalue");
x.t("value","value");
x.t("value","element\u2019s");
x.t("value","integer");
x.t("value","xmlsimplevalue");
x.t("value","setting");
x.t("value","xsd");
x.t("manipulating","elements");
x.t("named","child1");
x.t("named","child2");
x.t("non-text","content");
x.t("additional","metadata");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("element\u2019s","text");
x.t("element\u2019s","simple");
x.t("element\u2019s","name");
x.t("element\u2019s","addchild");
x.t("element\u2019s","parent");
x.t("specific","subclass");
x.t("--","default");
x.t("--","uninitialized");
x.t("--","xsd");
x.t("several","approaches");
x.t("depending","doing");
x.t("xmlelement","backing");
x.t("xmlelement","removes");
x.t("xmlelement","print");
x.t("xmlelement","elements");
x.t("xmlelement","object");
x.t("exposes","properties");
x.t("xsd:anytype","element");
x.t("xsd:anytype","--");
x.t("type=","xsd:int");
x.t("exception","multiple");
x.t("e.getchild","child1");
x.t("e.getchild","getchild1.namespace.qualify");
x.t("getattributesimplevalue","(qname)");
x.t("takes","string");
x.t("namespce","passing");
x.t("page","error");
x.t("/xsd:sequence","/xsd:complextype");
x.t("$text","using");
x.t("(c1)","//");
x.t("output","xml");
x.t("specifying","child");
x.t("data","xml");
x.t("data","serialized");
x.t("data","using");
x.t("xsd:schema","xmlns:xsd=");
x.t("dollar","sign");
x.t("graph","xml");
x.t("internally","creates");
x.t("internally","contains");
x.t("information","non-serialized");
x.t("typical","apis");
x.t("happens","type");
x.t("appropriate","type");
x.t("result","natural-looking");
x.t("removing","child");
x.t("values","create");
x.t("values","element");
x.t("values","simple");
x.t("values","works");
x.t("values","xsd-based");
x.t("case","gosu");
x.t("reuse","namespace");
x.t("blue","size=");
x.t("blue","var");
x.t("xmlsimplevalue.makestringinstance","blue");
x.t("children","property");
x.t("children","c.count");
x.t("children","specified");
x.t("children","null");
x.t("children","com.guidewire.pl.docexamples.gosu.xml.demochildprops.anonymous.elements.element1_child1");
x.t("called","$children");
x.t("print","method");
x.t("print","e.print");
x.t("print","statement");
x.t("print","c2.$value");
x.t("print","$value");
x.t("print","children");
x.t("print","getchild2fromqname.asutfstring");
x.t("print","//");
x.t("print","$simplevalue");
x.t("enhancements","lists");
x.t("getattributevalue","(qname)");
x.t("note","child2");
x.t("note","xml");
x.t("two","basic");
x.t("two","different");
x.t("two","main");
x.t("two","child");
x.t("integer","text");
x.t("integer","simple");
x.t("integer","memory");
x.t("integer","value");
x.t("integer","internally");
x.t("integer","returns");
x.t("makeintinstance","method");
x.t("export","gosu");
x.t("qname","assumes");
x.t("qname","objects");
x.t("qname","name");
x.t("qname","empty");
x.t("qname","string");
x.t("qname","value");
x.t("qname","xmlelement");
x.t("qname","getattributesimplevalue");
x.t("qname","reuse");
x.t("qname","xmlsimplevalue");
x.t("qname","returns");
x.t("removechild","expect");
x.t("removechild","(qname)");
x.t("work","xml");
x.t("typically","specific");
x.t("cases","element");
x.t("element1","xsd:complextype");
x.t("element1","child1/");
x.t("easily","access");
x.t("com.guidewire.pl.docexamples.gosu.xml.demochildprops.anonymous.elements.element1_child1","instance");
x.t("com.guidewire.pl.docexamples.gosu.xml.demochildprops.anonymous.elements.element1_child1","e.addchild");
x.t("mentioned","earlier");
x.t("labor","xmlelement");
x.t("subclass","gw.xsd.w3c.xmlschema.types.complex.anytype");
x.t("subclass","xmlsimplevalue");
x.t("call","static");
x.t("call","parent");
x.t("call","makeintinstance");
x.t("xsd:int","means");
x.t("xsd:int","/xsd:sequence");
x.t("xmlsimplevalue","instance");
x.t("xmlsimplevalue","type");
x.t("xmlsimplevalue","bytes");
x.t("xmlsimplevalue","allows");
x.t("xmlsimplevalue","attribute");
x.t("xmlsimplevalue","instances");
x.t("xmlsimplevalue","appropriate");
x.t("xmlsimplevalue","using");
x.t("xmlsimplevalue","object");
x.t("numbers","dates");
x.t("com.guidewire.pl.docexamples.gosu.xml.demochildprops.anonymous.elements.element1_child2","instance");
x.t("com.guidewire.pl.docexamples.gosu.xml.demochildprops.anonymous.elements.element1_child2","print");
x.t("getchild2fromqname.asutfstring","output");
x.t("elements","text");
x.t("elements","element");
x.t("elements","simple");
x.t("elements","no");
x.t("elements","name");
x.t("elements","gosu");
x.t("elements","find");
x.t("elements","sets");
x.t("elements","contain");
x.t("elements","xml");
x.t("elements","typical");
x.t("elements","values");
x.t("elements","print");
x.t("elements","two");
x.t("elements","xsd");
x.t("either","child");
x.t("following","example");
x.t("following","gosu");
x.t("following","methods");
x.t("following","lines");
x.t("following","code");
x.t("following","children");
x.t("following","xsd");
x.t("special","property");
x.t("using","debugging");
x.t("using","natural");
x.t("using","empty");
x.t("using","previous");
x.t("using","value");
x.t("using","children");
x.t("using","qname");
x.t("using","xsd");
x.t("using","child");
x.t("setting","simplevalue");
x.t("setting","attributes");
x.t("//","create");
x.t("//","add");
x.t("//","prints");
x.t("//","return");
x.t("//","returns");
x.t("//","child");
x.t("(5)","print");
x.t("xsds","elements");
x.t("xsd","type");
x.t("xsd","element");
x.t("xsd","distinction");
x.t("xsd","add");
x.t("xsd","gosu");
x.t("xsd","natural");
x.t("xsd","types");
x.t("xsd","reference");
x.t("xsd","non-text");
x.t("xsd","xsd:schema");
x.t("xsd","child");
x.t("xsd","var");
x.t("xsd-based","properties");
x.t("xsd-based","type");
x.t("pass","integer");
x.t("pass","child");
x.t("$simplevalue","create");
x.t("$simplevalue","uses");
x.t("$simplevalue","c2.$value");
x.t("$simplevalue","simple");
x.t("$simplevalue","$value");
x.t("returns","empty");
x.t("returns","string");
x.t("returns","xmlsimplevalue");
x.t("serializes","element");
x.t("across","list");
x.t("associated","xml");
x.t("behavior","contain");
x.t("child","element");
x.t("child","remove");
x.t("child","specified");
x.t("child","name");
x.t("child","element\u2019s");
x.t("child","specifying");
x.t("child","values");
x.t("child","elements");
x.t("child","using");
x.t("child","var");
x.t("without","integer");
x.t("without","xsd");
x.t("names","start");
x.t("names","dollar");
x.t("e.$children","//");
x.t("var","c1");
x.t("var","getchild2fromqname");
x.t("var","c2");
x.t("var","new");
x.t("var","text_val=eval");
x.t("var","getchild1");
x.t("var","myelement.getattributevalue");
x.t("var","e.$children");
x.t("passing","string");
x.t("getchild1.namespace.qualify","child2");
x.t("huge","every");
x.t("c2.$simplevalue","xmlsimplevalue.makeintinstance");
x.t("content","text");
x.t("content","list");
x.t("content","approach");
x.t("content","children");
x.t("content","child");
x.t("contains","list");
x.t("contains","empty");
x.t("contains","null");
x.t("contains","integer");
x.t("contains","following");
x.t("contains","attributes");
x.t("specify","property");
x.t("specify","special");
x.t("subelements","getting");
x.t("object","alternate");
x.t("object","two");
x.t("object","contains");
x.t("attributes","myelement");
x.t("attributes","element");
x.t("attributes","simple");
x.t("attributes","myelement.setattributevalue");
x.t("attributes","additional");
x.t("attributes","xmlsimplevalue");
x.t("attributes","attributes");
x.t("gets","sets");
x.t("gets","qname");
x.t("generally","speaking");
}
