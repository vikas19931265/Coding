function FileData_Pairs(x)
{
x.t("example","var");
x.t("root","test1");
x.t("root","var");
x.t("method","bytes");
x.t("method","top-level");
x.t("method","simply");
x.t("method","call");
x.t("properties","access");
x.t("properties","strongly-typed");
x.t("properties","thus");
x.t("properties","attach");
x.t("asutfstring","method");
x.t("rather","setting");
x.t("number=","test2");
x.t("defines","element");
x.t("preferred","method");
x.t("pre-existing","list");
x.t("clear","list");
x.t("tree","simpletest");
x.t("tree","complete");
x.t("tree","complicated");
x.t("tree","xml");
x.t("create","top-level");
x.t("create","node");
x.t("create","children");
x.t("simpletest.test2s.add","new");
x.t("simpletest.test2s.add","(test2)");
x.t("always","present");
x.t("once","tree");
x.t("enum","class");
x.t("related","unicode");
x.t("simpletest","new");
x.t("simpletest","id=");
x.t("topic","var");
x.t("until","node");
x.t("until","object");
x.t("guaranteed","assigned");
x.t("text_val.select","link");
x.t("working","xml");
x.t("statement","produces");
x.t("basic","idea");
x.t("orders","correctly");
x.t("time","element");
x.t("multiple","element");
x.t("apis","structured");
x.t("apis","exporting");
x.t("structured","xml");
x.t("convert","tree");
x.t("property","example");
x.t("property","simpletest.test1");
x.t("property","instead");
x.t("property","node");
x.t("property","simply");
x.t("no-argument","constructor");
x.t("test2.id","test");
x.t("guidewire","messaging");
x.t("link","directly");
x.t("new","xsd.test.simpletest");
x.t("new","array");
x.t("new","xsd.test.test2");
x.t("new","xsd.test.testtype");
x.t("access","value");
x.t("access","attributes");
x.t("want","list");
x.t("element","access");
x.t("element","name");
x.t("element","writes");
x.t("element","node");
x.t("element","names");
x.t("details","xml");
x.t("simpletest.test2s.get","(1)");
x.t("messsage","gosu");
x.t("list","rather");
x.t("list","always");
x.t("list","want");
x.t("list","null");
x.t("list","children");
x.t("list","elements");
x.t("emptied","call");
x.t("infer","enum");
x.t("test1.number","simpletest.test4s.add");
x.t("relatively","simple");
x.t("complete","convert");
x.t("complete","produce");
x.t("id","rootnode");
x.t("add","list");
x.t("add","remove");
x.t("add","single-element");
x.t("simpletest.test1","new");
x.t("assign","new");
x.t("guide","gosu");
x.t("simple","first");
x.t("simple","child");
x.t("remove","pre-existing");
x.t("test1.color","red");
x.t("parse","method");
x.t("simpletest.test3","blue");
x.t("remember","element");
x.t("writing","strongly-typed");
x.t("directly","page");
x.t("directly","print");
x.t("test","simpletest.test2s.add");
x.t("test","test2");
x.t("test","xsd");
x.t("true","simpletest.test2s.get");
x.t("true","test1/");
x.t("strongly-typed","properties");
x.t("strongly-typed","xml");
x.t("strongly-typed","imply");
x.t("text_val.focus","text_val.select");
x.t("resulting","xml");
x.t("test1","new");
x.t("test1","color=");
x.t("name","until");
x.t("gosu","infer");
x.t("gosu","sometimes");
x.t("gosu","xml");
x.t("gosu","reference");
x.t("gosu","manipulates");
x.t("constructed","parse");
x.t("constructor","associated");
x.t("typed","simpletest.attributes");
x.t("test2","new");
x.t("test2","id=");
x.t("test2","final=");
x.t("bytes","property");
x.t("test3","blue");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("xsd.test.simpletest","node");
x.t("xsd.test.simpletest","simpletest.id");
x.t("determine","element");
x.t("map","simpletest.id");
x.t("final","print");
x.t("writes","xml");
x.t("string","calling");
x.t("string","invoke");
x.t("array","value");
x.t("natural","order");
x.t(".test1","new");
x.t("subobjects","until");
x.t("relative","properties");
x.t("earlier","topic");
x.t("legacy","xml");
x.t("complicated","working");
x.t("present","child");
x.t("xsd.test.test2","test2.id");
x.t("xsd.test.test2","simpletest.test2s.get");
x.t("xsd.test.test2","assign");
x.t("root.bytes","var");
x.t("error","occurred");
x.t("strongly","typed");
x.t("simpletest.asutfstring","final");
x.t("sometimes","cannot");
x.t("point","structure");
x.t("red","number=");
x.t("red","//");
x.t("first","create");
x.t("first","no-argument");
x.t("top-level","node");
x.t("top-level","object");
x.t("xmlbytes","root.bytes");
x.t(".final","true");
x.t("issues","related");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("parent","point");
x.t("idea","relatively");
x.t("multiple-element","child");
x.t("cannot","determine");
x.t("represents","details");
x.t("unicode","guidewire");
x.t("instead","add");
x.t("xml","tree");
x.t("xml","orders");
x.t("xml","apis");
x.t("xml","writing");
x.t("xml","string");
x.t("xml","legacy");
x.t("xml","function");
x.t("xml","types");
x.t("xml","constructing");
x.t("xml","already");
x.t("xml","nodes");
x.t("xml","data");
x.t("xml","export");
x.t("xml","using");
x.t("single-element","child");
x.t("types","correspond");
x.t("node","properties");
x.t("node","create");
x.t("node","bytes");
x.t("node","first");
x.t("node","represents");
x.t("node","assigned");
x.t("rootnode","//");
x.t("simply","property");
x.t("simply","add");
x.t("ordering","elements");
x.t("calling","asutfstring");
x.t("(1)",".test1");
x.t("(1)",".final");
x.t("assigned","time");
x.t("assigned","parent");
x.t("reference","guide");
x.t("test4/","/simpletest");
x.t("correspond","multiple");
x.t("thus","create");
x.t("xmlstring","root.asutfstring");
x.t("color=","red");
x.t("xsd.test.testtype","test1.color");
x.t("xsd.test.testtype","simpletest.test3");
x.t("xsd.test.testtype","modify");
x.t("xsd.test.testtype","var");
x.t("schema","appear");
x.t("appear","output");
x.t("produces","xml");
x.t("occurred","messsage");
x.t("constructing","xml");
x.t("simpletest.attributes","id");
x.t("null","properties");
x.t("exporting","xml");
x.t("value","preferred");
x.t("value","directly");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("already","constructed");
x.t("simpletest.test4s.add","new");
x.t("page","error");
x.t("output","natural");
x.t("nodes","using");
x.t("/test2","test3");
x.t("id=","root");
x.t("id=","test");
x.t("/test3","test4/");
x.t("messaging","legacy");
x.t("defined","xsd");
x.t("appropriate","test1.number");
x.t("blue","/test3");
x.t("blue","//");
x.t("children","emptied");
x.t("children","elements");
x.t("print","statement");
x.t("print","simpletest.asutfstring");
x.t("structure","xsd");
x.t("export","issues");
x.t("imply","element");
x.t("correctly","per");
x.t("call","clear");
x.t("call","basic");
x.t("order","list");
x.t("order","resulting");
x.t("order","defined");
x.t("root.asutfstring","following");
x.t("test1/","/test2");
x.t("untyped","add");
x.t("untyped","map");
x.t("elements","relative");
x.t("elements","order");
x.t("elements","attach");
x.t("following","gosu");
x.t("using","test");
x.t("using","xsds");
x.t("using","attributes");
x.t("xsds","writing");
x.t("class","appropriate");
x.t("class","var");
x.t("//","simple");
x.t("//","gosu");
x.t("//","strongly");
x.t("//","untyped");
x.t("setting","list");
x.t("per","schema");
x.t("xsd","defines");
x.t("xsd","once");
x.t("xsd","earlier");
x.t("invoke","asutfstring");
x.t("associated","class");
x.t("child","simpletest.test2s.add");
x.t("child","property");
x.t("child","element");
x.t("modify","multiple-element");
x.t("names","guaranteed");
x.t("names","gosu");
x.t("names","ordering");
x.t("var","simpletest");
x.t("var","test1");
x.t("var","test2");
x.t("var","text_val=eval");
x.t("var","xmlbytes");
x.t("var","xmlstring");
x.t("attach","subobjects");
x.t("attach","order");
x.t("simpletest.id","root");
x.t("simpletest.id","rootnode");
x.t("/simpletest","remember");
x.t("produce","resulting");
x.t("object","properties");
x.t("object","tree");
x.t("attributes","untyped");
x.t("attributes","using");
x.t("manipulates","xml");
x.t("(test2)","simpletest.test2s.add");
x.t("final=","true");
}
