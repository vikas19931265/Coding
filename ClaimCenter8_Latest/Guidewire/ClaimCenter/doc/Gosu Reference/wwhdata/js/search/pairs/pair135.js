function FileData_Pairs(x)
{
x.t("coding","style");
x.t("interfaces","within");
x.t("interfaces","simple");
x.t("interfaces","originally");
x.t("interfaces","defined");
x.t("example","suppose");
x.t("looks","following");
x.t("statements","//");
x.t("method","interface");
x.t("method","signature");
x.t("method","block");
x.t("method","argument");
x.t("method","part");
x.t("method","instead");
x.t("method","_callbackhandler.execute");
x.t("method","return");
x.t("method","similar");
x.t("method","called");
x.t("method","using");
x.t("method","pass");
x.t("doaction","blockrunnable");
x.t("within","class");
x.t("implement","run");
x.t("create","anonymous");
x.t("instance","technique");
x.t("instance","anonymous");
x.t("obj.doaction","print");
x.t("action","naming");
x.t("arguments","no");
x.t("void","execute");
x.t("void","gosu");
x.t("void","run");
x.t("void","//");
x.t("(myblock)","however");
x.t("easy-to-read","coding");
x.t("execute","callbackblock");
x.t("creates","anonymous");
x.t("implemented","either");
x.t("uses","type");
x.t("text_val.select","link");
x.t("interface","method");
x.t("interface","within");
x.t("interface","interface");
x.t("interface","type");
x.t("interface","public");
x.t("interface","block");
x.t("interface","plugincallbackhandler");
x.t("interface","called");
x.t("interface","callbackblock");
x.t("interface","including");
x.t("interface","var");
x.t("interface","contains");
x.t("type","method");
x.t("type","runnable");
x.t("type","block");
x.t("type","name");
x.t("type","parameters");
x.t("type","feature");
x.t("type","blockrunnable");
x.t("runnable","interfaces");
x.t("runnable","interface");
x.t("public","void");
x.t("public","interface");
x.t("public","function");
x.t("explicitly","public");
x.t("however","code");
x.t("apis","gosu");
x.t("link","directly");
x.t("certain","cases");
x.t("single","method");
x.t("signature","looks");
x.t("new","plugincallbackhandler.block");
x.t("block","method");
x.t("block","obj.doaction");
x.t("block","type");
x.t("block","public");
x.t("block","apis");
x.t("block","throws");
x.t("block","number");
x.t("block","instead");
x.t("block","return");
x.t("block","takes");
x.t("block","probably");
x.t("messsage","gosu");
x.t("myblock","plugincallbackhandler.block");
x.t("guide","gosu");
x.t("simple","containers");
x.t("api","uses");
x.t("plugincallbackhandler",".block");
x.t("plugincallbackhandler","class");
x.t("plugincallbackhandler","//");
x.t("messageid","int");
x.t("throws","throwable");
x.t("directly","page");
x.t("text_val.focus","text_val.select");
x.t("name","contains");
x.t(".block","implements");
x.t("creating","anonymous");
x.t("no","arguments");
x.t("no","return");
x.t("definition","java");
x.t("gosu","statements");
x.t("gosu","easy-to-read");
x.t("gosu","interface");
x.t("gosu","blocks");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","java");
x.t("exactly","method");
x.t("argument","instead");
x.t("part","interface");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("parameters","interface");
x.t("parameters","block");
x.t("inner","interfaces");
x.t("inner","interface");
x.t("inner","class");
x.t("originally","implemented");
x.t("final","messageid");
x.t("int","void");
x.t("int","_callbackhandler.execute");
x.t("blocks","blocks");
x.t("blocks","shortcuts");
x.t("error","occurred");
x.t("suppose","method");
x.t("suppose","plugincallbackhandler");
x.t("suppose","using");
x.t("feature","works");
x.t("guidewire_selectall","var");
x.t("number","type");
x.t("function","doaction");
x.t("function","guidewire_selectall");
x.t("function","run");
x.t("function","messagereceived");
x.t("technique","gosu");
x.t("implements","interface");
x.t("implements","run");
x.t("define","inner");
x.t("instead","instance");
x.t("instead","creating");
x.t("instead","anonymous");
x.t("works","interfaces");
x.t("works","interface");
x.t("reference","guide");
x.t("code","creates");
x.t("code","concisely");
x.t("_callbackhandler.execute","(myblock)");
x.t("_callbackhandler.execute","gosu");
x.t("return","type");
x.t("return","value");
x.t("java","interface");
x.t("java","public");
x.t("java","parameters");
x.t("shortcuts","anonymous");
x.t("occurred","messsage");
x.t("similar","runnable");
x.t("value","example");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("convention","api");
x.t("word","block");
x.t("takes","no");
x.t("throwable","gosu");
x.t("throwable","//");
x.t("page","error");
x.t("probably","block");
x.t("defined","inner");
x.t("called","plugincallbackhandler");
x.t("called","run");
x.t("print","action");
x.t("concisely","block");
x.t("classes","certain");
x.t("classes","blocks");
x.t("classes","function");
x.t("containers","single");
x.t("cases","pass");
x.t("plugincallbackhandler.block","new");
x.t("plugincallbackhandler.block","//");
x.t("call","method");
x.t("callbackblock","public");
x.t("callbackblock","block");
x.t("anonymous","inner");
x.t("anonymous","classes");
x.t("anonymous","class");
x.t("style","works");
x.t("either","gosu");
x.t("run","example");
x.t("run","method");
x.t("run","void");
x.t("run","throws");
x.t("following","public");
x.t("class","example");
x.t("class","method");
x.t("class","instance");
x.t("class","public");
x.t("class","explicitly");
x.t("class","definition");
x.t("class","inner");
x.t("class","implements");
x.t("class","contains");
x.t("blockrunnable","java");
x.t("blockrunnable","call");
x.t("using","block");
x.t("using","plugincallbackhandler");
x.t("//","implement");
x.t("//","create");
x.t("//","public");
x.t("//","define");
x.t("//","pass");
x.t("pass","block");
x.t("pass","anonymous");
x.t("messagereceived","messageid");
x.t("messagereceived","final");
x.t("var","myblock");
x.t("var","text_val=eval");
x.t("including","interfaces");
x.t("naming","convention");
x.t("contains","exactly");
x.t("contains","inner");
x.t("contains","word");
}
