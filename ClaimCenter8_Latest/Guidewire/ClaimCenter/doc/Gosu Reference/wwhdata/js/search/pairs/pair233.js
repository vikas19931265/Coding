function FileData_Pairs(x)
{
x.t("coding","guidelines");
x.t("coding","style");
x.t("looks","cleaner");
x.t("looks","following");
x.t("statements","written");
x.t("statements","similar");
x.t("particularly","redundant");
x.t("particularly","valuable");
x.t("included","end");
x.t("example","shows");
x.t("example","gosu");
x.t("example","expressions");
x.t("example","expression");
x.t("example","following");
x.t("supports","public");
x.t(".length","//");
x.t("possible","instead");
x.t("possible","comparing");
x.t("method","myobject");
x.t("method","objects");
x.t("method","planname.equals");
x.t("method","equals");
x.t("method","names");
x.t("printreport","property");
x.t("properties","properties");
x.t("properties","backed");
x.t("properties","interface");
x.t("properties","important");
x.t("properties","information");
x.t("properties","correctly");
x.t("downcasting","typeis");
x.t("downcasting","write");
x.t("downcasting","following");
x.t("downcasting","object");
x.t("claim","local");
x.t("protected","class");
x.t("retrieval","although");
x.t("backed","private");
x.t("rather","public");
x.t("within","statement");
x.t("within","block");
x.t("within","gosu");
x.t("within","one-line");
x.t("lists","declared");
x.t("lists","conventions");
x.t("needs","coerce");
x.t("cast","using");
x.t("cast","var");
x.t("===","operators");
x.t("===","operator");
x.t("strval","datetime");
x.t("strval","safest");
x.t("table","lists");
x.t("table","new");
x.t("uppercase","first");
x.t("dateutil","claim");
x.t("myclaim","property");
x.t("variables","properties");
x.t("variables","rather");
x.t("variables","public");
x.t("variables","convert");
x.t("variables","new");
x.t("variables","assignment");
x.t("variables","underscore");
x.t("variables","variable");
x.t("variables","compatibility");
x.t("variables","easily");
x.t("various","language");
x.t("always","prefix");
x.t("always","specify");
x.t("ensures","standard");
x.t("completion","feature");
x.t("improve","readability");
x.t("null-safe","gosu");
x.t("easy-to-read","concise");
x.t("semicolons","needed");
x.t("semicolons","omit");
x.t("semicolons","unnecessary");
x.t("line","within");
x.t("line","variable");
x.t("declared","in-line");
x.t("declared","typically");
x.t("declared","including");
x.t("declared","object");
x.t("currentpage","delinquencyplans");
x.t("shows","variable");
x.t("text_val.select","link");
x.t("statement","downcasting");
x.t("statement","lists");
x.t("statement","block");
x.t("statement","list");
x.t("statement","need");
x.t("statement","words");
x.t("myobject",".equals");
x.t("interface","code");
x.t("type","particularly");
x.t("type","looks");
x.t("type","declarations");
x.t("type","expressions");
x.t("type","declaration");
x.t("type","already");
x.t("type","subtype");
x.t("type","appropriate");
x.t("type","names");
x.t("evaluates","true");
x.t("evaluates","null");
x.t("explicitly","cast");
x.t("explicitly","define");
x.t("time","error");
x.t("packages","subpackages");
x.t("public","properties");
x.t("public","variables");
x.t("public","property");
x.t("public","variable");
x.t("public","var");
x.t("multiple","gosu");
x.t("however","gosu");
x.t("however","array");
x.t("keywords","always");
x.t("keywords","case-sensitive");
x.t("keywords","correctly");
x.t("followed","property");
x.t("needed","separating");
x.t("lowercase","first");
x.t("lowercase","java");
x.t("lowercase","letters");
x.t("property","name");
x.t("property","string");
x.t("property","recommendations");
x.t("property","called");
x.t("property","names");
x.t("convert","public");
x.t("automatically","downcasts");
x.t("original","type");
x.t("assumes","subtype_name");
x.t("link","directly");
x.t("==","===");
x.t("==","strval");
x.t("==","evaluates");
x.t("==","new");
x.t("==","comparison");
x.t("==","operators");
x.t("==","operator");
x.t("==","row.name.text");
x.t("objects","protection");
x.t("easier-to-understand","code");
x.t("want","coercion");
x.t("new","gosu");
x.t("new","string");
x.t("new","number");
x.t("new","object");
x.t("comparable","gosu");
x.t("element","standard");
x.t("access","existing");
x.t("items","exactly");
x.t("prefix","private");
x.t("block","code");
x.t("block","definitions");
x.t("carelessly","gosu");
x.t("messsage","gosu");
x.t("list","even");
x.t("_firstname","gosu");
x.t("_firstname","string");
x.t("need","casting");
x.t("need","additional");
x.t("assignment","instead");
x.t("add","redundant");
x.t(".equals","null-safe");
x.t("subpackages","com.mycompany");
x.t("around","variable");
x.t("guide","coding");
x.t("simple","statement");
x.t("applies","implicit");
x.t("recommended","type");
x.t("recommended","although");
x.t("directly","page");
x.t("declare","variables");
x.t("planname","==");
x.t("true","number");
x.t("true","words");
x.t("true","implicit");
x.t("dangerous","used");
x.t("equates","date");
x.t("guidelines","omit");
x.t("guidelines","function");
x.t("guidelines","general");
x.t("text_val.focus","text_val.select");
x.t("warnings","gosu");
x.t("warnings","seriously");
x.t("warnings","implicit");
x.t("planname.equals","row.name.text");
x.t("coercions","possible");
x.t("coercions","warnings");
x.t("coercions","may");
x.t("coercions","occur");
x.t("dateval","==");
x.t("name","words");
x.t("name","package");
x.t("definition","using");
x.t("gosu","statements");
x.t("gosu","supports");
x.t("gosu","===");
x.t("gosu","line");
x.t("gosu","statement");
x.t("gosu","keywords");
x.t("gosu","automatically");
x.t("gosu","==");
x.t("gosu","block");
x.t("gosu","standard");
x.t("gosu","structures");
x.t("gosu","editor");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","case-sensitive");
x.t("gosu","produces");
x.t("gosu","recursively");
x.t("gosu","java");
x.t("gosu","exposes");
x.t("gosu","implicitly");
x.t("gosu","confirms");
x.t("gosu","classes");
x.t("gosu","style");
x.t("gosu","compares");
x.t("gosu","compare");
x.t("exactly","declared");
x.t("type_name","example");
x.t("type_name","variable_name");
x.t("comparison","operators");
x.t("comparison","individual");
x.t("direct","coercions");
x.t("avoid","public");
x.t("declares","private");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("compatible","array");
x.t("x.length","works");
x.t("omit","semicolons");
x.t("omit","type");
x.t("declarations","omit");
x.t("obj1.equals","(obj2)");
x.t("standard","gosu");
x.t("standard","capitalization");
x.t("standard","style");
x.t("carcolor","method");
x.t("allows","string");
x.t("arrays","note");
x.t("arrays","numbers");
x.t("strings","incompatible");
x.t("typeis","string");
x.t("typeis","typeof");
x.t("typeis","expression");
x.t("typeis","inference");
x.t("typeis","subtype_name");
x.t("string",".length");
x.t("string","within");
x.t("string","however");
x.t("string","representation");
x.t("string","strlen");
x.t("string","means");
x.t("string","assigned");
x.t("string","firstname");
x.t("string","//");
x.t("string","representing");
x.t("string","object");
x.t("fix","problem");
x.t("array","types");
x.t("array","equality");
x.t("incompatible","new");
x.t("incompatible","array");
x.t("{1,2}","==");
x.t("local","variable");
x.t("fields","standard");
x.t("write","easy-to-read");
x.t("write","gosu");
x.t("in-line","within");
x.t("defining","properties");
x.t("structures","within");
x.t("adhere","gosu\u2019s");
x.t("effective","immediately");
x.t("error","arrays");
x.t("error","occurred");
x.t("sometimes","appropriate");
x.t("notice","gosu\u2019s");
x.t("equivalent","unnecessary");
x.t("equivalent","object");
x.t("(obj2)","difference");
x.t("contrast","gosu");
x.t("com.mycompany","however");
x.t("downcasts","typeis");
x.t("operators","possible");
x.t("operators","gosu");
x.t("operators","safe");
x.t("operators","powerful");
x.t("representation","date");
x.t("syntax","private");
x.t("automatic","downcasting");
x.t("first","character");
x.t("feature","enter");
x.t("strlen","x.length");
x.t("strlen","typeis");
x.t("strlen","string");
x.t("means","need");
x.t("concise","gosu");
x.t("guidewire_selectall","var");
x.t("written","line");
x.t("written","easier-to-understand");
x.t("side","evaluates");
x.t("number","true");
x.t("number","string");
x.t("number","{1,2}");
x.t("number","subclass");
x.t("datetime","carefully");
x.t("function","guidewire_selectall");
x.t("underscore","character");
x.t("adjacent","expressions");
x.t("length","property");
x.t("casts","information");
x.t("words","new");
x.t("words","recommended");
x.t("words","number");
x.t("words","following");
x.t("safe","even");
x.t("may","occur");
x.t("expressions","adhere");
x.t("expressions","important");
x.t("expressions","subtype");
x.t("seriously","cases");
x.t("carefully","consider");
x.t("define","coercions");
x.t("define","class");
x.t("middle","word");
x.t("editor","code");
x.t("private","protected");
x.t("private","variables");
x.t("private","variable");
x.t("private","var");
x.t("almost","cases");
x.t("instead","type");
x.t("instead","using");
x.t("language","element");
x.t("language","null-safety");
x.t("language","elements");
x.t("powerful","dangerous");
x.t("powerful","convenient");
x.t("aware","coercions");
x.t("capitalization","example");
x.t("capitalization","various");
x.t("capitalization","middle");
x.t("capitalization","capitalization");
x.t("capitalization","class");
x.t("capitalization","conventions");
x.t("redundant","type");
x.t("redundant","value");
x.t("coerce","type");
x.t("casting","type");
x.t("casting","around");
x.t("casting","coercion");
x.t("casting","//");
x.t("compile","time");
x.t("compile","warnings");
x.t("keyword","followed");
x.t("keyword","cases");
x.t("types","example");
x.t("types","properties");
x.t("types","comparable");
x.t("types","items");
x.t("types","information");
x.t("assigned","integer");
x.t("explicit","casting");
x.t("rewrite","following");
x.t("important","gosu");
x.t("important","note");
x.t("scope","gosu");
x.t("works","typeis");
x.t("reference","guide");
x.t("code","looks");
x.t("code","within");
x.t("code","completion");
x.t("code","evaluates");
x.t("code","property");
x.t("code","planname");
x.t("code","gosu");
x.t("code","write");
x.t("code","equivalent");
x.t("code","bounded");
x.t("code","objectutil.equals");
x.t("code","valid");
x.t("code","equals");
x.t("code","structure");
x.t("code","unnecessary");
x.t("code","generates");
x.t("end","gosu");
x.t("languages","standard");
x.t("languages","object");
x.t("rewriting","entirely");
x.t("case-sensitive","type");
x.t("case-sensitive","access");
x.t("...can","written");
x.t("produces","compile");
x.t("recursively","applies");
x.t("bounded","statement");
x.t("least","within");
x.t("java","keywords");
x.t("java","language");
x.t("java","code");
x.t("java","languages");
x.t("objectutil.equals","contrast");
x.t("variable","declared");
x.t("variable","definition");
x.t("variable","words");
x.t("variable","scope");
x.t("variable","declaration");
x.t("variable","called");
x.t("variable","integer");
x.t("variable","class");
x.t("variable","names");
x.t("enter","names");
x.t("considers","variable\u2019s");
x.t("variable\u2019s","type");
x.t("occurred","messsage");
x.t("null","operators");
x.t("null","called");
x.t("rules","expression");
x.t("rules","array\u2019s");
x.t("consider","implicit");
x.t("existing","types");
x.t("nice","var");
x.t("null-safety","gosu");
x.t("null-safety","notice");
x.t("null-safety","java");
x.t("null-safety","note");
x.t("value","needs");
x.t("value","dateval");
x.t("value","string");
x.t("similar","gosu");
x.t("similar","null-safety");
x.t("convenient","powerful");
x.t("convenient","equals");
x.t("additional","casting");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("declaration","particularly");
x.t("declaration","declare");
x.t("declaration","syntax");
x.t("declaration","style");
x.t("declaration","var");
x.t("already","included");
x.t("implementation","storage");
x.t("compatibility","languages");
x.t("specific","subtype");
x.t("one-line","statement");
x.t("exposes","public");
x.t("although","==");
x.t("although","gosu");
x.t("although","sometimes");
x.t("expression","type");
x.t("expression","==");
x.t("expression","equates");
x.t("word","important");
x.t("subtype","original");
x.t("subtype","gosu");
x.t("subtype","type_name");
x.t("subtype","least");
x.t("valid","var");
x.t("page","error");
x.t("cleaner","semicolons");
x.t("information","typeis");
x.t("information","defining");
x.t("information","automatic");
x.t("information","difference");
x.t("correct","capitalization");
x.t("data","fields");
x.t("appropriate","type");
x.t("appropriate","simple");
x.t("equals","method");
x.t("equals","obj1.equals");
x.t("equals","aware");
x.t("protection","null");
x.t("array\u2019s","elements");
x.t("inference","improve");
x.t("inference","effective");
x.t("recommendations","always");
x.t("recommendations","warnings");
x.t("comparing","arrays");
x.t("comparing","array");
x.t("recursive","comparison");
x.t("implicitly","considers");
x.t("subtype_name","subtype");
x.t("subtype_name","//");
x.t("subtype_name","without");
x.t("downcasted","string");
x.t("called","_firstname");
x.t("called","null-safety");
x.t("called","firstname");
x.t("problem","rewriting");
x.t("character","printreport");
x.t("character","dateutil");
x.t("character","myclaim");
x.t("character","name");
x.t("character","avoid");
x.t("character","carcolor");
x.t("firstname","public");
x.t("firstname","declares");
x.t("firstname","string");
x.t("confirms","object");
x.t("structure","type");
x.t("gosu\u2019s","==");
x.t("gosu\u2019s","implicit");
x.t("note","length");
x.t("note","java");
x.t("note","recursive");
x.t("integer","variable");
x.t("integer","without");
x.t("otherwise","fix");
x.t("date","value");
x.t("classes","properties");
x.t("classes","define");
x.t("classes","data");
x.t("readability","gosu");
x.t("variable_name","type_name");
x.t("variable_name","typeis");
x.t("variable_name","subtype_name");
x.t("cases","explicitly");
x.t("cases","want");
x.t("cases","gosu");
x.t("implicit","coercions");
x.t("implicit","direct");
x.t("implicit","coercion");
x.t("correctly","ensures");
x.t("correctly","declared");
x.t("typically","lowercase");
x.t("letters","packages");
x.t("easily","gosu");
x.t("entirely","example");
x.t("numbers","strings");
x.t("subclass","object");
x.t("package","names");
x.t("valuable","statements");
x.t("immediately","propagates");
x.t("style","public");
x.t("style","information");
x.t("style","general");
x.t("style","var");
x.t("used","carelessly");
x.t("following","example");
x.t("following","table");
x.t("following","dateval");
x.t("following","code");
x.t("following","var");
x.t("elements","example");
x.t("elements","table");
x.t("elements","compatible");
x.t("elements","language");
x.t("individual","elements");
x.t("separated","implementation");
x.t("storage","retrieval");
x.t("general","coding");
x.t("separating","multiple");
x.t("using","keyword");
x.t("using","equals");
x.t("coercion","allows");
x.t("coercion","rules");
x.t("coercion","otherwise");
x.t("coercion","behavior");
x.t("compares","individual");
x.t("compares","object");
x.t("warning","careful");
x.t("class","variables");
x.t("class","property");
x.t("class","variable");
x.t("class","names");
x.t("//","public");
x.t("//","assumes");
x.t("//","length");
x.t("//","variable_name");
x.t("delplans","currentpage");
x.t("delplans","delinquencyplans");
x.t("compare","incompatible");
x.t("unnecessary","cast");
x.t("unnecessary","casts");
x.t("unnecessary","almost");
x.t("definitions","type");
x.t("operator","explicitly");
x.t("operator","equivalent");
x.t("operator","similar");
x.t("operator","recommendations");
x.t("operator","compares");
x.t("occur","example");
x.t("occur","==");
x.t("without","casting");
x.t("without","explicit");
x.t("behavior","convenient");
x.t("names","uppercase");
x.t("names","lowercase");
x.t("names","types");
x.t("names","separated");
x.t("names","including");
x.t("var","_firstname");
x.t("var","text_val=eval");
x.t("var","strlen");
x.t("var","firstname");
x.t("var","variable_name");
x.t("var","delplans");
x.t("var","object");
x.t("including","correct");
x.t("including","class");
x.t("even","side");
x.t("even","generally");
x.t("row.name.text","...can");
x.t("row.name.text","although");
x.t("representing","number");
x.t("safest","rewrite");
x.t("equality","==");
x.t("equality","capitalization");
x.t("generates","compile");
x.t("careful","comparing");
x.t("conventions","capitalization");
x.t("conventions","following");
x.t("propagates","adjacent");
x.t("generally","recommended");
x.t("delinquencyplans","currentpage");
x.t("delinquencyplans","==");
x.t("delinquencyplans","add");
x.t("object","method");
x.t("object","downcasting");
x.t("object","gosu");
x.t("object","string");
x.t("object","automatic");
x.t("object","nice");
x.t("object","specific");
x.t("object","downcasted");
x.t("object","warning");
x.t("object","equality");
x.t("difference","==");
x.t("difference","null-safety");
x.t("specify","gosu");
}
