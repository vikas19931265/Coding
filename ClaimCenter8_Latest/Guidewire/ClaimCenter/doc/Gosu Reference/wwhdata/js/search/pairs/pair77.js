function FileData_Pairs(x)
{
x.t("example","samplechild");
x.t("example","secondary");
x.t("example","adds");
x.t("example","intend");
x.t("example","var");
x.t("example","matching");
x.t("tells","database");
x.t("properties","joined");
x.t("properties","child");
x.t("method","example");
x.t("method","signature");
x.t("method","again");
x.t("method","no");
x.t("method","perform");
x.t("method","suppose");
x.t("method","approach");
x.t("method","adds");
x.t("method","query");
x.t("possible","several");
x.t("parameter","example");
x.t("right","easy");
x.t("right","foreign");
x.t("right","try");
x.t("right","single");
x.t("right","eliminate");
x.t("right","function");
x.t("right","handling");
x.t("right","return");
x.t("right","two-parameter");
x.t("right","join");
x.t("right","joins");
x.t("easy","fetch");
x.t("fetch","duplicate");
x.t("every","situation");
x.t("query.compare","childpriority");
x.t("table","possible");
x.t("table","related");
x.t("table","best");
x.t("table","original");
x.t("table","name");
x.t("table","carefully");
x.t("table","match");
x.t("table","primary");
x.t("table","result");
x.t("table","join");
x.t("table","call");
x.t("table","using");
x.t("table","var");
x.t("situation","different");
x.t("create","duplicates");
x.t("related","entities");
x.t("related","child");
x.t("key","right");
x.t("key","join");
x.t("once","instance");
x.t("instance","right");
x.t("instance","left");
x.t("instance","duplicate");
x.t("instance","exists");
x.t("instance","unique");
x.t("having","method");
x.t("having","keyword");
x.t("foreign","key");
x.t("foreign","keys");
x.t("likely","want");
x.t("performs","better");
x.t("arguments","next");
x.t("try","reduce");
x.t("later","call");
x.t("text_val.select","link");
x.t("type","samplechild");
x.t("best","ensure");
x.t("lots","results");
x.t("left","relates");
x.t("left","value");
x.t("however","every");
x.t("however","cases");
x.t("multiple","secondary");
x.t("followed","column");
x.t("apis","joining");
x.t("entities","queries");
x.t("entities","primary");
x.t("guidewire","recommends");
x.t("property","match");
x.t("original","query");
x.t("link","directly");
x.t("samplechild","relates");
x.t("samplechild","parent");
x.t("want","however");
x.t("want","return");
x.t("single","instance");
x.t("signature","includes");
x.t("distinct","results");
x.t("certain","property");
x.t("items","primary");
x.t("desirable","cases");
x.t("includes","table");
x.t("includes","predicates");
x.t("messsage","gosu");
x.t("tablechild","queryparent.join");
x.t("again","pass");
x.t("recommends","trying");
x.t("joined","table");
x.t("add","predicates");
x.t(".compare","childpriority");
x.t("guide","query");
x.t("results","distinct");
x.t("results","consider");
x.t("results","join");
x.t("results","turn");
x.t("testing","join");
x.t("duplicate","instances");
x.t("false","parameter");
x.t("directly","page");
x.t("relates","instance");
x.t("relates","multiple");
x.t("relates","either");
x.t("relates","sampleparent");
x.t("eliminate","duplicates");
x.t("selective","words");
x.t("true","argument");
x.t("text_val.focus","text_val.select");
x.t("no","instance");
x.t("no","arguments");
x.t("no","additional");
x.t("name","followed");
x.t("name","joined");
x.t("(true)","query.join");
x.t("gosu","reference");
x.t("query.make","(sampleparent)");
x.t("iterate","across");
x.t("subselect","method");
x.t("subselect","using");
x.t("performance","testing");
x.t("accordingly","note");
x.t("perform","better");
x.t("limit","results");
x.t("limit","query");
x.t("argument","limit");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("exists","result");
x.t("secondary","table");
x.t("secondary","instances");
x.t("secondary","entity");
x.t("secondary","clause");
x.t("inner","joins");
x.t("trying","approaches");
x.t("mychildobjectproperty","query.compare");
x.t("mychildobjectproperty","add");
x.t("mychildobjectproperty","query.having");
x.t("query.join","mychildobjectproperty");
x.t("addition","having");
x.t("earlier","rewrite");
x.t("(sampleparent)","query.join");
x.t("(sampleparent)","query.withdistinct");
x.t("(sampleparent)","var");
x.t("error","occurred");
x.t("queries","guidewire");
x.t("queries","handling");
x.t("notice","duplicates");
x.t("approaches","performance");
x.t("approaches","limiting");
x.t("query.withdistinct","(true)");
x.t("occurs","primary");
x.t("suppose","add");
x.t("next","add");
x.t("guidewire_selectall","var");
x.t("control","whether");
x.t("function","guidewire_selectall");
x.t("parent","using");
x.t("maximum","row");
x.t("design","query");
x.t("approach","add");
x.t("approach","instead");
x.t("approach","reverse");
x.t("approach","call");
x.t("better","example");
x.t("better","subselect");
x.t("better","approach");
x.t("determining","items");
x.t("outerjoin","foreign");
x.t("outerjoin","however");
x.t("carefully","design");
x.t("unique","secondary");
x.t("different","cases");
x.t("words","secondary");
x.t("whether","predicates");
x.t("queryparent","query.make");
x.t("row","primary");
x.t("row","matches");
x.t("reduce","duplicates");
x.t("instead","using");
x.t("handling","duplicates");
x.t("returned","once");
x.t("match","secondary");
x.t("match","specific");
x.t("keyword","tells");
x.t("rewrite","subselect");
x.t("important","queries");
x.t("added","join");
x.t("reference","guide");
x.t("optimizer","often");
x.t("optimizer","typically");
x.t("primary","table");
x.t("primary","instance");
x.t("primary","entity");
x.t("return","duplicate");
x.t("return","maximum");
x.t("often","performs");
x.t("two-parameter","method");
x.t("adds","predicates");
x.t("adds","sql");
x.t("previous","example");
x.t("matches","example");
x.t("matches","no");
x.t("matches","query");
x.t("matches","entity");
x.t("limiting","duplicates");
x.t("database","interested");
x.t("ensure","table");
x.t("occurred","messsage");
x.t("null","matches");
x.t("consider","using");
x.t("keys","right");
x.t("instances","right");
x.t("instances","primary");
x.t("value","true");
x.t("value","primary");
x.t("value","null");
x.t("value","following");
x.t("query.having",".compare");
x.t("additional","duplicates");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("several","approaches");
x.t("specific","value");
x.t("builder","apis");
x.t("subquery","having");
x.t("subquery","limit");
x.t("page","error");
x.t("duplicates","primary");
x.t("duplicates","result");
x.t("duplicates","joins");
x.t("duplicates","created");
x.t("duplicates","occur");
x.t("query","want");
x.t("query","distinct");
x.t("query","query.make");
x.t("query","accordingly");
x.t("query","limit");
x.t("query","notice");
x.t("query","optimizer");
x.t("query","matches");
x.t("query","builder");
x.t("query","result");
x.t("query","mentioned");
x.t("query","child");
x.t("joining","related");
x.t("childpriority","equals");
x.t("result","having");
x.t("result","desirable");
x.t("result","join");
x.t("result","withdistinct");
x.t("result","returns");
x.t("result","extract");
x.t("equals","add");
x.t("equals","addition");
x.t("interested","determining");
x.t("join","method");
x.t("join","create");
x.t("join","table");
x.t("join","foreign");
x.t("join","left");
x.t("join","control");
x.t("join","outerjoin");
x.t("join","row");
x.t("join","rewrite");
x.t("join","important");
x.t("join","query");
x.t("join","using");
x.t("join","pass");
x.t("join","var");
x.t("predicates","selective");
x.t("predicates","added");
x.t("predicates","subquery");
x.t("predicates","result");
x.t("predicates","join");
x.t("queryparent.join","samplechild");
x.t("intend","iterate");
x.t("note","using");
x.t("withdistinct","method");
x.t("column","name");
x.t("joins","key");
x.t("joins","foreign");
x.t("joins","query");
x.t("cases","example");
x.t("cases","likely");
x.t("cases","using");
x.t("mentioned","earlier");
x.t("typically","performs");
x.t("created","join");
x.t("reverse","inner");
x.t("call","method");
x.t("call","having");
x.t("call","withdistinct");
x.t("entity","includes");
x.t("entity","occurs");
x.t("entity","primary");
x.t("entity","query");
x.t("entity","join");
x.t("either","value");
x.t("clause","returns");
x.t("turn","behavior");
x.t("following","example");
x.t("using","properties");
x.t("using","approach");
x.t("using","previous");
x.t("using","join");
x.t("across","result");
x.t("returns","lots");
x.t("returns","no");
x.t("pass","false");
x.t("pass","value");
x.t("sampleparent","returned");
x.t("sampleparent","sampleparent");
x.t("child","object");
x.t("occur","joins");
x.t("behavior","later");
x.t("sql","having");
x.t("var","tablechild");
x.t("var","text_val=eval");
x.t("var","queryparent");
x.t("var","query");
x.t("object","type");
x.t("object","certain");
x.t("object","matches");
x.t("extract","properties");
x.t("matching","entities");
}
