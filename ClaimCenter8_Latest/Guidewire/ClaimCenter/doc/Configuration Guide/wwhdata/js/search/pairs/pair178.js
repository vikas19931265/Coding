function FileData_Pairs(x)
{
x.t("extensions","typelist");
x.t("example","modification");
x.t("example","priority");
x.t("upgrade","table");
x.t("uniquely","identify");
x.t("excellent","identify");
x.t("possible","create");
x.t("possible","edit");
x.t("provide","value");
x.t("localization","editor");
x.t("256","characters");
x.t("priorities","typecodes");
x.t("within","guidewire");
x.t("within","list");
x.t("within","claimcenter");
x.t("within","drop-down");
x.t("within","application");
x.t("within","tab");
x.t("retired","boolean");
x.t("retired","attributes");
x.t("every","typelist");
x.t("dot","colon");
x.t("lists","within");
x.t("alphabetically","name");
x.t("needs","value");
x.t("studio","create");
x.t("studio","working");
x.t("studio","automatically");
x.t("studio","typelists");
x.t("studio","function");
x.t("studio","opens");
x.t("studio","marks");
x.t("studio","override");
x.t("studio","project");
x.t("studio","work");
x.t("studio","typelist");
x.t("create","filters");
x.t("create","new");
x.t("create","no");
x.t("create","code");
x.t("create","longer");
x.t("create","manage");
x.t("create","conflict");
x.t("create","non-final");
x.t("create","typelist");
x.t("description","table");
x.t("description","description");
x.t("description","field");
x.t("description","identify");
x.t("description","size");
x.t("description","typecode");
x.t("description","fields");
x.t("description","code");
x.t("description","longer");
x.t("description","priority");
x.t("table","however");
x.t("table","name");
x.t("table","query");
x.t("static","filters");
x.t("static","filter");
x.t("integration","guide");
x.t("non-internal","values");
x.t("related","typelists");
x.t("ensures","name");
x.t("various","attributes");
x.t("always","case");
x.t("table-name","guidewire");
x.t("table-name","final");
x.t("limits","table");
x.t("limits","number");
x.t("limits","length");
x.t("lowest","priority");
x.t("flag","indicates");
x.t("descriptions","however");
x.t("field","create");
x.t("field","description");
x.t("field","however");
x.t("field","guidewire");
x.t("field","default");
x.t("field","false");
x.t("field","final");
x.t("field","claimcenter");
x.t("field","value");
x.t("field","following");
x.t("field","typelist");
x.t("field","overrides");
x.t("transfers","value");
x.t("dialog","type");
x.t("dialog","claimcenter");
x.t("dialog","25");
x.t("implemented","future");
x.t("uses","name");
x.t("uses","cctl_");
x.t("uses","white");
x.t("uses","typelist");
x.t("until","selection");
x.t("working","typelists");
x.t("text_val.select","link");
x.t("modified","typelist");
x.t("modified","update");
x.t("potentially","affect");
x.t("interface","top");
x.t("icon","custom");
x.t("(boolean)","final");
x.t("displays","text");
x.t("support","8000");
x.t("change","non-internal");
x.t("type","list");
x.t("categories","create");
x.t("fuctionality","tab");
x.t("delete","cannot");
x.t("delete","typecodes");
x.t("colon","include");
x.t("external","system");
x.t("however","possible");
x.t("however","want");
x.t("however","limit");
x.t("however","maximum");
x.t("however","override");
x.t("however","regenerating");
x.t("however","choose");
x.t("insuranceline","coveragetype");
x.t("identify","claimcenter");
x.t("identify","flaws");
x.t("identify","typelist");
x.t("sort","list");
x.t("sort","codes");
x.t("sort","order");
x.t("guidewire","studio");
x.t("guidewire","uses");
x.t("guidewire","support");
x.t("guidewire","require");
x.t("guidewire","places");
x.t("guidewire","recommends");
x.t("guidewire","claimcenter");
x.t("guidewire","strongly");
x.t("guidewire","enter");
x.t("guidewire","upgrades");
x.t("guidewire","typelist");
x.t("guidewire","restricts");
x.t("filters","categories");
x.t("filters","define");
x.t("filters","view");
x.t("filters","information");
x.t("filters","typelist");
x.t("filters","therefore");
x.t("default","sort");
x.t("default","guidewire");
x.t("default","value");
x.t("text","description");
x.t("text","field");
x.t("text","appears");
x.t("text","visible");
x.t("automatically","sets");
x.t("assumes","value");
x.t("require","however");
x.t("link","directly");
x.t("new","modified");
x.t("new","typecode");
x.t("new","custom");
x.t("new","typecodes");
x.t("new","value");
x.t("new","typelist");
x.t("want","different");
x.t("certain","attribute");
x.t("objects","reference");
x.t("items","number");
x.t("start","up");
x.t("top","list");
x.t("top","portion");
x.t("size","256");
x.t("size","guidewire");
x.t("size","512");
x.t("choice","drop-down");
x.t("includes","changes");
x.t("messsage","claimcenter");
x.t("list","every");
x.t("list","alphabetically");
x.t("list","sort");
x.t("list","new");
x.t("list","name");
x.t("list","wide");
x.t("list","claimcenter");
x.t("list","existing");
x.t("list","unprioritized");
x.t("list","activities");
x.t("places","limits");
x.t("places","data");
x.t("entering","typecodes");
x.t("designated","internal");
x.t("hyphen","code");
x.t("determines","sort");
x.t("indicates","typecode");
x.t("need","typecodes");
x.t("add","delete");
x.t("add","new");
x.t("add","_ext");
x.t("add","additional");
x.t("add","modify");
x.t("typecode","within");
x.t("typecode","no");
x.t("typecode","50");
x.t("typecode","final");
x.t("typecode","maximum");
x.t("typecode","represents");
x.t("typecode","enter");
x.t("typecode","actual");
x.t("typecode","values");
x.t("typecode","tab");
x.t("typecode","modify");
x.t("typecode","attributes");
x.t("recommends","add");
x.t("recommends","limit");
x.t("recommends","regenerate");
x.t("id","internal");
x.t("during","application");
x.t("guide","create");
x.t("guide","data");
x.t("filter","static");
x.t("filter","depends");
x.t("meanings","true");
x.t("remove","internal");
x.t("navigate","configuration");
x.t("depends","typecodes");
x.t("globalization","guide");
x.t("false","studio");
x.t("false","default");
x.t("false","typelist");
x.t("false","modify");
x.t("directly","page");
x.t("true","config.xml");
x.t("true","cannot");
x.t("desired","specify");
x.t("typelists","example");
x.t("typelists","within");
x.t("typelists","studio");
x.t("typelists","create");
x.t("typelists","working");
x.t("typelists","depend");
x.t("typelists","select");
x.t("typelists","editor");
x.t("typelists","opens");
x.t("typelists","typecodes");
x.t("typelists","data");
x.t("typelists","defined");
x.t("typelists","policytype");
x.t("text_val.focus","text_val.select");
x.t("name","uniquely");
x.t("name","description");
x.t("name","ensures");
x.t("name","field");
x.t("name","however");
x.t("name","text");
x.t("name","new");
x.t("name","size");
x.t("name","desired");
x.t("name","stored");
x.t("name","name");
x.t("name","typelists");
x.t("name","ascii");
x.t("name","final");
x.t("name","maximum");
x.t("name","length");
x.t("name","define");
x.t("name","override");
x.t("name","value");
x.t("name","becomes");
x.t("name","typelist");
x.t("stored","database");
x.t("no","control");
x.t("no","longer");
x.t("wide","screen");
x.t("edit","field");
x.t("codes","within");
x.t("codes","integration");
x.t("codes","name");
x.t("codes","enter");
x.t("codes","mapping");
x.t("codes","tab");
x.t("dictionary","excellent");
x.t("dictionary","add");
x.t("dictionary","verify");
x.t("dictionary","priority");
x.t("performance","issues");
x.t("custom","typelists");
x.t("custom","typelist");
x.t("entered","maximum");
x.t("localize","typecodes");
x.t("limit","number");
x.t("limit","maximum");
x.t("limit","lookup");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("window","navigate");
x.t("window","select");
x.t("provides","different");
x.t("boolean","flag");
x.t("ascii","letters");
x.t("50","less");
x.t("omit","_ext");
x.t("omit","value");
x.t("up","guidewire");
x.t("config.xml","almost");
x.t("final","description");
x.t("final","field");
x.t("final","grayed-out");
x.t("final","typelist");
x.t("modification","policytype");
x.t("selection","codes");
x.t("map","legacy");
x.t("claimcenter","limits");
x.t("claimcenter","transfers");
x.t("claimcenter","uses");
x.t("claimcenter","displays");
x.t("claimcenter","assumes");
x.t("claimcenter","typelists");
x.t("claimcenter","changes");
x.t("claimcenter","configuration");
x.t("claimcenter","drop-down");
x.t("claimcenter","sorts");
x.t("claimcenter","data");
x.t("claimcenter","order");
x.t("claimcenter","using");
x.t("showing","configuration");
x.t("fields","description");
x.t("fields","entering");
x.t("fields","false");
x.t("sets","field");
x.t("string","containing");
x.t("offered","choice");
x.t("extendable","typelist");
x.t("understand","typelists");
x.t("characters","provide");
x.t("characters","dot");
x.t("characters","description");
x.t("characters","field");
x.t("characters","typecode");
x.t("characters","claimcenter");
x.t("characters","amount");
x.t("characters","cctl_");
x.t("attribute","fields");
x.t("grayed-out","icon");
x.t("legacy","systems");
x.t("ones","top");
x.t("ones","alphabetized");
x.t("legal","external");
x.t("legal","omit");
x.t("error","occurred");
x.t("config","extensions");
x.t("strongly","recommends");
x.t("occurs","autoupgrade");
x.t("select","typecode");
x.t("select","typelist");
x.t("depend","typecode");
x.t("options","typelist");
x.t("fixed","subset");
x.t("appears","places");
x.t("space","hyphen");
x.t("space","longer");
x.t("first","default");
x.t("issues","need");
x.t("guidewire_selectall","var");
x.t("number","characters");
x.t("number","typecodes");
x.t("number","larger");
x.t("number","tabs");
x.t("control","setting");
x.t("cause","performance");
x.t("cause","drop-down");
x.t("others","causes");
x.t("flaws","new");
x.t("function","guidewire_selectall");
x.t("underscore","guidewire");
x.t("length","name");
x.t("length","database");
x.t("length","25");
x.t("maximum","table");
x.t("maximum","description");
x.t("maximum","name");
x.t("maximum","number");
x.t("maximum","length");
x.t("maximum","25");
x.t("maximum","typelist");
x.t("editor","possible");
x.t("editor","create");
x.t("editor","interface");
x.t("editor","change");
x.t("editor","showing");
x.t("editor","25");
x.t("editor","screen");
x.t("editor","localizing");
x.t("editor","tabs");
x.t("editor","modify");
x.t("editor","contains");
x.t("define","new");
x.t("define","fixed");
x.t("define","typecodes");
x.t("cannot","delete");
x.t("cannot","add");
x.t("cannot","remove");
x.t("different","table");
x.t("different","fuctionality");
x.t("different","typelist");
x.t("represents","value");
x.t("unique","within");
x.t("unique","id");
x.t("afterwards","retired");
x.t("almost","always");
x.t("opens","editor");
x.t("opens","typelist");
x.t("internal","guidewire");
x.t("internal","cannot");
x.t("internal","typecodes");
x.t("internal","typelist");
x.t("verify","(boolean)");
x.t("changes","existing");
x.t("changes","data");
x.t("changes","typelist");
x.t("coveragetype","typelists");
x.t("marks","typelists");
x.t("code","map");
x.t("code","unique");
x.t("code","value");
x.t("reference","typecode");
x.t("folder","studio");
x.t("typecodes","create");
x.t("typecodes","lowest");
x.t("typecodes","external");
x.t("typecodes","however");
x.t("typecodes","filters");
x.t("typecodes","guidewire");
x.t("typecodes","designated");
x.t("typecodes","typecode");
x.t("typecodes","globalization");
x.t("typecodes","codes");
x.t("typecodes","others");
x.t("typecodes","different");
x.t("typecodes","mapping");
x.t("typecodes","using");
x.t("typecodes","typelist");
x.t("typecodes","250");
x.t("typecodes","modify");
x.t("override","default");
x.t("override","certain");
x.t("override","name");
x.t("thus","provide");
x.t("8000","typecodes");
x.t("affect","insuranceline");
x.t("database","upgrade");
x.t("database","table");
x.t("database","changes");
x.t("database","thus");
x.t("subtab","select");
x.t("least","typecode");
x.t("alphabetized","afterwards");
x.t("option","true");
x.t("click","new");
x.t("enter","description");
x.t("enter","type");
x.t("enter","new");
x.t("enter","typecode");
x.t("enter","name");
x.t("enter","string");
x.t("enter","typecodes");
x.t("enter","value");
x.t("enter","typelist");
x.t("ensure","thoroughly");
x.t("actual","practice");
x.t("occurred","messsage");
x.t("existing","objects");
x.t("existing","typecode");
x.t("existing","typelists");
x.t("existing","extendable");
x.t("existing","typelist");
x.t("project","window");
x.t("longer","description");
x.t("longer","descriptions");
x.t("longer","text");
x.t("longer","valid");
x.t("less","mapping");
x.t("configuration","working");
x.t("configuration","guide");
x.t("configuration","config");
x.t("configuration","options");
x.t("_ext","suffix");
x.t("include","white");
x.t("amount","cause");
x.t("right-click","typelist");
x.t("value","table");
x.t("value","limits");
x.t("value","new");
x.t("value","determines");
x.t("value","false");
x.t("value","name");
x.t("value","entered");
x.t("value","claimcenter");
x.t("value","offered");
x.t("value","legal");
x.t("value","enter");
x.t("value","value");
x.t("value","drop-down");
x.t("value","specifying");
x.t("value","naming");
x.t("additional","typecodes");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("drop-down","lists");
x.t("drop-down","list");
x.t("regenerate","data");
x.t("view","values");
x.t("25","characters");
x.t("import","export");
x.t("sorts","list");
x.t("generate","typelist");
x.t("regenerating","data");
x.t("digits","underscore");
x.t("digits","following");
x.t("screen","maximum");
x.t("screen","contains");
x.t("localizing","typecodes");
x.t("systems","import");
x.t("unprioritized","ones");
x.t("valid","value");
x.t("page","error");
x.t("specifying","value");
x.t("dynamic","filters");
x.t("larger","cause");
x.t("data","dictionary");
x.t("data","code");
x.t("data","model");
x.t("becomes","cctl_");
x.t("information","localize");
x.t("query","generate");
x.t("future","database");
x.t("defined","final");
x.t("upgrades","application");
x.t("practice","occurs");
x.t("expand","typelist");
x.t("values","define");
x.t("values","internal");
x.t("values","typelist");
x.t("typelist-name","table");
x.t("typelist-name","name");
x.t("application","uses");
x.t("application","start");
x.t("application","database");
x.t("512","characters");
x.t("(reference)","table");
x.t("case","guidewire");
x.t("case","typelists");
x.t("choose","override");
x.t("activities","example");
x.t("prioritized","ones");
x.t("priority","retired");
x.t("priority","omit");
x.t("priority","first");
x.t("priority","value");
x.t("subset","typelist");
x.t("export","claimcenter");
x.t("work","existing");
x.t("letters","digits");
x.t("mapping","typecodes");
x.t("order","typecodes");
x.t("order","prioritized");
x.t("causes","claimcenter");
x.t("model","guidewire");
x.t("model","includes");
x.t("model","enter");
x.t("model","configuration");
x.t("manage","modify");
x.t("thoroughly","understand");
x.t("following","field");
x.t("following","meanings");
x.t("following","fields");
x.t("following","characters");
x.t("cctl_","table-name");
x.t("cctl_","typelist-name");
x.t("turn","overrides");
x.t("except","typecodes");
x.t("white","space");
x.t("system","needs");
x.t("system","codes");
x.t("autoupgrade","option");
x.t("using","studio");
x.t("using","guidewire");
x.t("typelist","localization");
x.t("typelist","studio");
x.t("typelist","create");
x.t("typelist","table");
x.t("typelist","static");
x.t("typelist","various");
x.t("typelist","dialog");
x.t("typelist","implemented");
x.t("typelist","modified");
x.t("typelist","potentially");
x.t("typelist","however");
x.t("typelist","filters");
x.t("typelist","text");
x.t("typelist","guidewire");
x.t("typelist","size");
x.t("typelist","list");
x.t("typelist","during");
x.t("typelist","typecode");
x.t("typelist","filter");
x.t("typelist","navigate");
x.t("typelist","name");
x.t("typelist","typelists");
x.t("typelist","select");
x.t("typelist","editor");
x.t("typelist","cannot");
x.t("typelist","folder");
x.t("typelist","override");
x.t("typelist","subtab");
x.t("typelist","least");
x.t("typelist","click");
x.t("typelist","enter");
x.t("typelist","ensure");
x.t("typelist","project");
x.t("typelist","right-click");
x.t("typelist","data");
x.t("typelist","expand");
x.t("typelist","case");
x.t("typelist","turn");
x.t("typelist","except");
x.t("typelist","typelist");
x.t("typelist","250");
x.t("typelist","modify");
x.t("conflict","guidewire");
x.t("non-final","studio");
x.t("tabs","typelist");
x.t("tabs","tabs");
x.t("tabs","visible");
x.t("setting","field");
x.t("containing","letters");
x.t("lookup","(reference)");
x.t("portion","typelist");
x.t("restricts","typelist");
x.t("overrides","table");
x.t("overrides","value");
x.t("tab","codes");
x.t("tab","provides");
x.t("tab","enter");
x.t("tab","dynamic");
x.t("tab","following");
x.t("tab","tab");
x.t("250","items");
x.t("250","limit");
x.t("modify","delete");
x.t("modify","typelists");
x.t("modify","name");
x.t("modify","existing");
x.t("modify","typelist");
x.t("modify","behavior");
x.t("behavior","within");
x.t("therefore","update");
x.t("var","text_val=eval");
x.t("suffix","maximum");
x.t("suffix","code");
x.t("suffix","value");
x.t("policytype","typelist");
x.t("visible","within");
x.t("visible","until");
x.t("naming","new");
x.t("update","related");
x.t("contains","number");
x.t("contains","following");
x.t("attributes","studio");
x.t("attributes","entering");
x.t("attributes","typecodes");
x.t("specify","priorities");
}
