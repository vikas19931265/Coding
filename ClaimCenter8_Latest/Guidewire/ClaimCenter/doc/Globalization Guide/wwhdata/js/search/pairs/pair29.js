function FileData_Pairs(x)
{
x.t("example","fr_fr");
x.t("example","claimcenter/bin");
x.t("root","installation");
x.t("parameter","descriptions");
x.t("parameter","-dimport.file");
x.t("parameter","command");
x.t("parameter","-dexport.locale");
x.t("parameter","-dexport.file");
x.t("parameter","names");
x.t("properties","files");
x.t("exports","resource");
x.t("exports","following");
x.t("dimport.locale","localenode");
x.t("lists","script");
x.t("files","gosu");
x.t("files","format");
x.t("files","correctly");
x.t("files","learn");
x.t("exported","claimcenter");
x.t("name/value","pairs");
x.t("sourcefile","dimport.locale");
x.t("sourcefile","contains");
x.t("ability","export");
x.t("[-dimport.locale]","using");
x.t("descriptions","strings");
x.t("descriptions","workflow");
x.t("descriptions","script");
x.t("field","screen");
x.t("line","parameter");
x.t("line","tool");
x.t("locations","export");
x.t("text_val.select","link");
x.t("extension","file");
x.t("leave","import");
x.t("leave","export");
x.t("non-translated","groups");
x.t("-dimport.file","command");
x.t("-dimport.file","specifies");
x.t("external","file");
x.t("locale","exists");
x.t("locale","node");
x.t("property","files");
x.t("guidewire","provides");
x.t("default","claimcenter");
x.t("dimport.file","sourcefile");
x.t("link","directly");
x.t("single","file");
x.t("certain","string");
x.t("command","exports");
x.t("command","parameter");
x.t("command","line");
x.t("command","provides");
x.t("command","gwcc");
x.t("command","imports");
x.t("messsage","claimcenter");
x.t("file","root");
x.t("file","sourcefile");
x.t("file","extension");
x.t("file","name");
x.t("file","organizes");
x.t("file","claimcenter");
x.t("file","different");
x.t("file","language-specific");
x.t("file","import");
x.t("file","location");
x.t("file","export");
x.t("file","targetfile");
x.t("file","including");
x.t("places","export");
x.t("ja_jp","using");
x.t("need","enter");
x.t("add","file");
x.t("-dexport.locale","command");
x.t("-dexport.locale","specifies");
x.t("typecode","names");
x.t("guide","language");
x.t("guide","using");
x.t("globalization","guide");
x.t("navigate","application");
x.t("directly","single");
x.t("directly","page");
x.t("text_val.focus","text_val.select");
x.t("name","locale");
x.t("name","default");
x.t("name","file");
x.t("name","match");
x.t("path","file");
x.t("path","relative");
x.t("gosu","reference");
x.t("organizes","strings");
x.t("previously","exported");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","ability");
x.t("provides","command");
x.t("provides","parameters");
x.t("provides","separate");
x.t("parameters","workflow");
x.t("parameters","specify");
x.t("exists","languagetype");
x.t("exists","languatetype");
x.t("export-l10ns","dexport.file");
x.t("export-l10ns","[-dexport.file]");
x.t("place","file");
x.t("place","translated");
x.t("strings","locale");
x.t("strings","add");
x.t("strings","display");
x.t("strings","format");
x.t("strings","translated");
x.t("strings","resources");
x.t("import-l10ns","dimport.file");
x.t("import-l10ns","[-dimport.file]");
x.t("string","resources");
x.t("claimcenter","properties");
x.t("claimcenter","exports");
x.t("claimcenter","locale");
x.t("claimcenter","default");
x.t("claimcenter","command");
x.t("claimcenter","places");
x.t("claimcenter","globalization");
x.t("claimcenter","provides");
x.t("claimcenter","string");
x.t("pairs","display");
x.t("target","locale");
x.t("dexport.locale","localenode");
x.t("resource","strings");
x.t("relative","path");
x.t("-dexport.file","command");
x.t("-dexport.file","specifies");
x.t("error","messages");
x.t("error","occurred");
x.t("display","descriptions");
x.t("display","field");
x.t("display","choices");
x.t("display","keys");
x.t("display","individual");
x.t("interactive","error");
x.t("choices","drop-down");
x.t("commands","provides");
x.t("commands","exporting");
x.t("absolute","path");
x.t("absolute","relative");
x.t("messages","typecodes");
x.t("dexport.file","targetfile");
x.t("importing","string");
x.t("guidewire_selectall","var");
x.t("[-dexport.file]","[-dexport.locale]");
x.t("function","guidewire_selectall");
x.t("[-dimport.file]","[-dimport.locale]");
x.t("workflow","processes");
x.t("workflow","step");
x.t("processes","exporting");
x.t("specifies","file");
x.t("specifies","name");
x.t("specifies","target");
x.t("different","location");
x.t("move","translation");
x.t("language","configuration");
x.t("step","names");
x.t("format","java");
x.t("format","export");
x.t("directory","example");
x.t("directory","leave");
x.t("directory","-dexport.locale");
x.t("directory","-dimport.locale");
x.t("match","claimcenter");
x.t("node","name");
x.t("node","localenode");
x.t("reference","guide");
x.t("fr_fr","ja_jp");
x.t("typecodes","strings");
x.t("typecodes","script");
x.t("groups","command");
x.t("java","properties");
x.t("java","property");
x.t("translated","non-translated");
x.t("translated","strings");
x.t("translated","resource");
x.t("ensure","application");
x.t("enter","name");
x.t("enter","absolute");
x.t("enter","either");
x.t("occurred","messsage");
x.t("claimcenter/bin","run");
x.t("exporting","importing");
x.t("configuration","localizing");
x.t("keys","typecode");
x.t("keys","strings");
x.t("keys","typecodes");
x.t("[-dexport.locale]","using");
x.t("running","navigate");
x.t("bin","directory");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("drop-down","lists");
x.t("languagetype","typelist");
x.t("import","files");
x.t("import","command");
x.t("import","file");
x.t("import","move");
x.t("import","tool");
x.t("import","export");
x.t("import","localized");
x.t("import","run");
x.t("import","translation");
x.t("language-specific","string");
x.t("localizing","claimcenter");
x.t("screen","labels");
x.t("page","error");
x.t("script","parameter");
x.t("script","parameters");
x.t("separate","commands");
x.t("location","need");
x.t("location","enter");
x.t("location","import");
x.t("location","export");
x.t("tool","guidewire");
x.t("tool","commands");
x.t("tool","ensure");
x.t("tool","import");
x.t("tool","using");
x.t("tool","manually");
x.t("tool","gwcc");
x.t("localenode","-dimport.file");
x.t("localenode","place");
x.t("localenode","-dexport.file");
x.t("localenode","translated");
x.t("labels","interactive");
x.t("application","installation");
x.t("application","server");
x.t("key/value","pairs");
x.t("export","certain");
x.t("export","command");
x.t("export","file");
x.t("export","place");
x.t("export","string");
x.t("export","import");
x.t("export","tool");
x.t("export","run");
x.t("-dimport.locale","comand");
x.t("correctly","claimcenter");
x.t("localized","string");
x.t("following","command");
x.t("following","strings");
x.t("following","string");
x.t("following","display");
x.t("individual","step");
x.t("run","import");
x.t("run","export");
x.t("run","following");
x.t("either","absolute");
x.t("translations","directly");
x.t("using","import");
x.t("using","export");
x.t("installation","directory");
x.t("installation","bin");
x.t("typelist","example");
x.t("comand","parameter");
x.t("manually","export");
x.t("targetfile","claimcenter");
x.t("targetfile","dexport.locale");
x.t("translation","file");
x.t("names","descriptions");
x.t("names","command");
x.t("names","strings");
x.t("names","workflow");
x.t("names","export");
x.t("gwcc","export-l10ns");
x.t("gwcc","import-l10ns");
x.t("var","text_val=eval");
x.t("including","following");
x.t("learn","java");
x.t("imports","following");
x.t("resources","name/value");
x.t("resources","external");
x.t("resources","command");
x.t("resources","previously");
x.t("resources","claimcenter");
x.t("resources","function");
x.t("resources","exporting");
x.t("resources","import");
x.t("resources","key/value");
x.t("resources","export");
x.t("resources","translations");
x.t("specify","locations");
x.t("specify","location");
x.t("server","running");
x.t("contains","translated");
x.t("languatetype","typelist");
}
