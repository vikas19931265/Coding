function FileData_Pairs(x)
{
x.t("example","rule");
x.t("example","design");
x.t("active","rule");
x.t("possible","fraud");
x.t("exist","description");
x.t("else","create");
x.t("provide","sample");
x.t("claim","exist");
x.t("claim","postsetup");
x.t("claim","owner");
x.t("claim","10");
x.t("claim","status");
x.t("claim","duplicate");
x.t("claim","claimcenter");
x.t("claim","exposure");
x.t("claim","activity");
x.t("claim","fraud");
x.t("claim","special");
x.t("just","prior");
x.t("postsetup","rule");
x.t("postsetup","rules");
x.t("fnol","check");
x.t("fnol","exposure");
x.t("fnol","condition");
x.t("owner","matter");
x.t("business","requirements");
x.t("business","rules");
x.t("create","new");
x.t("create","note");
x.t("description","check");
x.t("description","null");
x.t("gw.api.util.dateutil.adddays","act.matter.mediationdate");
x.t("approves","transactionset");
x.t("matter","postsetup");
x.t("matter","bodily");
x.t("10","days");
x.t("preupdate","rule");
x.t("action","activity.claim.siustatus");
x.t("action","var");
x.t("detecting","claim");
x.t("creates","new");
x.t("text_val.select","link");
x.t("categories","postsetup");
x.t("sample","rules");
x.t("time","claimcenter");
x.t("initiate","legal");
x.t("execution","postsetup");
x.t("trigger","based");
x.t("exposuretype.tc_bodilyinjurydamage","exp");
x.t("automatically","time");
x.t("listed","var");
x.t("guidewire","provide");
x.t("injury","claim");
x.t("injury","exposure");
x.t("link","directly");
x.t("new","claim");
x.t("new","activity");
x.t("new","claims");
x.t("==","exposuretype.tc_bodilyinjurydamage");
x.t("==","fraud_review");
x.t(".exposure.firstwhere","elt");
x.t("messsage","claimcenter");
x.t("status","indicate");
x.t("assignment","rules");
x.t("assignment","workplan");
x.t("complete","execution");
x.t("actions","depending");
x.t("during","setup");
x.t("voids","stops");
x.t("voids","recovery");
x.t("guide","gosu");
x.t("results","rules");
x.t("check","claim");
x.t("check","duplicate");
x.t("check","claimcenter");
x.t("referred","claim");
x.t("activity.activitypattern.code","==");
x.t("newloss","true");
x.t("duplicate","claim");
x.t("duplicate","strclaimnumber");
x.t("duplicate","claims");
x.t("directly","page");
x.t("reserve","rule");
x.t("reserve","transaction");
x.t("requirements","postsetup");
x.t("true","action");
x.t("elt.exposuretype","==");
x.t("text_val.focus","text_val.select");
x.t("wide","variety");
x.t("operation","new");
x.t("no","rules");
x.t("possibly","duplicate");
x.t("creating","reserve");
x.t("escalates","check");
x.t("gosu","business");
x.t("tasks","example");
x.t("closed","rule");
x.t("closed","rules");
x.t("perform","wide");
x.t("part","save");
x.t("base","claimcenter");
x.t("base","configuration");
x.t("rule","creates");
x.t("rule","categories");
x.t("rule","sets");
x.t("rule","closing");
x.t("rule","following");
x.t("rule","except");
x.t("rule","category");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("prior","completing");
x.t("=null","var");
x.t("indicate","claimcenter");
x.t("up","activity");
x.t("up","process");
x.t("exposures","claim");
x.t("exposures","guidewire");
x.t("exposures","activity");
x.t("completing","up");
x.t("completing","setup");
x.t("insured","condition");
x.t("records","payment");
x.t("claimcenter","approves");
x.t("claimcenter","voids");
x.t("claimcenter","referred");
x.t("claimcenter","records");
x.t("claimcenter","closes");
x.t("claimcenter","adds");
x.t("claimcenter","rules");
x.t("claimcenter","configuration");
x.t("claimcenter","runs");
x.t("sets","claim");
x.t("sets","up");
x.t("sets","initial");
x.t("exposure","postsetup");
x.t("exposure","closed");
x.t("exposure","array");
x.t("exposure","setup");
x.t("exposure","transaction");
x.t("array","exposures");
x.t("under_investigation","note");
x.t("siu","special");
x.t("claim.createactivity","null");
x.t("legal","review");
x.t("matter.exposures",".exposure.firstwhere");
x.t("error","occurred");
x.t("review","bodily");
x.t("payment","claimcenter");
x.t("depend","results");
x.t("unit","possible");
x.t("unit","rules");
x.t("strclaimnumber","claim.createactivity");
x.t("strclaimnumber","null");
x.t("strclaimnumber","claim.duplicateclaimnumbers");
x.t("guidewire_selectall","var");
x.t("setup","operation");
x.t("setup","tasks");
x.t("setup","rules");
x.t("setup","process");
x.t("setup","information");
x.t("activity","claim");
x.t("activity","postsetup");
x.t("activity","fnol");
x.t("activity","initiate");
x.t("activity","possibly");
x.t("activity","claim.createactivityfrompattern");
x.t("act.matter.mediationdate","-10");
x.t("stops","escalates");
x.t("function","guidewire_selectall");
x.t("design","rules");
x.t("recovery","claimcenter");
x.t("activity.claim.siustatus","under_investigation");
x.t("changes","exposures");
x.t("changes","matters");
x.t("changes","activities");
x.t("changes","claims");
x.t("meeting","insured");
x.t("exp","=null");
x.t("exp","matter.exposures");
x.t("exp","act.targetdate");
x.t("closes","exposure");
x.t("initial","reserve");
x.t("transactionset","claimcenter");
x.t("executed","during");
x.t("adds","new");
x.t("often","depend");
x.t("return","activity.activitypattern.code");
x.t("return","true");
x.t("return","claim.isvalid");
x.t("claim.isvalid","newloss");
x.t("approval","rules");
x.t("matter.claim.newactivity","activitypattern.finder.getactivitypatternbycode");
x.t("-10","act.assigntoclaimowner");
x.t("occurred","messsage");
x.t("rules","active");
x.t("rules","claim");
x.t("rules","create");
x.t("rules","matter");
x.t("rules","trigger");
x.t("rules","assignment");
x.t("rules","complete");
x.t("rules","guide");
x.t("rules","perform");
x.t("rules","part");
x.t("rules","base");
x.t("rules","rule");
x.t("rules","exposure");
x.t("rules","activity");
x.t("rules","executed");
x.t("rules","often");
x.t("rules","rules");
x.t("rules","fire");
x.t("rules","transaction");
x.t("rules","immediately");
x.t("rules","run");
x.t("null","else");
x.t("null","create");
x.t("null","null");
x.t("null","activitypattern.finder.getactivitypatternbycode");
x.t("act.targetdate","gw.api.util.dateutil.adddays");
x.t("closing","exposure");
x.t("variety","actions");
x.t("saving","changes");
x.t("discussion","siu");
x.t("configuration","matter");
x.t("configuration","no");
x.t("activitypattern.finder.getactivitypatternbycode","fnol");
x.t("activitypattern.finder.getactivitypatternbycode","legal_review");
x.t("matters","following");
x.t("claim.duplicateclaimnumbers","strclaimnumber");
x.t("elt","elt.exposuretype");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("depending","business");
x.t("specific","conditions");
x.t("fire","just");
x.t("fire","following");
x.t("legal_review","exp");
x.t("process","creating");
x.t("process","saving");
x.t("condition","return");
x.t("runs","postsetup");
x.t("runs","rules");
x.t("page","error");
x.t("information","initial");
x.t("save","setup");
x.t("fraud_review","action");
x.t("claim.createactivityfrompattern","null");
x.t("bodily","injury");
x.t("act.assigntoclaimowner","transaction");
x.t("activities","run");
x.t("workplan","rules");
x.t("note","detecting");
x.t("note","claimcenter");
x.t("fraud","discussion");
x.t("fraud","condition");
x.t("transaction","postsetup");
x.t("transaction","approval");
x.t("transaction","associated");
x.t("based","specific");
x.t("immediately","rule");
x.t("immediately","exposure");
x.t("immediately","transaction");
x.t("investigation","unit");
x.t("run","automatically");
x.t("run","assignment");
x.t("run","immediately");
x.t("run","following");
x.t("following","example");
x.t("following","conditions");
x.t("special","investigation");
x.t("scheduled","mediation");
x.t("except","process");
x.t("act","matter.claim.newactivity");
x.t("associated","exposure");
x.t("var","description");
x.t("var","text_val=eval");
x.t("var","strclaimnumber");
x.t("var","exp");
x.t("var","act");
x.t("claims","listed");
x.t("claims","base");
x.t("claims","exposures");
x.t("days","scheduled");
x.t("category","postsetup");
x.t("category","preupdate");
x.t("category","activity");
x.t("category","function");
x.t("conditions","claimcenter");
x.t("conditions","setup");
x.t("conditions","immediately");
x.t("mediation","meeting");
}
