function FileData_Pairs(x)
{
x.t("example","uses");
x.t("example","necessary");
x.t("example","demonstrates");
x.t("example","three");
x.t("example","function");
x.t("example","following");
x.t("example","using");
x.t("exist","example");
x.t("exist","create");
x.t("exist","claimcenter");
x.t("claim","assignment");
x.t("claim","no");
x.t("role","void/stop");
x.t("asdga02","assign");
x.t("fnol","queue");
x.t("fnol","review");
x.t("fnol","claims");
x.t("create","fact");
x.t("create","new");
x.t("create","stop/void");
x.t("create","void/stop");
x.t("create","first");
x.t("create","activity");
x.t("activity.activitypattern.subject","actions.getruleset");
x.t("enters","queue");
x.t("void","stop");
x.t("responsible","voiding/stopping");
x.t("cc:96","accountants");
x.t("refers","default");
x.t("refers","assignablequeues");
x.t("creates","anytime");
x.t("uses","two");
x.t("uses","accountants");
x.t("text_val.select","link");
x.t("working","queues");
x.t("necessary","create");
x.t("necessary","two");
x.t("potentially","group");
x.t("payments","checks");
x.t("payments","assign");
x.t("payments","void/stop");
x.t("payments","defined");
x.t("type","void_or_stop_check");
x.t("type","note");
x.t("fact","group");
x.t("associates","queue");
x.t("hierarchy","select");
x.t("however","first");
x.t("multiple","queues");
x.t("queue","example");
x.t("queue","exist");
x.t("queue","create");
x.t("queue","default");
x.t("queue","single");
x.t("queue","add");
x.t("queue","void/stop");
x.t("queue","handle");
x.t("queue","rule");
x.t("queue","claimcenter");
x.t("queue","first");
x.t("queue","activity.currentassignment.assignactivitytoqueue");
x.t("queue","added");
x.t("queue","adds");
x.t("queue","presumably");
x.t("queue","member");
x.t("queue","conditions");
x.t("checks","example");
x.t("checks","members");
x.t("checks","activity");
x.t("checks","instead");
x.t("default","fnol");
x.t("default","group");
x.t("link","directly");
x.t("advanced","topics");
x.t("single","group");
x.t("==","void_or_stop_check");
x.t("new","queue");
x.t("new","group");
x.t("messsage","claimcenter");
x.t("need","claim");
x.t("need","choose");
x.t("proper","role");
x.t("asga40","void/stop");
x.t("group","responsible");
x.t("group","cc:96");
x.t("group","potentially");
x.t("group","hierarchy");
x.t("group","multiple");
x.t("group","need");
x.t("group","assign");
x.t("group","handle");
x.t("group","second");
x.t("group","ones");
x.t("group","subgroups");
x.t("group","activity");
x.t("group","click");
x.t("group","global");
x.t("group","accountants");
x.t("group","conditions");
x.t("assign","fnol");
x.t("assign","void/stop");
x.t("assign","activity");
x.t("assignment","rule");
x.t("assignment","rules");
x.t("assignment","workplan");
x.t("add","queue");
x.t("add","activity");
x.t("actions","activity.currentassignment.assigngroup");
x.t("actions","gw.api.util.logger.loginfo");
x.t("activity.assignedgroup.assignablequeues","[1]");
x.t("guide","advanced");
x.t("check","activity");
x.t("void/stop","payments");
x.t("void/stop","checks");
x.t("void/stop","queue");
x.t("void/stop","check");
x.t("void/stop","payment");
x.t("void/stop","activity");
x.t("stop/void","queue");
x.t("activity.activitypattern.code","==");
x.t("directly","page");
x.t("queues","group");
x.t("queues","using");
x.t("queues","tab");
x.t("handle","fnol");
x.t("handle","void/stop");
x.t("handle","voiding");
x.t("requires","activity");
x.t("text_val.focus","text_val.select");
x.t("demonstrates","using");
x.t("no","need");
x.t("no","activity.claim.claimnumber");
x.t("[1]","queue");
x.t("[1]",".name");
x.t("[1]","actions.exit");
x.t("stop","checks");
x.t("edit","add");
x.t("requesting","void/stop");
x.t("end-user","therefore");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("rule","asdga02");
x.t("rule","refers");
x.t("rule","asga40");
x.t("rule","assigns");
x.t("rule","adds");
x.t("rule","condition");
x.t("rule","actions.getrule");
x.t("adjusters","create");
x.t("adjusters","void");
x.t("claimcenter","creates");
x.t("claimcenter","associates");
x.t("claimcenter","allow");
x.t("claimcenter","rules");
x.t("claimcenter","administration");
x.t("allow","random");
x.t("activity.currentassignment.assigngroup","group");
x.t("three","steps");
x.t("second","rule");
x.t("random","adjusters");
x.t("ones","assigned");
x.t("error","occurred");
x.t("payment","activity");
x.t("subgroups","therefore");
x.t("review","activity");
x.t("members","group");
x.t("first","create");
x.t("first","new");
x.t("first","rule");
x.t("first","select");
x.t("first","step");
x.t("first","appropriate");
x.t("select","queues");
x.t("select","specific");
x.t("guidewire_selectall","var");
x.t("activity","activity.activitypattern.subject");
x.t("activity","enters");
x.t("activity","type");
x.t("activity","queue");
x.t("activity","assignment");
x.t("activity","void/stop");
x.t("activity","requesting");
x.t("activity","requests");
x.t("activity","completes");
x.t("activity","correct");
x.t("activity","appropriate");
x.t("activity","manually");
x.t("activity","accounts");
x.t("function","guidewire_selectall");
x.t("particular","group");
x.t("define","first");
x.t("anytime","create");
x.t(".name","queue");
x.t("activity.currentassignment.assignactivitytoqueue","activity.assignedgroup.assignablequeues");
x.t("requests","scenario");
x.t("scenario","claimcenter");
x.t("instead","individual");
x.t("step","associate");
x.t("assigned","proper");
x.t("added","group");
x.t("steps","necessary");
x.t("completes","example");
x.t("assigns","activity");
x.t("adds","activity");
x.t("presumably","first");
x.t("click","edit");
x.t("activity.claim.claimnumber","activity");
x.t("activity.claim.claimnumber","actions.getruleset");
x.t("occurred","messsage");
x.t("rules","assign");
x.t("rules","guide");
x.t("rules","note");
x.t("rules","using");
x.t("assignablequeues","[1]");
x.t("assignablequeues","[0]");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","group");
x.t("voiding/stopping","payments");
x.t("condition","requires");
x.t("takes","activity");
x.t("gw.api.util.logger.loginfo","claim");
x.t("[0]","refers");
x.t("page","error");
x.t("correct","activity");
x.t("correct","assignablequeues");
x.t("appropriate","queue");
x.t("appropriate","group");
x.t("defined","define");
x.t("void_or_stop_check","actions");
x.t("void_or_stop_check","rule");
x.t("void_or_stop_check","particular");
x.t("stopping","checks");
x.t("global","activity");
x.t("choose","correct");
x.t("topics","working");
x.t("two","activity");
x.t("two","rules");
x.t("workplan","rules");
x.t("note","however");
x.t("note","rule");
x.t("administration","tab");
x.t("accountants","group");
x.t("accountants","takes");
x.t("accountants","gw.api.util.logger.loginfo");
x.t("actions.getruleset","rule");
x.t("created","end-user");
x.t("associate","group");
x.t("following","example");
x.t("individual","adjusters");
x.t("activity.assignedgroup.name","actions.exit");
x.t("using","queue");
x.t("manually","created");
x.t("tab","create");
x.t("tab","group");
x.t("actions.getrule","activity.assignedgroup.assignablequeues");
x.t("actions.getrule","assigning");
x.t("assigning","activity.assignedgroup.name");
x.t("member","group");
x.t("therefore","no");
x.t("therefore","first");
x.t("voiding","stopping");
x.t("accounts","group");
x.t("var","text_val=eval");
x.t("claims","example");
x.t("actions.exit","add");
x.t("conditions","activity.activitypattern.code");
}
