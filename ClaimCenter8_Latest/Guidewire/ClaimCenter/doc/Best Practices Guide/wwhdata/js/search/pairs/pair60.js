function FileData_Pairs(x)
{
x.t("properties","want");
x.t("properties","query");
x.t("possible","especially");
x.t("else","print");
x.t("fetch","anything");
x.t("fetch","items");
x.t("claim","//");
x.t("anything","found");
x.t("anything","application");
x.t("anything","print");
x.t("nothing","found");
x.t("counting","fetched");
x.t("uses","count");
x.t("uses","gw.api.database.query");
x.t("text_val.select","link");
x.t("best","practices");
x.t("best","practice");
x.t("sample","gosu");
x.t("whenever","possible");
x.t("count","properties");
x.t("count","property");
x.t("count","important");
x.t("guidewire","recommends");
x.t("apis","gosu");
x.t("apis","instead");
x.t("property","find");
x.t("property","instead");
x.t("property","value");
x.t("property","query");
x.t("property","returns");
x.t("link","directly");
x.t("items","fetched");
x.t("items","application");
x.t("items","following");
x.t("objects","obtain");
x.t("objects","iterate");
x.t("objects","recommendation");
x.t("new","code");
x.t("want","know");
x.t("want","number");
x.t("claimquery.count","empty");
x.t("messsage","claimcenter");
x.t("found","else");
x.t("found","want");
x.t("found","following");
x.t("recommends","obtain");
x.t("recommends","query");
x.t("results","find");
x.t("practices","count");
x.t("practices","guide");
x.t("practices","gosu");
x.t("guide","count");
x.t("guide","gosu");
x.t("applies","find");
x.t("api","result");
x.t("directly","page");
x.t("counts","items");
x.t("counts","least");
x.t("text_val.focus","text_val.select");
x.t("obtain","count");
x.t("obtain","counts");
x.t("faster","evaluation");
x.t("gosu","counting");
x.t("gosu","performance");
x.t("gosu","language");
x.t("gosu","reference");
x.t("gosu","code");
x.t("performance","best");
x.t("iterate","result");
x.t("query.make","(claim)");
x.t("soon","counts");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("find","claim");
x.t("find","queries");
x.t("find","expressions");
x.t("find","expression");
x.t("find","claims");
x.t("claimcenter","best");
x.t("(claim)","//");
x.t("empty","properties");
x.t("empty","property");
x.t("claimquery","query.make");
x.t("claimquery","find");
x.t("contain","anything");
x.t("claimquery.empty","//");
x.t("queries","count");
x.t("queries","performance");
x.t("queries","function");
x.t("error","occurred");
x.t("result.count","following");
x.t("contrast","value");
x.t("especially","new");
x.t("know","whether");
x.t("guidewire_selectall","var");
x.t("number","found");
x.t("number","claims");
x.t("gw.api.database.query","var");
x.t("stops","soon");
x.t("function","guidewire_selectall");
x.t("expressions","fetch");
x.t("whether","anything");
x.t("whether","result");
x.t("language","best");
x.t("instead","count");
x.t("instead","find");
x.t("important","guidewire");
x.t("code","uses");
x.t("code","faster");
x.t("code","information");
x.t("reference","guide");
x.t("database","whenever");
x.t("database","empty");
x.t("database","using");
x.t("least","fetched");
x.t("claimquery.select","result.empty");
x.t("claimquery.select","print");
x.t("occurred","messsage");
x.t("result.empty","//");
x.t("recommendation","applies");
x.t("value","count");
x.t("value","empty");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("builder","apis");
x.t("builder","results");
x.t("builder","api");
x.t("builder","result");
x.t("fetched","anything");
x.t("fetched","items");
x.t("fetched","application");
x.t("fetched","item");
x.t("expression","query");
x.t("evaluation","stops");
x.t("page","error");
x.t("query","fetch");
x.t("query","objects");
x.t("query","builder");
x.t("query","object");
x.t("information","query");
x.t("practice","guidewire");
x.t("result","objects");
x.t("result","contain");
x.t("result","claimquery.select");
x.t("result","query");
x.t("result","object");
x.t("application","database");
x.t("print","nothing");
x.t("print","number");
x.t("print","following");
x.t("following","sample");
x.t("using","count");
x.t("//","find");
x.t("//","query");
x.t("//","result");
x.t("returns","gosu");
x.t("var","text_val=eval");
x.t("var","claimquery");
x.t("var","result");
x.t("claims","claimquery.count");
x.t("claims","claimquery.empty");
x.t("claims","result.count");
x.t("claims","print");
x.t("claims","var");
x.t("object","uses");
x.t("object","fetched");
x.t("object","var");
x.t("item","contrast");
}
