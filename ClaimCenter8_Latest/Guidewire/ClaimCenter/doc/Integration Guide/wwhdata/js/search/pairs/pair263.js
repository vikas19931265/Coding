function FileData_Pairs(x)
{
x.t("example","common");
x.t("example","xml");
x.t("example","extending");
x.t("provide","symmetrical");
x.t("properties","database-level");
x.t("unchanged","within");
x.t("claim","one-to-one");
x.t("claim","fkentity=");
x.t("claim","array");
x.t("claim","graph");
x.t("claim","policy");
x.t("claim","turn");
x.t("claim","entity");
x.t("claim","object");
x.t("within","claim");
x.t("integration","guide");
x.t("integration","policy");
x.t("contact","integrations");
x.t("built-in","type");
x.t("refreshed","vehicle");
x.t("relinks","automatically");
x.t("directionality","foreign");
x.t("claim-specific","part");
x.t("claim-specific","entity");
x.t("key","claim");
x.t("key","claimentity_ext");
x.t("key","runs");
x.t("key","foreignkey");
x.t("claimcenter/config/extensions/claimentity_ext.eti","contents");
x.t("foreign","key");
x.t("foreign","keys");
x.t("name=","claim");
x.t("name=","claimentity_ext");
x.t("name=","extractable");
x.t("name=","vehicles");
x.t("integrations","claim");
x.t("claimentity_ext","example");
x.t("claimentity_ext","claim-specific");
x.t("claimentity_ext","name=");
x.t("claimentity_ext","assure");
x.t("claimentity_ext","extend");
x.t("claimentity_ext","fkentity=");
x.t("claimentity_ext","table=");
x.t("claimentity_ext","part");
x.t("claimentity_ext","array");
x.t("claimentity_ext","metadata");
x.t("claimentity_ext","changes");
x.t("claimentity_ext","nullok=");
x.t("claimentity_ext","include");
x.t("claimentity_ext","instances");
x.t("claimentity_ext","entity");
x.t("plugin","include");
x.t("version=","1.0");
x.t("http://guidewire.com/datamodel","entity");
x.t("text_val.select","link");
x.t("look","following");
x.t("type","claimentity_ext");
x.t("type","belongs");
x.t("type","define");
x.t("database-level","foreign");
x.t("assure","claimentity_ext");
x.t("xmlns=","http://guidewire.com/datamodel");
x.t("claimentity","type=");
x.t("extend","claim");
x.t("extend","vehicle");
x.t("demands","configuration");
x.t("one-to-one","element");
x.t("back","claimentity_ext");
x.t("property","contains");
x.t("relate","children");
x.t("automatically","directionality");
x.t("automatically","updates");
x.t("default","relinking");
x.t("new","claim-specific");
x.t("new","claimentity_ext");
x.t("new","entity");
x.t("link","back");
x.t("link","directly");
x.t("element","provide");
x.t("element","onetoone");
x.t("belongs","claim");
x.t("belongs","policy");
x.t("objects","claim");
x.t("objects","claimentity_ext");
x.t("objects","vehicle");
x.t("contents","file");
x.t("updates","objects");
x.t("fkentity=","claim");
x.t("fkentity=","claimentity_ext");
x.t("messsage","claimcenter");
x.t("reside","child");
x.t("file","claimcenter/config/extensions/claimentity_ext.eti");
x.t("file","look");
x.t("places","no");
x.t("distinction","reviewing");
x.t("add","new");
x.t("table=","claimentity");
x.t("guide","policy");
x.t("retireable","implementsentity");
x.t("directly","page");
x.t("true","claimcenter/config/extensions/vehicle.etx");
x.t("text_val.focus","text_val.select");
x.t("definition","file");
x.t("common","types");
x.t("no","additional");
x.t("part","claim");
x.t("part","policy");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("arrayentity=","vehicle");
x.t("claimcenter","integration");
x.t("claimcenter","knows");
x.t("array","properties");
x.t("array","name=");
x.t("array","property");
x.t("remain","unchanged");
x.t("metadata","definition");
x.t("metadata","definitions");
x.t("error","occurred");
x.t("refresh","plugin");
x.t("refresh","automatically");
x.t("refresh","suppose");
x.t("refresh","function");
x.t("refresh","configuration");
x.t("refresh","happens");
x.t("refresh","system");
x.t("refresh","adding");
x.t("suppose","new");
x.t("suppose","add");
x.t("1.0","entity");
x.t("extractable","foreignkey");
x.t("/entity","claimcenter/config/extensions/vehicle.etx");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("parent","objects");
x.t("define","new");
x.t("types","data");
x.t("types","comprise");
x.t("xml","version=");
x.t("claimcenter/config/extensions/vehicle.etx","extend");
x.t("changes","new");
x.t("changes","described");
x.t("important","distinction");
x.t("thus","claimcenter");
x.t("vehicle","foreign");
x.t("vehicle","relate");
x.t("vehicle","/entity");
x.t("vehicle","instances");
x.t("vehicle","entity");
x.t("extending","metadata");
x.t("nullok=","true");
x.t("occurred","messsage");
x.t("implementsentity","name=");
x.t("configuration","examples");
x.t("configuration","policy");
x.t("include","foreign");
x.t("include","entity");
x.t("instances","refreshed");
x.t("instances","remain");
x.t("instances","vehicle");
x.t("instances","policy");
x.t("keys","reside");
x.t("keys","important");
x.t("additional","demands");
x.t("graphs","policy");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("knows","new");
x.t("type=","retireable");
x.t("runs","policy");
x.t("page","error");
x.t("graph","claimentity_ext");
x.t("graph","array");
x.t("graph","suppose");
x.t("graph","thus");
x.t("graph","policy");
x.t("graph","links");
x.t("graph","modify");
x.t("symmetrical","link");
x.t("data","model");
x.t("examples","adding");
x.t("foreignkey","name=");
x.t("onetoone","fkentity=");
x.t("happens","claimentity_ext");
x.t("policy","contact");
x.t("policy","integration");
x.t("policy","refresh");
x.t("policy","graphs");
x.t("policy","graph");
x.t("policy","object");
x.t("reviewing","default");
x.t("children","parent");
x.t("described","example");
x.t("relinking","behavior");
x.t("entity","built-in");
x.t("entity","foreign");
x.t("entity","claimentity_ext");
x.t("entity","type");
x.t("entity","xmlns=");
x.t("entity","one-to-one");
x.t("entity","belongs");
x.t("entity","part");
x.t("entity","types");
x.t("entity","instances");
x.t("entity","policy");
x.t("turn","extend");
x.t("following","example");
x.t("model","changes");
x.t("system","relinks");
x.t("system","places");
x.t("links","claimentity_ext");
x.t("adding","new");
x.t("vehicles","arrayentity=");
x.t("modify","policy");
x.t("child","objects");
x.t("definitions","new");
x.t("behavior","policy");
x.t("var","text_val=eval");
x.t("comprise","policy");
x.t("contains","vehicle");
x.t("object","claim");
x.t("object","directionality");
}
