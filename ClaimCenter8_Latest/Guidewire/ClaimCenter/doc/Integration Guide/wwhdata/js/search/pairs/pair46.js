function FileData_Pairs(x)
{
x.t("arise","due");
x.t("example","testbase.assertequals");
x.t("example","integration");
x.t("example","uses");
x.t("example","shows");
x.t("example","test");
x.t("example","web");
x.t("example","write");
x.t("example","suppose");
x.t("example","simply");
x.t("example","class");
x.t("publishing","web");
x.t("gw.testharness.testbase","public");
x.t("gw.testharness.testbase","@soaplocaltest");
x.t("exist","production");
x.t("transactions","sure");
x.t("properties","integration");
x.t("properties","standard");
x.t("properties","graph");
x.t("userquery.getatmostonerow",".publicid");
x.t("just","directly");
x.t("just","call");
x.t("rather","just");
x.t("testbase.assertequals","r.homephone");
x.t("testbase.assertequals","r.workphone");
x.t("testbase.assertequals","message");
x.t("files","add");
x.t("annotation","tell");
x.t("annotation","means");
x.t("console","window");
x.t("within","plugin");
x.t("needs","contact");
x.t("homephone","r.homephone");
x.t("homephone","private");
x.t("integration","points");
x.t("integration","guide");
x.t("integration","point");
x.t("integration","code");
x.t("studio","select");
x.t("studio","package");
x.t("teardown","want");
x.t("built-in","utility");
x.t("commits","bundle");
x.t("contact","customer");
x.t("contact","name");
x.t("contact","up");
x.t("contact","var");
x.t("business","data");
x.t("create","new");
x.t("create","gosu");
x.t("refer","following");
x.t("related","soap");
x.t("myapi.addhandler","new");
x.t("always","detect");
x.t("instance","special");
x.t("once","need");
x.t("home","phone");
x.t("testmyserviceapi","var");
x.t("userquery","find");
x.t("performs","similar");
x.t("myapi.setuserphones","(outgoingphones)");
x.t("(outgoingphones)","//");
x.t("topic","important");
x.t("easy-to-read","code");
x.t("plugin","rules");
x.t("current","transaction");
x.t("questions","convert");
x.t("user","public");
x.t("user","==");
x.t("user","up.publicid");
x.t("user","no");
x.t("user","exists");
x.t("user","phone");
x.t("user","u.publicid");
x.t("user","sets");
x.t("user","function");
x.t("user","--");
x.t("user","case");
x.t("user","//");
x.t("user","var");
x.t("setter","methods");
x.t("dataconversionexception","user");
x.t("dataconversionexception","throws");
x.t("dataconversionexception","no");
x.t("outgoingphones.publicid","userpublicid");
x.t("homephone:home1","workphone:work1");
x.t("later","topic");
x.t("uses","gw.testharness.testbase");
x.t("uses","su");
x.t("uses","soap.local.entity.userphones");
x.t("uses","gw.api.webservice.exception.dataconversionexception");
x.t("uses","approach");
x.t("uses","gw.api.soap.gwauthenticationhandler");
x.t("uses","example.userphones");
x.t("shows","test");
x.t("(userpublicid)","print");
x.t("homephone:home2","workphone:work2");
x.t("text_val.select","link");
x.t("interface","add");
x.t("interface","test");
x.t("tell","gunit");
x.t("@gw.testharness.servertest","class");
x.t("errors","example");
x.t("potentially","exist");
x.t("support","true");
x.t("points","need");
x.t("necessary","properties");
x.t("basic","logic");
x.t("(bundles)","realistically");
x.t("type","refactoring");
x.t("customer","support");
x.t("delete","rpce");
x.t("hierarchy","web");
x.t("hierarchy","originally");
x.t("@webservice","annotation");
x.t("@webservice","class");
x.t("public","id");
x.t("public","function");
x.t("(r)","//");
x.t("external","system");
x.t("calls","server");
x.t("getter","setter");
x.t("userpublicid","userquery.getatmostonerow");
x.t("userpublicid","outgoingphones.homephone");
x.t("userpublicid","string");
x.t("userpublicid","print");
x.t("userpublicid",".getatmostonerow");
x.t("userpublicid","var");
x.t("r.homephone","home1");
x.t("r.homephone","home2");
x.t("r.homephone","print");
x.t("soap.local","objects");
x.t("soap.local","namespace");
x.t("however","connect");
x.t("deserializes","objects");
x.t("simpler","easy-to-read");
x.t("locally-hosted","soap");
x.t("convert","particular");
x.t("convert","existing");
x.t("apis","within");
x.t("apis","rpce");
x.t("apis","argument");
x.t("apis","plugins");
x.t("detect","reload");
x.t("guidewire","business");
x.t("property","example");
x.t("checks","user\u2019s");
x.t("rpce","soap");
x.t("rpce","web");
x.t("rpce","code");
x.t("link","directly");
x.t("new","instance");
x.t("new","dataconversionexception");
x.t("new","web");
x.t("new","soap.local.api.myserviceapi");
x.t("new","gwauthenticationhandler");
x.t("new","userphones");
x.t("objects","related");
x.t("objects","(entities)");
x.t("objects","large");
x.t("objects","soap");
x.t("objects","approach");
x.t("access","local");
x.t("want","even");
x.t("engine","production");
x.t("refactor","code");
x.t("speaking","design");
x.t("==","userpublicid");
x.t("==","su");
x.t("==","null");
x.t("c.workphone","up.workphone");
x.t("publish","following");
x.t("includes","soap.local");
x.t("up.publicid","user");
x.t("up.publicid","u.publicid");
x.t("up.publicid","//");
x.t("messsage","claimcenter");
x.t("places","gosu");
x.t("need","different");
x.t("need","transfer");
x.t("need","connect");
x.t("need","modify");
x.t("appropriately","serializes");
x.t("lets","actually");
x.t("again","refer");
x.t("again","namespace");
x.t("info","mytestclasstest");
x.t("unsupported","production");
x.t("add","@soaplocaltest");
x.t("add","modify");
x.t("endpoint","var");
x.t("complete","testing");
x.t("id","example");
x.t("id","property");
x.t("id","record");
x.t("id","load");
x.t("testing","rpce");
x.t("testing","unsupported");
x.t("testing","large");
x.t("testing","test");
x.t("testing","purposes");
x.t("guide","web");
x.t("api","places");
x.t("api","soap");
x.t("api","give");
x.t("api","hosted");
x.t("api","carefully");
x.t("api","reference");
x.t("api","using");
x.t("api","var");
x.t("api","server");
x.t("due","soap");
x.t("simple","web");
x.t("simple","class");
x.t("check","answer");
x.t("check","values");
x.t("results","higher");
x.t("(entities)","integration");
x.t(".publicid","print");
x.t("outgoingphones.homephone","home1");
x.t("outgoingphones.homephone","home2");
x.t("soap","interface");
x.t("soap","calls");
x.t("soap","apis");
x.t("soap","endpoint");
x.t("soap","api");
x.t("soap","instead");
x.t("soap","client");
x.t("soap","implementation");
x.t("soap","good");
x.t("soap","protocol");
x.t("22:28:09,017","info");
x.t("large","potentially");
x.t("large","guidewire");
x.t("large","real-world");
x.t("large","data");
x.t("large","object");
x.t("sure","test");
x.t("@throws","dataconversionexception");
x.t("throws","no");
x.t("directly","gosu");
x.t("directly","calling");
x.t("directly","page");
x.t("test","studio");
x.t("test","basic");
x.t("test","external");
x.t("test","soap");
x.t("test","large");
x.t("test","test");
x.t("test","requires");
x.t("test","gosu");
x.t("test","methods");
x.t("test","confirm");
x.t("test","issues");
x.t("test","assumptions");
x.t("test","bundle-related");
x.t("test","following");
x.t("test","using");
x.t("test","class");
x.t("soap.local.api","namespace");
x.t("requires","soap.local");
x.t("mytestclasstest","suite");
x.t("mytestclasstest","extends");
x.t("su","user");
x.t("su","gw");
x.t("su","var");
x.t("true","types");
x.t("up.workphone","gw.transaction.transaction.getcurrent");
x.t("up.workphone","u.contact.workphone");
x.t("text_val.focus","text_val.select");
x.t("name","phone");
x.t("name","service");
x.t("name","var");
x.t("test1","//");
x.t("wrong","san");
x.t("wrong","answer");
x.t("no","user");
x.t("no","valid");
x.t("gosu","need");
x.t("gosu","appropriately");
x.t("gosu","calling");
x.t("gosu","classes");
x.t("gosu","call");
x.t("gosu","using");
x.t("gosu","class");
x.t("performance","questions");
x.t("tasks","different");
x.t("tests","database");
x.t("part","package");
x.t("argument","types");
x.t("gunit","console");
x.t("gunit","test");
x.t("gunit","up");
x.t("avoid","calling");
x.t("avoid","case");
x.t("studio-registered","web");
x.t("custom","web");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("window","22:28:08,536");
x.t("window","19:37:44,725");
x.t("modifies","entity");
x.t("methods","least");
x.t("methods","probably");
x.t("methods","package");
x.t("exists","creds");
x.t("exists","publicid");
x.t("namespace","hierarchy");
x.t("namespace","objects");
x.t("namespace","testing");
x.t("namespace","find");
x.t("namespace","function");
x.t("namespace","otherwise");
x.t("namespace","warning");
x.t("find","user");
x.t("find","api");
x.t("up","new");
x.t("up","notice");
x.t("up","userphones");
x.t("up","c.homephone");
x.t("up","package");
x.t("standard","public");
x.t("soap.local.entity.userphones","uses");
x.t("web","services");
x.t("web","service");
x.t("confirm","integration");
x.t("confirm","works");
x.t("originally","defined");
x.t("gw","//");
x.t("phone","number");
x.t("phone","outgoingphones");
x.t("phone","work");
x.t("phone","numbers");
x.t("claimcenter","integration");
x.t("write","new");
x.t("write","gosu");
x.t("write","gunit");
x.t("write","web");
x.t("local","files");
x.t("local","soap");
x.t("local","web");
x.t("local","data");
x.t("local","loopback");
x.t("string","homephone");
x.t("string","string");
x.t("string","workphone");
x.t("string","publicid");
x.t("string","return");
x.t("string","userphones");
x.t("sets","objects");
x.t("sets","user\u2019s");
x.t("regarding","database");
x.t("entire","entity");
x.t("gw.transaction.transaction.getcurrent",".commit");
x.t("gw.transaction.transaction.getcurrent",".loadbypublicid");
x.t(".commit","function");
x.t("u.publicid","==");
x.t("u.publicid","up.homephone");
x.t("record","userpublicid");
x.t("record","default_data:1");
x.t("prints","gunit");
x.t("second","value");
x.t("user.credential","creds.username");
x.t("functions","compare");
x.t("workphone","write");
x.t("workphone","r.workphone");
x.t("gw.api.webservice.exception.dataconversionexception","@webservice");
x.t("error","occurred");
x.t("logic","code");
x.t("@soaplocaltest","annotation");
x.t("@soaplocaltest","@gw.testharness.servertest");
x.t("display","user-readable");
x.t("deployed","production");
x.t("point","needs");
x.t("point","structure");
x.t("point","pass");
x.t("notice","web");
x.t("suppose","publish");
x.t("suppose","simple");
x.t("give","print");
x.t("hosted","locally");
x.t("ws-i","web");
x.t("issues","arise");
x.t("means","local");
x.t("throw","new");
x.t("throw","wrong");
x.t("throw","exception");
x.t("throw","exceptions");
x.t("select","class");
x.t("connecting","external");
x.t("u.contact.homephone","up.workphone");
x.t("guidewire_selectall","var");
x.t("p1","string");
x.t("p1","write");
x.t("setup","ok");
x.t("number","create");
x.t(".loadbypublicid","user");
x.t(".loadbypublicid","var");
x.t("creds","user.credential");
x.t("function","testmyserviceapi");
x.t("function","test1");
x.t("function","web");
x.t("function","guidewire_selectall");
x.t("function","echoinputargs");
x.t("function","getuserphones");
x.t("function","setuserphones");
x.t("better","test");
x.t("approach","tests");
x.t("approach","information");
x.t("design","custom");
x.t("carefully","test");
x.t("share","namespace");
x.t("soap.local.api.myserviceapi","example");
x.t("soap.local.api.myserviceapi","myapi.addhandler");
x.t("particular","locally-hosted");
x.t("private","var");
x.t("_publicid","string");
x.t("_h","string");
x.t("different","types");
x.t("different","data");
x.t("instead","just");
x.t("instead","refactor");
x.t("instead","gw.transaction.transaction.getcurrent");
x.t("myapi","new");
x.t("myapi","soap.local.api.myserviceapi");
x.t("refactoring","results");
x.t("aware","objects");
x.t("publicid","up.publicid");
x.t("publicid","private");
x.t("work1","myapi.setuserphones");
x.t("work1","//");
x.t("types","example");
x.t("types","test");
x.t("types","tasks");
x.t("types","local");
x.t("types","return");
x.t("real-world","deployed");
x.t("r.workphone","testbase.assertequals");
x.t("r.workphone","work1");
x.t("r.workphone","work2");
x.t("work2","studio");
x.t("work2","myapi.setuserphones");
x.t("works","test");
x.t("works","expected");
x.t("calling","locally-hosted");
x.t("calling","rpce");
x.t("calling","implementation");
x.t("calling","server");
x.t("important","access");
x.t("important","test");
x.t("expected","important");
x.t("simply","uses");
x.t("code","example");
x.t("code","built-in");
x.t("code","api");
x.t("code","avoid");
x.t("code","confirm");
x.t("code","web");
x.t("code","ws-i");
x.t("code","works");
x.t("code","warning");
x.t("reference","call");
x.t("interactions","regarding");
x.t("client","extended");
x.t("client","java");
x.t("return","up");
x.t("return","p1");
x.t("return","types");
x.t("gwauthenticationhandler","su");
x.t("22:28:08,536","info");
x.t("database","transactions");
x.t("database","connecting");
x.t("database","transaction");
x.t("gw.api.soap.gwauthenticationhandler","uses");
x.t("gw.api.soap.gwauthenticationhandler","@soaplocaltest");
x.t("message","san");
x.t("extended","web");
x.t("least","once");
x.t("assumptions","interactions");
x.t("bundle","current");
x.t("bundle","type");
x.t("bundle","need");
x.t("bundle","var");
x.t("java","classes");
x.t("java","plugins");
x.t("home1","testbase.assertequals");
x.t("home1","outgoingphones.workphone");
x.t("19:37:44,725","info");
x.t("occurred","messsage");
x.t("existing","rpce");
x.t("rules","contact");
x.t("rules","engine");
x.t("reload","local");
x.t("null","throw");
x.t("home2","testbase.assertequals");
x.t("home2","outgoingphones.workphone");
x.t("workphone:work1","homephone:home2");
x.t("outgoingphones.workphone","work1");
x.t("outgoingphones.workphone","work2");
x.t("workphone:work2","19:37:47,369");
x.t("similar","function");
x.t("graphs","aware");
x.t("main","methods");
x.t("value","checks");
x.t("value","access");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("res","myserviceapi.mymethod");
x.t("myserviceapi.mymethod","however");
x.t("implementation","example");
x.t("implementation","classes");
x.t("regenerate","local");
x.t("san","francisco");
x.t("suite","teardown");
x.t("suite","setup");
x.t("writable","bundle");
x.t("--","note");
x.t("actually","call");
x.t("flattened","name");
x.t("extends","gw.testharness.testbase");
x.t("exception","wrong");
x.t("u.contact","==");
x.t("services","publishing");
x.t("services","gosu");
x.t("services","write");
x.t("services","share");
x.t("services","deprecated");
x.t("services","(rpce)");
x.t("services","call");
x.t("services","pass");
x.t("echoinputargs","p1");
x.t("francisco","complete");
x.t("francisco","22:28:09,017");
x.t("francisco","throw");
x.t("francisco","//");
x.t("user-readable","errors");
x.t("systems","careful");
x.t("valid","contact");
x.t("getuserphones","userpublicid");
x.t("read","bundle");
x.t("page","error");
x.t("good","testing");
x.t("regen-soap-local","again");
x.t("regen-soap-local","script");
x.t("script","regenerate");
x.t("myserviceapi","testing");
x.t("myserviceapi","@throws");
x.t("myserviceapi","function");
x.t("purposes","call");
x.t("transfer","subset");
x.t("outgoingphones","new");
x.t("outgoingphones","userphones");
x.t("19:37:47,369","info");
x.t("information","calling");
x.t("information","system");
x.t("data","commits");
x.t("data","objects");
x.t("data","phone");
x.t("data","sets");
x.t("data","instead");
x.t("data","types");
x.t("graph","pass");
x.t("_w","string");
x.t("example.userphones","uses");
x.t("production","code");
x.t("production","systems");
x.t("production","system");
x.t("defined","class");
x.t("probably","test");
x.t("answer","studio");
x.t("answer","api");
x.t("answer","throw");
x.t("utility","functions");
x.t("values","phone");
x.t("values","throw");
x.t("case","example");
x.t("case","su");
x.t("userphones","outgoingphones.publicid");
x.t("userphones","up.publicid");
x.t("userphones","private");
x.t("userphones","//");
x.t("userphones","var");
x.t("c.homephone","up.homephone");
x.t("deprecated","convert");
x.t("print","homephone");
x.t("print","(r)");
x.t("print","public");
x.t("print","workphone");
x.t("eventually","prints");
x.t("encapsulate","user");
x.t("structure","var");
x.t("default_data:1","homephone:home1");
x.t("protocol","rather");
x.t("protocol","better");
x.t("transaction","always");
x.t("transaction","management");
x.t("classes","calling");
x.t("classes","java");
x.t("classes","flattened");
x.t("classes","containing");
x.t("otherwise","gunit");
x.t("ok","public");
x.t("ok","san");
x.t("plugins","studio-registered");
x.t("plugins","rules");
x.t("subset","properties");
x.t("note","read");
x.t("two","main");
x.t("(rpce)","testing");
x.t("work","phone");
x.t("call","rpce");
x.t("call","api");
x.t("call","directly");
x.t("call","regen-soap-local");
x.t("call","gwcc");
x.t("call","var");
x.t("call","server");
x.t("package","example");
x.t("package","hierarchy");
x.t("bundle-related","code");
x.t("locally","modifies");
x.t("numbers","checks");
x.t("numbers","sets");
x.t("numbers","second");
x.t("numbers","package");
x.t("numbers","myapi.getuserphones");
x.t("service","@webservice");
x.t("service","getter");
x.t("service","soap.local");
x.t("service","api");
x.t("service","testing");
x.t("service","part");
x.t("service","implementation");
x.t("service","myserviceapi");
x.t("service","two");
x.t("service","call");
x.t("service","warning");
x.t("service","commit");
x.t("management","(bundles)");
x.t("special","integration");
x.t("special","soap.local.api");
x.t("following","example");
x.t("following","user");
x.t("following","simple");
x.t("following","code");
x.t("following","eventually");
x.t("run","test");
x.t("system","integration");
x.t("system","suppose");
x.t("system","important");
x.t("system","database");
x.t("system","generally");
x.t("entity","example");
x.t("entity","data");
x.t("warning","later");
x.t("warning","rpce");
x.t("warning","avoid");
x.t("connect","soap");
x.t("using","soap");
x.t("using","special");
x.t("using","class");
x.t("class","performs");
x.t("class","@webservice");
x.t("class","mytestclasstest");
x.t("class","test");
x.t("class","name");
x.t("class","myserviceapi");
x.t("class","userphones");
x.t("class","encapsulate");
x.t("class","run");
x.t("class","following");
x.t("class","containing");
x.t("realistically","information");
x.t("//","create");
x.t("//","user");
x.t("//","api");
x.t("//","check");
x.t("//","find");
x.t("//","instead");
x.t("//","data");
x.t("//","answer");
x.t("//","call");
x.t("//","associated");
x.t("myapi.echoinputargs","san");
x.t("containing","properties");
x.t("containing","necessary");
x.t("up.homephone","c.workphone");
x.t("up.homephone","u.contact.homephone");
x.t("u.contact.workphone","return");
x.t("myapi.getuserphones","(userpublicid)");
x.t("myapi.getuserphones","userpublicid");
x.t("serializes","deserializes");
x.t("compare","values");
x.t("loopback","soap");
x.t("pass","large");
x.t("pass","gosu");
x.t("pass","entire");
x.t("gwcc","regen-soap-local");
x.t("modify","user");
x.t("modify","delete");
x.t("setuserphones","up");
x.t("load","writable");
x.t("associated","contact");
x.t(".getatmostonerow","==");
x.t("var","userquery");
x.t("var","userpublicid");
x.t("var","text_val=eval");
x.t("var","find");
x.t("var","up");
x.t("var","gw.transaction.transaction.getcurrent");
x.t("var","_publicid");
x.t("var","_h");
x.t("var","myapi");
x.t("var","res");
x.t("var","u.contact");
x.t("var","outgoingphones");
x.t("var","_w");
x.t("var","userphones");
x.t("var","myapi.echoinputargs");
x.t("commit","bundle");
x.t("even","simpler");
x.t("exceptions","display");
x.t("careful","soap");
x.t("server","includes");
x.t("server","lets");
x.t("server","soap");
x.t("server","performance");
x.t("server","local");
x.t("server","client");
x.t("server","using");
x.t("higher","server");
x.t("object","graphs");
x.t("generally","speaking");
x.t("user\u2019s","home");
x.t("creds.username","==");
}
