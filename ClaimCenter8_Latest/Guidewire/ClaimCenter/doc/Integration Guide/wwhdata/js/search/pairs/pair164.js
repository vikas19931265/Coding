function FileData_Pairs(x)
{
x.t("supports","file-based");
x.t("example","plugin");
x.t("example","assumes");
x.t("example","file");
x.t("example","restart");
x.t("example","value");
x.t("registers","implementation");
x.t("creation","date");
x.t("parameter","key");
x.t("parameter","line");
x.t("parameter","inbound-integration-config.xml");
x.t("parameter","file");
x.t("parameter","examplefileintegration");
x.t("parameter","soon");
x.t("parameter","processingmode");
x.t("parameter","configuration");
x.t("parameter","value");
x.t("parameter","mentioned");
x.t("parameter","understanding");
x.t("parameter","subelements");
x.t("polling","interval");
x.t("polling","algorithm");
x.t("method","downcast");
x.t("method","process");
x.t("method","called");
x.t("method","returns");
x.t("construct","print");
x.t("moves","found");
x.t("moves","file");
x.t("defines","type");
x.t("detected","polling");
x.t("pattern","file");
x.t("just","skips");
x.t("inbound","files");
x.t("inbound","integration");
x.t("inbound","integrations");
x.t("inbound","file");
x.t("inbound","event");
x.t("files","detected");
x.t("files","last");
x.t("files","handled");
x.t("files","time");
x.t("files","parallel");
x.t("files","outside");
x.t("files","progress");
x.t("files","processing");
x.t("files","directory");
x.t("files","already");
x.t("files","incoming");
x.t("files","created");
x.t("files","/tmp/incoming");
x.t("full","path");
x.t("within","plugins");
x.t("implement","plugin");
x.t("console","startup");
x.t("integration","example");
x.t("integration","inbound");
x.t("integration","10");
x.t("integration","11");
x.t("integration","12");
x.t("integration","interface");
x.t("integration","calls");
x.t("integration","element");
x.t("integration","guide");
x.t("integration","follows");
x.t("integration","handler");
x.t("integration","handles");
x.t("integration","claimcenter");
x.t("integration","error");
x.t("integration","function");
x.t("integration","code");
x.t("integration","click");
x.t("integration","project");
x.t("integration","configuration");
x.t("integration","work");
x.t("integration","operate");
x.t("integration","used");
x.t("integration","following");
x.t("integration","waits");
x.t("built-in","implementation");
x.t("studio","within");
x.t("studio","prompts");
x.t("studio","add");
x.t("create","inbound");
x.t("create","integration");
x.t("description","example");
x.t("inboundintegrationhandlerplugin","plugin");
x.t("inboundintegrationhandlerplugin","gosu");
x.t("inboundintegrationhandlerplugin","important");
x.t("inboundintegrationhandlerplugin","//");
x.t("related","information");
x.t("required","full");
x.t("required","description");
x.t("required","always");
x.t("required","true");
x.t("required","name");
x.t("required","unique");
x.t("required","java");
x.t("required","process");
x.t("always","false");
x.t("always","true");
x.t("events","directory");
x.t("key","integrationservice");
x.t("10","write");
x.t("disabled=","true");
x.t("skips","item");
x.t("11","add");
x.t("name=","examplefileintegration");
x.t("charset","utf-8");
x.t("plugin","parameter");
x.t("plugin","interface");
x.t("plugin","initialized");
x.t("plugin","true");
x.t("plugin","name");
x.t("plugin","implementations");
x.t("plugin","initializes");
x.t("plugin","code");
x.t("plugin","java");
x.t("plugin","implementation");
x.t("plugin","registry");
x.t("creates","new");
x.t("integrations","create");
x.t("integrations","configuration");
x.t("12","start");
x.t("/incoming","processing");
x.t("last","time");
x.t("until","plugin");
x.t("until","next");
x.t("line","console");
x.t("line","time");
x.t("line","downcast");
x.t("line","file");
x.t("line","handler");
x.t("line","threadpool");
x.t("line","claimcenter");
x.t("line","entire");
x.t("line","/processingmode");
x.t("line","obj");
x.t("line","mentioned");
x.t("later","section");
x.t("handled","single");
x.t("field","type");
x.t("field","match");
x.t("uses","gw.plugin.integration.inbound.inboundintegrationhandlerplugin");
x.t("text_val.select","link");
x.t("interface","supports");
x.t("interface","method");
x.t("interface","field");
x.t("interface","name");
x.t("interface","gw.plugin.integration.inbound.inboundintegrationhandlerplugin");
x.t("interface","note");
x.t("configurable","inbound");
x.t("register","inboundintegrationhandlerplugin");
x.t("register","handler");
x.t("errors","notify");
x.t("administrator","studio");
x.t("administrator","true");
x.t("prompts","plugin");
x.t("type","file-integration");
x.t("type","depends");
x.t("type","inboundintegrationplugin");
x.t("type","com.guidewire.pl.integration.inbound.file.defaultfileinboundintegrationplugin");
x.t("type","unique");
x.t("type","data");
x.t("type","object");
x.t("batch","files");
x.t("15","throttleinterval");
x.t("15","ordered");
x.t("response","inbound");
x.t("time","line");
x.t("time","utilities");
x.t("time","file");
x.t("time","parallel");
x.t("time","handler");
x.t("time","error");
x.t("time","interval");
x.t("time","checked");
x.t("osgiservice","required");
x.t("osgiservice","true");
x.t("/tmp/inbound/done","error");
x.t("throttleinterval","optional");
x.t("throttleinterval","/throttleinterval");
x.t("calls","method");
x.t("down","initialization");
x.t("multiple","files");
x.t("multiple","server");
x.t("back","incoming");
x.t("default","inbound");
x.t("default","false");
x.t("default","utf-8");
x.t("default","60");
x.t("file-integration","follow");
x.t("createdirectories","true");
x.t("assumes","inbound-integration-config.xml");
x.t("needed","string");
x.t("inboundfileintegrationhandler.gwp","registers");
x.t("link","directly");
x.t("new","files");
x.t("new","inbound");
x.t("new","file");
x.t("new",".gwp");
x.t("inbound-integration-config.xml","integration");
x.t("inbound-integration-config.xml","file");
x.t("inbound-integration-config.xml","configure");
x.t("prefix","includes");
x.t("element","construct");
x.t("element","type");
x.t("element","name");
x.t("pollinginterval","/pollinginterval");
x.t("pollinginterval","optional");
x.t("want","files");
x.t("single","argument");
x.t("single","thread");
x.t("start","up");
x.t("start","server");
x.t("includes","built-in");
x.t("includes","time");
x.t("downcast","needed");
x.t("downcast","string");
x.t("downcast","java.io.file");
x.t("downcast","object");
x.t("file","defines");
x.t("file","inbound");
x.t("file","integration");
x.t("file","related");
x.t("file","time");
x.t("file","downcast");
x.t("file","specified");
x.t("file","name");
x.t("file","handler");
x.t("file","claimcenter");
x.t("file","thread");
x.t("file","error");
x.t("file","processing");
x.t("file","cii:file-integration");
x.t("file","value");
x.t("file","data");
x.t("file","done");
x.t("file","plugins");
x.t("file","correctly");
x.t("file","package");
x.t("file","system");
x.t("file","using");
x.t("file","//");
x.t("file","{line}");
x.t("messsage","claimcenter");
x.t("initialization","processed");
x.t("again","order");
x.t("found","files");
x.t("utilities","example");
x.t("list","inbound");
x.t("list","integrations");
x.t("/tmp/processing","/processing");
x.t("add","files");
x.t("add","plugin");
x.t("add","prefix");
x.t("add","new");
x.t("add","inbound-integration-config.xml");
x.t("add","row");
x.t("add","java");
x.t("add","instances");
x.t("during","processing");
x.t("complete","file");
x.t("parallel","related");
x.t("parallel","multiple");
x.t("/pollinginterval","throttleinterval");
x.t("/threadpool","ordered");
x.t("/tmp/error","/error");
x.t("guide","studio");
x.t("guide","interface");
x.t("guide","plugins");
x.t("initialized","files");
x.t("initialized","move");
x.t("1864733246512.error.abc.txt","successfully");
x.t("simple","handler");
x.t("navigate","configuration");
x.t("configuring","list");
x.t("false","studio");
x.t("false","false");
x.t("false","/stoponerror");
x.t("false","stoponerror");
x.t("false","/transactional");
x.t("false","warning");
x.t("sure","log");
x.t("registering","plugin");
x.t("depends","value");
x.t("inboundfileintegration.gwp","registers");
x.t("directly","page");
x.t("specified","interval");
x.t("specified","character");
x.t("specified","incoming");
x.t("detects","new");
x.t("processed","example");
x.t("processed","line");
x.t("processed","unit");
x.t("processed","process");
x.t("true","default");
x.t("true","/ordered");
x.t("true","/createdirectories");
x.t("true","claimcenter");
x.t("true","internal");
x.t("true","pluginhandler");
x.t("true","transactional");
x.t("true","incoming");
x.t("true","/osgiservice");
x.t("test","new");
x.t("examplefileintegration","disabled=");
x.t("examplefileintegration","inboundfileintegrationhandler.gwp");
x.t("examplefileintegration","start");
x.t("text_val.focus","text_val.select");
x.t("wait","until");
x.t("outside","incoming");
x.t("name","integration");
x.t("name","inboundintegrationhandlerplugin");
x.t("name","plugin");
x.t("name","field");
x.t("name","name");
x.t("name","changed");
x.t("name","thread");
x.t("name","inboundfileintegrationexample");
x.t("name","represents");
x.t("name","disabled");
x.t("name",".gwp");
x.t("name","similar");
x.t("name","implementation");
x.t("name","plugins");
x.t("name","abc.txt");
x.t("path","configured");
x.t("no","value");
x.t("follows","response");
x.t("follows","file");
x.t("existed","wait");
x.t("handler","plugin");
x.t("handler","string");
x.t("handler","code");
x.t("handler","java.io.file");
x.t("handler","class");
x.t("changed","add");
x.t("gosu","java");
x.t("gosu","class");
x.t("handles","multiple");
x.t("argument","type");
x.t("soon","add");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("dispatches","handler");
x.t("window","navigate");
x.t("parameters","required");
x.t("plus","symbol");
x.t("/ordered","stoponerror");
x.t("/processing","error");
x.t("/createdirectories","following");
x.t("restart","server");
x.t("sends","line");
x.t("sends","entire");
x.t("namespace","element");
x.t("implementations","first");
x.t("up","server");
x.t("inboundintegrationplugin","plugin");
x.t("inboundintegrationplugin","click");
x.t("processingmode","parameter");
x.t("processingmode","required");
x.t("processingmode","line");
x.t("processingmode","element");
x.t("threadpool","required");
x.t("threadpool","gw_default");
x.t("osgi","plugin");
x.t("claimcenter","just");
x.t("claimcenter","moves");
x.t("claimcenter","integration");
x.t("claimcenter","includes");
x.t("claimcenter","sends");
x.t("claimcenter","stops");
x.t("local","file");
x.t("string","java.io.file");
x.t("string","process");
x.t("string","print");
x.t("string","using");
x.t("string","object");
x.t("entire","file");
x.t("com.guidewire.pl.integration.inbound.file.defaultfileinboundintegrationplugin","add");
x.t("com.guidewire.pl.integration.inbound.file.defaultfileinboundintegrationplugin","integrationservice");
x.t("write","inbound");
x.t("lines","file");
x.t("lines","processed");
x.t("sets","line");
x.t("input","high-performance");
x.t("flow","file");
x.t("rely","order");
x.t("repeats","process");
x.t("thread","sequentially");
x.t("thread","pools");
x.t("thread","pool");
x.t("earlier","file");
x.t("earlier","add");
x.t("/stoponerror","transactional");
x.t("prints","lines");
x.t("progress","inbound");
x.t("recent","batch");
x.t("error","required");
x.t("error","events");
x.t("error","/tmp/error");
x.t("error","occurs");
x.t("error","directory");
x.t("error","occurred");
x.t("error","renamed");
x.t("error","expressed");
x.t("polls","algorithm");
x.t("polls","incoming");
x.t("undefined","rely");
x.t("config","integration");
x.t("configured","earlier");
x.t("configured","error");
x.t("configured","processing");
x.t("configured","done");
x.t("configured","incoming");
x.t("independent","whether");
x.t("/tmp/inbound/processing","done");
x.t("throttle","interval");
x.t("next","polling");
x.t("inboundfileintegrationexample","processingmode");
x.t("occurs","otherwise");
x.t("unit","work");
x.t("throw","exception");
x.t("first","phrase");
x.t("guidewire_selectall","var");
x.t("processing","required");
x.t("processing","events");
x.t("processing","plugin");
x.t("processing","line");
x.t("processing","/tmp/processing");
x.t("processing","complete");
x.t("processing","flow");
x.t("processing","cannot");
x.t("processing","directory");
x.t("processing","individual");
x.t("processing","//");
x.t("initializes","processed");
x.t("stops","integration");
x.t("notify","administrator");
x.t("/processingmode","incoming");
x.t("function","guidewire_selectall");
x.t("function","process");
x.t("implements","inboundintegrationhandlerplugin");
x.t("high-performance","multi-threaded");
x.t("cannot","modify");
x.t("move","files");
x.t("particular","order");
x.t("reads","unit");
x.t("xml/xsd","namespace");
x.t("unique","name");
x.t("whether","choose");
x.t("editor","gosu");
x.t("editor","configuration");
x.t("represents","purpose");
x.t("stores","inbound");
x.t("step","inbound");
x.t("step","create");
x.t("step","optionally");
x.t("row","plugins");
x.t("directory","files");
x.t("directory","plugin");
x.t("directory","until");
x.t("directory","/tmp/inbound/done");
x.t("directory","back");
x.t("directory","again");
x.t("directory","file");
x.t("directory","specified");
x.t("directory","name");
x.t("directory","local");
x.t("directory","undefined");
x.t("directory","/tmp/inbound/processing");
x.t("directory","stores");
x.t("directory","/tmp/inbound/error");
x.t("directory","additional");
x.t("directory","note");
x.t("directory","startup");
x.t("directory","/tmp/inbound/incoming");
x.t("opens","new");
x.t("returned","java");
x.t("section","inbound");
x.t("internal","value");
x.t("match","pluginhandler");
x.t("important","files");
x.t("important","within");
x.t("purpose","specific");
x.t("code","moves");
x.t("code","implement");
x.t("code","studio");
x.t("code","creates");
x.t("code","processingmode");
x.t("code","claimcenter");
x.t("code","repeats");
x.t("code","polls");
x.t("code","reads");
x.t("code","opens");
x.t("follow","pattern");
x.t("/tmp/inbound/error","pollinginterval");
x.t("disabled","attributes");
x.t(".gwp","file");
x.t("sequentially","value");
x.t("override","function");
x.t("successfully","reading");
x.t("pools","thread");
x.t("stoponerror","parameter");
x.t("stoponerror","required");
x.t("stoponerror","false");
x.t("/charset","createdirectories");
x.t("event","integration");
x.t("java.io.file","line");
x.t("java.io.file","depending");
x.t("java.io.file","using");
x.t("java.io.file","object");
x.t("java","plugin");
x.t("java","time");
x.t("java","osgi");
x.t("java","class");
x.t("click","inbound-integration-config.xml");
x.t("click","plus");
x.t("occurred","messsage");
x.t("project","window");
x.t("obj","string");
x.t("obj","object");
x.t("instances","integration");
x.t("configuration","parameter");
x.t("configuration","inbound-integration-config.xml");
x.t("configuration","list");
x.t("configuration","file");
x.t("configuration","guide");
x.t("configuration","parameters");
x.t("configuration","config");
x.t("configuration","gw_default");
x.t("cii:file-integration","name=");
x.t("/pluginhandler","pollinginterval");
x.t("interval","default");
x.t("interval","false");
x.t("interval","detects");
x.t("interval","repeats");
x.t("interval","throttle");
x.t("interval","step");
x.t("interval","ordered");
x.t("interval","seconds");
x.t("value","line");
x.t("value","type");
x.t("value","file");
x.t("value","true");
x.t("value","processingmode");
x.t("value","independent");
x.t("value","pluginhandler");
x.t("similar","1864733246512.error.abc.txt");
x.t("interacts","polling");
x.t("interacts","throttle");
x.t("integrationservice","plugin");
x.t("integrationservice","value");
x.t("/tmp/done","/done");
x.t("additional","lines");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","inboundintegrationhandlerplugin");
x.t("implementation","name");
x.t("implementation","handler");
x.t("implementation","inboundintegrationplugin");
x.t("implementation","code");
x.t("implementation","choose");
x.t("implementation","class");
x.t("implementation","inboundfileintegrationplugin");
x.t("already","existed");
x.t("specific","inbound");
x.t("depending","var");
x.t("shuts","down");
x.t("process","method");
x.t("process","files");
x.t("process","line");
x.t("process","single");
x.t("process","file");
x.t("process","step");
x.t("process","obj");
x.t("process","chunk");
x.t("exception","code");
x.t("page","error");
x.t("pluginhandler","parameter");
x.t("pluginhandler","required");
x.t("pluginhandler","inboundfileintegrationhandler");
x.t("registry","register");
x.t("registry","add");
x.t("registry","inboundfileintegration.gwp");
x.t("registry","handler");
x.t("registry","editor");
x.t("registry","implementation");
x.t("registry","two");
x.t("data","type");
x.t("data","processed");
x.t("data","dispatches");
x.t("data","processing");
x.t("data","data");
x.t("information","registering");
x.t("information","ordered");
x.t("configure","thread");
x.t("optional","time");
x.t("optional","default");
x.t("/transactional","osgiservice");
x.t("mycompany.integration.simplefileintegration","prints");
x.t("mycompany.integration.simplefileintegration","integrationservice");
x.t("gw.plugin.integration.inbound.inboundintegrationhandlerplugin","interface");
x.t("gw.plugin.integration.inbound.inboundintegrationhandlerplugin","class");
x.t("alphabetic","creation");
x.t("character","default");
x.t("ordered","parameter");
x.t("ordered","true");
x.t("ordered","optional");
x.t("described","configuring");
x.t("choose","register");
x.t("choose","add");
x.t("called","process");
x.t("called","mycompany.integration.simplefileintegration");
x.t("inboundfileintegrationhandler","/pluginhandler");
x.t("/done","charset");
x.t("print","simplefileintegration");
x.t("plugins","registry");
x.t("plugins","multi-threaded");
x.t("date","inbound");
x.t("date","understanding");
x.t("milliseconds","returned");
x.t("done","required");
x.t("done","events");
x.t("done","directory");
x.t("done","/tmp/done");
x.t("note",".gwp");
x.t("note","stoponerror");
x.t("otherwise","skips");
x.t("otherwise","claimcenter");
x.t("two","plugin");
x.t("work","parameter");
x.t("work","file");
x.t("work","chunk");
x.t("optionally","integration");
x.t("mentioned","later");
x.t("mentioned","earlier");
x.t("correctly","xml/xsd");
x.t("transactional","required");
x.t("transactional","false");
x.t("algorithm","interacts");
x.t("mycompany.integration","uses");
x.t("startup","processed");
x.t("startup","override");
x.t("startup","simplefileintegration");
x.t("startup","server");
x.t("file-based","input");
x.t("incoming","required");
x.t("incoming","events");
x.t("incoming","directory");
x.t("incoming","/tmp/incoming");
x.t("created","server");
x.t("order","processing");
x.t("order","particular");
x.t("order","alphabetic");
x.t("utf-8","configurable");
x.t("utf-8","/charset");
x.t("renamed","error");
x.t("operate","recent");
x.t("package","mycompany.integration");
x.t("multi-threaded","inbound");
x.t("multi-threaded","processing");
x.t("system","inbound");
x.t("individual","files");
x.t("chunk","data");
x.t("used","inbound-integration-config.xml");
x.t("following","example");
x.t("following","simple");
x.t("/error","done");
x.t("starts","add");
x.t("using","specified");
x.t("using","processingmode");
x.t("using","throw");
x.t("using","plugins");
x.t("class","field");
x.t("class","add");
x.t("class","registering");
x.t("class","name");
x.t("class","osgi");
x.t("class","com.guidewire.pl.integration.inbound.file.defaultfileinboundintegrationplugin");
x.t("class","process");
x.t("class","mycompany.integration.simplefileintegration");
x.t("class","called");
x.t("class","using");
x.t("class","simplefileintegration");
x.t("gw_default","osgiservice");
x.t("gw_default","/threadpool");
x.t("understanding","polling");
x.t("warning","order");
x.t("symbol","add");
x.t("/throttleinterval","threadpool");
x.t("//","example");
x.t("//","downcast");
x.t("//","processingmode");
x.t("//","sets");
x.t("inboundfileintegrationplugin","required");
x.t("expressed","milliseconds");
x.t("returns","no");
x.t("modify","plugin");
x.t("occur","during");
x.t("abc.txt","error");
x.t("waits","until");
x.t("{line}","example");
x.t("var","line");
x.t("var","text_val=eval");
x.t("/tmp/inbound/incoming","processing");
x.t("exceptions","occur");
x.t("reading","processing");
x.t("pool","configured");
x.t("pool","configuration");
x.t("log","line");
x.t("log","errors");
x.t("60","seconds");
x.t("/osgiservice","processingmode");
x.t("simplefileintegration","processing");
x.t("simplefileintegration","implements");
x.t("simplefileintegration","startup");
x.t("checked","important");
x.t("server","files");
x.t("server","test");
x.t("server","shuts");
x.t("server","starts");
x.t("server","log");
x.t("server","threads");
x.t("object","parameter");
x.t("object","method");
x.t("object","string");
x.t("object","java.io.file");
x.t("object","//");
x.t("object","exceptions");
x.t("attributes","described");
x.t("subelements","follows");
x.t("item","sure");
x.t("seconds","polling");
x.t("seconds","15");
x.t("seconds","polls");
x.t("threads","want");
x.t("/tmp/incoming","/incoming");
x.t("/tmp/incoming","directory");
x.t("phrase","name");
}
