function FileData_Pairs(x)
{
x.t("interfaces","initializableplugin");
x.t("interfaces","write");
x.t("interfaces","gw.api.integration.inbound");
x.t("passed","setup");
x.t("complex","part");
x.t("preparing","work");
x.t("supports","unordered");
x.t("supports","optional");
x.t("supports","transactional");
x.t("findwork","method");
x.t("findwork","define");
x.t("happen","time");
x.t("example","inbound");
x.t("example","plugin");
x.t("example","store");
x.t("example","may");
x.t("example","value");
x.t("administrators","place");
x.t("method","example");
x.t("method","method");
x.t("method","within");
x.t("method","implement");
x.t("method","responsible");
x.t("method","start");
x.t("method","signature");
x.t("method","passes");
x.t("method","includes");
x.t("method","logged");
x.t("method","declare");
x.t("method","stop");
x.t("method","argument");
x.t("method","parameters");
x.t("method","claimcenter");
x.t("method","appears");
x.t("method","processing");
x.t("method","initializes");
x.t("method","may");
x.t("method","release");
x.t("method","return");
x.t("method","ensure");
x.t("method","main");
x.t("method","process");
x.t("method","takes");
x.t("method","called");
x.t("method","workagent");
x.t("method","otherwise");
x.t("method","transactional");
x.t("method","work");
x.t("method","returns");
x.t("method","workdataset");
x.t("method","hasnext");
x.t("polling","interval");
x.t("polling","process");
x.t("polling","algorithm");
x.t("properties","java.util.map");
x.t("transactions","rollback");
x.t("transactions","three");
x.t("transactions","commit");
x.t("workdataset.getdata","method");
x.t("parameter","key");
x.t("parameter","unused");
x.t("parameter","values");
x.t("parameter","called");
x.t("parameter","fully-qualified");
x.t("parameter","used");
x.t("parameter","class");
x.t("parameter","understanding");
x.t("parameter","subelements");
x.t("defines","methods");
x.t("defines","several");
x.t("defines","two");
x.t("rather","method");
x.t("pattern","file");
x.t("just","skips");
x.t("inbound","inbound");
x.t("inbound","integration");
x.t("inbound","integrations");
x.t("inbound","interface");
x.t("inbound","property");
x.t("inbound","file");
x.t("inbound","main");
x.t("inbound","class");
x.t("needs","write");
x.t("implement","teardown");
x.t("implement","plugin");
x.t("implement","begin");
x.t("implement","subinterface");
x.t("implement","factory");
x.t("implement","workagent");
x.t("implement","following");
x.t("implement","class");
x.t("within","plugins");
x.t("within","work");
x.t("within","workdata");
x.t("within","object");
x.t("files","file");
x.t("files","incoming");
x.t("files","workdata");
x.t("integration","create");
x.t("integration","listens");
x.t("integration","creates");
x.t("integration","12");
x.t("integration","interface");
x.t("integration","element");
x.t("integration","installing");
x.t("integration","guide");
x.t("integration","writing");
x.t("integration","framework");
x.t("integration","custom");
x.t("integration","error");
x.t("integration","design");
x.t("integration","important");
x.t("integration","return");
x.t("integration","listening");
x.t("integration","click");
x.t("integration","save");
x.t("integration","based");
x.t("integration","work");
x.t("integration","workdata");
x.t("integration","used");
x.t("built-in","inbound");
x.t("built-in","integrations");
x.t("studio","within");
x.t("studio","prompts");
x.t("studio","plugins");
x.t("refer","following");
x.t("table","summary");
x.t("description","example");
x.t("description","required");
x.t("description","work");
x.t("teardown","method");
x.t("teardown","setup");
x.t("teardown","work");
x.t("create","integration");
x.t("create","register");
x.t("create","implements");
x.t("create","implementation");
x.t("create","work");
x.t("create","class");
x.t("custom-integration","follow");
x.t("alternate","key");
x.t("related","information");
x.t("related","classes");
x.t("divide","resources");
x.t("factory.createworkunit","return");
x.t("instance","custom");
x.t("instance","transactionalworksetprocessor");
x.t("instance","class");
x.t("variables","plugin");
x.t("variables","necessary");
x.t("required","parameter");
x.t("required","description");
x.t("required","true");
x.t("required","implementation");
x.t("always","boolean");
x.t("key","key1");
x.t("key","value");
x.t("key","integrationservice");
x.t("10","java");
x.t("summary","class");
x.t("void","setup");
x.t("arguments","type");
x.t("arguments","returns");
x.t("responsible","instantiating");
x.t("responsible","populating");
x.t("responsible","management");
x.t("rollback","rollback");
x.t("rollback","changes");
x.t("rollback","occur");
x.t("listens","message");
x.t("skips","item");
x.t("flag","interacts");
x.t("11","add");
x.t("integrations","parameter");
x.t("integrations","create");
x.t("integrations","serve");
x.t("integrations","custom");
x.t("integrations","claimcenter");
x.t("integrations","function");
x.t("integrations","n/a");
x.t("integrations","configuration");
x.t("integrations","file-based");
x.t("plugin","supports");
x.t("plugin","method");
x.t("plugin","parameter");
x.t("plugin","implement");
x.t("plugin","10");
x.t("plugin","interface");
x.t("plugin","implementation\u2019s");
x.t("plugin","top");
x.t("plugin","name");
x.t("plugin","parameters");
x.t("plugin","types");
x.t("plugin","implementation");
x.t("plugin","restarted");
x.t("plugin","workagent");
x.t("creates","work");
x.t("unprocessed","items");
x.t("12","start");
x.t("coordinate","work");
x.t("until","plugin");
x.t("skipped","warning");
x.t("/value","/parameters");
x.t("field","type");
x.t("text_val.select","link");
x.t("serve","needs");
x.t("interface","findwork");
x.t("interface","method");
x.t("interface","defines");
x.t("interface","inbound");
x.t("interface","description");
x.t("interface","plugin");
x.t("interface","field");
x.t("interface","gw.plugin.integration.inbound.inboundintegrationplugin");
x.t("interface","add");
x.t("interface","requires");
x.t("interface","no");
x.t("interface","name");
x.t("interface","addition");
x.t("interface","setup");
x.t("interface","worksetprocessor");
x.t("interface","subinterface");
x.t("interface","java");
x.t("interface","marker");
x.t("interface","factory");
x.t("interface","additional");
x.t("interface","extends");
x.t("interface","defined");
x.t("interface","agent");
x.t("interface","workdata");
x.t("interface","class");
x.t("interface","workdataset");
x.t("register","plugin");
x.t("register","new");
x.t("necessary","initialization");
x.t("necessary","store");
x.t("necessary","logic");
x.t("necessary","process");
x.t("necessary","context");
x.t("necessary","transactional");
x.t("roll","back");
x.t("transaction-specific","information");
x.t("errors","notify");
x.t("administrator","true");
x.t("prompts","plugin");
x.t("gw.plugin.integration.inbound.inboundintegrationplugin","important");
x.t("acquire","divide");
x.t("listener","perform");
x.t("basic","worksetprocessor");
x.t("type","inbound");
x.t("type","custom-integration");
x.t("type","inboundintegrationplugin");
x.t("type","unique");
x.t("type","fully-qualified");
x.t("type","workcontext");
x.t("type","txcontext");
x.t("close","close");
x.t("close","release");
x.t("calls","findwork");
x.t("calls","teardown");
x.t("calls","plugin");
x.t("calls","setup");
x.t("public","void");
x.t("time","start");
x.t("time","interval");
x.t("getter","inbound");
x.t("getter","data");
x.t("non-null","value");
x.t("throttleinterval","optional");
x.t("initializableplugin","interface");
x.t("multiple","related");
x.t("multiple","work");
x.t("multiple","threads");
x.t("connection","queue");
x.t("connection","information");
x.t("back","setrollbackonly");
x.t("back","transactional");
x.t("encapsulated","workdataset");
x.t("property","method");
x.t("property","rather");
x.t("queue","store");
x.t("queue","error");
x.t("queue","information");
x.t("default","60");
x.t("link","directly");
x.t("jms","integrations");
x.t("jms","messages");
x.t("want","perform");
x.t("new","files");
x.t("new","inbound");
x.t("new","file");
x.t("new","custom");
x.t("new",".gwp");
x.t("new","message");
x.t("new","data");
x.t("new","work");
x.t("objects","necessary");
x.t("start","method");
x.t("start","start");
x.t("start","stop");
x.t("start","work");
x.t("start","server");
x.t("signature","public");
x.t("items","example");
x.t("items","method");
x.t("items","plugin");
x.t("items","multiple");
x.t("items","slightly");
x.t("items","process");
x.t("items","otherwise");
x.t("items","transactional");
x.t("getting","new");
x.t("getting","parameters");
x.t("access","connection");
x.t("single","argument");
x.t("single","thread");
x.t("getdata","method");
x.t("getdata","next");
x.t("inbound-integration-config.xml","integration");
x.t("inbound-integration-config.xml","file");
x.t("inbound-integration-config.xml","configure");
x.t("element","parameter");
x.t("element","type");
x.t("element","name");
x.t("implementation\u2019s","transactional");
x.t("pollinginterval","optional");
x.t("includes","built-in");
x.t("includes","parameters");
x.t("includes","arbitrary");
x.t("passes","plugin");
x.t("passes","initialization");
x.t("top","level");
x.t("/parameters","studio");
x.t("messsage","claimcenter");
x.t("found","polling");
x.t("initialization","happen");
x.t("initialization","method");
x.t("file","integration");
x.t("file","related");
x.t("file","jms");
x.t("file","thread");
x.t("file","process");
x.t("file","separate");
x.t("file","correctly");
x.t("list","files");
x.t("list","inbound");
x.t("list","integrations");
x.t("list","new");
x.t("list","newly-added");
x.t("need","example");
x.t("need","notify");
x.t("indicates","transaction");
x.t("complete","work");
x.t("during","polling");
x.t("add","plugin");
x.t("add","new");
x.t("add","java");
x.t("add","object");
x.t("installing","new");
x.t("guide","studio");
x.t("guide","writing");
x.t("guide","plugins");
x.t("logged","item");
x.t("iterator","maintain");
x.t("false","true");
x.t("false","words");
x.t("false","process");
x.t("false","work");
x.t("navigate","configuration");
x.t("configuring","list");
x.t("sure","log");
x.t("registering","plugin");
x.t("directly","page");
x.t("requires","method");
x.t("requires","two");
x.t("writing","custom");
x.t("writing","work");
x.t("processor","worksetprocessor");
x.t("processor","actual");
x.t("processor","class");
x.t("declare","resource");
x.t("declare","whether");
x.t("true","unprocessed");
x.t("true","pollinginterval");
x.t("true","threadpool");
x.t("true","claimcenter");
x.t("true","getcontext");
x.t("true","process");
x.t("true","ordered");
x.t("true","transactional");
x.t("handle","error");
x.t("setrollbackonly","boolean");
x.t("defaults","false");
x.t("test","new");
x.t("text_val.focus","text_val.select");
x.t("no","arguments");
x.t("no","items");
x.t("no","methods");
x.t("creating","work");
x.t("maintain","forward");
x.t("forward","item");
x.t("name","integration");
x.t("name","plugin");
x.t("name","name");
x.t("name","inboundintegrationplugin");
x.t("name","thread");
x.t("name","represents");
x.t("name","disabled");
x.t("gosu","method");
x.t("gosu","plugin");
x.t("gosu","getdata");
x.t("gosu","project");
x.t("gosu","mycompany.integ.myinboundplugin");
x.t("framework","complex");
x.t("framework","calls");
x.t("acquired","start");
x.t("acquired","work");
x.t("stop","method");
x.t("stop","plugin");
x.t("stop","perform");
x.t("stop","methods");
x.t("stop","processing");
x.t("stop","work");
x.t("follows","plugin");
x.t("custom","inbound");
x.t("custom","implementation");
x.t("custom","class");
x.t("part","writing");
x.t("perform","necessary");
x.t("perform","logging");
x.t("logging","help");
x.t("argument","plugin");
x.t("argument","type");
x.t("argument","setup");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("parameters","passed");
x.t("parameters","studio");
x.t("parameters","key");
x.t("parameters","plugin");
x.t("parameters","inbound-integration-config.xml");
x.t("parameters","installing");
x.t("parameters","parameters");
x.t("parameters","map");
x.t("parameters","java.util.map");
x.t("parameters","private");
x.t("parameters","define");
x.t("parameters","configuration");
x.t("parameters","optional");
x.t("parameters","plugins");
x.t("methods","coordinate");
x.t("methods","single");
x.t("methods","getdata");
x.t("methods","inboundintegrationplugin");
x.t("methods","write");
x.t("methods","begin");
x.t("methods","setup");
x.t("methods","different");
x.t("methods","isrollback");
x.t("methods","getinbound");
x.t("boolean","value");
x.t("window","navigate");
x.t("/key","value");
x.t("plus","symbol");
x.t("find","work");
x.t("determine","whether");
x.t("place","work");
x.t("indicate","rollback");
x.t("indicate","no");
x.t("instantiating","appropriate");
x.t("namespace","element");
x.t("inboundintegrationplugin","plugin");
x.t("inboundintegrationplugin","claimcenter");
x.t("inboundintegrationplugin","important");
x.t("inboundintegrationplugin","click");
x.t("inboundintegrationplugin","defined");
x.t("inboundintegrationplugin","workagent");
x.t("transactionalworksetprocessor","interfaces");
x.t("transactionalworksetprocessor","interface");
x.t("transactionalworksetprocessor","instead");
x.t("transactionalworksetprocessor","object");
x.t("map","argument");
x.t("map","string");
x.t("map","values");
x.t("partially","finished");
x.t("threadpool","optional");
x.t("claimcenter","just");
x.t("claimcenter","integration");
x.t("claimcenter","studio");
x.t("claimcenter","calls");
x.t("claimcenter","includes");
x.t("claimcenter","passes");
x.t("claimcenter","stops");
x.t("claimcenter","immediately");
x.t("claimcenter","using");
x.t("write","integration");
x.t("write","required");
x.t("write","plugin");
x.t("write","multiple");
x.t("write","complete");
x.t("write","custom");
x.t("write","setup");
x.t("write","implements");
x.t("write","populating");
x.t("write","implementation");
x.t("write","class");
x.t("coordinates","work");
x.t("sets","factory");
x.t("sets","instantiates");
x.t("string","object");
x.t("fields","example");
x.t("pairs","example");
x.t("input","jms");
x.t("addition","primary");
x.t("encapsulates","knowledge");
x.t("encapsulates","work");
x.t("thread","example");
x.t("thread","false");
x.t("thread","pools");
x.t("thread","pool");
x.t("resource","context");
x.t("three","methods");
x.t("earlier","file");
x.t("contain","key/value");
x.t("functions","method");
x.t("begin","necessary");
x.t("begin","begin");
x.t("begin","work");
x.t("factory.createworkprocessor","return");
x.t("store","connection");
x.t("store","information");
x.t("store","server");
x.t("getcontext","method");
x.t("getcontext","implementation");
x.t("error","occurs");
x.t("error","handling");
x.t("error","occurred");
x.t("error","conditions");
x.t("java.util.map","claimcenter");
x.t("java.util.map","object");
x.t("logic","stop");
x.t("contrast","start");
x.t("rolled","back");
x.t("config","integration");
x.t("configured","earlier");
x.t("throttle","interval");
x.t("polls","algorithm");
x.t("workdataset.findwork","causes");
x.t("next","work");
x.t("next","call");
x.t("next","item");
x.t("occurs","otherwise");
x.t("messages","built-in");
x.t("feature","transactional");
x.t("unit","work");
x.t("unordered","multi-threaded");
x.t("appears","getter");
x.t("unused","custom");
x.t("guidewire_selectall","var");
x.t("setup","method");
x.t("setup","teardown");
x.t("setup","map");
x.t("processing","until");
x.t("processing","new");
x.t("processing","unit");
x.t("processing","message");
x.t("initializes","resources");
x.t("notify","administrators");
x.t("notify","administrator");
x.t("stops","integration");
x.t("managed","thread");
x.t("function","guidewire_selectall");
x.t("implements","inbound");
x.t("implements","interface");
x.t("implements","worksetprocessor");
x.t("implements","gw.api.integration.inbound.workcontext");
x.t("implements","gw.api.integration.inbound.workdataset");
x.t("newly-added","files");
x.t("design","write");
x.t("editor","description");
x.t("editor","plugin");
x.t("editor","configuration");
x.t("may","want");
x.t("may","need");
x.t("finding","preparing");
x.t("worksetprocessor","plugin");
x.t("worksetprocessor","interface");
x.t("worksetprocessor","access");
x.t("worksetprocessor","declare");
x.t("worksetprocessor","transactionalworksetprocessor");
x.t("worksetprocessor","factory");
x.t("worksetprocessor","implementation");
x.t("worksetprocessor","process");
x.t("worksetprocessor","work");
x.t("worksetprocessor","object\u2019s");
x.t("represents","unit");
x.t("represents","purpose");
x.t("represents","data");
x.t("represents","work");
x.t("represents","object");
x.t("different","interface");
x.t("different","methods");
x.t("whether","agent");
x.t("whether","work");
x.t("define","example");
x.t("define","class");
x.t("define","subelements");
x.t("processes","work");
x.t("processes","item");
x.t("move","iterator");
x.t("words","object\u2019s");
x.t("private","variables");
x.t("xml/xsd","namespace");
x.t("unique","name");
x.t("instead","worksetprocessor");
x.t("arbitrary","parameters");
x.t("release","resources");
x.t("changes","responsible");
x.t("changes","partially");
x.t("handling","creating");
x.t("handling","gosu");
x.t("handling","agent");
x.t("handling","exceptions");
x.t("directory","factory");
x.t("types","plugin");
x.t("returned","plugin");
x.t("important","parameters");
x.t("important","write");
x.t("important","catch");
x.t("isrollback","returns");
x.t("purpose","specific");
x.t("code","write");
x.t("code","processes");
x.t("code","called");
x.t("subinterface","transactionalworksetprocessor");
x.t("subinterface","worksetprocessor");
x.t("subinterface","extends");
x.t("subinterface","called");
x.t("subinterface","workcontext");
x.t("follow","pattern");
x.t("primary","functions");
x.t("level","class");
x.t("return","instance");
x.t("return","non-null");
x.t("return","new");
x.t("return","false");
x.t("return","true");
x.t("return","next");
x.t("return","null");
x.t("return","factory");
x.t("return","workdata");
x.t("slightly","different");
x.t("disabled","attributes");
x.t(".gwp","file");
x.t("gw.api.integration.inbound.workagent","interface");
x.t("listening","message");
x.t("message","plugin");
x.t("message","queue");
x.t("pools","thread");
x.t("stoponerror","required");
x.t("java","plugin");
x.t("java","gosu");
x.t("java","classes");
x.t("java","class");
x.t("together","refer");
x.t("finished","work");
x.t("actual","work");
x.t("ensure","correctly");
x.t("marker","interface");
x.t("click","inbound-integration-config.xml");
x.t("click","plus");
x.t("n/a","parameter");
x.t("n/a","transactional");
x.t("key1","/key");
x.t("occurred","messsage");
x.t("populating","context");
x.t("populating","appropriate");
x.t("null","indicate");
x.t("project","window");
x.t("configuration","parameter");
x.t("configuration","element");
x.t("configuration","list");
x.t("configuration","guide");
x.t("configuration","config");
x.t("configuration","gw_default");
x.t("factory","method");
x.t("factory","interface");
x.t("factory","finding");
x.t("factory","factory");
x.t("factory","work");
x.t("factory","class");
x.t("factory","object");
x.t("interval","default");
x.t("interval","true");
x.t("interval","encapsulates");
x.t("interval","throttle");
x.t("interval","factory");
x.t("interval","ordered");
x.t("interval","work");
x.t("interval","understanding");
x.t("interval","instantiates");
x.t("interval","seconds");
x.t("main","method");
x.t("main","work");
x.t("additional","method");
x.t("additional","methods");
x.t("customer-specific","work");
x.t("value","type");
x.t("value","indicates");
x.t("value","indicate");
x.t("value","returned");
x.t("value","value");
x.t("value","myvalue");
x.t("value","called");
x.t("value","elements");
x.t("value","workagentimpl");
x.t("interacts","polling");
x.t("interacts","throttle");
x.t("interacts","behavior");
x.t("integrationservice","value");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","parameter");
x.t("implementation","implement");
x.t("implementation","factory.createworkunit");
x.t("implementation","11");
x.t("implementation","plugin");
x.t("implementation","access");
x.t("implementation","no");
x.t("implementation","inboundintegrationplugin");
x.t("implementation","map");
x.t("implementation","claimcenter");
x.t("implementation","write");
x.t("implementation","factory.createworkprocessor");
x.t("implementation","gw.api.integration.inbound.workagent");
x.t("implementation","java");
x.t("implementation","choose");
x.t("implementation","work");
x.t("implementation","class");
x.t("implementation","inbound.findwork");
x.t("several","interfaces");
x.t("several","additional");
x.t("knows","acquire");
x.t("knows","find");
x.t("restarted","exceptions");
x.t("restarted","server");
x.t("specific","inbound");
x.t("extends","worksetprocessor");
x.t("extends","several");
x.t("process","method");
x.t("process","inbound");
x.t("process","single");
x.t("process","items");
x.t("process","error");
x.t("process","processes");
x.t("process","return");
x.t("process","data");
x.t("process","note");
x.t("getinbound","gets");
x.t("myvalue","/value");
x.t("takes","no");
x.t("takes","two");
x.t("represent","multiple");
x.t("represent","new");
x.t("represent","customer-specific");
x.t("represent","work");
x.t("page","error");
x.t("registry","register");
x.t("registry","add");
x.t("registry","editor");
x.t("help","debug");
x.t("context","responsible");
x.t("context","necessary");
x.t("context","information");
x.t("separate","work");
x.t("location","special");
x.t("pluginhandler","n/a");
x.t("optional","always");
x.t("optional","time");
x.t("optional","true");
x.t("optional","feature");
x.t("optional","unique");
x.t("optional","arbitrary");
x.t("data","method");
x.t("data","implement");
x.t("data","encapsulated");
x.t("data","property");
x.t("data","getting");
x.t("data","found");
x.t("data","list");
x.t("data","sets");
x.t("data","fields");
x.t("data","error");
x.t("data","represents");
x.t("data","process");
x.t("data","represent");
x.t("data","optionally");
x.t("data","created");
x.t("data","workdata");
x.t("data","instantiates");
x.t("data","workcontext");
x.t("data","workdataset");
x.t("data","representing");
x.t("data","item");
x.t("information","create");
x.t("information","instance");
x.t("information","need");
x.t("information","registering");
x.t("information","worksetprocessor");
x.t("information","process");
x.t("information","represent");
x.t("information","operate");
x.t("information","workcontext");
x.t("information","contains");
x.t("configure","thread");
x.t("agent","implement");
x.t("agent","create");
x.t("agent","creates");
x.t("agent","interface");
x.t("agent","declare");
x.t("agent","inboundintegrationplugin");
x.t("agent","factory");
x.t("agent","implementation");
x.t("agent","workagent");
x.t("agent","transactional");
x.t("agent","compare");
x.t("defined","interfaces");
x.t("defined","inbound");
x.t("happens","code");
x.t("appropriate","data");
x.t("appropriate","class");
x.t("save","map");
x.t("knowledge","work");
x.t("values","plugin");
x.t("values","important");
x.t("called","findwork");
x.t("called","parameters");
x.t("called","work");
x.t("called","immediately");
x.t("called","createworkprocessor");
x.t("called","txcontext");
x.t("gw.api.integration.inbound","package");
x.t("described","installing");
x.t("described","configuring");
x.t("fully-qualified","name");
x.t("ordered","parameter");
x.t("ordered","flag");
x.t("ordered","optional");
x.t("port","numbers");
x.t("key/value","pairs");
x.t("choose","add");
x.t("plugins","editor");
x.t("plugins","registry");
x.t("plugins","multi-threaded");
x.t("workagent","plugin");
x.t("workagent","interface");
x.t("workagent","implementation");
x.t("workagent","work");
x.t("classes","described");
x.t("classes","work");
x.t("otherwise","claimcenter");
x.t("otherwise","return");
x.t("two","arguments");
x.t("two","methods");
x.t("two","additional");
x.t("done","thread");
x.t("note","gosu");
x.t("transaction","rolled");
x.t("based","plugin");
x.t("work","findwork");
x.t("work","within");
x.t("work","roll");
x.t("work","listener");
x.t("work","items");
x.t("work","getting");
x.t("work","during");
x.t("work","processor");
x.t("work","write");
x.t("work","setup");
x.t("work","together");
x.t("work","context");
x.t("work","data");
x.t("work","agent");
x.t("work","happens");
x.t("work","done");
x.t("work","itself");
x.t("work","work");
x.t("work","service");
x.t("work","commit");
x.t("work","specify");
x.t("work","item");
x.t("debug","code");
x.t("transactional","interfaces");
x.t("transactional","method");
x.t("transactional","implement");
x.t("transactional","plugin");
x.t("transactional","basic");
x.t("transactional","defaults");
x.t("transactional","determine");
x.t("transactional","transactionalworksetprocessor");
x.t("transactional","claimcenter");
x.t("transactional","changes");
x.t("transactional","return");
x.t("transactional","implementation");
x.t("transactional","context");
x.t("transactional","optional");
x.t("transactional","transactional");
x.t("transactional","work");
x.t("itself","work");
x.t("optionally","declare");
x.t("correctly","handle");
x.t("correctly","xml/xsd");
x.t("object\u2019s","getdata");
x.t("object\u2019s","process");
x.t("gw.api.integration.inbound.workcontext","code");
x.t("algorithm","interacts");
x.t("file-based","input");
x.t("operate","data");
x.t("package","writing");
x.t("package","declare");
x.t("causes","claimcenter");
x.t("immediately","stop");
x.t("immediately","return");
x.t("created","implementation");
x.t("incoming","directory");
x.t("gw.api.integration.inbound.workdataset","interface");
x.t("call","returns");
x.t("mycompany.integ.myinboundplugin","pluginhandler");
x.t("numbers","define");
x.t("multi-threaded","inbound");
x.t("multi-threaded","work");
x.t("following","table");
x.t("following","methods");
x.t("service","instantiates");
x.t("workdata","interface");
x.t("workdata","objects");
x.t("workdata","represents");
x.t("workdata","work");
x.t("workdata","workdata");
x.t("workdata","object");
x.t("workdata","item");
x.t("management","transactions");
x.t("special","handling");
x.t("special","location");
x.t("used","inbound-integration-config.xml");
x.t("used","file");
x.t("elements","contain");
x.t("using","plugins");
x.t("class","polling");
x.t("class","implement");
x.t("class","create");
x.t("class","field");
x.t("class","write");
x.t("class","coordinates");
x.t("class","encapsulates");
x.t("class","getcontext");
x.t("class","implements");
x.t("class","knows");
x.t("class","class");
x.t("class","using");
x.t("warning","important");
x.t("gw_default","stoponerror");
x.t("understanding","polling");
x.t("symbol","add");
x.t("instantiates","class");
x.t("compare","contrast");
x.t("createworkprocessor","takes");
x.t("returns","instance");
x.t("returns","boolean");
x.t("returns","next");
x.t("returns","data");
x.t("returns","object");
x.t("catch","exceptions");
x.t("workcontext","represent");
x.t("workcontext","optionally");
x.t("workcontext","workdata");
x.t("workcontext","object");
x.t("occur","close");
x.t("workagentimpl","required");
x.t("behavior","polling");
x.t("behavior","ordered");
x.t("names","port");
x.t("var","text_val=eval");
x.t("workdataset","responsible");
x.t("workdataset","creating");
x.t("workdataset","represents");
x.t("workdataset","representing");
x.t("workdataset","object");
x.t("commit","changes");
x.t("commit","work");
x.t("commit","commit");
x.t("txcontext","interface");
x.t("txcontext","requires");
x.t("txcontext","txcontext");
x.t("inbound.findwork","method");
x.t("representing","list");
x.t("representing","work");
x.t("exceptions","workdataset.findwork");
x.t("exceptions","worksetprocessor");
x.t("exceptions","process");
x.t("conditions","example");
x.t("pool","configured");
x.t("pool","configuration");
x.t("pool","behavior");
x.t("log","errors");
x.t("60","throttleinterval");
x.t("60","parameters");
x.t("60","seconds");
x.t("object","properties");
x.t("object","method");
x.t("object","polling");
x.t("object","inbound");
x.t("object","variables");
x.t("object","creates");
x.t("object","type");
x.t("object","items");
x.t("object","represents");
x.t("object","worksetprocessor");
x.t("object","knows");
x.t("object","process");
x.t("resources","create");
x.t("resources","acquired");
x.t("resources","claimcenter");
x.t("resources","instantiates");
x.t("specify","work");
x.t("gets","object");
x.t("item","findwork");
x.t("item","workdataset.getdata");
x.t("item","within");
x.t("item","responsible");
x.t("item","skipped");
x.t("item","list");
x.t("item","sure");
x.t("item","next");
x.t("item","represents");
x.t("item","move");
x.t("item","worksetprocessor");
x.t("item","return");
x.t("item","implementation");
x.t("item","represent");
x.t("item","work");
x.t("item","special");
x.t("contains","transaction-specific");
x.t("server","test");
x.t("server","restarted");
x.t("server","names");
x.t("hasnext","return");
x.t("attributes","described");
x.t("subelements","alternate");
x.t("subelements","follows");
x.t("threads","managed");
x.t("seconds","polling");
x.t("seconds","polls");
x.t("seconds","60");
}
