<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="pcf.xsd">
  <Popup
    beforeValidate="validatePhoneNumber()"
    canEdit="true"
    id="PhoneSelectionPopup"
    startInEditMode="true"
    title="getTitle()">
    <LocationEntryPoint
      signature="PhoneSelectionPopup(keptContact:ABContact, retiredContact:ABContact, mergeContact:ABContact, type: typekey.PhoneType)"/>
    <Variable
      name="keptContact"
      type="ABContact"/>
    <Variable
      name="retiredContact"
      type="ABContact"/>
    <Variable
      name="mergeContact"
      type="ABContact"/>
    <Variable
      name="type"
      type="typekey.PhoneType"/>
    <Screen>
      <ListDetailPanel
        selectionName="PhoneSelection"
        selectionType="java.lang.Integer">
        <PanelRef>
          <Toolbar>
            <EditButtons/>
          </Toolbar>
          <ListViewPanel
            id="PhoneSelectionLV">
            <RowIterator
              editable="true"
              elementName="number"
              id="PhoneSelectionLV"
              pageSize="4"
              value="{1,2,3}">
              <Row>
                <Cell
                  id="DisplayName"
                  label="displaykey.Web.Contacts.MergeContacts.PhoneNumber.Phone"
                  value="getDisplay(number)"/>
              </Row>
            </RowIterator>
          </ListViewPanel>
        </PanelRef>
        <CardViewPanel
          hideTabIfSingle="true">
          <Card
            id="PhoneCard"
            title="displaykey.Web.Contacts.MergeContacts.PhoneNumber.Phone"
            visible="showNewPhone(PhoneSelection)">
            <DetailViewPanel>
              <InputColumn>
                <InputSetRef
                  def="GlobalPhoneInputSet(getPhoneOwner())"/>
              </InputColumn>
            </DetailViewPanel>
          </Card>
        </CardViewPanel>
      </ListDetailPanel>
    </Screen>
    <Code><![CDATA[uses java.lang.Integer
uses gw.api.phone.PhoneOwner
uses gw.api.util.PhoneUtil
uses com.guidewire.pl.web.controller.UserDisplayableException
uses gw.lang.reflect.features.PropertyReference

function getDisplay(s : Integer) : String {
  if (s == 1) {
    return new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(keptContact, getPropertyReference(type)), displaykey.Web.ContactDetail.Phone.Phone, false).format()
  } else if (s == 2) {
    return new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(retiredContact, getPropertyReference(type)), displaykey.Web.ContactDetail.Phone.Phone, false).format()
  } else {
    return "New Phone Number"
  }
}

function getTitle() : String {
  if (type == PhoneType.TC_HOME)
    return displaykey.Web.Contacts.MergeContacts.PhoneNumber.HomePhone
  else if (type == PhoneType.TC_CELL)
    return displaykey.Web.Contacts.MergeContacts.PhoneNumber.CellPhone
  else if (type == PhoneType.TC_FAX)
      return displaykey.Web.Contacts.MergeContacts.PhoneNumber.FaxPhone
  else 
      return displaykey.Web.Contacts.MergeContacts.PhoneNumber.WorkPhone
}

function showNewPhone(s : Integer) : boolean {
  if (s == 3)
    return true
  else
    setPhoneNumber(s)
  
  return false
}

function setPhoneNumber(s : Integer) : com.guidewire.pl.web.value.ButtonValueWidget {

  if (s == 1) {
    mergeContact[type.Code+"Phone"] = keptContact[type.Code+"Phone"]
    mergeContact[type.Code+"PhoneCountry"] = keptContact[type.Code+"PhoneCountry"]
    mergeContact[type.Code+"PhoneExtension"] = keptContact[type.Code+"PhoneExtension"]
  } else if (s == 2) {
    mergeContact[type.Code+"Phone"] = retiredContact[type.Code+"Phone"]
    mergeContact[type.Code+"PhoneCountry"] = retiredContact[type.Code+"PhoneCountry"]
    mergeContact[type.Code+"PhoneExtension"] = retiredContact[type.Code+"PhoneExtension"]     
  }
    
  return null
}

function getPropertyReference(phoneType: PhoneType) : PropertyReference{
  switch(phoneType){
    case PhoneType.TC_CELL:
      return ABPerson#CellPhone
    case PhoneType.TC_HOME:
      return ABContact#HomePhone
    case PhoneType.TC_WORK:
      return ABContact#WorkPhone
    case PhoneType.TC_FAX:
      return ABContact#FaxPhone
  }    
  return null
}

function validatePhoneNumber() {
  if (mergeContact[type.Code+"Phone"] != null)
    if (!PhoneUtil.isValidNumber(new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(mergeContact, getPropertyReference(type)), displaykey.Web.ContactDetail.Phone.Phone, false).format()))
      throw new UserDisplayableException(displaykey.Validator.Phone.Invalid(mergeContact[type.Code+"Phone"] as String, (mergeContact[type.Code+"PhoneCountry"] as PhoneCountryCode).DisplayName))
}

function getPhoneOwner() : PhoneOwner {
    return new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(mergeContact, getPropertyReference(type)), displaykey.Web.ContactDetail.Phone.Phone, false)
}]]></Code>
  </Popup>
</PCF>