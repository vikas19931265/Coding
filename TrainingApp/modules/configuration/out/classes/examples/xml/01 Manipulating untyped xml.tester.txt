// This is a Gosu tester file that manipulates the untyped XML file known as
// "exampleUntyped.xml", which is located in the same directory as this file.

uses java.io.File
uses gw.xml.XmlElement
uses javax.xml.namespace.QName
uses java.io.BufferedWriter
uses java.io.FileWriter

// Parsing an XML file (without an XSD)
var xmlFile = new File("modules/configuration/config/examples/xml/exampleUntyped.xml")
var xml = XmlElement.parse(xmlFile)
xml.print()

// Accessing element properties
print ("QName:      " + xml.QName)
print ("Namespace:  " + xml.QName.NamespaceURI)
print ("Local part: " + xml.QName.LocalPart)

// Accessing children by index
print (xml.QName)
print (xml.Children[0].QName)
print (xml.Children[1].QName)
print (xml.Children[1].Children[1].QName)

// Accessing children by name
print ("Text of database element: " + 
       xml.getChild(new QName("http://guidewire.com/config", "database")).Text)
print ("Number of param elements in file: " +
       xml.getChildren(new QName("http://guidewire.com/config", "param")).Count)

// Accessing children by "where() methods"
// ---------------------------------------
// Returns array of XML elements where condition is met
print (xml.Children.where(\ el -> el.QName.LocalPart == "database" ))

// Returns first XML elements where condition is met
print (xml.Children.firstWhere(\ el -> el.QName.LocalPart == "database" ))

// Returns the one XML element where condition is met, or an exception if
// no element or many elements meet the condition
print (xml.Children.singleWhere(\ el -> el.QName.LocalPart == "database" ))

// Accessing attributes and values
var dbElement = xml.Children.singleWhere
                         (\ el -> el.QName.LocalPart == "database")
                         
print("Attributes: " + dbElement.AttributeNames)
print("---------------------------------------")
for (attrib in dbElement.AttributeNames) {
    print (attrib + ": " + dbElement.getAttributeValue(attrib))
}

// Accessing element contents
print (xml.Children[0].QName)
print (xml.Children[0].Text)
print (xml.Children[0].Children)
print ("----------------------")
print (xml.Children[1].QName)
print (xml.Children[1].Text)
print (xml.Children[1].Children)

// Modifying an existing XmlElement
print ("Original value: " + dbElement.getAttributeValue("autoupgrade"))
dbElement.setAttributeValue("autoupgrade", "false")
print ("Current value: " + dbElement.getAttributeValue("autoupgrade"))

// Creating new XmlElements
var claimSystem = new XmlElement(new QName("http://guidewire.com/config", "claimSystem"))
claimSystem.setAttributeValue("URL", "http://localhost:8080/cc/ClaimCenter.do")

var claimSystemUser = new XmlElement(new QName("http://guidewire.com/config", "param"))
claimSystemUser.setAttributeValue("name", "user")
claimSystemUser.setAttributeValue("value", "su")

var claimSystemPassword = new XmlElement(new QName("http://guidewire.com/config", "param"))
claimSystemPassword.setAttributeValue("name", "password")
claimSystemPassword.setAttributeValue("value", "gw")

claimSystem.addChild(claimSystemUser)
claimSystem.addChild(claimSystemPassword)
xml.addChild(claimSystem)

// Exporting XML
var outputFilePath = "modules/configuration/config/examples/xml/exampleUntypedModified.xml"
var outputWriter = new BufferedWriter(new FileWriter(new File(outputFilePath)))
outputWriter.write(xml.asUTFString())
outputWriter.close()
print ("XML exported")