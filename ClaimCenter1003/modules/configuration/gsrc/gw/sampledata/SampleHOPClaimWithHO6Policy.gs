package gw.sampledata

uses gw.api.databuilder.AssessmentContentItemBuilder
uses gw.api.databuilder.FinancialCovTermBuilder
uses gw.api.databuilder.PropertyItemBuilder
uses gw.pl.persistence.core.Bundle

@Export
class SampleHOPClaimWithHO6Policy extends SampleDataBase {

  construct(inCache: SampleDataCache) {
    super(inCache)
  }

  override property get Description(): String {
    return "A Homeowners (HOP) Claim and associated Contacts, Condominium (HO6) Policies, Exposures, Notes, ClaimContacts, Activities and Financials"
  }

  override function testSampleData(bundle: Bundle) {
    {
      var addressDemoSample2035 = new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("345 Fir Lane")
          .withCountry(TC_US)
          .withPostalCode("91352")
          .withState(State.TC_CA)
          .withAddressType(TC_HOME)
          .withCity("La Canada")
          .create()

      var contactDemoSample10401 = new gw.api.databuilder.PersonBuilder()
          .withLastName("Egertson")
          .withPublicId("demo_sample:10401")
          .withFirstName("Karen")
          .withPrimaryPhone(TC_WORK)
          .withPrimaryAddressSetEarly(new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("908 Angels Landing Rd.")
              .withCountry(TC_US)
              .withPostalCode("91352")
              .withState(State.TC_CA)
              .withAddressType(TC_HOME)
              .withCity("Anaheim"))
          .withWorkPhone("213-457-6378")
          .create(bundle)

      var contactDemoSample10400 = new gw.api.databuilder.PersonBuilder()
          .withLastName("David")
          .withPublicId("demo_sample:10400")
          .withFirstName("William")
          .withPrimaryPhone(TC_HOME)
          .withPrimaryAddressSetEarly(addressDemoSample2035)
          .withWorkPhone("736-425-9647")
          .create(bundle)

      var HO4policy = new gw.api.databuilder.PolicyBuilder()
          .withExpirationDate(BaseDate.addDays(1000))
          .withUnderwritingCo(TC_PARENT)
          .withVerified(true)
          .withOrigEffectiveDate(BaseDate.addDays(-780))
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withUnderwritingGroup(TC_ACME_PROP)
          .withEffectiveDate(BaseDate.addDays(-90))
          .withStatus(TC_INFORCE)
          .withPolicyNumber("73-400676")
          .withPublicId("demo_sample:2060")
          .withTotalProperties(1)
          .withPolicyType(PolicyType.TC_HOPHOMEOWNERS)
          .withTotalVehicles(0)
          .withRiskUnit(new gw.api.databuilder.PropertyRUBuilder()
              .withRUNumber(1)
              .withPolicyLocation(new gw.api.databuilder.PolicyLocationBuilder()
                  .withAddress(addressDemoSample2035)
                  .withLienholder(new gw.api.databuilder.PropertyOwnerBuilder()
                      .withLienholder(new gw.api.databuilder.CompanyBuilder()
                          .withPublicId("demo_sample:2061")
                          .withPrimaryPhone(TC_WORK)
                          .withPrimaryAddressSetEarly(new gw.api.databuilder.AddressBuilder()
                              .withAddressLine1("55 California St")
                              .withCountry(TC_US)
                              .withPostalCode("61571")
                              .withState(State.TC_IL)
                              .withAddressType(TC_BUSINESS)
                              .withCity("Washington"))
                          .withWorkPhone("309-234-9876")
                          .withName("GMAC"))
                      .withOwnerType(TC_PARTIAL_OWNER))
                  .withLienholder(new gw.api.databuilder.PropertyOwnerBuilder()
                      .withLienholder(new gw.api.databuilder.CompanyBuilder()
                          .withPublicId("demo_sample:2062")
                          .withPrimaryPhone(TC_WORK)
                          .withPrimaryAddressSetEarly(new gw.api.databuilder.AddressBuilder()
                              .withAddressLine1("2000 Park Avenue")
                              .withCountry(TC_US)
                              .withPostalCode("61571")
                              .withState(State.TC_IL)
                              .withAddressType(TC_BUSINESS)
                              .withCity("Washington"))
                          .withWorkPhone("309-234-9876")
                          .withName("CitiMortgage"))
                      .withOwnerType(TC_PARTIAL_OWNER))
                  .withHighValueItem(new PropertyItemBuilder()
                      .withDescription("Refrigerator")
                      .withAppraisedValue(1750bd.ofDefaultCurrency())))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(TC_HOPCOVA)
                  .withIncidentLimit(5000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(TC_HOPCOVB)
                  .withIncidentLimit(50bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(TC_HOPCOVC)
                  .withIncidentLimit(250bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(TC_HOPCOVD)
                  .withIncidentLimit(250bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPSECTIONIDEDUCTIBLES)
                  .withCovTerm(new FinancialCovTermBuilder()
                      .withCovTermPattern(CovTermPattern.TC_HOPSECTIONIDEDUCTIBLESWINDSTORM)
                      .withFinancialAmount(1000bd.ofDefaultCurrency()))
                  .withCovTerm(new FinancialCovTermBuilder()
                      .withCovTermPattern(CovTermPattern.TC_HOPSECTIONIDEDUCTIBLESHURRICANE)
                      .withFinancialAmount(2000bd.ofDefaultCurrency()))
                  .withCovTerm(new FinancialCovTermBuilder()
                      .withCovTermPattern(CovTermPattern.TC_HOPSECTIONIDEDUCTIBLESOTHERPERILS)
                      .withFinancialAmount(500bd.ofDefaultCurrency())))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPORDINANCEORLAW))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPDEBRISREMOVAL))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPDEBRISTREEREMOVAL)
                  .withIncidentLimit(1000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPREASONABLEREPAIRS))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPFIREDEPTCHARGES)
                  .withIncidentLimit(500bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPFUNGUSMOLDREMEDIATION))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPEMERGENCYPROPERTYREMOVAL))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPTREESSHRUBSPLANTSLAWNS))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPLOCKREPLACEMENT))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPEMERGENCYLIVINGEXPENSE)
                  .withIncidentLimit(2000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPREFRIGERATEDCONTENTS)
                  .withIncidentLimit(500bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPDATAANDRECORDS)
                  .withIncidentLimit(1500bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPFIREEXTINGUISHERRECHARGE)
                  .withIncidentLimit(100bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPPERSONALPROPERTYOFFPREMISES)
                  .withIncidentLimit(1000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPDWELLINGUNDERCONSTRUCTION))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPMORTGAGECLOSINGCOSTEXPENSE)
                  .withIncidentLimit(3000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPCOLLAPSE))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPVOLCANICACTION))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPCONSTRUCTIONPERMITINCREASECOSTS))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPGRAVEMARKERS)
                  .withIncidentLimit(5000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(TC_HOPGLASS))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPBACKUPSEWERSDRAINSPUMP)
                  .withIncidentLimit(5000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPEARTHQUAKE))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPESCAPEDLIQUIDFUEL)
                  .withIncidentLimit(2000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPEXTENDEDRESIDENCETHEFT))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPFOUNDATIONWATERDAMAGE))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPSINKHOLE))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPSPECIALCOMPUTERCOVERAGE))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPGOLFCART))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPINCLIMITPERSPROPERTYATOTHERRESIDENCES))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPPERMITTEDINCIDENTALOCCUPANCIES))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPSPECIFICSTRUCTSAWAYFROMRESIDENCE))
          )
          .withContactInRole(contactDemoSample10401, TC_AGENT)
          .withContactInRole(contactDemoSample10400, TC_INSURED)
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(TC_HOPCOVE)
              .withIncidentLimit(250000bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(TC_HOPCOVF)
              .withIncidentLimit(5000bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPCREDITCARDPROTECTION)
              .withIncidentLimit(500bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPDAMAGEPROPOTHERS)
              .withIncidentLimit(1000bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPFIRSTAID))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPIDTHEFT)
              .withCovTerm(new FinancialCovTermBuilder()
                  .withCovTermPattern(CovTermPattern.TC_HOPIDTHEFTDEDUCTIBLE)
                  .withFinancialAmount(500bd.ofDefaultCurrency()))
              .withIncidentLimit(1000bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPLOSSASSESSMENT)
              .withIncidentLimit(1000bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPREWARD))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPVALUABLEPERSONALPROPERTY))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPSCHEDULEDPERSONALPROPERTY))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPASSISTEDLIVINGCARE))

      var claim = new gw.api.databuilder.ClaimBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withLossDate(BaseDate.addDays(-25))
          .withLossCause(LossCause.TC_EXPLOSION)
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withAssignmentDate(BaseDate.addDays(0))
          .withFlagged(TC_ISFLAGGED)
          .withLossLocation(addressDemoSample2035)
          .withClaimNumber("426-24-400182")
          .withMainContactType(TC_EMPLOYEE)
          .withReportedByType(TC_EMPLOYEE)
          .withLossType(TC_PR)
          .withValidationLevel(TC_NEWLOSS)
          .withPolicy(HO4policy)
          .withIncident(new gw.api.databuilder.PropertyContentsIncidentBuilder()
              .withDescription("Kitchen Appliance and tools.")
              .withContentItemLine(new AssessmentContentItemBuilder()
                  .withDescription("KitchenAid Mixer 3000")
                  .withContentSchedule(TC_HOMEOWNERS)
                  .withContentCategory(TC_APPLIANCES)
                  .withPurchaseCost(575bd.ofDefaultCurrency())
                  .withDateAcquired(Date.Today.addYears(-3))
                  .withNumberOfItems(1)
                  .withDepreciationPercentage(40)
                  .withReplacementValue(350bd.ofDefaultCurrency())))
          .withMetroReport(new gw.api.databuilder.MetroReportBuilder()
              .withMetroReportType(TC_G)
              .withAgentCity("Alhambra")
              .withAgentState(State.TC_CA)
              .withStatus(TC_RECEIVED))
          .withNote(new gw.api.databuilder.NoteBuilder()
              .withBody("Received Content Loss worksheet from insured.")
              .withAuthoringDate(BaseDate.addDays(-18)))
          .withAssignedGroup(findGroupByName("Midwest Property A"))
          .withJurisdictionState(TC_IL)
          .withReportedDate(BaseDate.addDays(-25))
          .withCoverageInQuestion(false)
          .withIncidentReport(false)
          .withLOBCode(TC_HOPLINE)
          .withPublicID("demo_sample:322")
          .withDescription("Insured's kitchen was on fire.")
          .withState(TC_OPEN)
          .withAssignedUser(findUserByUserName("wdufraine"))
          .withContactInRole(contactDemoSample10401, TC_REPORTER)
          .create(bundle)

      var claimInfoDemoSample312 = new gw.api.databuilder.ClaimInfoBuilder()
          .withRootPublicId("demo_sample:312")
          .withClaimNumber("426-24-400182")
          .onClaim(claim)
          .create(bundle)
    }
  }
}