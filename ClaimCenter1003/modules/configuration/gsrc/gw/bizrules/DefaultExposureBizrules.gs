package gw.bizrules

uses gw.api.databuilder.bizrules.ExposureCommandDefinitionBuilder
uses gw.api.databuilder.bizrules.exposure.ExposureRuleBuilder
uses gw.api.databuilder.bizrules.exposure.ExposureRuleHeadBuilder
uses gw.bizrules.databuilder.RuleConditionBuilder
uses typekey.*

@Export
class DefaultExposureBizrules extends DefaultAbstractBizrulesBase {
  /**
   * Creates all the Rules and saves them to the database
   */
  public static function createRules() {
    createEC01000Rule()
    createEC02000Rule()
    createEC03000Rule()
    createEC04000Rule()
    createEC05000Rule()
    createEC06000Rule()
    createEC07000Rule()
    createEC08000Rule()
    createEC09000Rule()
    createEC10000Rule()
    createEC11000Rule()
  }

  private static function createEC01000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("8423b858-ee23-4f67-9063-4191e4cecf98")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC01000 - Personal Auto Collision")
            .withDescription("Create a personal auto collision exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_PERSONALAUTO)
            .withLossCause(LossCause.TC_BIKECOLLISION)
            .withLossCause(LossCause.TC_FIXEDOBJCOLL)
            .withLossCause(LossCause.TC_VEHCOLLISION)
            .withLossCause(LossCause.TC_OTHEROBJCOLL)
            .withLossCause(LossCause.TC_PEDCOLLISION)
            .withLossCause(LossCause.TC_TRAINBUSCOLL)
            .withLossCause(LossCause.TC_LEFTCOLLISION)
            .withLossCause(LossCause.TC_ROLLOVER)
            .withLossCause(LossCause.TC_REAREND)
            .withCoverageType(CoverageType.TC_PACOLLISIONCOV)
            .withIncidentType(typekey.Incident.TC_VEHICLEINCIDENT)
            .withLossPartyType(LossPartyType.TC_INSURED)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_PACOLLISIONCOV)
                .withCoverageSubType(CoverageSubtype.TC_PACOLLISIONCOV)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }

  private static function createEC02000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("096f549f-d8cb-4b10-816a-27e5dbc618f2")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC02000 - Commercial Auto Collision")
            .withDescription("Create a commercial auto collision exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_BUSINESSAUTO)
            .withLossCause(LossCause.TC_BIKECOLLISION)
            .withLossCause(LossCause.TC_FIXEDOBJCOLL)
            .withLossCause(LossCause.TC_VEHCOLLISION)
            .withLossCause(LossCause.TC_OTHEROBJCOLL)
            .withLossCause(LossCause.TC_PEDCOLLISION)
            .withLossCause(LossCause.TC_TRAINBUSCOLL)
            .withLossCause(LossCause.TC_LEFTCOLLISION)
            .withLossCause(LossCause.TC_ROLLOVER)
            .withLossCause(LossCause.TC_REAREND)
            .withCoverageType(CoverageType.TC_BACOLLISIONCOV)
            .withIncidentType(typekey.Incident.TC_VEHICLEINCIDENT)
            .withLossPartyType(LossPartyType.TC_INSURED)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_BACOLLISIONCOV)
                .withCoverageSubType(CoverageSubtype.TC_BACOLLISIONCOV)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }

  private static function createEC03000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("dcbe60b6-e135-4503-a0b3-aeffb1807883")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC03000 - Personal Auto Comprehensive")
            .withDescription("Create a personal auto comprehensive exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_PERSONALAUTO)
            .withLossCause(LossCause.TC_ANIMAL)
            .withLossCause(LossCause.TC_LOADINGDAMAGE)
            .withLossCause(LossCause.TC_FALLINGOBJECT)
            .withLossCause(LossCause.TC_GLASSBREAKAGE)
            .withLossCause(LossCause.TC_VANDALISM)
            .withLossCause(LossCause.TC_RIOTANDCIVIL)
            .withLossCause(LossCause.TC_THEFTENTIRE)
            .withLossCause(LossCause.TC_THEFTPARTS)
            .withLossCause(LossCause.TC_FIRE)
            .withCoverageType(CoverageType.TC_PACOMPREHENSIVECOV)
            .withIncidentType(typekey.Incident.TC_VEHICLEINCIDENT)
            .withLossPartyType(LossPartyType.TC_INSURED)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_PACOMPREHENSIVECOV)
                .withCoverageSubType(CoverageSubtype.TC_PACOMPREHENSIVECOV)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }

  private static function createEC04000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("e96c6057-5542-4aa5-8f87-992c04895092")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC04000 - Commercial Auto Comprehensive")
            .withDescription("Create a commercial auto comprehensive exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_BUSINESSAUTO)
            .withLossCause(LossCause.TC_ANIMAL)
            .withLossCause(LossCause.TC_LOADINGDAMAGE)
            .withLossCause(LossCause.TC_FALLINGOBJECT)
            .withLossCause(LossCause.TC_GLASSBREAKAGE)
            .withLossCause(LossCause.TC_VANDALISM)
            .withLossCause(LossCause.TC_RIOTANDCIVIL)
            .withLossCause(LossCause.TC_THEFTENTIRE)
            .withLossCause(LossCause.TC_THEFTPARTS)
            .withLossCause(LossCause.TC_FIRE)
            .withCoverageType(CoverageType.TC_BACOMPREHENSIVECOV)
            .withIncidentType(typekey.Incident.TC_VEHICLEINCIDENT)
            .withLossPartyType(LossPartyType.TC_INSURED)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_BACOMPREHENSIVECOV)
                .withCoverageSubType(CoverageSubtype.TC_BACOMPREHENSIVECOV)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }

  private static function createEC05000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("75893bc5-cee1-484e-8cbe-fac4bd0811b9")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC05000 - Business Owners Building")
            .withDescription("Create a business owners building exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_BUSINESSOWNERS)
            .withIncidentType(typekey.Incident.TC_FIXEDPROPERTYINCIDENT)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_BOPBUILDINGCOV)
                .withCoverageSubType(CoverageSubtype.TC_BOPBUILDINGCOV)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }

  private static function createEC06000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("5ac9e216-ffdc-40e2-aebf-c9caf281ec0d")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC06000 - Commercial Package Property Damage")
            .withDescription("Create a commercial package property damage exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_COMMERCIALPACKAGE)
            .withIncidentType(typekey.Incident.TC_FIXEDPROPERTYINCIDENT)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_GLCGLCOV)
                .withCoverageSubType(CoverageSubtype.TC_GLCGLCOV_OPS_PD)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }

  private static function createEC07000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("ad555210-d753-4f3b-8ca4-fd0075737d03")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC07000 - Farmowners Property")
            .withDescription("Create a farmowners property exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_FARMOWNERS)
            .withIncidentType(typekey.Incident.TC_FIXEDPROPERTYINCIDENT)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_FARM)
                .withCoverageSubType(CoverageSubtype.TC_FARM_PD)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }

  private static function createEC08000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("fb4cfd04-94b7-4de7-b940-b6fddf0e9800")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC08000 - General Liability Property")
            .withDescription("Create a general liability property exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_GENERALLIABILITY)
            .withIncidentType(typekey.Incident.TC_FIXEDPROPERTYINCIDENT)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_GLCGLCOV)
                .withCoverageSubType(CoverageSubtype.TC_GLCGLCOV_OPS_PD)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }

  private static function createEC09000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("0eca6ac9-72bf-4a9c-b9be-e16d5dd42d35")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC09000 - Personal Umbrella Liability")
            .withDescription("Create a personal umbrella liability exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_PERSONALUMBRELLA)
            .withIncidentType(typekey.Incident.TC_FIXEDPROPERTYINCIDENT)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_PUP_PRIMARY_LIABILITYCOV_PUE)
                .withCoverageSubType(CoverageSubtype.TC_PUPLIABILITYPD)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }

  private static function createEC10000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("527fc0c0-6441-4172-8f07-b6bfc773169a")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC10000 - Professional Liability Injury")
            .withDescription("Create a professional liability injury exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_PROF_LIABILITY)
            .withIncidentType(typekey.Incident.TC_INJURYINCIDENT)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_MALP)
                .withCoverageSubType(CoverageSubtype.TC_MALP_BID)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }

  private static function createEC11000Rule() {
    var head = new ExposureRuleHeadBuilder()
        .withGlobalRuleID("7bb71106-f31d-4516-bfac-3d24e6d2bc20")
        .withSystemId("base-configuration")
        .withStatus(RuleStatus.TC_STAGED)
        .withRule(new ExposureRuleBuilder()
            .withName("EC11000 - Commercial Property Building")
            .withDescription("Create a commercial property building exposure")
            .withRuleContextDefinitionKey(RuleContextDefinitionKey.TC_INCIDENT)
            .withTriggeringPointKey(TriggeringPointKey.TC_CREATION)
            .withPolicyType(PolicyType.TC_COMMERCIALPROPERTY)
            .withIncidentType(typekey.Incident.TC_FIXEDPROPERTYINCIDENT)
            .withRuleCondition(new RuleConditionBuilder().withRuleConditionType(RuleConditionType.TC_ALWAYSTRUE))
            .addRuleCommandDefinition(new ExposureCommandDefinitionBuilder()
                .withCoverageType(CoverageType.TC_CPBLDGCOV)
                .withCoverageSubType(CoverageSubtype.TC_CPBLDGCOV)
                .withOrderNumber(0)
                .createCommandDefinition()
            )
        )
        .createAndCommit()
    isRuleValid(head)
  }
}