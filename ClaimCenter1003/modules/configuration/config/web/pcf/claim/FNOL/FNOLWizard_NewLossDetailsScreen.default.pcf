<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Screen
    id="FNOLWizard_NewLossDetailsScreen"
    mode="default">
    <Require
      name="Claim"
      type="Claim"/>
    <Require
      name="Wizard"
      type="gw.api.claim.NewClaimWizardInfo"/>
    <Variable
      initialValue="Claim.Officials.length &gt; 0"
      name="Officials"
      type="boolean"/>
    <Variable
      initialValue="Claim.MetroReports.length &gt; 0"
      name="PoliceReport"
      type="boolean"/>
    <Toolbar>
      <WizardButtons/>
    </Toolbar>
    <DetailViewPanel
      id="LossDetailsAddressDV">
      <InputColumn>
        <TextAreaInput
          editable="true"
          id="Description"
          label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.LossDetailsAddressDV.WhatHappened.Label&quot;)"
          numRows="3"
          value="Claim.Description"/>
        <DateInput
          dateFormat="short"
          id="Claim_LossDate"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewClaimLossDetailsAuto.Claim.LossDate&quot;)"
          timeFormat="short"
          validationExpression="Claim.LossDate != null || Claim.LossDate &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
          value="Claim.LossDate"/>
        <TypeKeyInput
          editable="true"
          id="Claim_LossCause"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewClaimLossDetailsAuto.Claim.LossCause&quot;)"
          required="true"
          value="Claim.LossCause"
          valueType="typekey.LossCause"/>
        <CheckBoxInput
          editable="true"
          id="IncidentOnly"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewClaimLossDetailsAuto.Claim.Status.IncidentReport&quot;)"
          value="Claim.IncidentReport"/>
      </InputColumn>
      <InputColumn maxWidth="480px">
        <InputSetRef
          def="CCAddressInputSet(Claim.AddressOwner)"
          id="AddressDetailInputSetRef"/>
      </InputColumn>
    </DetailViewPanel>
    <PanelRef
      id="IncidentPanelRef">
      <TitleBar
        title="DisplayKey.get(&quot;Web.NewLossDetailsScreen.VehiclePeoplePropertyLabel&quot;)"/>
      <Toolbar>
        <ToolbarButton
          action="FNOLVehicleIncidentPopup.push(Claim, Wizard)"
          icon="&quot;personal_auto&quot;"
          iconType="svgFileName"
          id="AddVehicleButton"
          label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.IncidentPanelRef.AddVehicleButton.Label&quot;)"
          shortcut="V"/>
        <ToolbarButton
          action="FNOLContactPopup.push(Claim, null, TC_PEDESTRIAN, null, Wizard)"
          icon="&quot;pedestrian&quot;"
          iconType="svgFileName"
          id="AddPedestrianButton"
          label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.IncidentPanelRef.AddPedestrianButton.Label&quot;)"
          shortcut="P"/>
        <ToolbarButton
          action="NewFixedPropertyIncidentPopup.push(Claim)"
          icon="&quot;property_incident&quot;"
          iconType="svgFileName"
          id="AddPropertyDamageButton"
          label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.IncidentPanelRef.AddPropertyDamageButton.Label&quot;)"/>
      </Toolbar>
      <PanelSet>
        <PanelRow>
          <PanelColumn>
            <PanelIterator
              elementName="VehicleIncident"
              id="VehicleIncidentIterator"
              value="Claim.VehicleIncidentsOnly"
              valueType="entity.VehicleIncident[]">
              <IteratorSort
                sortBy="VehicleIncident.LossParty"
                sortOrder="1"/>
              <Variable
                initialValue="new gw.api.claim.VehicleIncidentUIHelper(VehicleIncident)"
                name="vehicleIncidentHelper"
                type="gw.api.claim.VehicleIncidentUIHelper"/>
              <Variable
                initialValue="vehicleIncidentHelper.VehicleOccupants"
                name="vehicleOccupants"
                type="ArrayList&lt;Person&gt;"/>
              <DetailViewPanel
                border="true"
                columnDivider="false"
                id="VehicleIncidentDV"
                inline="true"
                width="320px">
                <InputColumn
                  width="30px">
                  <Label
                    icon="VehicleIncident.PanelIcon"
                    iconType="svgFileName"
                    id="VehicleIcon"/>
                </InputColumn>
                <InputColumn
                  width="250px">
                  <TextInput
                    action="FNOLVehicleIncidentPopup.push(VehicleIncident, Wizard);"
                    boldValue="true"
                    hideChildrenIfReadOnly="false"
                    id="VehicleName"
                    labelAbove="true"
                    value="isNewlyCreatedVehicleIncident( VehicleIncident ) ? DisplayKey.get(&quot;Web.NewLossDetailsScreen.VehicleIncidentIterator.UnknownVehicle.Value&quot;) : VehicleIncident.Vehicle.ShortDisplayName.elide(25)">
                    <MenuItem
                      action="FNOLVehicleIncidentPopup.push(VehicleIncident, Wizard)"
                      id="EditVehicleMenu"
                      label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.VehicleIncidentIterator.EditVehicleMenuItem.Label&quot;)"/>
                    <MenuItem
                      action="removeVehicleIncident(VehicleIncident)"
                      confirmMessage="DisplayKey.get(&quot;Web.NewLossDetailsScreen.VehicleIncidentIterator.RemoveVehicleMenu.ConfirmMessage&quot;)"
                      id="RemoveVehicleMenu"
                      label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.VehicleIncidentIterator.RemoveVehilcleMenuItem.Label&quot;)"
                      visible="VehicleIncident.Exposures.IsEmpty"/>
                  </TextInput>
                  <TypeKeyInput
                    filter="VALUE.hasCategory(JurisdictionType.TC_VEHICLE_REG)"
                    id="VehicleState"
                    labelAbove="true"
                    value="VehicleIncident.Vehicle.State"
                    valueType="typekey.Jurisdiction"
                    visible="VehicleIncident.Vehicle.State != null"/>
                  <TextInput
                    id="VehiclePlateNumber"
                    labelAbove="true"
                    value="VehicleIncident.Vehicle.LicensePlate"
                    visible="VehicleIncident.Vehicle.LicensePlate.length &gt; 0"/>
                  <TextInput
                    id="VehicleVIN"
                    labelAbove="true"
                    value="VehicleIncident.Vehicle.Vin"
                    visible="VehicleIncident.Vehicle.LicensePlate.length == 0 and VehicleIncident.Vehicle.Vin.length &gt; 0"/>
                  <TextAreaInput
                    id="VehicleIncidentDescription"
                    labelAbove="true"
                    value="VehicleIncident.Description"
                    visible="VehicleIncident.Description.HasContent"/>
                  <ListViewInput
                    def="VehicleIncidentOccupantsLV(vehicleOccupants, VehicleIncident, Wizard)"
                    label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.VehicleIncidentIterator.Occupants.Title&quot;)"
                    labelAbove="true"
                    visible="!vehicleOccupants.Empty">
                    <Toolbar/>
                  </ListViewInput>
                </InputColumn>
              </DetailViewPanel>
              <Spacer
                height="8px"/>
            </PanelIterator>
          </PanelColumn>
          <PanelColumn>
            <PanelIterator
              elementName="Pedestrian"
              id="PedestrianIterator"
              value="Claim.getClaimContactsByRole( ContactRole.TC_PEDESTRIAN )"
              valueType="entity.ClaimContact[]">
              <DetailViewPanel
                border="true"
                columnDivider="false"
                id="PedestrianDV"
                inline="true"
                width="320px">
                <InputColumn
                  width="30px">
                  <Label
                    icon="gw.api.claim.IncidentIconSet.PANEL_PEDESTRIAN_ICON"
                    iconType="svgFileName"
                    id="PedestrianIcon"/>
                </InputColumn>
                <InputColumn
                  width="250px">
                  <TextInput
                    action="FNOLContactPopup.push(Claim, Pedestrian, TC_PEDESTRIAN, null, Wizard)"
                    boldValue="true"
                    hideChildrenIfReadOnly="false"
                    id="PersonName"
                    labelAbove="true"
                    value="Pedestrian.DisplayName == &quot;&quot; ? DisplayKey.get(&quot;Web.NewLossDetailsScreen.PedestrianIterator.Pedestrian.Value&quot;) : Pedestrian.DisplayName.elide(25)">
                    <MenuItem
                      action="FNOLContactPopup.push(Claim, Pedestrian, TC_PEDESTRIAN, null, Wizard)"
                      id="EditPedestrian"
                      label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.PedestrianIterator.EditPedestrian&quot;)"/>
                    <MenuItem
                      action="Claim.removeRole( ContactRole.TC_PEDESTRIAN, Pedestrian.Contact )"
                      confirmMessage="DisplayKey.get(&quot;Web.NewLossDetailsScreen.PedestrianIterator.RemovePedestrianMenu.ConfirmMessage&quot;)"
                      id="RemovePedestrian"
                      label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.PedestrianIterator.RemovePedestrian&quot;)"
                      visible="not hasExposures(Pedestrian)"/>
                  </TextInput>
                  <TextAreaInput
                    id="InjuryIncidentDescription"
                    labelAbove="true"
                    value="Wizard.getInjuryDescription(Pedestrian)"
                    visible="Wizard.getInjuryDescription(Pedestrian).HasContent"/>
                </InputColumn>
              </DetailViewPanel>
              <Spacer
                height="8px"/>
            </PanelIterator>
          </PanelColumn>
          <PanelColumn>
            <PanelIterator
              elementName="PropertyIncident"
              id="PropertyIncidentIterator"
              value="Claim.FixedPropertyIncidentsOnly"
              valueType="entity.FixedPropertyIncident[]">
              <DetailViewPanel
                border="true"
                columnDivider="false"
                id="PropertyIncidentDV"
                inline="true"
                width="320px">
                <InputColumn
                  width="30px">
                  <Label
                    icon="PropertyIncident.PanelIcon"
                    iconType="svgFileName"
                    id="PropertyIcon"/>
                </InputColumn>
                <InputColumn
                  width="250px">
                  <TextInput
                    action="EditFixedPropertyIncidentPopup.push(PropertyIncident, true)"
                    boldValue="true"
                    hideChildrenIfReadOnly="false"
                    id="PropertyName"
                    labelAbove="true"
                    value="PropertyIncident.DisplayName == &quot;&quot; ? DisplayKey.get(&quot;Web.NewLossDetailsScreen.PropertyIncidentIterator.Property.Value&quot;) : PropertyIncident.DisplayName.elide(20)">
                    <MenuItem
                      action="EditFixedPropertyIncidentPopup.push(PropertyIncident, true)"
                      id="EditProperty"
                      label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.PropertyIncidentIterator.Property.PropertyDamage.Edit&quot;)"/>
                    <MenuItem
                      action="Claim.removeFromIncidents( PropertyIncident ); gw.api.claim.FnolServiceRequestHelper.removeIncidentServiceRequests(PropertyIncident, Wizard)"
                      confirmMessage="DisplayKey.get(&quot;Web.NewLossDetailsScreen.PropertyIncidentIterator.RemovePropertyMenu.ConfirmMessage&quot;)"
                      id="RemoveProperty"
                      label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.PropertyIncidentIterator.Property.PropertyDamage.Remove&quot;)"
                      visible="PropertyIncident.Exposures.IsEmpty"/>
                  </TextInput>
                  <TextAreaInput
                    id="PropertyIncidentDescription"
                    labelAbove="true"
                    value="PropertyIncident.Description"
                    visible="PropertyIncident.Description.HasContent"/>
                </InputColumn>
              </DetailViewPanel>
              <Spacer
                height="8px"/>
            </PanelIterator>
          </PanelColumn>
        </PanelRow>
      </PanelSet>
    </PanelRef>
    <PanelRef>
      <TitleBar
        title="DisplayKey.get(&quot;Web.NewLossDetailsScreen.AtTheSceneDV.AtTheSceneLabel&quot;)"/>
      <DetailViewPanel
        id="AtTheSceneDV">
        <InputColumn>
          <ListViewInput
            def="EditableWitnessesLV(Claim.getClaimContactRolesByRole(ContactRole.TC_WITNESS), Claim, ContactRole.TC_WITNESS)"
            editable="true"
            id="WitnessLV"
            label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.AtTheSceneDV.AnyWitnesses.Label&quot;)"
            labelAbove="true">
            <Toolbar>
              <IteratorButtons
                iterator="WitnessLV.EditableWitnessesLV"/>
            </Toolbar>
          </ListViewInput>
          <ListViewInput
            def="EditableOfficialsLV(Claim)"
            editable="true"
            id="Claim_Officials"
            label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.AtTheSceneDV.Officials.Label&quot;)"
            labelAbove="true">
            <Toolbar>
              <IteratorButtons
                iterator="Claim_Officials.EditableOfficialsLV"/>
            </Toolbar>
          </ListViewInput>
          <ListViewInput
            def="MetroReportsLV(Claim)"
            editable="true"
            id="PoliceReportLV"
            label="DisplayKey.get(&quot;Web.NewLossDetailsScreen.AtTheSceneDV.PoliceReport.Label&quot;)"
            labelAbove="true">
            <Toolbar>
              <IteratorButtons
                addLabel="DisplayKey.get(&quot;Button.Metro.New&quot;)"
                iterator="PoliceReportLV.MetroReportsLV"
                removeFlags="any RemovableMetroReport, no NotRemovableMetroReport"/>
            </Toolbar>
          </ListViewInput>
        </InputColumn>
      </DetailViewPanel>
    </PanelRef>
    <PanelRef>
      <TitleBar
        title="DisplayKey.get(&quot;Web.NewLossDetailsScreen.CategorizationDV.CategorizationLabel&quot;)"/>
      <DetailViewPanel
        id="CategorizationDV">
        <InputColumn>
          <TypeKeyInput
            editable="true"
            id="Notification_Fault"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewClaimLossDetailsAuto.Claim.Notification.Fault&quot;)"
            value="Claim.FaultRating"
            valueType="typekey.FaultRating"/>
          <TypeKeyInput
            editable="true"
            id="Claim_Weather"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewClaimLossDetailsAuto.Claim.Weather&quot;)"
            value="Claim.Weather"
            valueType="typekey.WeatherType"/>
          <RangeInput
            editable="true"
            id="Catastrophe_CatastropheNumber"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewClaimLossDetailsAuto.Claim.Catastrophe.CatastropheNumber&quot;)"
            required="false"
            value="Claim.Catastrophe"
            valueRange="gw.api.admin.CatastropheUtil.getCatastrophes()"
            valueType="entity.Catastrophe"/>
          <RangeInput
            editable="true"
            id="Claim_PermissionRequired"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewClaimLossDetailsAuto.Claim.PermissionRequired&quot;)"
            required="false"
            value="Claim.PermissionRequired"
            valueRange="gw.api.claim.ClaimUtil.getAvailableTypes()"
            valueType="typekey.ClaimSecurityType"/>
        </InputColumn>
      </DetailViewPanel>
    </PanelRef>
    <Code><![CDATA[function removeVehicleIncident(vehicleIncidentParam : VehicleIncident) {
      for (report in Claim.MetroReports) {
        if (report.VehicleIncident == vehicleIncidentParam) {
          throw new gw.api.util.DisplayableException(DisplayKey.get("Web.NewLossDetailsScreen.CannotDeleteVehicleIncidentExceptionLabel"))
        }
      }

      removeInjIncidentFor(vehicleIncidentParam.driver)
      for (person in vehicleIncidentParam.passenger) {
        removeInjIncidentFor(person)
      }

      Claim.removeFromIncidents(vehicleIncidentParam)
      // Remove the Services Request attached to vehicleIncidentParam
      gw.api.claim.FnolServiceRequestHelper.removeIncidentServiceRequests(vehicleIncidentParam, Wizard)
    }

    function isNewlyCreatedVehicleIncident(vi : VehicleIncident) : boolean {
      return vi != null and vi.Vehicle.ShortDisplayName == DisplayKey.get("Java.DisplayName.NewlyCreated")
    }

    function removeInjIncidentFor(person : Person) {
      var injIncident = Wizard.getInjuryIncident(Claim.getClaimContact(person))
      if (injIncident != null) {
        injIncident.injured = null
        Claim.removeFromIncidents(injIncident)
      }
    }

    function hasExposures(pedestrian : entity.ClaimContact) : boolean {
      return Wizard.getInjuryIncident(pedestrian)?.Exposures.HasElements
    }]]></Code>
  </Screen>
</PCF>