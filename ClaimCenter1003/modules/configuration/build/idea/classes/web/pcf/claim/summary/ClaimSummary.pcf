<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Page
    beforeCommit="operationCallbackHelper.BeforeCommitAction()"
    canEdit="true"
    canVisit="perm.Claim.view(Claim) and perm.System.viewclaimsummary and (Claim.State != ClaimState.TC_DRAFT)"
    id="ClaimSummary"
    title="DisplayKey.get(&quot;Web.Claim.ClaimSummary&quot;)">
    <LocationEntryPoint
      signature="ClaimSummary(Claim : Claim)"/>
    <LocationEntryPoint
      signature="ClaimSummary(Claim : Claim, excludeConfidentialNotes : boolean)"/>
    <Variable
      name="Claim"
      type="Claim"/>
    <Variable
      initialValue="false"
      name="excludeConfidentialNotes"
      type="boolean"/>
    <Variable
      initialValue="new gw.vendormanagement.ServiceRequestOperationCallbackHelper()"
      name="operationCallbackHelper"
      type="gw.vendormanagement.ServiceRequestOperationCallbackHelper"/>
    <Variable
      initialValue="new gw.api.claim.ClaimSummaryUIHelper(Claim)"
      name="claimUIHelper"
      type="gw.api.claim.ClaimSummaryUIHelper"/>
    <Screen
      id="ClaimSummaryScreen">
      <Toolbar/>
      <PanelRow
        columnDivider="true">
        <PanelColumn>
          <DetailViewPanel>
            <InputColumn
              minWidth="300px">
              <Label
                id="BasicsLabel"
                label="DisplayKey.get(&quot;Web.ClaimSummary.Headline.Basics.Label&quot;)"/>
              <BarInput
                highInclusive="!claimUIHelper.onlyTargetValueExists(Claim.DaysOpenClaimMetric.Limit)"
                highThreshold="claimUIHelper.HighThreshold"
                id="DaysOpenProgressBar"
                label="Claim.State.DisplayName"
                labelAbove="true"
                lowInclusive="claimUIHelper.noYellowValueExists(Claim.DaysOpenClaimMetric.Limit)"
                lowThreshold="claimUIHelper.LowThreshold"
                percentage="claimUIHelper.DaysOpenPercentage"
                status="claimUIHelper.OpenStatus"
                switchHighLowStyle="true"
                visible="!Claim.Closed and claimUIHelper.showBarInput()"/>
              <TextInput
                id="DaysOpenText"
                labelAbove="true"
                value="DisplayKey.get(&quot;Web.ClaimSummary.Headline.Basics.ClaimOpenWithState&quot;,  Claim.State.DisplayName, claimUIHelper.OpenStatus)"
                visible="!Claim.Closed and !claimUIHelper.showBarInput()"/>
              <TextInput
                id="ClaimClosedText"
                label="Claim.State.DisplayName"
                labelAbove="true"
                value="claimUIHelper.getClaimClosedText()"
                visible="Claim.Closed"/>
              <TextInput
                id="WCInjuryWorkStatus"
                label="DisplayKey.get(&quot;NVV.Claim.ClaimSummary.WorkStatus&quot;)"
                value="Claim.getWorkStatusMessage()"
                visible="gw.config.LOBAbstraction.ForClaim.ForLossType.isWorkComp(Claim)"/>
              <ContentInput
                id="ThreePointContactIcons"
                label="DisplayKey.get(&quot;Web.ClaimSummary.Headline.ThreePointContact.Label&quot;)"
                visible="gw.config.LOBAbstraction.ForClaim.ForLossType.isWorkComp(Claim) and Claim.shouldShowWCThreePointContactActivities()">
                <Link
                  icon="Claim.getWCContactEmployerActivityStatus().First"
                  iconColor="Claim.getWCContactEmployerActivityStatus().Second"
                  iconType="svgFileName"
                  id="EmployerThreePointContact"
                  tooltip="Claim.getWCContactEmployerActivityStatus().Third"/>
                <Link
                  icon="Claim.getWCContactEmployeeActivityStatus().First"
                  iconColor="Claim.getWCContactEmployeeActivityStatus().Second"
                  iconType="svgFileName"
                  id="EmployeeThreePointContact"
                  tooltip="Claim.getWCContactEmployeeActivityStatus().Third"/>
                <Link
                  icon="Claim.getWCContactMedProviderActivityStatus().First"
                  iconColor="Claim.getWCContactMedProviderActivityStatus().Second"
                  iconType="svgFileName"
                  id="MedicalProviderThreePointContact"
                  tooltip="Claim.getWCContactMedProviderActivityStatus().Third"/>
              </ContentInput>
              <InputSetRef
                def="ReturnToWorkInputSet(gw.config.LOBAbstraction.ForClaim.ForLossType.isWorkComp(Claim) ? Claim.ensureClaimInjuryIncident() : null, false)"
                id="WC_RTW"
                mode="&quot;WC&quot;"
                visible="gw.config.LOBAbstraction.ForClaim.ForLossType.isWorkComp(Claim) and Claim.getLossTimeExposure() != null"/>
            </InputColumn>
          </DetailViewPanel>
        </PanelColumn>
        <PanelColumn>
          <DetailViewPanel>
            <InputColumn
              minWidth="100px">
              <Label
                label="DisplayKey.get(&quot;Web.ClaimSummary.Financials.Title&quot;)"/>
            </InputColumn>
          </DetailViewPanel>
          <PanelRow>
            <ChartPanel
              displayLegend="false"
              id="ClaimFinancialsPieChart"
              height="100"
              legendPosition="bottom"
              type="Pie"
              width="100">
              <Variable
                initialValue="{gw.api.web.color.GWColor.THEME_NUMBERS_POSITIVE, gw.api.web.color.GWColor.THEME_NUMBERS_NEUTRAL}"
                name="pieFillColors"
                type="List&lt;gw.api.web.color.GWColor&gt;"/>
              <Variable
                initialValue="{gw.api.web.color.GWColor.THEME_APP_BACKGROUND}"
                name="pieStrokeColors"
                type="List&lt;gw.api.web.color.GWColor&gt;"/>
              <DataSeries
                fillColor="pieFillColors"
                dataValueType="Map.Entry&lt;String, java.lang.Integer&gt;"
                dataValues="gw.api.financials.FinancialsPieChartUtil.getFinancialsParameters(Claim).entrySet().toList()"
                categoryLabel="value.Key"
                strokeColor="pieStrokeColors"
                value="value.Value"/>
            </ChartPanel>
            <DetailViewPanel>
              <InputColumn
                minWidth="300px">
                <TextInput
                  align="right"
                  id="TotalGrossIncurred"
                  label="DisplayKey.get(&quot;Web.ClaimSummary.Headline.Financials.GrossIncurred&quot;)"
                  value="gw.api.util.CurrencyUtil.renderAsCurrency(Claim.ClaimRpt.TotalIncurredGross)"/>
                <TextInput
                  align="right"
                  id="Paid"
                  label="DisplayKey.get(&quot;Web.ClaimSummary.Headline.Financials.Paid&quot;)"
                  value="Claim.TotalPaidClaimMetric.DisplayValue"/>
                <TextInput
                  align="right"
                  id="Recovered"
                  label="DisplayKey.get(&quot;Web.ClaimSummary.Headline.Financials.Recovered&quot;)"
                  value="gw.api.util.CurrencyUtil.renderAsCurrency(Claim.ClaimRpt.TotalRecoveries)"/>
              </InputColumn>
            </DetailViewPanel>
          </PanelRow>
        </PanelColumn>
        <PanelColumn>
          <DetailViewPanel>
            <InputColumn
              id="ClaimRiskIndicators"
              minWidth="300px">
              <Label
                id="RiskIndicatorLabel"
                label="DisplayKey.get(&quot;Web.ClaimSummary.Headline.RiskIndicators.Label&quot;)"/>
              <Label
                boldLabel="false"
                id="RiskIndicatorNone"
                label="DisplayKey.get(&quot;Web.ClaimSummary.Headline.RiskIndicators.None&quot;)"
                visible="!Claim.ClaimIndicators.hasMatch( \ c -&gt; c.IsOn)"/>
              <InputIterator
                elementName="indicator"
                id="RiskIndicatorIterator"
                value="Claim.ClaimIndicators.where( \ c -&gt; c.IsOn).orderBy( \ e -&gt; ((e.Subtype.Priority) as java.lang.Comparable&lt;java.lang.Object&gt;)).toTypedArray()"
                valueType="entity.ClaimIndicator[]">
                <ContentInput
                  labelAbove="true">
                  <Link
                    icon="indicator.Icon"
                    iconColor="indicator.IconColor"
                    iconType="svgFileName"
                    id="IndicatorIcon"
                    tooltip="indicator.HoverText != indicator.Text ? indicator.HoverText : &quot;&quot;"/>
                  <Link
                    id="IndicatorText"
                    label="indicator.Text"/>
                </ContentInput>
              </InputIterator>
            </InputColumn>
          </DetailViewPanel>
        </PanelColumn>
      </PanelRow>
      <PanelDivider/>
      <PanelRef
        id="Title">
        <PanelRow>
          <PanelColumn
            id="MyPanel">
            <PanelRow>
              <DetailViewPanel
                columnDivider="false">
                <InputColumn
                  minWidth="440px">
                  <DateInput
                    dateFormat="short"
                    id="LossDate"
                    label="DisplayKey.get(&quot;NVV.Claim.ClaimSummary.LossDate&quot;)"
                    timeFormat="short"
                    value="Claim.LossDate"/>
                  <DateInput
                    id="ReportDate"
                    label="DisplayKey.get(&quot;NVV.Claim.ClaimSummary.ReportDate&quot;)"
                    value="Claim.ReportedDate"/>
                  <ContentInput
                    labelAbove="true"
                    visible="Claim.hasOtherInstructions()">
                    <Link
                      action="ClaimOtherInstructionWorksheet.goInWorkspace(Claim)"
                      id="ViewClaimOtherInstructions"
                      label="DisplayKey.get(&quot;NVV.Claim.SpecialHandling.OtherInstructions.ViewButton&quot;)"/>
                  </ContentInput>
                </InputColumn>
                <InputColumn>
                  <TextInput
                    id="Location"
                    label="DisplayKey.get(&quot;NVV.Claim.ClaimSummary.Location&quot;)"
                    value="Claim.LossLocation.DisplayName"/>
                  <TextAreaInput
                    id="Description"
                    label="DisplayKey.get(&quot;NVV.Claim.ClaimSummary.Description&quot;)"
                    maxChars="60"
                    numRows="2"
                    value="Claim.Description"/>
                </InputColumn>
              </DetailViewPanel>
            </PanelRow>
          </PanelColumn>
        </PanelRow>
      </PanelRef>
      <PanelRef
        def="ClaimSummaryExposuresLV(Claim, Claim.Exposures)">
        <TitleBar
          title="DisplayKey.get(&quot;Web.ClaimSummary.ExposuresLV.Title&quot;)"/>
        <Toolbar/>
      </PanelRef>
      <PanelRef
        def="ServiceRequestLV(Claim, true, operationCallbackHelper)">
        <TitleBar
          title="DisplayKey.get(&quot;Web.ClaimSummary.ServiceRequestLV.Title&quot;)"/>
        <Toolbar/>
      </PanelRef>
      <PanelRow>
        <PanelColumn
          maxWidth="900px"
          minWidth="450px">
          <PanelRef
            def="ClaimSummaryActivitiesLV(Claim)">
            <TitleBar
              title="DisplayKey.get(&quot;Web.ClaimSummary.ActivitiesLV.Title&quot;)"/>
            <Toolbar/>
          </PanelRef>
          <PanelRef
            def="ClaimSummaryMattersLV(Claim.Matters, Claim)"
            visible="perm.Matter.view(Claim) and perm.System.viewmatters">
            <TitleBar
              title="DisplayKey.get(&quot;Web.ClaimSummary.MattersLV.Title&quot;)"/>
            <Toolbar/>
          </PanelRef>
          <PanelRef
            def="ClaimSummaryAssociatedClaimsLV(Claim, Claim.Associations)">
            <TitleBar
              title="DisplayKey.get(&quot;Web.ClaimSummary.AssociatedClaimsLV.Title&quot;)"/>
            <Toolbar/>
          </PanelRef>
        </PanelColumn>
        <PanelColumn
          maxWidth="900px"
          minWidth="450px">
          <PanelRef
            def="NotesLV(excludeConfidentialNotes ? Claim.NonconfidentialNotes : Claim.ViewableNotes)">
            <TitleBar
              title="DisplayKey.get(&quot;Web.ClaimSummary.NotesLV.Title&quot;)"/>
            <Toolbar/>
          </PanelRef>
          <PanelRef
            def="PeopleInvolvedLV(Claim, Claim.getContactsWithPreload())">
            <TitleBar
              title="DisplayKey.get(&quot;Web.ClaimSummary.PartiesInvolvedLV.Title&quot;)"/>
            <Toolbar/>
          </PanelRef>
        </PanelColumn>
      </PanelRow>
    </Screen>
  </Page>
</PCF>