package gw.sampledata

uses gw.api.databuilder.FinancialCovTermBuilder
uses gw.api.util.CurrencyUtil
uses gw.pl.persistence.core.Bundle

@Export
class SampleHOPClaimWithHO5Policy extends SampleDataBase {

  construct(inCache: SampleDataCache) {
    super(inCache)
  }

  override property get Description(): String {
    return "A Homeowners (HOP) Claim and associated Contacts, Dwelling (HO5) Policies, Exposures, Notes, ClaimContacts, Activities and Financials"
  }

  override function testSampleData(bundle: Bundle) {
    {
      var contactDemoSample2375 = new gw.api.databuilder.PersonBuilder()
          .withLastName("Albertson")
          .withPublicId("demo_sample:2375")
          .withFirstName("John")
          .withPrimaryAddressSetEarly(new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("1244 Fair Oaks Ave")
              .withCountry(TC_US)
              .withPostalCode("91101")
              .withState(State.TC_CA)
              .withAddressType(TC_HOME)
              .withCity("Pasadena"))
          .withWorkPhone("213-457-6540")
          .create(bundle)

      var contactDemoSample2376 = new gw.api.databuilder.CCCompanyVendorBuilder()
          .withCompanyName("Citizen Corps")
          .withPrimaryAddressSetEarly(new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("546 Elka Drive")
              .withCountry(TC_US)
              .withPostalCode("91101")
              .withState(State.TC_CA)
              .withAddressType(TC_HOME)
              .withCity("Santa Monica"))
          .withWorkPhone("213-897-5431")
          .create(bundle)

      var policyLocationDempSample1 = new gw.api.databuilder.PolicyLocationBuilder()
          .withAddress(new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("425 Madison St.")
              .withCountry(TC_US)
              .withPostalCode("60606")
              .withState(State.TC_IL)
              .withAddressType(TC_BUSINESS)
              .withCity("Chicago"))
          .create(bundle)

      var HO5policy = new gw.api.databuilder.PolicyBuilder()
          .withExpirationDate(BaseDate.addDays(185))
          .withUnderwritingCo(TC_PARENT)
          .withVerified(true)
          .withOrigEffectiveDate(BaseDate.addDays(-2005))
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withUnderwritingGroup(TC_ACME_PROP)
          .withEffectiveDate(BaseDate.addDays(-180))
          .withStatus(TC_INFORCE)
          .withPolicyNumber("73-300676")
          .withPublicId("demo_sample:3040")
          .withTotalProperties(1)
          .withPolicyType(TC_HOPHOMEOWNERS)
          .withTotalVehicles(0)
          .withRiskUnit(new gw.api.databuilder.PropertyRUBuilder()
              .withRUNumber(1)
              .withPolicyLocation(policyLocationDempSample1)
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(TC_HOPCOVA)
                  .withIncidentLimit(600000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(TC_HOPCOVB)
                  .withIncidentLimit(50000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(TC_HOPCOVC)
                  .withIncidentLimit(125000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(TC_HOPCOVD)
                  .withIncidentLimit(250bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPSECTIONIDEDUCTIBLES)
                  .withCovTerm(new FinancialCovTermBuilder()
                      .withCovTermPattern(CovTermPattern.TC_HOPSECTIONIDEDUCTIBLESWINDSTORM)
                      .withFinancialAmount(1000bd.ofDefaultCurrency()))
                  .withCovTerm(new FinancialCovTermBuilder()
                      .withCovTermPattern(CovTermPattern.TC_HOPSECTIONIDEDUCTIBLESHURRICANE)
                      .withFinancialAmount(2000bd.ofDefaultCurrency()))
                  .withCovTerm(new FinancialCovTermBuilder()
                      .withCovTermPattern(CovTermPattern.TC_HOPSECTIONIDEDUCTIBLESOTHERPERILS)
                      .withFinancialAmount(500bd.ofDefaultCurrency())))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPORDINANCEORLAW))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPDEBRISREMOVAL))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPDEBRISTREEREMOVAL)
                  .withIncidentLimit(2000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPREASONABLEREPAIRS))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPFIREDEPTCHARGES)
                  .withIncidentLimit(1500bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPINFLATIONPROTECTION))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPFUNGUSMOLDREMEDIATION))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPEMERGENCYPROPERTYREMOVAL))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPTREESSHRUBSPLANTSLAWNS)
                  .withIncidentLimit(1000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPLOCKREPLACEMENT))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPEMERGENCYLIVINGEXPENSE)
                  .withIncidentLimit(10000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPREFRIGERATEDCONTENTS)
                  .withIncidentLimit(1000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPDATAANDRECORDS)
                  .withIncidentLimit(1500bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPLANDLORDSFURNISHINGS)
                  .withIncidentLimit(25000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPFIREEXTINGUISHERRECHARGE)
                  .withIncidentLimit(100bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPPERSONALPROPERTYOFFPREMISES)
                  .withIncidentLimit(2500bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPDWELLINGUNDERCONSTRUCTION))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPMORTGAGECLOSINGCOSTEXPENSE)
                  .withIncidentLimit(7000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPCOLLAPSE))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPVOLCANICACTION))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPCONSTRUCTIONPERMITINCREASECOSTS))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPGRAVEMARKERS)
                  .withIncidentLimit(5000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPGLASS))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPBACKUPSEWERSDRAINSPUMP)
                  .withIncidentLimit(5000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPEARTHQUAKE))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPESCAPEDLIQUIDFUEL)
                  .withIncidentLimit(2000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPEXTENDEDRESIDENCETHEFT))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPFOUNDATIONWATERDAMAGE))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPSINKHOLE))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPSPECIALCOMPUTERCOVERAGE))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPGOLFCART))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPSTRUCTURESRENTEDTOOTHERSRESIDENCEPREMISES))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPINCLIMITPERSPROPERTYATOTHERRESIDENCES))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPINCLIMITOTHERSTRUCTURES))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                  .withType(CoverageType.TC_HOPSPECIFICSTRUCTSAWAYFROMRESIDENCE))
          )
          .withContactInRole(contactDemoSample2375, TC_INSURED)
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(TC_HOPCOVE)
              .withIncidentLimit(800000bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(TC_HOPCOVF)
              .withIncidentLimit(5000bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPCREDITCARDPROTECTION)
              .withIncidentLimit(500bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPDAMAGEPROPOTHERS)
              .withIncidentLimit(1000bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPFIRSTAID))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPIDTHEFT)
              .withCovTerm(new FinancialCovTermBuilder()
                  .withCovTermPattern(CovTermPattern.TC_HOPIDTHEFTDEDUCTIBLE)
                  .withFinancialAmount(500bd.ofDefaultCurrency()))
              .withIncidentLimit(150000bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPLOSSASSESSMENT)
              .withIncidentLimit(2000bd.ofDefaultCurrency()))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPREWARD))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPVALUABLEPERSONALPROPERTY))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPSCHEDULEDPERSONALPROPERTY))
          .withCoverage(new gw.api.databuilder.PolicyCoverageBuilder()
              .withType(CoverageType.TC_HOPASSISTEDLIVINGCARE))

      var claim = new gw.api.databuilder.ClaimBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withLossDate(BaseDate.addDays(-25))
          .withLossCause(TC_WATERDAMAGE)
          .withWeatherRelated(true)
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withAssignmentDate(BaseDate.addDays(0))
          .withFlagged(TC_NEVERFLAGGED)
          .withLossLocation(new gw.api.databuilder.AddressBuilder()
              .withAddressLine1("425 Madison St.")
              .withCountry(TC_US)
              .withPostalCode("60606")
              .withState(State.TC_IL)
              .withAddressType(TC_BUSINESS)
              .withCity("Chicago"))
          .withClaimNumber("426-24-300180")
          .withMainContactType(TC_EMPLOYEE)
          .withReportedByType(TC_EMPLOYEE)
          .withLossType(TC_PR)
          .withValidationLevel(TC_NEWLOSS)
          .withPolicy(HO5policy)
          .withPropertyWaterDamage(new gw.api.databuilder.PropertyWaterDamageBuilder()
              .withWaterSource(TC_OTHER)
              .withHasWaterBeenTurnedOff(true))
          .withNote(new gw.api.databuilder.NoteBuilder()
              .withBody("EMS has been dispatched to insured's primary location to prevent further damage to the property. Insured was also asked to move living room furniture to another room if the water started collecting there.")
              .withAuthoringDate(BaseDate.addDays(-20)))
          .withNote(new gw.api.databuilder.NoteBuilder()
              .withBody("Spoke to the Insured. The rains had stopped and the EMS was able to plug the hole in the roof that has caused the damage. Need to check with insured about any mold damage.")
              .withAuthoringDate(BaseDate.addDays(-18)))
          .withAssignedGroup(findGroupByName("Midwest Property A"))
          .withJurisdictionState(TC_IL)
          .withReportedDate(BaseDate.addDays(-25))
          .withCoverageInQuestion(false)
          .withLOBCode(TC_HOPLINE)
          .withPublicID("demo_sample:30007")
          .withDescription("Flooding")
          .withState(TC_OPEN)
          .withAssignedUser(findUserByUserName("wdufraine"))
          .withContactInRole(contactDemoSample2375, TC_REPORTER)
          .withContactInRole(contactDemoSample2376, TC_EMS)
          .create(bundle)

      var coverageToShare = claim.Policy.RiskUnits.singleWhere(\r -> r.RUNumber == 1).Coverages.singleWhere(\c -> c.Type == TC_HOPCOVA)

      var incidentDemoSample1 = new gw.api.databuilder.DwellingIncidentBuilder()
          .withDescription("heavy rains led to water leaking through the roof damaging walls, carpets and kitchen floor.")
          .onClaim(claim)
          .create(bundle)

      var exposureDemoSample1 = new gw.api.databuilder.ExposureBuilder()
          .onClaim(claim)
          .withExposureType(TC_DWELLING)
          .withCoverage(coverageToShare)
          .withCoverageSubType(TC_HOPCOVA)
          .withIncident(incidentDemoSample1)
          .withState(ExposureState.TC_OPEN)
          .withPrimaryCoverage(TC_HOPCOVA)
          .withClaimant(claim.Insured)
          .create(bundle)

      var transactionSetDemoSample1 = new gw.api.databuilder.CheckSetBuilder()
          .withApprovalDate(BaseDate.addDays(-7))
          .withRequestingUser(findUserByUserName("aapplegate"))
          .withApprovalStatus(TC_APPROVED)
          .onClaim(claim)
          .create(bundle)

      var reserveLineDemoSample1 = new gw.api.databuilder.ReserveLineBuilder()
          .withExposure(exposureDemoSample1)
          .withCostType(TC_CLAIMCOST)
          .withCostCategory(TC_PROPERTY_REPAIR)
          .withClaim(claim)
          .create(bundle)

      var checkDemoSample1 = new gw.api.databuilder.CheckBuilder()
          .onClaim(claim)
          .withIssueDate(BaseDate.addDays(-6))
          .withScheduledSendDate(BaseDate.addDays(-6))
          .withBankAccount(TC_DEFAULT)
          .onCheckSet(transactionSetDemoSample1)
          .withPayTo("John Albertson")
          .withStatus(TC_ISSUED)
          .withPaymentMethod(TC_CHECK)
          .withCheckNumber("11059")
          .withPayee(new gw.api.databuilder.CheckPayeeBuilder()
              .withPayee(contactDemoSample2375)
              .withPayeeType(TC_CLAIMANT))
          .withType(TC_PRIMARY)
          .create(bundle)

      var transactionDemoSample10017 = new gw.api.databuilder.ReserveBuilder()
          .withReserveLine(reserveLineDemoSample1)
          .onExposure(exposureDemoSample1)
          .onTransactionSet(transactionSetDemoSample1)
          .withCostType(TC_CLAIMCOST)
          .withCostCategory(TC_PROPERTY_REPAIR)
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withStatus(TC_SUBMITTED)
          .onClaim(claim)
          .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
          .withLineItem(new gw.api.databuilder.TransactionLineItemBuilder()
              .withComments("property damage")
              .withClaimForExAmount(0bd.ofDefaultCurrency())
              .withReportingAmount(2000bd.ofDefaultCurrency())
              .withClaimAmount(2000bd.ofDefaultCurrency())
              .withReservingAmount(2000bd.ofDefaultCurrency())
              .withTransactionAmount(2000bd.ofDefaultCurrency())
              .withLineCategory(TC_OTHER)
              .withReportingForExAmount(0bd.ofDefaultCurrency()))
          .create(bundle)

      var transactionDemoSample20014 = new gw.api.databuilder.PaymentBuilder()
          .withReserveLine(reserveLineDemoSample1)
          .onTransactionSet(transactionSetDemoSample1)
          .withCostCategory(TC_BODY)
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withStatus(TC_SUBMITTED)
          .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
          .onCheck(checkDemoSample1)
          .withPaymentType(TC_PARTIAL)
          .onExposure(exposureDemoSample1)
          .withCostType(TC_CLAIMCOST)
          .onClaim(claim)
          .withLineItem(new gw.api.databuilder.TransactionLineItemBuilder()
              .withComments("property damage")
              .withClaimForExAmount(0bd.ofDefaultCurrency())
              .withReportingAmount(1500bd.ofDefaultCurrency())
              .withClaimAmount(1500bd.ofDefaultCurrency())
              .withReservingAmount(1500bd.ofDefaultCurrency())
              .withTransactionAmount(1500bd.ofDefaultCurrency())
              .withLineCategory(TC_OTHER)
              .withReportingForExAmount(0bd.ofDefaultCurrency()))
          .create(bundle)

      var claimInfoDemoSample30003 = new gw.api.databuilder.ClaimInfoBuilder()
          .withRootPublicId("demo_sample:30007")
          .withClaimNumber("426-24-300180")
          .onClaim(claim)
          .create(bundle)
    }
  }
}