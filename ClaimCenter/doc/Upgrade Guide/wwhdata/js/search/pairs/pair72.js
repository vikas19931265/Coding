function FileData_Pairs(x)
{
x.t("upgrade","guide");
x.t("passed","parameter");
x.t("statements","instantiates");
x.t("supports","few");
x.t("method","static");
x.t("method","logger");
x.t("method","com.guidewire.xx.system.logging");
x.t("method","loggerfactory.getlogger");
x.t("parameter","forcategory");
x.t("exist","note");
x.t("else","//");
x.t("version","prior");
x.t("converted","class");
x.t(".getlogger","factorylogger1");
x.t("apilogger","plloggercategory.api");
x.t("apilogger","loggercategory.api");
x.t("plloggercategory.api","webapi");
x.t("plloggercategory.api","ilogger");
x.t("plloggercategory.api","//");
x.t("extensive","purpose");
x.t("simplification","logging");
x.t("files","new");
x.t("within","component");
x.t("within","application");
x.t("every","application");
x.t("(wantoldstyle)","//");
x.t("7.0.1","7.0.2");
x.t("describes","changes");
x.t("static","logging");
x.t("static","members");
x.t("static","logger");
x.t("subclasses","loggercategory");
x.t("webapi","new");
x.t("webapi","loggercategory");
x.t("webapi","//");
x.t("7.0.2","8.0");
x.t("7.0.2","section");
x.t("7.0.2","although");
x.t("wrapper","around");
x.t("instance","loggercategory");
x.t("instance","logger");
x.t("instance","//");
x.t("instance","log");
x.t("subcategory2","logger");
x.t("loggercategory.api","webapi");
x.t("loggercategory.api","loggercategory");
x.t("loggercategory.api","logger");
x.t("loggercategory.api","//");
x.t("few","methods");
x.t("loses","no");
x.t("formatting","messages");
x.t("com.quidewire","package");
x.t("text_val.select","link");
x.t("statement","class");
x.t("interface","explicitly");
x.t("interface","no");
x.t("interface","provides");
x.t("interface","allows");
x.t("interface","claimcenter");
x.t("interface","control");
x.t("interface","instead");
x.t("interface","log");
x.t("necessary","functionality");
x.t("org.slf4jlogger","getapilogger");
x.t("conceptual","changes");
x.t("7.0.x","configuration");
x.t("7.0.x","upgrading");
x.t("com.guidewire.logging.loggercategory","loggercategory");
x.t("explicitly","prohibits");
x.t("loggerfactory","instance");
x.t("loggerfactory","two");
x.t("loggerfactory","class");
x.t("expose","logger");
x.t("gw.pl","counterpart");
x.t("however","new");
x.t("however","members");
x.t("guidewire","logging");
x.t("guidewire","updated");
x.t("bc","cc");
x.t("original","functionality");
x.t("factorylogger1","logger");
x.t("factorylogger1","sublogger2");
x.t("factorylogger1","loggerfactory.getinstance");
x.t("link","directly");
x.t("new","statement");
x.t("new","interface");
x.t("new","api");
x.t("new","logging");
x.t("new","loggercategory");
x.t("new","logger");
x.t("new","integer");
x.t("new","style");
x.t("8.0","logger");
x.t("certain","functions");
x.t("apisubcategory","new");
x.t("getapilogger","return");
x.t("getapilogger","mylogger.debug");
x.t("document","describes");
x.t("messsage","claimcenter");
x.t("determines","logging");
x.t("xx","loggercategory");
x.t("xx","product-specific");
x.t("file","application");
x.t("apicategory","loggercategory.api");
x.t("around","log4j");
x.t("add","remove");
x.t("forcategory","method");
x.t("logger1","new");
x.t("logger1","logger");
x.t("logger1","sublogger2");
x.t("logger1","loggerfactory.getlogger");
x.t("ilogger","apilogger");
x.t("ilogger","apisublogger");
x.t("api","supports");
x.t("api","(wantoldstyle)");
x.t("api","loses");
x.t("api","conceptual");
x.t("api","guidewire");
x.t("api","new");
x.t("api","old");
x.t("api","methods");
x.t("api","claimcenter");
x.t("api","loggercategory");
x.t("api","fewer");
x.t("api","function");
x.t("api","gw.pl.logging.logger");
x.t("api","private");
x.t("api","changes");
x.t("api","instantiate");
x.t("api","com.guidewire.logging.logger");
x.t("api","upgrading");
x.t("api","work");
x.t("api","//");
x.t("api","log");
x.t("api","logger.info");
x.t("guide","upgrading");
x.t("guide","update");
x.t("normally","application-specific");
x.t("remove","appenders");
x.t("loggers","old");
x.t("loggers","parameters");
x.t("loggers","com.guidewire.xx.system.logging");
x.t("loggers","defined");
x.t("pc","xx");
x.t("pc","mirror");
x.t("mirror","class");
x.t("factorylogger12","loggerfactory.getinstance");
x.t("directly","instantiate");
x.t("directly","page");
x.t("prohibits","certain");
x.t("text_val.focus","text_val.select");
x.t("infrastructure","extensive");
x.t("infrastructure","determines");
x.t("maintain","additional");
x.t("functionality","methods");
x.t("functionality","hides");
x.t("functionality","compared");
x.t("no","functionality");
x.t("no","longer");
x.t("category12","new");
x.t("obtain","instance");
x.t("obtain","logger");
x.t("exactly","instance");
x.t("appenders","within");
x.t("appenders","gw.pl.logging.loggerfactory");
x.t("retains","original");
x.t("changed","loggerfactory");
x.t("logging","api");
x.t("logging","infrastructure");
x.t("logging","old");
x.t("logging","functions");
x.t("logging","messages");
x.t("logging","level");
x.t("logging","configuration");
x.t("logging","usage");
x.t("logging","levels");
x.t("old","api");
x.t("old","style");
x.t("component","defining");
x.t("component","logger");
x.t("component","itself");
x.t("perform","logger");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("prior","claimcenter");
x.t("provides","necessary");
x.t("methods","obtain");
x.t("methods","changed");
x.t("methods","old");
x.t("parameters","new");
x.t("parameters","appname");
x.t("parameters","parms.tostring");
x.t("exists","static");
x.t("instantiating","loggers");
x.t("gw","package");
x.t("allows","slf4j");
x.t("claimcenter","upgrade");
x.t("claimcenter","7.0.1");
x.t("claimcenter","7.0.2");
x.t("claimcenter","7.0.x");
x.t("started","application");
x.t("second","class");
x.t("defining","logging");
x.t("functions","instantiate");
x.t("functions","previous");
x.t("hides","implementation");
x.t("error","occurred");
x.t("loggercategory","loggercategory.api");
x.t("loggercategory","loggerfactory");
x.t("loggercategory","apisubcategory");
x.t("loggercategory","getapilogger");
x.t("loggercategory","xx");
x.t("loggercategory","apicategory");
x.t("loggercategory","normally");
x.t("loggercategory","category12");
x.t("loggercategory","retain");
x.t("loggercategory","category1");
x.t("loggercategory","mylogger");
x.t("loggercategory","gw.api.system");
x.t("loggercategory","classes");
x.t("loggercategory","itself");
x.t("loggercategory","following");
x.t("loggercategory","class");
x.t("loggercategory","maintains");
x.t("gw.util","import");
x.t("appname","parameters");
x.t("appname","parms.tostring");
x.t("members","however");
x.t("members","instances");
x.t("members","predefined");
x.t("members","applications");
x.t("logger","converted");
x.t("logger","apilogger");
x.t("logger","instance");
x.t("logger","interface");
x.t("logger","factorylogger1");
x.t("logger","new");
x.t("logger","logger1");
x.t("logger","factorylogger12");
x.t("logger","loggercategory");
x.t("logger","members");
x.t("logger","logger");
x.t("logger","instead");
x.t("logger","mylogger.tostring");
x.t("logger","logger12");
x.t("logger","instances");
x.t("logger","apisublogger");
x.t("logger","deprecated");
x.t("logger","management");
x.t("logger","class");
x.t("logger","category");
x.t("first","class");
x.t("allowed","cannot");
x.t("messages","every");
x.t("messages","however");
x.t("messages","obtain");
x.t("messages","old");
x.t("messages","relevant");
x.t("sublogger2","loggercategory");
x.t("sublogger2","logger");
x.t("options","exist");
x.t("guidewire_selectall","var");
x.t("control","logging");
x.t("fewer","arbitrary");
x.t("getinstance","method");
x.t("function","guidewire_selectall");
x.t("function","maintaining");
x.t("implements","logging");
x.t("integer.tostring","(portnumber)");
x.t("gw.pl.logging.logger","getapilogger");
x.t("gw.pl.logging.logger","logger");
x.t("gw.pl.logging.logger","mylogger");
x.t("cannot","add");
x.t("cannot","logging");
x.t("loggerfactory.getinstance",".getlogger");
x.t("slf4j","formatting");
x.t("slf4j","private");
x.t("parms.tostring","logger.info");
x.t("private","org.slf4jlogger");
x.t("private","loggercategory");
x.t("private","gw.pl.logging.logger");
x.t("instead","loggercategory");
x.t("instead","gw.pl.logging.logger");
x.t("instead","logging.properties");
x.t("arbitrary","options");
x.t("changes","simplification");
x.t("changes","guidewire");
x.t("changes","logging");
x.t("section","guide");
x.t("purpose","logger");
x.t("purpose","changes");
x.t("gw.api.util","ilogger");
x.t("code","bc");
x.t("code","org.slf4j.logger");
x.t("retain","function");
x.t("counterpart","instantiating");
x.t("logger12","new");
x.t("logger12","loggerfactory.getlogger");
x.t("category1","subcategory2");
x.t("category1","new");
x.t("category1","loggercategory");
x.t("logger.forcategory","plloggercategory.api");
x.t("(portnumber)","else");
x.t("(portnumber)","new");
x.t("(portnumber)","passing");
x.t("instantiate","logger");
x.t("instantiate","class");
x.t("instantiate","application-specific");
x.t("com.guidewire.xx.system.logging","xx");
x.t("level","within");
x.t("level","logger");
x.t("return","plloggercategory.api");
x.t("return","loggercategory.api");
x.t("produces","logger");
x.t("previous","logger");
x.t("listening","port");
x.t("mylogger","getapilogger");
x.t("occurred","messsage");
x.t("org.slf4j.logger","instead");
x.t("org.slf4j.logger","mylogger");
x.t("longer","directly");
x.t("longer","getinstance");
x.t("longer","instantiate");
x.t("com.guidewire.logging","logger");
x.t("compared","old");
x.t("configuration","files");
x.t("configuration","second");
x.t("configuration","changes");
x.t("factory","produces");
x.t("instances","com.guidewire.logging.loggercategory");
x.t("instances","new");
x.t("instances","logger");
x.t("instances","gw.api.util.logger.forcategory");
x.t("instances","using");
x.t("usage","document");
x.t("com.guidewire.logging.logger","logger");
x.t("additional","static");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","logger");
x.t("loggerfactory.getlogger","method");
x.t("loggerfactory.getlogger","plloggercategory.api");
x.t("loggerfactory.getlogger","logger1");
x.t("maintaining","additional");
x.t("import","gw.util");
x.t("import","gw.api.util");
x.t("import","com.guidewire.logging");
x.t("import","gw.api.system");
x.t("although","changes");
x.t("apisublogger","new");
x.t("apisublogger","logger.forcategory");
x.t("apisublogger","loggerfactory.getlogger");
x.t("page","error");
x.t("upgrading","version");
x.t("upgrading","7.0.x");
x.t("upgrading","claimcenter");
x.t("purposes","first");
x.t("gw.api.system","xx");
x.t("gw.api.system","import");
x.t("behaves","exactly");
x.t("cc","pc");
x.t("inherits","loggers");
x.t("gw.pl.logging.loggerfactory","loggerfactory");
x.t("gw.api.util.logger.forcategory","forcategory");
x.t("defined","gw.pl");
x.t("application","interface");
x.t("application","component");
x.t("application","parameters");
x.t("application","appname");
x.t("application","cannot");
x.t("application","purpose");
x.t("com.guidewire.logging.loggerfactory","loggerfactory");
x.t("deprecated","update");
x.t("port","new");
x.t("port","integer.tostring");
x.t("two","purposes");
x.t("predefined","loggers");
x.t("classes","maintain");
x.t("classes","application-specific");
x.t("note","loggerfactory");
x.t("integer","(portnumber)");
x.t("applications","static");
x.t("applications","new");
x.t("itself","perform");
x.t("itself","old");
x.t("work","instances");
x.t("mylogger.debug","new");
x.t("mylogger.debug","logger");
x.t("mylogger.debug","//");
x.t("subclass","logger");
x.t("package","private");
x.t("package","import");
x.t("relevant","component");
x.t("management","within");
x.t("following","statements");
x.t("style","logger.info");
x.t("class","wrapper");
x.t("class","instance");
x.t("class","interface");
x.t("class","expose");
x.t("class","new");
x.t("class","no");
x.t("class","retains");
x.t("class","exists");
x.t("class","allowed");
x.t("class","implements");
x.t("class","factory");
x.t("class","behaves");
x.t("class","com.guidewire.logging.loggerfactory");
x.t("class","two");
x.t("class","subclass");
x.t("class","instantiates");
x.t("class","returns");
x.t("logging.properties","file");
x.t("using","com.quidewire");
x.t("using","gw");
x.t("using","logger");
x.t("using","slf4j");
x.t("//","new");
x.t("//","old");
x.t("//","loggercategory");
x.t("//","gw.pl.logging.logger");
x.t("//","org.slf4j.logger");
x.t("//","using");
x.t("instantiates","logging");
x.t("instantiates","logger");
x.t("levels","appenders");
x.t("returns","logger");
x.t("log4j","logger");
x.t("maintains","static");
x.t("product-specific","code");
x.t("var","text_val=eval");
x.t("passing","loggers");
x.t("log","messages");
x.t("log","application-specific");
x.t("category","passed");
x.t("category","inherits");
x.t("logger.info","started");
x.t("logger.info","listening");
x.t("updated","logging");
x.t("update","code");
x.t("update","configuration");
x.t("application-specific","subclasses");
x.t("application-specific","loggercategory");
x.t("application-specific","messages");
}
