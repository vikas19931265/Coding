function FileData_Pairs(x)
{
x.t("upgrade","example");
x.t("upgrade","version");
x.t("upgrade","performs");
x.t("upgrade","versioning");
x.t("upgrade","calls");
x.t("upgrade","operates");
x.t("upgrade","need");
x.t("upgrade","guide");
x.t("upgrade","fails");
x.t("upgrade","path");
x.t("upgrade","custom");
x.t("upgrade","prior");
x.t("upgrade","increment");
x.t("upgrade","claimcenter");
x.t("upgrade","archived");
x.t("upgrade","idatamodelupgrade");
x.t("upgrade","stops");
x.t("upgrade","against");
x.t("upgrade","code");
x.t("upgrade","return");
x.t("upgrade","made");
x.t("upgrade","triggers");
x.t("upgrade","process");
x.t("upgrade","runs");
x.t("upgrade","purposes");
x.t("upgrade","data");
x.t("upgrade","proceeds");
x.t("upgrade","executes");
x.t("upgrade","order");
x.t("upgrade","package");
x.t("upgrade","entity");
x.t("upgrade","update");
x.t("included","explain");
x.t("included","similar");
x.t("included","represent");
x.t("example","construct");
x.t("example","version");
x.t("example","beforeupgradeversiontrigger");
x.t("example","demonstration");
x.t("example","fix");
x.t("example","write");
x.t("example","triggers");
x.t("example","package");
x.t("example","afterupgradeversiontrigger");
x.t("createversioncheck","method");
x.t("createversioncheck","beforeupgradeversioncheck");
x.t("passed","instance");
x.t("passed","integer");
x.t("equal","number");
x.t("datamodelchangewithoutarchiveddocumentchange.make","new");
x.t("datamodelchangewithoutarchiveddocumentchange.make","droptablebeforeupgrade");
x.t("mycolumn","value");
x.t("complex","transformations");
x.t("iarchivedentityset","provides");
x.t("iarchivedentityset","iarchivedentity");
x.t("iarchivedentityset","object");
x.t("v6.0.0","start");
x.t("v6.0.0","custom");
x.t("v6.0.0","column");
x.t("v6.0.0","entity");
x.t("reported","version");
x.t("method","available");
x.t("method","delete");
x.t("method","accepts");
x.t("method","perform");
x.t("method","move");
x.t("method","define");
x.t("method","changes");
x.t("method","implementing");
x.t("method","gettypekeyid");
x.t("method","builder");
x.t("method","runs");
x.t("method","signatures");
x.t("method","following");
x.t("method","returns");
x.t("method","var");
x.t("columns","exist");
x.t("columns","updatetime");
x.t("columns","changing");
x.t("columns","adding");
x.t("exist","table");
x.t("exist","add");
x.t("exist","prior");
x.t("parameter","gettable");
x.t("parameter","idatamodelchange");
x.t("provide","protected");
x.t("provide","override");
x.t("available","iarchivedentityset");
x.t("available","version");
x.t("available","ibeforeupgradetable");
x.t("available","methods");
x.t("properties","type");
x.t("properties","list");
x.t("properties","name");
x.t("properties","iarchivedentity");
x.t("properties","types");
x.t("properties","dml");
x.t("transactions","transactionmanager");
x.t("possible","preceding");
x.t("customerdatamodelupgrade","implements");
x.t("gw.api.database.upgrade.after.afterupgradeversiontrigger","uses");
x.t("testdatamodelupgradeimpl","extends");
x.t("construct","tablename");
x.t("construct","super");
x.t("mybeforeupgradetrigger","extends");
x.t("v6.0.1","guidewire");
x.t("v6.0.1","column");
x.t("version","upgrade");
x.t("version","200");
x.t("version","trigger");
x.t("version","checks");
x.t("version","check");
x.t("version","6.0.0");
x.t("version","6.0.1");
x.t("version","6.0.2");
x.t("version","custom");
x.t("version","archived");
x.t("version","number");
x.t("version","restored");
x.t("version","triggers");
x.t("version","defined");
x.t("version","numbers");
x.t("version","entity");
x.t("version","250");
x.t("taking","beforeupgradeversiontrigger");
x.t("protected","gettable");
x.t("protected","methods");
x.t("protected","final");
x.t("propertya","entitye");
x.t("200","version");
x.t("200","situation");
x.t("200","during");
x.t("200","implementation");
x.t("200","result");
x.t("200","minor");
x.t("detected","guidewire");
x.t("afterupgradedatamodelchanges","list");
x.t("moves","new");
x.t("moves","data");
x.t("just","length");
x.t("just","row");
x.t("v6.0.2","guidewire");
x.t("v6.0.2","column");
x.t("implement","archiving");
x.t("implement","idatamodelupgrade");
x.t("gsrc","click");
x.t("full","listing");
x.t("create","create");
x.t("create","table");
x.t("create","beforeupgradeversiontrigger");
x.t("create","referenceinfo");
x.t("create","new");
x.t("create","custom");
x.t("create","define");
x.t("create","drop");
x.t("table","describes");
x.t("table","rename");
x.t("table","related");
x.t("table","check");
x.t("table","renaming");
x.t("table","list.add");
x.t("table","empty");
x.t("table","claimcenter");
x.t("table","override");
x.t("table","already");
x.t("table","_tablename");
x.t("table","column");
x.t("table","adding");
x.t("table","object");
x.t("rename","table");
x.t("rename","insertselect");
x.t("rename","backing");
x.t("rename","operation");
x.t("rename","newentityname");
x.t("rename","function");
x.t("rename","column");
x.t("studio","studio");
x.t("studio","creates");
x.t("studio","project");
x.t("studio","claimcenter/bin");
x.t("studio","show");
x.t("studio","expand");
x.t("studio","8.0.1");
x.t("contact","guidewire");
x.t("describes","actions");
x.t("describes","failure");
x.t("description","version");
x.t("description","property");
x.t("description","ientitypropertyinfo");
x.t("description","string");
x.t("description","issue");
x.t("xx_tablename",".getcolumn");
x.t("situation","version");
x.t("situation","note");
x.t("situation","column");
x.t("beforeupgradeversiontrigger","construct");
x.t("beforeupgradeversiontrigger","method");
x.t("beforeupgradeversiontrigger","intentionally");
x.t("beforeupgradeversiontrigger","few");
x.t("beforeupgradeversiontrigger","execute");
x.t("beforeupgradeversiontrigger","property");
x.t("beforeupgradeversiontrigger","custom");
x.t("beforeupgradeversiontrigger","implementations");
x.t("beforeupgradeversiontrigger","adds");
x.t("beforeupgradeversiontrigger","implementation");
x.t("beforeupgradeversiontrigger","correct");
x.t("beforeupgradeversiontrigger","structure");
x.t("beforeupgradeversiontrigger","package");
x.t("beforeupgradeversiontrigger","subclass");
x.t("beforeupgradeversiontrigger","class");
x.t("beforeupgradeversiontrigger","//");
x.t("beforeupgradeversiontrigger","afterupgradeversiontrigger");
x.t("beforeupgradeversiontrigger","var");
x.t("related","entity");
x.t("insertselect","returns");
x.t("instance","trigger");
x.t("instance","requires");
x.t("testa","(testa)");
x.t("10","aproperty");
x.t("xx_exttablename",".rename");
x.t("key","method");
x.t("key","methods");
x.t("key","operations");
x.t("required","properties");
x.t("required","update");
x.t("consistency","check");
x.t("intentionally","strings");
x.t("few","differences");
x.t("performs","actions");
x.t("action","event");
x.t("mytable","gettable");
x.t("editable","columns");
x.t("plugin","execute");
x.t("plugin","plugin");
x.t("plugin","dialog");
x.t("plugin","interface");
x.t("plugin","icon");
x.t("plugin","new");
x.t("plugin","simple");
x.t("plugin","gosu");
x.t("plugin","idatamodelupgrade");
x.t("plugin","function");
x.t("plugin","runs");
x.t("plugin","run");
x.t("plugin","signatures");
x.t("plugin","using");
x.t("plugin","class");
x.t("execute","method");
x.t("execute","rename");
x.t("execute","gettable");
x.t("execute","custom");
x.t("execute","function");
x.t("execute","//");
x.t("execute","var");
x.t("tables","columns");
x.t("backing","column");
x.t("try","new");
x.t("container","call");
x.t("creates","gwp");
x.t("cc_mytable_ext","final");
x.t("ub.withlogsql","(true)");
x.t("current","extension");
x.t("current","data");
x.t("renames","rows");
x.t("referenceinfo","string");
x.t("demonstration","purposes");
x.t("implemented","idatabaseupgrade");
x.t("implemented","archiving");
x.t("versioning","beforeupgradeversiontrigger");
x.t("uses","gw.api.database.upgrade.after.afterupgradeversiontrigger");
x.t("uses","java.lang.iterable");
x.t("uses","gw.api.database.dbfunction");
x.t("uses","gw.api.datamodel.upgrade.customerdatamodelupgrade");
x.t("uses","gw.api.database.upgrade.datamodelchangewithoutarchiveddocumentchange");
x.t("uses","gw.api.datamodel.upgrade.idatamodelchange");
x.t("uses","java.util.arraylist");
x.t("uses","gw.api.database.query");
x.t("uses","gw.api.database.upgrade.before.beforeupgradeversioncheck");
x.t("uses","gw.entity.ientitypropertyinfo");
x.t("uses","gw.api.database.upgrade.before.beforeupgradeversiontrigger");
x.t("uses","gw.plugin.upgrade.idatamodelupgrade");
x.t("cache","var");
x.t("dialog","type");
x.t("dialog","enter");
x.t("dialog","click");
x.t("ub.execute","upgrading");
x.t("ub.execute","afterupgradeversiontrigger");
x.t("pair","string");
x.t("until","several");
x.t("skipped","upgrade");
x.t("text_val.select","link");
x.t("interface","plugin");
x.t("interface","idatabaseupgrade");
x.t("interface","includes");
x.t("interface","provides");
x.t("interface","two");
x.t("interface","contains");
x.t("extension","version");
x.t("extension","tables");
x.t("extension","no");
x.t("provided","iafterupgradetable");
x.t("provided","following");
x.t("support","automated");
x.t("support","guidewire");
x.t("support","custom");
x.t("look","up");
x.t("icon","plus");
x.t("newcolumnname","setting");
x.t("updatepropertyvalue","propertyname");
x.t("necessary","archive");
x.t("introduced","default");
x.t("idatabaseupgrade","upgrade");
x.t("idatabaseupgrade","previously");
x.t("type","parameter");
x.t("type","updatepropertyvalue");
x.t("type","idatamodelupgrade");
x.t("type","xml");
x.t("type","given");
x.t("type","created");
x.t("open","studio");
x.t("open","claimcenter/build/gosudoc/index.html");
x.t("change","guidewire");
x.t("change","want");
x.t("change","future");
x.t("change","remaining");
x.t("sample","beforeupgradeversiontrigger");
x.t("deletes","just");
x.t("deletes","rows");
x.t("deletes","typekey");
x.t("deletes","even");
x.t("(testa)",".compare");
x.t("(testa)",".update");
x.t(".createtempcolumn","tmp_xyz");
x.t("datatypes.shorttext","var");
x.t("paymentinstrument.type.typeinfo.getproperty","description");
x.t("getpropertyvalue","propertyname");
x.t("7.0.x","database");
x.t("7.0.x","upgrading");
x.t("delete","deletes");
x.t("delete","gettable");
x.t("delete","custom");
x.t("time","archiveddocumentupgradeversiontrigger");
x.t("time","override");
x.t("time",".read");
x.t("calls","plugin");
x.t("mytypecode","gettypekeyid");
x.t("mytypecode","updatebuilder.execute");
x.t("ub","gettable");
x.t("ub","accounttable.update");
x.t("operates","single");
x.t("trigger","provide");
x.t("trigger","required");
x.t("trigger","wraps");
x.t("trigger","applies");
x.t("trigger","perform");
x.t("trigger","beforeupgradeversioncheckwrapper");
x.t("trigger","archived");
x.t("trigger","include");
x.t("trigger","wrote");
x.t("trigger","called");
x.t("trigger","executes");
x.t("trigger","classes");
x.t("trigger","run");
x.t("trigger","//");
x.t("trigger","minor");
x.t("execution","upgrade");
x.t("automated","data");
x.t("whenever","data");
x.t("java.lang.iterable","uses");
x.t("withdescription","select");
x.t("extend","create");
x.t("typekeyname","string");
x.t("navigating","claimcenter");
x.t("checks","example");
x.t("checks","delete");
x.t("checks","test");
x.t("checks","custom");
x.t("checks","triggers");
x.t("checks","px_test_a");
x.t("checks","correct");
x.t("checks","cases");
x.t("checks","associated");
x.t("entities","properties");
x.t("entities","taking");
x.t("entities","implement");
x.t("entities","organization");
x.t("entities","important");
x.t("entities","return");
x.t("entities","modify");
x.t("property","afterupgradedatamodelchanges");
x.t("property","description");
x.t("property","getafterupgradedatamodelchanges");
x.t("property","beforeupgradedatamodelchanges");
x.t("property","return");
x.t("property","given");
x.t("property","value");
x.t("property","getbeforeupgradedatamodelchanges");
x.t("guidewire","upgrade");
x.t("guidewire","version");
x.t("guidewire","studio");
x.t("guidewire","support");
x.t("guidewire","updates");
x.t("guidewire","gosu");
x.t("guidewire","adds");
x.t("guidewire","data");
x.t("iafterupgradecolumn","object");
x.t("require","version");
x.t("require","custom");
x.t("require","unique");
x.t("require","updated");
x.t("update.set","aproperty");
x.t("detect","addversioncheckproblem");
x.t("wraps","xml");
x.t("default","value");
x.t("link","directly");
x.t("want","execute");
x.t("want","check");
x.t("want","custom");
x.t("want","changes");
x.t("want","force");
x.t("want","run");
x.t("insert-select","operation");
x.t("signature","protected");
x.t("new","columns");
x.t("new","plugin");
x.t("new","name");
x.t("new","gosu");
x.t("new","iarchivedentity");
x.t("new","rows");
x.t("new","deleteevennumbersversiontrigger");
x.t("new","updatevaluesonaversiontrigger");
x.t("new","doselecttowastetimeversiontrigger");
x.t("new","query");
x.t("new","beforeupgradeversioncheck");
x.t("new","column");
x.t("new","package");
x.t("new","entity");
x.t("new","class");
x.t("new","arraylist");
x.t("differences","include");
x.t("certain","condition");
x.t("updates","property");
x.t("updates","default");
x.t("updates","odd");
x.t("aproperty","10");
x.t("aproperty","testa.type.typeinfo.getproperty");
x.t("aproperty","update.withdescription");
x.t("aproperty","dbfunction.expr");
x.t("start","version");
x.t("start","guidewire");
x.t("start","server");
x.t("single","xml");
x.t("objects","match");
x.t("objects","given");
x.t("getdatabaseupgradeversiontrigger","method");
x.t("iafterupgradetable","classes");
x.t("iafterupgradetable","sql");
x.t("iafterupgradetable","object");
x.t("command","claimcenter");
x.t("command","gwcc");
x.t("includes","hasversioncheck");
x.t("includes","getarchiveddocumentupgradeversiontrigger");
x.t("includes","gettypekeyid");
x.t("overwrite","createversioncheck");
x.t("paymentmethod","//");
x.t("document","iarchivedentityset");
x.t("document","time");
x.t("messsage","claimcenter");
x.t("list","create");
x.t("list","pair");
x.t("list","new");
x.t("list","iarchivedentity");
x.t("list","getafterupgradedatamodelchanges");
x.t("list","override");
x.t("list","idatamodelchange");
x.t("list","either");
x.t("gettable","method");
x.t("gettable","xx_tablename");
x.t("gettable","xx_exttablename");
x.t("gettable","cc_mytable_ext");
x.t("gettable","(testa)");
x.t("gettable","cc_sometable");
x.t("gettable","account");
x.t("gettable","(paymentinstrument)");
x.t("gettable","cc_test_a");
x.t("gettable","(_tablename)");
x.t("need","handle");
x.t("need","restore");
x.t("cc_user","list.add");
x.t("xx",".withlogsql");
x.t("xx","var");
x.t("entering","following");
x.t("entering","gwcc");
x.t("file","plugins");
x.t("denormalization","columns");
x.t("indicates","custom");
x.t("during","upgrade");
x.t("during","database");
x.t("organization","implemented");
x.t("actions","trigger");
x.t("actions","want");
x.t("actions","override");
x.t("actions","following");
x.t(".compare","subtype");
x.t(".compare","equals");
x.t("add","required");
x.t("add","plugin");
x.t("add","gosu");
x.t("add","column");
x.t("id","comparison");
x.t("id","equals");
x.t("guide","upgrading");
x.t("check","certain");
x.t("check","overwrite");
x.t("check","fails");
x.t("check","existence");
x.t("check","determine");
x.t("check","standalone");
x.t("check","cannot");
x.t("check","define");
x.t("check","override");
x.t("check","failure");
x.t("check","read");
x.t("check","query");
x.t("api","documentation");
x.t("unless","require");
x.t("due","data");
x.t("simple","data");
x.t("(171)","numeric");
x.t("applies","run");
x.t("propertyname","string");
x.t("according","data");
x.t("6.0.0","data");
x.t("archiving","want");
x.t("archiving","custom");
x.t("accepts","string");
x.t("claimcenter/build/gosudoc/index.html","beforeupgradeversiontrigger");
x.t("referred","version");
x.t("false","trigger");
x.t("false","implementing");
x.t("false","following");
x.t("fails","upgrade");
x.t("fails","reasons");
x.t("reasons","disruption");
x.t("selects","waste");
x.t("gw.api.database.dbfunction","class");
x.t("newvalue","string");
x.t("6.0.1","version");
x.t("6.0.1","skipped");
x.t("6.0.1","default");
x.t("6.0.1","6.0.2");
x.t("directly","page");
x.t("test","instances");
x.t("test","data");
x.t("ientitytype","subtype");
x.t("handle","transactions");
x.t("existence","table");
x.t("true","false");
x.t("true","creating");
x.t("true","override");
x.t("requires","minor");
x.t("gw.api.datamodel.upgrade.customerdatamodelupgrade","uses");
x.t("6.0.2","implementation");
x.t("6.0.2","column");
x.t("text_val.focus","text_val.select");
x.t("no","longer");
x.t("iinsertselectbuilder","iafterupgradetable");
x.t("operation","execute");
x.t("operation","try");
x.t("operation","methods");
x.t("operation","update");
x.t("name","upgrade");
x.t("name","ub.execute");
x.t("name","type");
x.t("name","delete");
x.t("name","property");
x.t("name","entered");
x.t("name","given");
x.t("name","column");
x.t("name","datamodelupgradeplugin");
x.t("name","class");
x.t("name","typelist");
x.t("name","afterupgradeversiontrigger");
x.t("creating","version");
x.t("creating","table");
x.t("creating","custom");
x.t("unlikely","contact");
x.t("(true)",".execute");
x.t("(true)","q.compare");
x.t("(true)","var");
x.t("renaming","table");
x.t("renaming","column");
x.t("cc_sometable",".createtempcolumn");
x.t("account","var");
x.t("definition","description");
x.t("definition","execute");
x.t("path","v6.0.0");
x.t("path","therefore");
x.t("previously","implemented");
x.t("gosu","plugin");
x.t("gosu","api");
x.t("gosu","documentation");
x.t("gosu","classes");
x.t("gosu","class");
x.t("corresponds","column");
x.t(".upgrade","uses");
x.t(".upgrade","store");
x.t(".upgrade","right-click");
x.t("db","table");
x.t("constructor","custom");
x.t("constructor","superclass");
x.t("custom","upgrade");
x.t("custom","version");
x.t("custom","beforeupgradeversiontrigger");
x.t("custom","extension");
x.t("custom","trigger");
x.t("custom","archiveddocumentupgradeversiontrigger");
x.t("custom","methods");
x.t("custom","changes");
x.t("custom","code");
x.t("custom","database");
x.t("custom","triggers");
x.t("custom","data");
x.t("custom","afterupgradeversiontrigger");
x.t("base","classes");
x.t("perform","insert-select");
x.t("perform","actions");
x.t("perform","operation");
x.t("perform","ddl");
x.t("perform","database");
x.t("perform","examples");
x.t("perform","update");
x.t("list.add","datamodelchangewithoutarchiveddocumentchange.make");
x.t("ientitypropertyinfo","update.set");
x.t("ientitypropertyinfo","ub.set");
x.t("entered","click");
x.t("comparison","using");
x.t("archiveddocumentupgradeversiontrigger","entities");
x.t("archiveddocumentupgradeversiontrigger","provides");
x.t("archiveddocumentupgradeversiontrigger","define");
x.t("archiveddocumentupgradeversiontrigger","abstract");
x.t("archiveddocumentupgradeversiontrigger","call");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","number");
x.t("provides","following");
x.t("provides","hooks");
x.t("methods","example");
x.t("methods","properties");
x.t("methods","available");
x.t("methods","rename");
x.t("methods","beforeupgradeversiontrigger");
x.t("methods","delete");
x.t("methods","perform");
x.t("methods","ibeforeupgradetable");
x.t("methods","define");
x.t("methods","ddl");
x.t("methods","appear");
x.t("methods","data");
x.t("methods","class");
x.t("prior","upgrading");
x.t("prior","major");
x.t("ibeforeupgradetable","iafterupgradetable");
x.t("ibeforeupgradetable","iinsertselectbuilder");
x.t("ibeforeupgradetable","iupdatebuilder");
x.t("ibeforeupgradetable","typekey");
x.t("ibeforeupgradetable","getcolumn");
x.t("window","expand");
x.t("boolean","return");
x.t("boolean","//");
x.t(".atmostonerow","bean.a");
x.t("plus","sign");
x.t(".getcolumn","columnname");
x.t("updating","denormalization");
x.t("iarchivedentity","objects");
x.t("iarchivedentity","provides");
x.t("iarchivedentity","iarchivedtypekey");
x.t("iarchivedentity","move");
x.t("iarchivedentity","given");
x.t("iarchivedentity","returns");
x.t("iarchivedentity","object");
x.t("exists","result");
x.t("exists","therefore");
x.t("implementations","create");
x.t("implementations","restore");
x.t("implementations","correct");
x.t("restart","upgrade");
x.t("increment","version");
x.t("tablename","string");
x.t("tablename","override");
x.t("up","cache");
x.t("sign","select");
x.t("determine","whether");
x.t("ub.set","tempcolumn");
x.t("ub.set","pidesc");
x.t(".getcolumnref","account");
x.t("getarchivedtypekey","typelistname");
x.t("6.0.x","included");
x.t("6.0.x","implement");
x.t("ibeforeupgradecolumn","iafterupgradecolumn");
x.t("final","integer");
x.t("final","var");
x.t("strings","entities");
x.t("strings","ddl");
x.t("decide","rename");
x.t("gw.api.database.upgrade.datamodelchangewithoutarchiveddocumentchange","class");
x.t("cc_activity","list.add");
x.t("(account)",".withlogsql");
x.t("updatetime","adding");
x.t("transformations","result");
x.t("search","predicate");
x.t("records","current");
x.t("claimcenter","upgrade");
x.t("claimcenter","7.0.x");
x.t("claimcenter","6.0.x");
x.t("claimcenter","bin");
x.t("claimcenter","archives");
x.t("claimcenter","upgrades");
x.t("claimcenter","versions");
x.t("fix","consistency");
x.t("fix","issue");
x.t("string","parameter");
x.t("string","construct");
x.t("string","properties");
x.t("string","moves");
x.t("string","describes");
x.t("string","renames");
x.t("string","updates");
x.t("string","newvalue");
x.t("string","code");
x.t("string","return");
x.t("string","returns");
x.t("string","super");
x.t("string","object");
x.t("empty","list");
x.t("empty","override");
x.t("empty","following");
x.t("write","version");
x.t("addition","strings");
x.t("hasversioncheck","method");
x.t("hasversioncheck","boolean");
x.t("beforeupgradeversioncheckwrapper","upgrade");
x.t("testa.type.typeinfo.getproperty","ientitypropertyinfo");
x.t("datatype","just");
x.t("newentityname","string");
x.t("preceding","table");
x.t("store","custom");
x.t("gw.api.datamodel.upgrade.idatamodelchange","uses");
x.t(".execute","implement");
x.t(".execute","override");
x.t(".update","ub.withlogsql");
x.t(".update","var");
x.t("shorttext","column");
x.t("getarchivedtypekeyset","typekeyname");
x.t("error","occurred");
x.t("archived","v6.0.0");
x.t("archived","version");
x.t("archived","entities");
x.t("archived","xml");
x.t("archived","entity");
x.t("getafterupgradedatamodelchanges","example");
x.t("getafterupgradedatamodelchanges","method");
x.t("getafterupgradedatamodelchanges","version");
x.t("getafterupgradedatamodelchanges","list");
x.t("getafterupgradedatamodelchanges","methods");
x.t("backup","correct");
x.t("config","plugins");
x.t("account.gaup_paymethod","ub.execute");
x.t("migrating","data");
x.t("modules/configuration/config/extensions/extensions.properties","provide");
x.t("listing","generate");
x.t("iupdatebuilder","iafterupgradetable");
x.t("suppose","propertya_prop");
x.t("java.util.arraylist","uses");
x.t(".upgrade.before","uses");
x.t("dropping","table");
x.t("dropping","column");
x.t("getarchivedentityset","entityname");
x.t("intermediate","data");
x.t("idatamodelupgrade","plugin");
x.t("idatamodelupgrade","interface");
x.t("idatamodelupgrade","want");
x.t("idatamodelupgrade","select");
x.t("idatamodelupgrade","override");
x.t("idatamodelupgrade","class");
x.t("issues","upgrade");
x.t("issues","reported");
x.t("issues","detected");
x.t("issues","stage");
x.t("space","studio");
x.t("companyname",".upgrade");
x.t("companyname",".upgrade.before");
x.t("select","table");
x.t("select","plugin");
x.t("select","add");
x.t("select","idatamodelupgrade");
x.t("throw","expected");
x.t("button","select");
x.t("ub.getcolumnref","paymentmethod");
x.t("(paymentinstrument)",".update");
x.t("guidewire_selectall","var");
x.t("number","passed");
x.t("number","indicates");
x.t("number","methods");
x.t("number","less");
x.t("number","extensions.properties");
x.t("standalone","version");
x.t("stops","running");
x.t("gw.api.database.query","uses");
x.t("bean.a","throw");
x.t("update.withdescription","update");
x.t("xx_exttablename_ext","renaming");
x.t("function","createversioncheck");
x.t("function","table");
x.t("function","execute");
x.t("function","hasversioncheck");
x.t("function","guidewire_selectall");
x.t("function","verifyupgradability");
x.t("function","define");
x.t("function","verifyupgradibility");
x.t("function","column");
x.t("entitye","corresponds");
x.t("implements","idatamodelupgrade");
x.t("datamodelversionnumber","override");
x.t("verifyupgradability","condition");
x.t(".rename","newcolumnname");
x.t(".rename","xx_exttablename_ext");
x.t("updatebuilder","mytable.update");
x.t("updatebuilder",".set");
x.t("q.compare","id");
x.t("length","migrating");
x.t("iarchivedtypekey","objects");
x.t("iarchivedtypekey","gosu");
x.t("iarchivedtypekey","provides");
x.t("iarchivedtypekey","representing");
x.t("iarchivedtypekey","object");
x.t("iarchivedtypekeyset","object");
x.t("incremental","upgrade");
x.t("define","plugin");
x.t("define","execute");
x.t("define","actions");
x.t("define","constructor");
x.t("define","custom");
x.t("define","return");
x.t("define","getbeforeupgradedatamodelchanges");
x.t("move","newentityname");
x.t("move","data");
x.t("getarchiveddocumentupgradeversiontrigger","method");
x.t("getarchiveddocumentupgradeversiontrigger","beforeupgradeversiontrigger");
x.t("unique","capabilities");
x.t("cannot","empty");
x.t("cannot","insert");
x.t("beforeupgradedatamodelchanges","list");
x.t("whether","trigger");
x.t("subtypes","compare");
x.t("represents","temp");
x.t("ub.getquery",".getcolumnref");
x.t("against","database");
x.t("starting","upgrade");
x.t("ddl","dml");
x.t("ddl","operations");
x.t("step","action");
x.t("droptablebeforeupgrade","123");
x.t("row","getpropertyvalue");
x.t("upgraded","until");
x.t("changes","upgrade");
x.t("changes","v6.0.0");
x.t("changes","v6.0.1");
x.t("changes","v6.0.2");
x.t("changes","require");
x.t("changes","start");
x.t("changes","getdatabaseupgradeversiontrigger");
x.t("changes","custom");
x.t("changes","archived");
x.t("changes","database");
x.t("directory","studio");
x.t("directory","open");
x.t("directory","entering");
x.t("types","addition");
x.t("gw.api.database.upgrade.before.beforeupgradeversioncheck","uses");
x.t("gw.api.database.upgrade.before.beforeupgradeversioncheck","class");
x.t("implementing","version");
x.t("populates","data");
x.t("xml","upgrade");
x.t("xml","document");
x.t("xml","archiveddocumentupgradeversiontrigger");
x.t("xml","methods");
x.t("xml","entity");
x.t("xml","using");
x.t("loss","data");
x.t("superclass","pass");
x.t("match","given");
x.t("explain","incremental");
x.t("important","claimcenter");
x.t("propertya_prop","version");
x.t("gw.entity.ientitypropertyinfo","uses");
x.t("expected","value");
x.t("added","version");
x.t("added","default");
x.t("code","want");
x.t("code","final");
x.t("code","string");
x.t("code","running");
x.t("rows","beforeupgradeversiontrigger");
x.t("rows","new");
x.t("rows","search");
x.t("gw.api.database.upgrade.before.beforeupgradeversiontrigger","uses");
x.t("gw.api.database.upgrade.before.beforeupgradeversiontrigger","class");
x.t("typekey","id");
x.t("typekey","iarchivedtypekey");
x.t("typekey","xml");
x.t("typekey","wrapped");
x.t("tmp_xyz","datatypes.shorttext");
x.t("tmp_xyz","db");
x.t("tmp_xyz","//");
x.t("reference","entity");
x.t("incrementally","archived");
x.t("return","description");
x.t("return","deletes");
x.t("return","checks");
x.t("return","new");
x.t("return","updates");
x.t("return","list");
x.t("return","false");
x.t("return","true");
x.t("return","empty");
x.t("return","string");
x.t("return","null");
x.t("return","bunch");
x.t("restore","database");
x.t("stage","unlikely");
x.t("override","createversioncheck");
x.t("override","property");
x.t("override","definition");
x.t("override","function");
x.t("waste","time");
x.t(".withlogsql","(true)");
x.t("adds","temporary");
x.t("adds","column");
x.t("abstract","class");
x.t("database","upgrade");
x.t("database","restart");
x.t("database","backup");
x.t("database","suppose");
x.t("database","getarchiveddocumentupgradeversiontrigger");
x.t("database","changes");
x.t("database","lower");
x.t("database","failure");
x.t("database","defined");
x.t("database","using");
x.t("database","server");
x.t("issue","possible");
x.t("issue","guidewire");
x.t("issue","custom");
x.t("issue","restart");
x.t("issue","override");
x.t("issue","causing");
x.t("issue","consider");
x.t("issue","correct");
x.t("issue","either");
x.t("appear","gosu");
x.t("caused","data");
x.t(".delete","delete.comparein");
x.t("lower","extension");
x.t("given","properties");
x.t("given","type");
x.t("given","name");
x.t("given","predicate");
x.t("given","value");
x.t("given","typelist");
x.t("100","v6.0.2");
x.t("100","200");
x.t("100","situation");
x.t("100","during");
x.t("idatamodelchange","beforeupgradeversiontrigger");
x.t("idatamodelchange","interface");
x.t("idatamodelchange","entities");
x.t("idatamodelchange","afterupgradeversiontrigger");
x.t("documentation","full");
x.t("documentation","navigating");
x.t("documentation","generate");
x.t("documentation","ctrl");
x.t("documentation","run");
x.t("event","failure");
x.t("causing","disruption");
x.t("click","new");
x.t("click","add");
x.t("click","button");
x.t("click","ok");
x.t("enter","name");
x.t("enter","package");
x.t("enter","class");
x.t("verifyupgradibility","gettable");
x.t("bean","new");
x.t("actual","claimcenter");
x.t("occurred","messsage");
x.t("longer","using");
x.t("null","getarchiveddocumentupgradeversiontrigger");
x.t("consider","propertya");
x.t("consider","creating");
x.t("consider","following");
x.t("consider","adding");
x.t("made","changes");
x.t("less","equal");
x.t("project","window");
x.t("gw.plugin.upgrade.idatamodelupgrade","uses");
x.t("deleteevennumbersversiontrigger","list.add");
x.t("deleteevennumbersversiontrigger","extends");
x.t("updatevaluesonaversiontrigger","return");
x.t("updatevaluesonaversiontrigger","extends");
x.t("claimcenter/bin","directory");
x.t("columnname",".rename");
x.t("mytable.update","updatebuilder");
x.t("existing","entity");
x.t("changing","datatype");
x.t("changing","nullability");
x.t("failure","due");
x.t("failure","issue");
x.t("failure","cases");
x.t("gettypekeyid","method");
x.t("gettypekeyid","ientitytype");
x.t("gettypekeyid","final");
x.t("gettypekeyid","typelist");
x.t("include","version");
x.t("include","changing");
x.t("include","adding");
x.t("include","afterupgradeversiontrigger");
x.t("instances","data");
x.t("configuration","config");
x.t("configuration","right-click");
x.t("restored","upgraded");
x.t("restored","idatamodelchange");
x.t("restored","upgrader");
x.t("similar","beforeupgradeversiontrigger");
x.t("similar","plugin");
x.t("running","upgrade");
x.t("running","custom");
x.t("bin","directory");
x.t("transactionmanager","methods");
x.t("right-click","upgrade");
x.t("right-click","gsrc");
x.t("right-click","registry");
x.t("delete.withdescription","deletes");
x.t("value","example");
x.t("value","200");
x.t("value","extension");
x.t("value","property");
x.t("value",".compare");
x.t("value","getarchivedtypekeyset");
x.t("value","reference");
x.t("value","100");
x.t("value","specific");
x.t("value","column");
x.t("value","//");
x.t("predicate","create");
x.t("predicate","iarchivedentity");
x.t("predicate","predicate");
x.t("archives","entity");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("already","exist");
x.t("already","exists");
x.t("implementation","upgrade");
x.t("implementation","correct");
x.t("addversioncheckproblem","description");
x.t("addversioncheckproblem","cc_test_a");
x.t("specific","subtypes");
x.t("specific","value");
x.t("specific","subtype");
x.t("several","intermediate");
x.t("triggers","upgrade");
x.t("triggers","method");
x.t("triggers","create");
x.t("triggers","beforeupgradeversiontrigger");
x.t("triggers","open");
x.t("triggers","require");
x.t("triggers","idatamodelupgrade");
x.t("triggers","define");
x.t("triggers","incrementally");
x.t("triggers","return");
x.t("triggers","database");
x.t("triggers","consider");
x.t("triggers","failure");
x.t("triggers","correct");
x.t("triggers","run");
x.t("getbeforeupgradedatamodelchanges","list");
x.t("getbeforeupgradedatamodelchanges","getafterupgradedatamodelchanges");
x.t("builder","actually");
x.t("builder","iquerybuilder");
x.t("builder","ibeforeupgradeupdatebuilder");
x.t("builder","beforeupgradeinsertselectbuilder");
x.t("generate","guidewire");
x.t("generate","gosu");
x.t("actually","perform");
x.t("condition","detect");
x.t("condition","database");
x.t("force","upgrade");
x.t("extends","customerdatamodelupgrade");
x.t("extends","beforeupgradeversiontrigger");
x.t("extends","afterupgradeversiontrigger");
x.t("doselecttowastetimeversiontrigger","cc_user");
x.t("doselecttowastetimeversiontrigger","cc_activity");
x.t("doselecttowastetimeversiontrigger","extends");
x.t("doselecttowastetimeversiontrigger","cc_region");
x.t("px_test_a","table");
x.t("odd","numbers");
x.t("temporary","shorttext");
x.t("temporary","column");
x.t("typelistname","string");
x.t("process","version");
x.t("runs","guidewire");
x.t("runs","custom");
x.t("runs","transaction");
x.t("subtype","protected");
x.t("subtype","equals");
x.t("subtype","column");
x.t("read","operations");
x.t("represent","actual");
x.t("page","error");
x.t("upgrading","method");
x.t("upgrading","7.0.x");
x.t("upgrading","claimcenter");
x.t("upgrading","archived");
x.t("dml","operations");
x.t("dml","builders");
x.t("drop","rename");
x.t("drop","table");
x.t("ctrl","space");
x.t("show","available");
x.t("wrote","past");
x.t("purposes","version");
x.t("purposes","companyname");
x.t("cc_test_a","table");
x.t("cc_test_a","cannot");
x.t("cc_test_a",".delete");
x.t("cc_test_a",".query");
x.t("dbfunction.expr","aproperty");
x.t("dbfunction.expr","tmp_xyz");
x.t("registry","name");
x.t("registry","click");
x.t("major","version");
x.t("data","example");
x.t("data","table");
x.t("data","extension");
x.t("data","require");
x.t("data","new");
x.t("data","issues");
x.t("data","issue");
x.t("data","data");
x.t("data","column");
x.t("data","model");
x.t("correct","issues");
x.t("correct","issue");
x.t("correct","data");
x.t("getcolumn","returns");
x.t("regen-gosudoc","command");
x.t("regen-gosudoc","incremental");
x.t("query","table");
x.t("query","testa");
x.t("query","(account)");
x.t("query","builder");
x.t("iquerybuilder","afterupgradeversiontrigger");
x.t("capabilities","afterupgradeversiontrigger");
x.t("cc_test_b","list.add");
x.t(".rowfound","addversioncheckproblem");
x.t("gwp","file");
x.t("temp","column");
x.t("upgrader","add");
x.t("upgrader","executes");
x.t("archive","upgrade");
x.t("future","consider");
x.t("defined","modules/configuration/config/extensions/extensions.properties");
x.t("defined","data");
x.t("beforeupgradeversioncheck","datamodelversionnumber");
x.t("beforeupgradeversioncheck","return");
x.t("beforeupgradeversioncheck","(129)");
x.t("equals","mytypecode");
x.t("equals","ub.getquery");
x.t("equals",".select");
x.t("save","changes");
x.t("examples","provided");
x.t("result","upgrade");
x.t("result","loss");
x.t("upgrades","archived");
x.t("upgrades","performed");
x.t("documented","guidewire");
x.t("case","consider");
x.t("expand","configuration");
x.t("_tablename","tablename");
x.t("_tablename","string");
x.t("_tablename","waste");
x.t("values","xx");
x.t("proceeds","referred");
x.t("cc_region","return");
x.t("(_tablename)",".query");
x.t("8.0.1","entering");
x.t("structure","custom");
x.t("structure","package");
x.t("nullability","column");
x.t("called","current");
x.t("two","methods");
x.t("classes","example");
x.t("classes","provide");
x.t("classes","documented");
x.t("classes","following");
x.t("column","complex");
x.t("column","v6.0.1");
x.t("column","version");
x.t("column","200");
x.t("column","create");
x.t("column","rename");
x.t("column","introduced");
x.t("column","change");
x.t("column","unless");
x.t("column","check");
x.t("column","name");
x.t("column","renaming");
x.t("column","custom");
x.t("column","account.gaup_paymethod");
x.t("column","dropping");
x.t("column","move");
x.t("column","added");
x.t("column","database");
x.t("column","existing");
x.t("column","value");
x.t("column","specific");
x.t("column","already");
x.t("column","entity");
x.t("column","object");
x.t("ibeforeupgradeupdatebuilder","ibeforeupgradetable");
x.t("integer","gettypekeyid");
x.t("integer","data");
x.t("transaction","need");
x.t("executes","necessary");
x.t("executes","whenever");
x.t("executes","custom");
x.t("ok","create");
x.t("ok","studio");
x.t("123","cc_test_b");
x.t("plugins","right-click");
x.t("plugins","registry");
x.t("datamodelupgradeplugin","plugin");
x.t("topics","renaming");
x.t("accounttable.update","ub.set");
x.t("note","example");
x.t("itself","starting");
x.t("cases","want");
x.t("cases","caused");
x.t("delete.comparein","delete.withdescription");
x.t("numeric","value");
x.t("wrapped","iarchivedtypekey");
x.t("call","execute");
x.t("call","constructor");
x.t("call","custom");
x.t("order","execution");
x.t("order","step");
x.t("package","name");
x.t("package","companyname");
x.t("package","enter");
x.t("package","click");
x.t("package","save");
x.t("package","gw.cc.upgrade");
x.t("numbers","included");
x.t("numbers",".execute");
x.t("numbers","override");
x.t("numbers","cc_test_a");
x.t(".query","withdescription");
x.t(".query",".rowfound");
x.t("gw.cc.upgrade","uses");
x.t("bunch","selects");
x.t("subclass","following");
x.t("tempcolumn","gettable");
x.t("tempcolumn","ub.getcolumnref");
x.t("tempcolumn","represents");
x.t("created","exist");
x.t("run","upgrade");
x.t("run","during");
x.t("run","custom");
x.t("run","//");
x.t("run","gwcc");
x.t("model","upgrade");
x.t("model","version");
x.t("model","change");
x.t("model","custom");
x.t("model","changes");
x.t("model","database");
x.t("model","failure");
x.t("model","upgrades");
x.t("model","itself");
x.t("signatures","property");
x.t("signatures","two");
x.t("entity","method");
x.t("entity","beforeupgradeversiontrigger");
x.t("entity","type");
x.t("entity","default");
x.t("entity","according");
x.t("entity","updating");
x.t("entity","iarchivedentity");
x.t("entity","records");
x.t("entity","claimcenter");
x.t("entity","archived");
x.t("entity","populates");
x.t("entity","restored");
x.t("entity","column");
x.t("entity","entity");
x.t("entity","afterupgradeversiontrigger");
x.t("following","example");
x.t("following","situation");
x.t("following","key");
x.t("following","sample");
x.t("following","signature");
x.t("following","command");
x.t("following","structure");
x.t("following","topics");
x.t("following","order");
x.t("break","execute");
x.t("either","getbeforeupgradedatamodelchanges");
x.t("either","case");
x.t("using","beforeupgradeversiontrigger");
x.t("using","idatamodelupgrade");
x.t("using","temporary");
x.t("class","testdatamodelupgradeimpl");
x.t("class","mybeforeupgradetrigger");
x.t("class","create");
x.t("class","container");
x.t("class","dialog");
x.t("class","extend");
x.t("class","start");
x.t("class","includes");
x.t("class","enter");
x.t("class","click");
x.t("class","deleteevennumbersversiontrigger");
x.t("class","updatevaluesonaversiontrigger");
x.t("class","extends");
x.t("class","doselecttowastetimeversiontrigger");
x.t("class","including");
x.t("//","look");
x.t("//","change");
x.t("//","perform");
x.t("//","tmp_xyz");
x.t("//","return");
x.t("//","override");
x.t("//","drop");
x.t("//","tempcolumn");
x.t("remaining","values");
x.t("setting","column");
x.t("typelist","name");
x.t("typelist","getarchivedtypekey");
x.t("typelist","code");
x.t("returns","iarchivedentityset");
x.t("returns","new");
x.t("returns","list");
x.t("returns","archiveddocumentupgradeversiontrigger");
x.t("returns","ibeforeupgradetable");
x.t("returns","iarchivedentity");
x.t("returns","ibeforeupgradecolumn");
x.t("returns","iarchivedtypekeyset");
x.t("returns","iarchivedtypekey");
x.t("returns","value");
x.t("returns","builder");
x.t("beforeupgradeinsertselectbuilder","ibeforeupgradetable");
x.t("250","decide");
x.t("adding","editable");
x.t("adding","new");
x.t("adding","custom");
x.t("adding","column");
x.t("arraylist","idatamodelchange");
x.t("compare","methods");
x.t("pass","numeric");
x.t("hooks","custom");
x.t("afterupgradeversiontrigger","properties");
x.t("afterupgradeversiontrigger","construct");
x.t("afterupgradeversiontrigger","moves");
x.t("afterupgradeversiontrigger","beforeupgradeversiontrigger");
x.t("afterupgradeversiontrigger","instance");
x.t("afterupgradeversiontrigger","execute");
x.t("afterupgradeversiontrigger","type");
x.t("afterupgradeversiontrigger","gosu");
x.t("afterupgradeversiontrigger","base");
x.t("afterupgradeversiontrigger","list.add");
x.t("afterupgradeversiontrigger","implementations");
x.t("afterupgradeversiontrigger","getafterupgradedatamodelchanges");
x.t("afterupgradeversiontrigger","similar");
x.t("afterupgradeversiontrigger","dml");
x.t("afterupgradeversiontrigger","package");
x.t("afterupgradeversiontrigger","var");
x.t("operations","available");
x.t("operations","create");
x.t("operations","provided");
x.t("operations","getarchivedentityset");
x.t("operations","column");
x.t("operations","call");
x.t("sql","perform");
x.t("gwcc","studio");
x.t("gwcc","regen-gosudoc");
x.t("past","break");
x.t("associated","version");
x.t("pidesc","paymentinstrument.type.typeinfo.getproperty");
x.t("pidesc","q.getcolumnref");
x.t("modify","archived");
x.t("performed","therefore");
x.t("therefore","delete");
x.t("therefore","upgrader");
x.t("therefore","column");
x.t("var","mytable");
x.t("var","delete");
x.t("var","mytypecode");
x.t("var","ub");
x.t("var","aproperty");
x.t("var","new");
x.t("var","list");
x.t("var","text_val=eval");
x.t("var","updatebuilder");
x.t("var","bean");
x.t("var","_tablename");
x.t("var","tempcolumn");
x.t("var","pidesc");
x.t("var","accounttable");
x.t("var","update");
x.t("minor","version");
x.t("including","creating");
x.t("including","package");
x.t("insert","new");
x.t("disruption","restore");
x.t("disruption","database");
x.t("(129)","override");
x.t("(129)","_tablename");
x.t("accounttable","gettable");
x.t("versions","included");
x.t("builders","query");
x.t("even","numbers");
x.t(".read","override");
x.t(".select",".atmostonerow");
x.t(".set","mycolumn");
x.t("q.getcolumnref","dbfunction.expr");
x.t("entityname","string");
x.t("representing","typekey");
x.t("contains","method");
x.t("contains","iarchivedentity");
x.t("contains","iarchivedtypekey");
x.t("object","upgrade");
x.t("object","provides");
x.t("object","methods");
x.t("object","typekey");
x.t("object","override");
x.t("object","returns");
x.t("object","including");
x.t("object","contains");
x.t("update","gettable");
x.t("update","operation");
x.t("update","database");
x.t("update","value");
x.t("update","values");
x.t("update","returns");
x.t("updated","data");
x.t("server","perform");
x.t("server","fix");
x.t("extensions.properties","run");
x.t("super","(171)");
x.t("super","datamodelversionnumber");
x.t("super","(129)");
x.t("updatebuilder.execute","using");
}
