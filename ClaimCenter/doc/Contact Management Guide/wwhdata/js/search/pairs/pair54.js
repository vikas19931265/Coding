function FileData_Pairs(x)
{
x.t("import/export","data");
x.t("example","start");
x.t("example","typecode");
x.t("example","configuring");
x.t("example","name");
x.t("example","write");
x.t("example","review");
x.t("example","give");
x.t("example","choose");
x.t("example","following");
x.t("example","service");
x.t("example","reviewcatqset:1");
x.t("example","designate");
x.t("example","log");
x.t("enabling","system");
x.t("extensions","typelist");
x.t("questionchoicespm:34","code");
x.t("equal","weight");
x.t("included","review");
x.t("unlike","review");
x.t("differently","write");
x.t("differently","either");
x.t("tag","level");
x.t("available","imported");
x.t("documenting","typecode");
x.t("questionchoicespm:35","code");
x.t("provide","default");
x.t("provide","information");
x.t("attaches","claim");
x.t("attaches","completed");
x.t("defines","review");
x.t("defines","first");
x.t("dev-stop","regenerate");
x.t("formatted","gwab");
x.t("formatted","gwcc");
x.t("right","url");
x.t("just","added");
x.t("day","initial");
x.t("questionchoicespm:36","code");
x.t("claim","claim");
x.t("claim","user");
x.t("claim","multiple");
x.t("claim","reviewcreate");
x.t("claim","review");
x.t("claim","rescores");
x.t("receives","scheduling");
x.t("managing","categories");
x.t("hundred","points");
x.t("enforce","permissions");
x.t("exported","file");
x.t("exported","xml");
x.t("exported","click");
x.t("exported","questions.xml");
x.t("saved","file");
x.t("retired","review");
x.t("ask","quickly");
x.t("ask","requotes");
x.t("ask","timeliness");
x.t("full","descriptions");
x.t("full","generic");
x.t("clear","questions");
x.t("within","day");
x.t("within","original");
x.t("within","days");
x.t("shown","answer");
x.t("questionchoicespm:37","code");
x.t("pertain","contact");
x.t("preferred","vendor");
x.t("contact","included");
x.t("contact","tag");
x.t("contact","typecode");
x.t("contact","/name");
x.t("contact","permissions");
x.t("contact","scoring");
x.t("contact","subtypes");
x.t("contact","different");
x.t("contact","subtype");
x.t("contact","information");
x.t("contact","choose");
x.t("contact","/description");
x.t("contact","management");
x.t("contact","entity");
x.t("contact","typelist");
x.t("contact","category");
x.t("contact","managers");
x.t("question","enabling");
x.t("question","rename");
x.t("question","sample");
x.t("question","type");
x.t("question","however");
x.t("question","filters");
x.t("question","entities");
x.t("question","belongs");
x.t("question","questiontype");
x.t("question","top");
x.t("question","typecode");
x.t("question","applies");
x.t("question","configuring");
x.t("question","scored");
x.t("question","enables");
x.t("question","questionsetspm:1");
x.t("question","set\u2019s");
x.t("question","reviewservicetype");
x.t("question","sets");
x.t("question","reviewcategory");
x.t("question","choices");
x.t("question","review");
x.t("question","point");
x.t("question","designates");
x.t("question","asks");
x.t("question","types");
x.t("question","public-id=");
x.t("question","reviewcategoryquestionset");
x.t("question","previous");
x.t("question","given");
x.t("question","quickly");
x.t("question","information");
x.t("question","questionchoice");
x.t("question","typically");
x.t("question","answers");
x.t("question","containing");
x.t("question","category");
x.t("create","delete");
x.t("create","new");
x.t("create","reviewcategoryquestionset");
x.t("create","reuse");
x.t("description","within");
x.t("description","10");
x.t("description","sample");
x.t("description","entities");
x.t("description","no");
x.t("description","useful");
x.t("description","claimcenter");
x.t("description","review");
x.t("description","greater");
x.t("description","/description");
x.t("description","days");
x.t("description","specify");
x.t("description","alignment");
x.t("studio","12");
x.t("studio","details");
x.t("studio","command");
x.t("studio","add");
x.t("studio","refresh");
x.t("studio","contactmanager");
x.t("studio","project");
x.t("rename","create");
x.t("rename","define");
x.t("questionchoicespm:38","code");
x.t("granular","control");
x.t("shops","/description");
x.t("doing","makes");
x.t("10","necessary");
x.t("10","/score");
x.t("10","/name");
x.t("10","click");
x.t("10","20");
x.t("10","/description");
x.t("mechanism","score");
x.t("mechanism","setting");
x.t("/priority","question");
x.t("/priority","questionsettype");
x.t("/priority","questionformat/");
x.t("required","false");
x.t("questionchoicespm:39","code");
x.t("always","affect");
x.t("kinds","scores");
x.t("summarized","review");
x.t("sidebar","top");
x.t("sidebar","import");
x.t("apply","question");
x.t("apply","reviewcategory");
x.t("summary","web");
x.t("summary","permissions");
x.t("summary","screen");
x.t("performs","type");
x.t("11","start");
x.t("questionsettype","spmreview");
x.t("improve","readability");
x.t("completion","service");
x.t("providers","questions");
x.t("averages","categories");
x.t("averages","answered");
x.t("averages","configure");
x.t("questions","differently");
x.t("questions","ask");
x.t("questions","shown");
x.t("questions","question");
x.t("questions","always");
x.t("questions","apply");
x.t("questions","unanswered");
x.t("questions","categories");
x.t("questions","sample");
x.t("questions","mandatory");
x.t("questions","range");
x.t("questions","performance");
x.t("questions","defining");
x.t("questions","review");
x.t("questions","scoring");
x.t("questions","instead");
x.t("questions","ids");
x.t("questions","affect");
x.t("questions","drop-down");
x.t("questions","data");
x.t("questions","answer");
x.t("questions","administration");
x.t("questions","based");
x.t("questions","answers");
x.t("questions","associated");
x.t("questions","category");
x.t("questions","contains");
x.t("topic","includes");
x.t("topic","questionsetspm:1");
x.t("topic","provides");
x.t("topic","presents");
x.t("user","makes");
x.t("user","sees");
x.t("user","choose");
x.t("user","answers");
x.t("tires","right-click");
x.t("12","add");
x.t("descriptions","question");
x.t("scheduler","run");
x.t("creates","vendor");
x.t("plugin","interface");
x.t("plugin","reference");
x.t("plugin","implementation");
x.t("contacts","need");
x.t("contacts","simple");
x.t("contacts","purpose");
x.t("reviewtype","example");
x.t("reviewtype","sample");
x.t("reviewtype","public");
x.t("reviewtype","numbering");
x.t("reviewtype","review");
x.t("reviewtype","define");
x.t("reviewtype","changes");
x.t("reviewtype","public-id=");
x.t("reviewtype","questions.xml");
x.t("reviewtype","application");
x.t("reviewtype","installation");
x.t("reviewtype","questionset");
x.t("uses","question");
x.t("uses","new");
x.t("uses","typecode");
x.t("uses","name");
x.t("uses","review");
x.t("shows","question");
x.t("shows","name");
x.t("shows","six");
x.t("shows","scores");
x.t("shows","xml");
x.t("shows","two");
x.t("field","start");
x.t("field","review");
x.t("paint","suspension");
x.t("wheels","give");
x.t("wheels","click");
x.t("dialog","box");
x.t("13","generate");
x.t("weight","questions");
x.t("weight","want");
x.t("weight","overall");
x.t("unanswered","questions");
x.t("reviews","example");
x.t("reviews","unlike");
x.t("reviews","receives");
x.t("reviews","pertain");
x.t("reviews","create");
x.t("reviews","questionsettype");
x.t("reviews","change");
x.t("reviews","type");
x.t("reviews","require");
x.t("reviews","card");
x.t("reviews","assign");
x.t("reviews","configuring");
x.t("reviews","provides");
x.t("reviews","reviewservicetype");
x.t("reviews","address");
x.t("reviews","claimcenter");
x.t("reviews","processing");
x.t("reviews","function");
x.t("reviews","pertaining");
x.t("reviews","drop-down");
x.t("reviews","score");
x.t("reviews","attached");
x.t("reviews","data");
x.t("reviews","themselves");
x.t("reviews","typically");
x.t("reviews","service");
x.t("reviews","using");
x.t("reviews","claims");
x.t("text_val.select","link");
x.t("administrator","example");
x.t("administrator","export");
x.t("working","reviews");
x.t("provided","services");
x.t("provided","service");
x.t("provided","vendor");
x.t("necessary","13");
x.t("necessary","stop");
x.t("14","restart");
x.t("/questionsettype","shouldretirefromimportxml");
x.t("morethan3","/code");
x.t("points","scores");
x.t("interface","claimcenter");
x.t("sample","exported");
x.t("sample","shows");
x.t("sample","entities");
x.t("sample","auto");
x.t("sample","review");
x.t("sample","data");
x.t("categories","question");
x.t("categories","apply");
x.t("categories","dialog");
x.t("categories","reviews");
x.t("categories","list");
x.t("categories","assign");
x.t("categories","configuring");
x.t("categories","average");
x.t("categories",".in");
x.t("categories","review");
x.t("categories","importing");
x.t("categories","reviewcategoryquestionset");
x.t("categories","sequentially");
x.t("categories","typecodes");
x.t("categories","appear");
x.t("categories","score");
x.t("categories","note");
x.t("categories","associate");
x.t("categories","service");
x.t("categories","log");
x.t("type","defines");
x.t("type","question");
x.t("type","questions");
x.t("type","uses");
x.t("type","sample");
x.t("type","open");
x.t("type","want");
x.t("type","new");
x.t("type","choice");
x.t("type","list");
x.t("type","typecode");
x.t("type","definition");
x.t("type","no");
x.t("type","find");
x.t("type","continue");
x.t("type","sets");
x.t("type","claimcenter");
x.t("type","auto");
x.t("type","review");
x.t("type","typecodes");
x.t("type","greater");
x.t("type","existing");
x.t("type","drop-down");
x.t("type","retire");
x.t("type","spmreviewtype:1");
x.t("type","bottom");
x.t("type","service");
x.t("type","adding");
x.t("open","saved");
x.t("open","exported");
x.t("open","command");
x.t("open","claimcenter");
x.t("open","click");
x.t("open","typelist");
x.t("change","review");
x.t("change","existing");
x.t("change","setting");
x.t("change","therefore");
x.t("near","top");
x.t("twothree","/code");
x.t("evaluates","services");
x.t("batch","process");
x.t("evsumviewdetail","permission");
x.t("public","id");
x.t("hierarchy","retiring");
x.t("delete","contacts");
x.t("delete","change");
x.t("delete","completed");
x.t("delete","review");
x.t("numbering","starts");
x.t("associates","category");
x.t("/score","/questionchoice");
x.t("mandatory","provide");
x.t("time","saves");
x.t("calculation","reviewdeleteincomplete");
x.t("towing","agency");
x.t("towing","agencies");
x.t("towing","company");
x.t("however","want");
x.t("however","existing");
x.t("however","typically");
x.t("multiple","reviews");
x.t("multiple","reviewcategoryquestionset");
x.t("incomplete","reviews");
x.t("incomplete","review");
x.t("/text","/question");
x.t("questionspm:11","question");
x.t("questionspm:11","defaultanswer/");
x.t("questionspm:11","score");
x.t("followed","three");
x.t("total","score");
x.t("guidewire","contact");
x.t("guidewire","core");
x.t("entities","topic");
x.t("entities","part");
x.t("entities","cannot");
x.t("entities","reviewcategoryquestionset");
x.t("entities","existing");
x.t("entities","viewpoint");
x.t("entities","service");
x.t("entities","questionset");
x.t("entities","log");
x.t("filters","full");
x.t("filters","question");
x.t("filters","followed");
x.t("filters","conditionally");
x.t("filters","scoring");
x.t("filters","show");
x.t("needed","information");
x.t("require","special");
x.t("text","quickly");
x.t("text","requotes");
x.t("text","difference");
x.t("put","question");
x.t("questionspm:12","questionspm:13");
x.t("questionspm:12","defaultanswer/");
x.t("questionspm:12","score");
x.t("questionspm:12","/questionfilter");
x.t("original","quote");
x.t("claimant","provide");
x.t("default","claimcenter");
x.t("default","answers");
x.t("link","directly");
x.t("element","reviewtype");
x.t("element","described");
x.t("element","order");
x.t("new","question");
x.t("new","reviews");
x.t("new","public");
x.t("new","incomplete");
x.t("new","typecode");
x.t("new","add");
x.t("new","reviewcategory");
x.t("new","review");
x.t("want","question");
x.t("want","weight");
x.t("want","change");
x.t("want","reviewcategory");
x.t("want","retire");
x.t("want","system");
x.t("single","claim");
x.t("single","question");
x.t("single","review");
x.t("start","claimcenter");
x.t("start","auto");
x.t("start","contactmanager");
x.t("engine","service");
x.t("details","reviews");
x.t("details","step");
x.t("belongs","question");
x.t("belongs","enable");
x.t("belongs","additionally");
x.t("certain","features");
x.t("certain","subtypes");
x.t("questiontype","choice");
x.t("questionspm:13","defaultanswer/");
x.t("questionspm:13","score");
x.t("questionspm:13","order");
x.t("questionspm:13","/questionfilter");
x.t("card","contact");
x.t("access","contact");
x.t("includes","sample");
x.t("includes","exporting");
x.t("top","list");
x.t("top","editor");
x.t("top","screen");
x.t("command","prompt");
x.t("command","gwab");
x.t("command","gwcc");
x.t("reviewservicetype.ttx","right-click");
x.t("choice","question");
x.t("choice","requires");
x.t("choice","/questiontype");
x.t("messsage","guidewire");
x.t("file","question");
x.t("file","open");
x.t("file","includes");
x.t("file","configuring");
x.t("file","previously");
x.t("file","find");
x.t("file","addition");
x.t("file","editor");
x.t("file","directory");
x.t("file","import");
x.t("file","questions.xml");
x.t("file","described");
x.t("file","note");
x.t("file","copy");
x.t("file","containing");
x.t("utilities","import");
x.t("utilities","export");
x.t("list","shows");
x.t("list","reviews");
x.t("list","enables");
x.t("list","claimcenter");
x.t("list","review");
x.t("list","reviewcategoryquestionset");
x.t("list","click");
x.t("list","specific");
x.t("list","service");
x.t("list","vendor");
x.t("need","granular");
x.t("need","add");
x.t("need","up");
x.t("need","review");
x.t("determines","order");
x.t("able","schedule");
x.t("regen-dictionary","open");
x.t("regen-dictionary","start");
x.t("areas","additionally");
x.t("clicking","complete");
x.t("installing","sample");
x.t("add","categories");
x.t("add","new");
x.t("add","typecode");
x.t("add","xml");
x.t("id","name");
x.t("id","importing");
x.t("typecode","example");
x.t("typecode","just");
x.t("typecode","question");
x.t("typecode","contact");
x.t("typecode","questions");
x.t("typecode","single");
x.t("typecode","start");
x.t("typecode","add");
x.t("typecode","applies");
x.t("typecode","name");
x.t("typecode","claimcenter");
x.t("typecode","give");
x.t("typecode","added");
x.t("typecode","autorepairshop");
x.t("typecode","code");
x.t("typecode","data");
x.t("typecode","defined");
x.t("typecode","choose");
x.t("typecode","timeliness");
x.t("typecode","category");
x.t("assign","question");
x.t("assign","typecode");
x.t("complete","selected");
x.t("complete","repairs");
x.t("complete","submit");
x.t("complete","aggregated");
x.t("complete","additionally");
x.t("group","question");
x.t("atmost5","/code");
x.t("answered","question");
x.t("answered","questions");
x.t("guide","topic");
x.t("guide","claimcenter");
x.t("guide","work");
x.t("browse","navigate");
x.t("applies","example");
x.t("applies","reviewcategory");
x.t("applies","review");
x.t("applies","reviewcategoryquestionset");
x.t("applies","specify");
x.t("questionchoices","question");
x.t("according","priority");
x.t("results","scored");
x.t("simple","averages");
x.t("simple","view");
x.t("simple","arithmetic");
x.t("saves","review");
x.t("api","enables");
x.t("api","call");
x.t("reviewcreate","permission");
x.t("summaries","reviews");
x.t("configuring","question");
x.t("configuring","questions");
x.t("configuring","categories");
x.t("configuring","review");
x.t("configuring","scores");
x.t("configuring","service");
x.t("navigate","claimcenter");
x.t("navigate","contactmanager");
x.t("navigate","configuration");
x.t("navigate","questions.xml");
x.t("false","/required");
x.t("false","/shouldretirefromimportxml");
x.t("duplicate","question");
x.t("/reviewcategoryquestionset","example");
x.t("/reviewcategoryquestionset","configuring");
x.t("url","field");
x.t("features","entities");
x.t("/question","questionchoice");
x.t("directly","page");
x.t("imported","sample");
x.t("su","password");
x.t("/name","shouldretirefromimportxml");
x.t("/name","priority");
x.t("true","reviewtype");
x.t("true","/shouldretirefromimportxml");
x.t("scored","review");
x.t("scored","series");
x.t("scored","therefore");
x.t("scored","category");
x.t("requires","restart");
x.t("requires","questionchoice");
x.t("/required","shouldretirefromimportxml");
x.t("queues","review\u2019s");
x.t("abcontactscoring","batch");
x.t("reviewviewdetail","permission");
x.t("reviewedit","permission");
x.t("text_val.focus","text_val.select");
x.t("definition","reviewtype");
x.t("definition","showing");
x.t("definition","reviewcategoryquestionset");
x.t("definition","entity");
x.t("name","within");
x.t("name","description");
x.t("name","10");
x.t("name","/name");
x.t("name","no");
x.t("name","auto");
x.t("name","screens");
x.t("name","match");
x.t("name","greater");
x.t("name","drop-down");
x.t("name","desc");
x.t("name","service");
x.t("name","timeliness");
x.t("name","days");
x.t("/shouldretirefromimportxml","text");
x.t("/shouldretirefromimportxml","/questionset");
x.t("/shouldretirefromimportxml","/reviewtype");
x.t("autotowingagcy","/contactsubtype");
x.t("no","need");
x.t("no","/name");
x.t("no","further");
x.t("no","/code");
x.t("no","longer");
x.t("no","question\u2019s");
x.t("no","/description");
x.t("connects","review");
x.t("maintain","following");
x.t("typelists","claimcenter");
x.t("box","choose");
x.t("fiveten","/code");
x.t("range","zero");
x.t("range","review");
x.t("overall","scores");
x.t("overall","score");
x.t("overall","vendor");
x.t("overall","category");
x.t("performance","reviews");
x.t("performance","review");
x.t("changed","file");
x.t("previously","exported");
x.t("previously","step");
x.t("enables","question");
x.t("enables","user");
x.t("enables","gosu");
x.t("enables","associate");
x.t("stop","claimcenter");
x.t("dictionary","ensure");
x.t("wsdl","abreviewsummary");
x.t("wsdl","contactmanager");
x.t("follows","project");
x.t("references","question");
x.t("filterquestion","public-id=");
x.t("gosu","rules");
x.t("gosu","configure");
x.t("edit","create");
x.t("edit","permissions");
x.t("edit","review");
x.t("reviewdeletecompleted","permission");
x.t("provider","performs");
x.t("provider","reviews");
x.t("provider","able");
x.t("provider","performance");
x.t("provider","review");
x.t("provider","note");
x.t("provider","service");
x.t("base","configuration");
x.t("base","application");
x.t("questionsetspm:1","questions");
x.t("questionsetspm:1","questiontype");
x.t("questionsetspm:1","name");
x.t("questionsetspm:1","reviewcategory");
x.t("questionsetspm:1","adds");
x.t("part","mechanism");
x.t("part","defining");
x.t("average","total");
x.t("average","answered");
x.t("average","overall");
x.t("average","particular");
x.t("average","scores");
x.t("average","include");
x.t("average","score");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","full");
x.t("provides","plugin");
x.t("provides","reviewtype");
x.t("provides","group");
x.t("provides","api");
x.t("provides","examples");
x.t("provides","two");
x.t("window","navigate");
x.t("useful","documenting");
x.t("useful","deciding");
x.t("brakes","paint");
x.t("set\u2019s","review");
x.t("further","questions");
x.t("zero","hundred");
x.t("find","reviewtype");
x.t("find","review");
x.t("reviewservicetype","reviewcategory");
x.t("reviewservicetype","typecodes");
x.t("reviewservicetype","typelist");
x.t("continue","work");
x.t("makes","review");
x.t("makes","easier");
x.t("restart","claimcenter");
x.t("restart","contactmanager");
x.t("restart","applications");
x.t("up","claimcenter");
x.t("up","review");
x.t("up","contactmanager");
x.t("up","typecodes");
x.t("determine","typecodes");
x.t(".in","add");
x.t("generic","description");
x.t("50","/score");
x.t("50","answers");
x.t("sends","contactmanager");
x.t("completed","review");
x.t("completed","contactmanager");
x.t("gw","click");
x.t("double-click","reviewservicetype.ttx");
x.t("double-click","reviewcategory.ttx");
x.t("double-click","abreviewsummary.rws");
x.t("web","services");
x.t("web","service");
x.t("questionchoicespm:1","question");
x.t("questionchoicespm:1","code");
x.t("final","payment");
x.t("insured","claimant");
x.t("address","book");
x.t("claimcenter","attaches");
x.t("claimcenter","studio");
x.t("claimcenter","scheduler");
x.t("claimcenter","uses");
x.t("claimcenter","shows");
x.t("claimcenter","administrator");
x.t("claimcenter","open");
x.t("claimcenter","however");
x.t("claimcenter","put");
x.t("claimcenter","queues");
x.t("claimcenter","reviewedit");
x.t("claimcenter","base");
x.t("claimcenter","provides");
x.t("claimcenter","review");
x.t("claimcenter","refresh");
x.t("claimcenter","contactmanager");
x.t("claimcenter","scores");
x.t("claimcenter","bin");
x.t("claimcenter","reviewviewlist");
x.t("claimcenter","data");
x.t("claimcenter","application");
x.t("claimcenter","described");
x.t("claimcenter","service");
x.t("claimcenter","produce");
x.t("sets","question");
x.t("sets","questions");
x.t("sets","start");
x.t("sets","enable");
x.t("sets","application");
x.t("sets","questionset");
x.t("showing","contactsubtype");
x.t("questionchoicespm:2","code");
x.t("/answer","filterquestion");
x.t("questionsetspm:5","questiontype");
x.t("entire","review");
x.t("write","rules");
x.t("write","implementation");
x.t("addition","working");
x.t("permissions","example");
x.t("permissions","contact");
x.t("permissions","contacts");
x.t("permissions","evsumviewdetail");
x.t("permissions","primary");
x.t("permissions","exporting");
x.t("permissions","following");
x.t("reviewcategory","reviewtype");
x.t("reviewcategory","typecode");
x.t("reviewcategory","reviewservicetype");
x.t("reviewcategory","reviewcategory");
x.t("reviewcategory","typecodes");
x.t("reviewcategory","reviewcategoryquestionset");
x.t("reviewcategory","corresponding");
x.t("reviewcategory","typelist");
x.t("reviewcategory","timeliness");
x.t("defining","questions");
x.t("defining","multiple");
x.t("defining","reviewcategory");
x.t("defining","typecodes");
x.t("defaultanswer/","indent");
x.t("questionchoicespm:3","code");
x.t("three","questions");
x.t("auto","towing");
x.t("auto","repair");
x.t("auto","glass");
x.t("/indent","priority");
x.t("conditionally","show");
x.t("selected","claimcenter");
x.t("ones","associated");
x.t("reviewdeleteincomplete","permission");
x.t("error","occurred");
x.t("review","attaches");
x.t("review","claim");
x.t("review","summary");
x.t("review","plugin");
x.t("review","uses");
x.t("review","type");
x.t("review","sample");
x.t("review","categories");
x.t("review","evaluates");
x.t("review","associates");
x.t("review","time");
x.t("review","clicking");
x.t("review","complete");
x.t("review","summaries");
x.t("review","duplicate");
x.t("review","configuring");
x.t("review","reviewdeletecompleted");
x.t("review","part");
x.t("review","average");
x.t("review","sends");
x.t("review","completed");
x.t("review","permissions");
x.t("review","auto");
x.t("review","scoring");
x.t("review","scores");
x.t("review","types");
x.t("review","revsumviewlist");
x.t("review","several");
x.t("review","process");
x.t("review","screen");
x.t("review","becomes");
x.t("review","two");
x.t("review","answers");
x.t("review","service");
x.t("review","arithmetic");
x.t("review","questionset");
x.t("review","associated");
x.t("review","category");
x.t("review","sent");
x.t("choices","question");
x.t("choices","however");
x.t("choices","better");
x.t("choices","ids");
x.t("choices","service");
x.t("prompt","navigate");
x.t("prompt","claimcenter/bin");
x.t("prompt","save");
x.t("prompt","contactmanager/bin");
x.t("elementorder","defined");
x.t("elementorder","integer");
x.t("elementorder","/elementorder");
x.t("calculate","overall");
x.t("calculate","category");
x.t("config","extensions");
x.t("config","rpc-encoded");
x.t("display","order");
x.t("display","service");
x.t("body","brakes");
x.t("point","member");
x.t("spmqfilter:1","answer");
x.t("payment","/text");
x.t("logic","overall");
x.t("give","description");
x.t("give","questions");
x.t("give","reviewtype");
x.t("give","typecode");
x.t("give","vendor");
x.t("refresh","wsdl");
x.t("refresh","button");
x.t("next","example");
x.t("next","click");
x.t("next","typelist");
x.t("abreviewsummary","claimcenter");
x.t("designates","question");
x.t("spmqfilter:2","answer");
x.t("reviewsync","batch");
x.t("unit","import");
x.t("first","question");
x.t("first","category");
x.t("button","near");
x.t("six","service");
x.t("means","question");
x.t("feature","example");
x.t("securing","access");
x.t("guidewire_selectall","var");
x.t("importing","questions");
x.t("importing","review");
x.t("importing","xml");
x.t("scoring","differently");
x.t("scoring","question");
x.t("scoring","completion");
x.t("scoring","reviews");
x.t("scoring","claimcenter");
x.t("scoring","review");
x.t("scoring","calculate");
x.t("scoring","mechanisms");
x.t("number","categories");
x.t("number","requotes");
x.t("cost","note");
x.t("cost","answers");
x.t("questionchoicespm:40","code");
x.t("processing","contactmanager");
x.t("control","gets");
x.t("function","guidewire_selectall");
x.t("reviewcategory.ttx","open");
x.t("dictionaries","claimcenter");
x.t("asks","requotes");
x.t("better","scores");
x.t("quote","/name");
x.t("quote","final");
x.t("quote","/description");
x.t("questionchoicespm:41","code");
x.t("editor","right");
x.t("editor","sample");
x.t("editor","right-click");
x.t("subtypes","contacts");
x.t("subtypes","applies");
x.t("subtypes","claimcenter");
x.t("agency","/name");
x.t("contactmanager","studio");
x.t("contactmanager","contact");
x.t("contactmanager","scheduler");
x.t("contactmanager","creates");
x.t("contactmanager","calculation");
x.t("contactmanager","configuring");
x.t("contactmanager","claimcenter");
x.t("contactmanager","review");
x.t("contactmanager","give");
x.t("contactmanager","define");
x.t("contactmanager","processes");
x.t("contactmanager","contactmanager");
x.t("contactmanager","step");
x.t("contactmanager","ensure");
x.t("contactmanager","bin");
x.t("contactmanager","data");
x.t("contactmanager","application");
x.t("contactmanager","note");
x.t("contactmanager","following");
x.t("cannot","apply");
x.t("cannot","delete");
x.t("scores","claim");
x.t("scores","question");
x.t("scores","description");
x.t("scores","summarized");
x.t("scores","averages");
x.t("scores","reviews");
x.t("scores","total");
x.t("scores","incomplete");
x.t("scores","default");
x.t("scores","simple");
x.t("scores","overall");
x.t("scores","average");
x.t("scores","sets");
x.t("scores","claimcenter");
x.t("scores","review");
x.t("scores","100");
x.t("scores","lower");
x.t("scores","taken");
x.t("scores","main");
x.t("scores","send");
x.t("scores","consisting");
x.t("scores","calculated");
x.t("scores","arithmetic");
x.t("scores","category");
x.t("scores","update");
x.t("specifies","review");
x.t("define","questions");
x.t("define","reviewcategory");
x.t("define","review");
x.t("define","typecodes");
x.t("define","reviewcategoryquestionset");
x.t("define","separate");
x.t("/reviewcategory","reviewtype");
x.t("screens","show");
x.t("balancing","tires");
x.t("win3day","/code");
x.t("questionchoicespm:42","code");
x.t("processes","reviews");
x.t("particular","questions");
x.t("particular","review");
x.t("different","review");
x.t("customize","feature");
x.t("contactsubtype","configuring");
x.t("contactsubtype","autotowingagcy");
x.t("contactsubtype","autorepairshop");
x.t("contactsubtype","defined");
x.t("step","10");
x.t("step","restart");
x.t("step","step");
x.t("step","note");
x.t("presents","entities");
x.t("instead","question");
x.t("characteristics","defining");
x.t("types","example");
x.t("types","file");
x.t("types","areas");
x.t("types","add");
x.t("types","configuring");
x.t("types","auto");
x.t("types","review");
x.t("types","body");
x.t("types","grouped");
x.t("types","include");
x.t("types","retire");
x.t("types","defined");
x.t("types","reuse");
x.t("types","export");
x.t("types","following");
x.t("types","associated");
x.t("xml","element");
x.t("xml","file");
x.t("xml","definition");
x.t("xml","code");
x.t("changes","exported");
x.t("changes","file");
x.t("changes","made");
x.t("changes","correctly");
x.t("directory","changes");
x.t("directory","enter");
x.t("directory","save");
x.t("match","reviewcategory");
x.t("samples","exported");
x.t("pertaining","contact");
x.t("implementing","logic");
x.t("grouped","questions");
x.t("public-id=","questionchoicespm:34");
x.t("public-id=","questionchoicespm:35");
x.t("public-id=","questionchoicespm:36");
x.t("public-id=","questionchoicespm:37");
x.t("public-id=","questionchoicespm:38");
x.t("public-id=","questionchoicespm:39");
x.t("public-id=","questionspm:11");
x.t("public-id=","questionspm:12");
x.t("public-id=","questionspm:13");
x.t("public-id=","questionsetspm:1");
x.t("public-id=","questionchoicespm:1");
x.t("public-id=","questionchoicespm:2");
x.t("public-id=","questionsetspm:5");
x.t("public-id=","questionchoicespm:3");
x.t("public-id=","spmqfilter:1");
x.t("public-id=","spmqfilter:2");
x.t("public-id=","questionchoicespm:40");
x.t("public-id=","questionchoicespm:41");
x.t("public-id=","questionchoicespm:42");
x.t("public-id=","spmreviewtype:1");
x.t("public-id=","spmreviewtype:2");
x.t("public-id=","reviewcatqset:1");
x.t("public-id=","questionspm:1");
x.t("autorepairshop","10");
x.t("autorepairshop","define");
x.t("autorepairshop","/contactsubtype");
x.t("important","retire");
x.t("assigned","reviewcategoryquestionset");
x.t("repairs","give");
x.t("added","claimcenter");
x.t("added","click");
x.t("transmission","engine");
x.t("/code","description");
x.t("initial","contact");
x.t("initial","quote");
x.t("purpose","want");
x.t("code","defines");
x.t("code","wheels");
x.t("code","shows");
x.t("code","morethan3");
x.t("code","sample");
x.t("code","twothree");
x.t("code","element");
x.t("code","atmost5");
x.t("code","no");
x.t("code","fiveten");
x.t("code","reviewcategory");
x.t("code","win3day");
x.t("code","samples");
x.t("code","/code");
x.t("code","win1day");
x.t("code","tentwenty");
x.t("code","over20");
x.t("code","used");
x.t("code","more3days");
x.t("agencies","/description");
x.t("reference","question");
x.t("reference","typecode");
x.t("reference","review");
x.t("reference","using");
x.t("enable","scoring");
x.t("enable","choose");
x.t("enable","questionset");
x.t("enable","category");
x.t("book","tab");
x.t("reviewcategoryquestionset","example");
x.t("reviewcategoryquestionset","entities");
x.t("reviewcategoryquestionset","specifies");
x.t("reviewcategoryquestionset","xml");
x.t("reviewcategoryquestionset","public-id=");
x.t("reviewcategoryquestionset","reference");
x.t("reviewcategoryquestionset","priority");
x.t("reviewcategoryquestionset","note");
x.t("reviewcategoryquestionset","entity");
x.t("reviewcategoryquestionset","questionset");
x.t("typecodes","categories");
x.t("typecodes","needed");
x.t("typecodes","configuring");
x.t("typecodes","reviewservicetype");
x.t("typecodes","claimcenter");
x.t("typecodes","reviewcategory");
x.t("typecodes","display");
x.t("typecodes","review");
x.t("typecodes","contactmanager");
x.t("typecodes","assigned");
x.t("typecodes","reviewcategoryquestionset");
x.t("typecodes","affect");
x.t("typecodes","administrative");
x.t("typecodes","specifying");
x.t("typecodes","show");
x.t("typecodes","two");
x.t("typecodes","used");
x.t("sequentially","doing");
x.t("adds","review");
x.t("ids","questionchoicespm:1");
x.t("ids","questionspm:1");
x.t("primary","ones");
x.t("level","enforce");
x.t("level","information");
x.t("appear","reviewtype");
x.t("affect","average");
x.t("affect","score");
x.t("affect","service");
x.t("matches","contactsubtype");
x.t("previous","topic");
x.t("win1day","/code");
x.t("100","/score");
x.t("100","no");
x.t("100","50");
x.t("lower","number");
x.t("lower","percentage");
x.t("given","equal");
x.t("asynchronously","either");
x.t("threshold","preferred");
x.t("click","open");
x.t("click","utilities");
x.t("click","browse");
x.t("click","refresh");
x.t("click","next");
x.t("click","data");
x.t("click","finish");
x.t("click","administration");
x.t("click","export");
x.t("shouldretirefromimportxml","false");
x.t("shouldretirefromimportxml","true");
x.t("kind","service");
x.t("enter","gwab");
x.t("enter","following");
x.t("enter","gwcc");
x.t("shop","sample");
x.t("shop","able");
x.t("shop","auto");
x.t("shop","review");
x.t("quickly","auto");
x.t("quickly","service");
x.t("ensure","changes");
x.t("dev-start","configuring");
x.t("dev-start","claimcenter");
x.t("tentwenty","/code");
x.t("20","/name");
x.t("20","/description");
x.t("greater","threshold");
x.t("greater","20");
x.t("occurred","messsage");
x.t("existing","reviews");
x.t("existing","typecode");
x.t("existing","review");
x.t("existing","retire");
x.t("/contactsubtype","description");
x.t("longer","create");
x.t("longer","need");
x.t("project","window");
x.t("changing","typecode");
x.t("claimcenter/bin","directory");
x.t("made","correct");
x.t("taken","review");
x.t("rules","customize");
x.t("rules","implementing");
x.t("exporting","importing");
x.t("username","su");
x.t("retiring","review");
x.t("configuration","provides");
x.t("configuration","config");
x.t("mechanisms","similar");
x.t("include","unanswered");
x.t("include","category");
x.t("core","application");
x.t("easier","read");
x.t("bin","directory");
x.t("right-click","new");
x.t("right-click","existing");
x.t("abreviewsummary.rws","next");
x.t("/questiontype","required");
x.t("additional","questions");
x.t("additional","cost");
x.t("main","tool");
x.t("similar","simple");
x.t("reviewviewlist","permission");
x.t("revsumviewlist","permission");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("drop-down","list");
x.t("regenerate","claimcenter");
x.t("regenerate","contactmanager");
x.t("specific","review");
x.t("--","question");
x.t("--","--");
x.t("over20","/code");
x.t("adjuster","user");
x.t("several","scores");
x.t("send","contactmanager");
x.t("implementation","gw.plugin.spm.ab800.contactreviewplugin");
x.t("implementation","icontactreviewplugin");
x.t("import","file");
x.t("import","add");
x.t("import","changed");
x.t("import","review");
x.t("import","administrative");
x.t("import","data");
x.t("import","export");
x.t("making","first");
x.t("generate","data");
x.t("/questionset","reviewcategoryquestionset");
x.t("25","/score");
x.t("process","results");
x.t("process","api");
x.t("process","claimcenter");
x.t("process","contactmanager");
x.t("view","details");
x.t("view","list");
x.t("view","edit");
x.t("view","review");
x.t("screen","description");
x.t("screen","shows");
x.t("screen","new");
x.t("screen","enable");
x.t("screen","click");
x.t("screen","import");
x.t("screen","work");
x.t("screen","category");
x.t("administrative","file");
x.t("administrative","data");
x.t("score","10");
x.t("score","user");
x.t("score","/score");
x.t("score","single");
x.t("score","average");
x.t("score","50");
x.t("score","sets");
x.t("score","entire");
x.t("score","define");
x.t("score","particular");
x.t("score","100");
x.t("score","25");
x.t("score","score");
x.t("score","averaged");
x.t("score","individual");
x.t("score","arithmetic");
x.t("score","category");
x.t("read","maintain");
x.t("services","provided");
x.t("services","double-click");
x.t("services","vendor");
x.t("subtype","typecode");
x.t("subtype","level");
x.t("subtype","matches");
x.t("subtype","typecode\u2019s");
x.t("sees","questionspm:12");
x.t("page","error");
x.t("separate","reviewcategoryquestionset");
x.t("schedule","complete");
x.t("schedule","repair");
x.t("show","questions");
x.t("show","additional");
x.t("show","service");
x.t("show","category");
x.t("gwab","dev-stop");
x.t("gwab","studio");
x.t("gwab","regen-dictionary");
x.t("gwab","dev-start");
x.t("specifying","contact");
x.t("wheel","service");
x.t("consisting","average");
x.t("data","available");
x.t("data","exported");
x.t("data","sidebar");
x.t("data","dictionary");
x.t("data","dictionaries");
x.t("data","click");
x.t("data","screen");
x.t("data","described");
x.t("data","export");
x.t("data","model");
x.t("data","installation");
x.t("questions.xml","file");
x.t("questions.xml","exporting");
x.t("questions.xml","choose");
x.t("information","defining");
x.t("information","securing");
x.t("information","service");
x.t("information","adding");
x.t("information","claims");
x.t("internally","reference");
x.t("correct","14");
x.t("attached","up");
x.t("tool","managing");
x.t("becomes","uneditable");
x.t("configure","scoring");
x.t("configure","service");
x.t("questionchoice","designates");
x.t("questionchoice","public-id=");
x.t("questionchoice","questionfilter");
x.t("questionchoice","answers");
x.t("save","import");
x.t("save","questions.xml");
x.t("save","choose");
x.t("spmreviewtype:1","/reviewcategoryquestionset");
x.t("spmreviewtype:1","contactsubtype");
x.t("spmreviewtype:1","import");
x.t("spmreviewtype:1","additionally");
x.t("retire","example");
x.t("retire","add");
x.t("retire","review");
x.t("retire","cannot");
x.t("retire","existing");
x.t("retire","questionset");
x.t("defined","reviewcategory");
x.t("defined","scores");
x.t("defined","typecodes");
x.t("defined","corresponding");
x.t("defined","associated");
x.t("desc","description");
x.t("contactmanager/bin","directory");
x.t("suspension","transmission");
x.t("examples","auto");
x.t("reuse","categories");
x.t("spmreviewtype:2","contactsubtype");
x.t("application","uses");
x.t("application","guidewire");
x.t("application","guide");
x.t("application","contactmanager");
x.t("application","gwab");
x.t("application","gwcc");
x.t("values","configuring");
x.t("answer","question");
x.t("answer","questionspm:11");
x.t("answer","no");
x.t("answer","/answer");
x.t("answer","question\u2019s");
x.t("requotes","/text");
x.t("requotes","auto");
x.t("requotes","lower");
x.t("requotes","percentage");
x.t("question\u2019s","score");
x.t("submit","review");
x.t("themselves","contactmanager");
x.t("described","installing");
x.t("described","configuring");
x.t("described","previously");
x.t("described","exporting");
x.t("choose","contact");
x.t("choose","questions");
x.t("choose","wheels");
x.t("choose","add");
x.t("choose","typecode");
x.t("choose","directory");
x.t("choose","autorepairshop");
x.t("choose","kind");
x.t("choose","save");
x.t("finish","11");
x.t("finish","import");
x.t("gw.plugin.spm.ab800.contactreviewplugin","information");
x.t("permission","create");
x.t("permission","delete");
x.t("permission","edit");
x.t("permission","view");
x.t("export","questions");
x.t("export","review");
x.t("export","prompt");
x.t("export","unit");
x.t("export","click");
x.t("export","data");
x.t("export","questions.xml");
x.t("export","choose");
x.t("questionfilter","reviewtype");
x.t("questionfilter","entities");
x.t("questionfilter","public-id=");
x.t("administration","import/export");
x.t("administration","tab");
x.t("note","want");
x.t("note","need");
x.t("note","define");
x.t("note","following");
x.t("note","adding");
x.t("integer","determines");
x.t("two","mechanism");
x.t("two","kinds");
x.t("two","filters");
x.t("two","typelists");
x.t("spmreview","/questionsettype");
x.t("spmreview","type");
x.t("readability","name");
x.t("priority","/priority");
x.t("priority","elementorder");
x.t("priority","values");
x.t("priority","priority");
x.t("priority","causes");
x.t("indent","/indent");
x.t("percentage","additional");
x.t("users","contact");
x.t("work","questions");
x.t("work","review");
x.t("work","important");
x.t("work","service");
x.t("repair","shops");
x.t("repair","/text");
x.t("repair","auto");
x.t("repair","shop");
x.t("repair","answer");
x.t("repair","note");
x.t("repair","priority");
x.t("repair","service");
x.t("repair","category");
x.t("copy","example");
x.t("/description","name");
x.t("averaged","elementorder");
x.t("applications","necessary");
x.t("correctly","formatted");
x.t("typically","question");
x.t("typically","certain");
x.t("typically","scored");
x.t("typically","insured");
x.t("answers","questions");
x.t("answers","questionchoices");
x.t("answers","range");
x.t("answers","display");
x.t("answers","choices");
x.t("answers","questionchoice");
x.t("answers","defined");
x.t("answers","questionfilter");
x.t("answers","similarly");
x.t("answers","naming");
x.t("based","answer");
x.t("aggregated","vendor");
x.t("associate","reviewtype");
x.t("associate","sets");
x.t("order","questions");
x.t("order","categories");
x.t("order","according");
x.t("order","making");
x.t("rpc-encoded","web");
x.t("causes","claimcenter");
x.t("call","configuring");
x.t("service","providers");
x.t("service","wheels");
x.t("service","provided");
x.t("service","type");
x.t("service","/name");
x.t("service","no");
x.t("service","follows");
x.t("service","provider");
x.t("service","review");
x.t("service","types");
x.t("service","code");
x.t("service","wheel");
x.t("service","typically");
x.t("service","performed");
x.t("management","guide");
x.t("bottom","file");
x.t("following","question");
x.t("following","command");
x.t("following","permissions");
x.t("following","review");
x.t("following","xml");
x.t("following","code");
x.t("following","elements");
x.t("entity","question");
x.t("entity","hierarchy");
x.t("entity","applies");
x.t("entity","connects");
x.t("entity","following");
x.t("entity","used");
x.t("elements","reviewtype");
x.t("starts","number");
x.t("used","sample");
x.t("used","drop-down");
x.t("used","internally");
x.t("system","enforce");
x.t("system","calculate");
x.t("model","change");
x.t("model","service");
x.t("typecode\u2019s","category");
x.t("viewpoint","service");
x.t("corresponding","reviewcategoryquestionset");
x.t("special","characteristics");
x.t("run","abcontactscoring");
x.t("run","reviewsync");
x.t("individual","contact");
x.t("individual","reviews");
x.t("individual","review");
x.t("either","batch");
x.t("either","include");
x.t("manage","certain");
x.t("installation","guide");
x.t("installation","import");
x.t("installation","vendor\u2019s");
x.t("vendor","contact");
x.t("vendor","field");
x.t("vendor","provided");
x.t("vendor","single");
x.t("vendor","scores");
x.t("vendor","score");
x.t("vendor","two");
x.t("containing","retired");
x.t("containing","questions");
x.t("containing","reviewtype");
x.t("using","gosu");
x.t("using","retire");
x.t("using","service");
x.t("setting","up");
x.t("setting","shouldretirefromimportxml");
x.t("typelist","enables");
x.t("typelist","double-click");
x.t("typelist","editor");
x.t("typelist","matches");
x.t("typelist","choose");
x.t("typelist","assigning");
x.t("typelist","category");
x.t("additionally","improve");
x.t("additionally","up");
x.t("additionally","enable");
x.t("additionally","category");
x.t("reviewcatqset:1","references");
x.t("reviewcatqset:1","elementorder");
x.t("calculated","reviews");
x.t("/questionchoice","question");
x.t("/questionchoice","scoring");
x.t("/questionchoice","--");
x.t("/questionchoice","questionchoice");
x.t("scheduling","reviews");
x.t("arithmetic","averages");
x.t("arithmetic","average");
x.t("arithmetic","means");
x.t("similarly","category");
x.t("rescores","review");
x.t("vendor\u2019s","category");
x.t("password","gw");
x.t("tab","reviewviewdetail");
x.t("tab","click");
x.t("adding","review");
x.t("adding","typecodes");
x.t("adding","changing");
x.t("company","reviewtype");
x.t("assigning","review");
x.t("deciding","categories");
x.t("more3days","/code");
x.t("series","questionchoice");
x.t("associated","ask");
x.t("associated","reviewtype");
x.t("associated","entities");
x.t("associated","individual");
x.t("associated","service");
x.t("questionset","question");
x.t("questionset","topic");
x.t("questionset","provides");
x.t("questionset","public-id=");
x.t("questionset","work");
x.t("definitions","xml");
x.t("gwcc","dev-stop");
x.t("gwcc","studio");
x.t("gwcc","regen-dictionary");
x.t("gwcc","dev-start");
x.t("therefore","question");
x.t("therefore","requires");
x.t("performed","service");
x.t("member","questions");
x.t("questionformat/","questionset");
x.t("designate","users");
x.t("var","text_val=eval");
x.t("timeliness","question");
x.t("timeliness","sample");
x.t("timeliness","/name");
x.t("timeliness","auto");
x.t("timeliness","/reviewcategory");
x.t("timeliness","reviewcategoryquestionset");
x.t("/elementorder","questionset");
x.t("days","initial");
x.t("/questionfilter","--");
x.t("/questionfilter","questionfilter");
x.t("claims","adjuster");
x.t("claims","vendor");
x.t("uneditable","contact");
x.t("log","administrator");
x.t("log","claimcenter");
x.t("log","username");
x.t("category","example");
x.t("category","question");
x.t("category","contact");
x.t("category","questions");
x.t("category","reviews");
x.t("category","new");
x.t("category","element");
x.t("category","list");
x.t("category","typecode");
x.t("category","applies");
x.t("category","determine");
x.t("category","claimcenter");
x.t("category","scores");
x.t("category","typecodes");
x.t("category","score");
x.t("category","individual");
x.t("category","definitions");
x.t("category","category");
x.t("category","glass");
x.t("produce","category");
x.t("naming","conventions");
x.t("conventions","clear");
x.t("review\u2019s","scores");
x.t("glass","repair");
x.t("glass","installation");
x.t("icontactreviewplugin","plugin");
x.t("sent","contactmanager");
x.t("managers","manage");
x.t("/reviewtype","open");
x.t("/reviewtype","change");
x.t("/reviewtype","configuring");
x.t("/reviewtype","give");
x.t("specify","contact");
x.t("specify","vendor");
x.t("alignment","balancing");
x.t("questionspm:1","defaultanswer/");
x.t("questionspm:1","choices");
x.t("questionspm:1","score");
x.t("difference","initial");
x.t("contains","claimcenter");
x.t("update","asynchronously");
x.t("gets","view");
}
