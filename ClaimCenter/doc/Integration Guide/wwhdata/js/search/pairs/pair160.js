function FileData_Pairs(x)
{
x.t("unlike","types");
x.t("metaphor","apply");
x.t("example","anything");
x.t("example","assumes");
x.t("example","start");
x.t("example","expect");
x.t("example","queries");
x.t("example","customize");
x.t("example","gwrunnable");
x.t("example","implementation");
x.t("example","following");
x.t("example","setting");
x.t("example","runwithnewbundle");
x.t("coding","startable");
x.t("system.out.println","startable");
x.t("publishing","claimcenter");
x.t("provide","detailed");
x.t("method","example");
x.t("method","method");
x.t("method","parameter");
x.t("method","commits");
x.t("method","create");
x.t("method","callback");
x.t("method","execute");
x.t("method","creates");
x.t("method","plugin");
x.t("method","start");
x.t("method","signature");
x.t("method","includes");
x.t("method","appropriately");
x.t("method","demonstrates");
x.t("method","stop");
x.t("method","constructor");
x.t("method","perform");
x.t("method","argument");
x.t("method","reads");
x.t("method","internal");
x.t("method","variant");
x.t("method","startableplugincallbackhandler");
x.t("method","takes");
x.t("method","information");
x.t("method","appropriate");
x.t("method","called");
x.t("method","destroys");
x.t("method","package");
x.t("method","call");
x.t("method","signatures");
x.t("method","analogous");
x.t("method","returns");
x.t("method","server");
x.t("combined","single");
x.t("parameter","table");
x.t("parameter","callback");
x.t("parameter","start");
x.t("parameter","stop");
x.t("transactions","gosu");
x.t("properties","desired");
x.t("construct","override");
x.t("goodbye","_callback");
x.t("else","_callback.logstop");
x.t("else","_state");
x.t("else","_callback.logstart");
x.t("else","_callback.state");
x.t("notes","java");
x.t("library","files");
x.t("just","plugin");
x.t("just","start");
x.t("version","callback");
x.t("version","however");
x.t("version","runwithnewbundle");
x.t("version","startable");
x.t("anything","useful");
x.t("ever","database");
x.t("ever","run");
x.t("rare","situations");
x.t("pattern","creating");
x.t("implement","plugin");
x.t("implement","sort");
x.t("implement","getting");
x.t("implement","trivial");
x.t("implement","following");
x.t("within","claimcenter");
x.t("within","code");
x.t("needs","maintain");
x.t("needs","java");
x.t("needs","consider");
x.t("files","user");
x.t("files","places");
x.t("files","persistence");
x.t("files","startable");
x.t("annotation","startable");
x.t("saved","state");
x.t("java.lang.runnable","example");
x.t("integration","guide");
x.t("studio","just");
x.t("studio","plugins");
x.t("background","processes");
x.t("background","process");
x.t("create","new");
x.t("create","custom");
x.t("create","thread");
x.t("create","bundle");
x.t("create","separate");
x.t("refer","updating");
x.t("_callback","handler");
x.t("_callback","startableplugincallbackhandler");
x.t("_callback","null");
x.t("_callback","cbh");
x.t("isstarting","boolean");
x.t("commits","block");
x.t("alternate","method");
x.t("alternate","version");
x.t("built-in","user");
x.t("e.message","important");
x.t("table","persistence");
x.t("mechanism","information");
x.t("variables","var");
x.t("callback","handler");
x.t("callback","important");
x.t("callback","handler\u2019s");
x.t("bundles","simple");
x.t("bundles","gosu");
x.t("bundles","database");
x.t("instance","//note");
x.t("instance","startableplugincallbackhandler");
x.t("instance","writable");
x.t("related","note");
x.t("keep","state");
x.t("always","run");
x.t("instructions","slightly");
x.t("persistent","entity");
x.t("apply","integrations");
x.t("action","within");
x.t("customer-defined","background");
x.t("likely","case");
x.t("arguments","represents");
x.t("arguments","information");
x.t("void","_callback");
x.t("void","_thread");
x.t("void","_callback.log");
x.t("void","run");
x.t("preupdate","rules");
x.t("parts","tasks");
x.t("gw.api.startable.istartableplugin","uses");
x.t("(myblock)","information");
x.t("plugin","example");
x.t("plugin","method");
x.t("plugin","ever");
x.t("plugin","saved");
x.t("plugin","needs");
x.t("plugin","studio");
x.t("plugin","callback");
x.t("plugin","always");
x.t("plugin","interface");
x.t("plugin","state");
x.t("plugin","listener");
x.t("plugin","change");
x.t("plugin","start");
x.t("plugin","relatively");
x.t("plugin","name");
x.t("plugin","tasks");
x.t("plugin","modifies");
x.t("plugin","find");
x.t("plugin","place");
x.t("plugin","manipulate");
x.t("plugin","underlying");
x.t("plugin","instead");
x.t("plugin","starting");
x.t("plugin","internal");
x.t("plugin","basics");
x.t("plugin","implementing");
x.t("plugin","types");
x.t("plugin","important");
x.t("plugin","code");
x.t("plugin","java");
x.t("plugin","include");
x.t("plugin","running");
x.t("plugin","implementation");
x.t("plugin","runs");
x.t("plugin","page");
x.t("plugin","information");
x.t("plugin","save");
x.t("plugin","stopping");
x.t("plugin","note");
x.t("plugin","typically");
x.t("plugin","call");
x.t("plugin","run");
x.t("plugin","system");
x.t("plugin","class");
x.t("plugin","distributed");
x.t("plugin","including");
x.t("integrations","require");
x.t("integrations","need");
x.t("user","version");
x.t("user","user");
x.t("user","contexts");
x.t("user","interface");
x.t("user","entities");
x.t("user","name");
x.t("user","second");
x.t("user","define");
x.t("user","code");
x.t("user","null");
x.t("user","depending");
x.t("user","context");
x.t("user","entity");
x.t("user","associated");
x.t("current","user");
x.t("current","state");
x.t("current","(writable)");
x.t("current","claimcenter");
x.t("current","bundle");
x.t("execute","method");
x.t("execute","execute");
x.t("execute","methods");
x.t("execute","whose");
x.t("creates","new");
x.t("prepared","current");
x.t("situations","expect");
x.t("try","transaction.runwithnewbundle");
x.t("java.lang.exception","trycount");
x.t("discussed","previous");
x.t("reply","plugin");
x.t("reply","acknowledgment");
x.t("uses","gw.api.startable.istartableplugin");
x.t("uses","property");
x.t("uses","java.lang.thread");
x.t("uses","gw.api.startable.startableplugincallbackhandler");
x.t("uses","gw.api.util.logger");
x.t("uses","gw.transaction.transaction");
x.t("uses","gw.api.startable.startablepluginstate");
x.t("contexts","no");
x.t("contexts","startable");
x.t("shows","simple");
x.t("remote","system");
x.t("later","state");
x.t("line","log");
x.t("(stopped)","_state");
x.t("(stopped)","//");
x.t("text_val.select","link");
x.t("register","custom");
x.t("register","startable");
x.t("selectively","start");
x.t("interface","unlike");
x.t("interface","example");
x.t("interface","implement");
x.t("interface","studio");
x.t("interface","user");
x.t("interface","uses");
x.t("interface","apis");
x.t("interface","name");
x.t("interface","gosu");
x.t("interface","implementation");
x.t("interface","following");
x.t("interface","contains");
x.t("state","ever");
x.t("state","user");
x.t("state","plugin");
x.t("state","necessary");
x.t("state","property");
x.t("state","want");
x.t("state","appropriately");
x.t("state","according");
x.t("state","consistent");
x.t("state","started");
x.t("state","sets");
x.t("state","startablepluginstate");
x.t("state","may");
x.t("state","persist");
x.t("state","code");
x.t("state","database");
x.t("state","variable");
x.t("state","helloworlddistributedstartableplugin:started");
x.t("state","already");
x.t("state","information");
x.t("state","itself");
x.t("state","package");
x.t("state","helloworlddistributedstartableplugin:stopped");
x.t("look","simple");
x.t("support","blocks");
x.t("respects","request");
x.t("administrator","api");
x.t("necessary","_callback.logstop");
x.t("necessary","_callback.logstart");
x.t("necessary","exceptions");
x.t("type","customer-defined");
x.t("type","plugin");
x.t("type","in-line");
x.t("type","startableplugincallbackhandler");
x.t("listener","start");
x.t("listener","stop");
x.t("listener","code");
x.t("listener","listening");
x.t("listener","similar");
x.t("listener","defined");
x.t("batch","processes");
x.t("batch","server");
x.t("introduction","claimcenter");
x.t("change","example");
x.t("change","started");
x.t("change","pcf");
x.t("thing","information");
x.t("basic","structure");
x.t("isshuttingdown","boolean");
x.t("times","want");
x.t("initially","runs");
x.t("external","code");
x.t("external","system");
x.t("non-null","values");
x.t("calls","plugin");
x.t("time","query");
x.t("time","history");
x.t("public","void");
x.t("form","startable");
x.t("however","metaphor");
x.t("however","alternate");
x.t("however","start");
x.t("however","need");
x.t("however","instead");
x.t("however","java");
x.t("however","configure");
x.t("however","startable");
x.t("sort","listener");
x.t("trigger","action");
x.t("trigger","start");
x.t("down","plugin");
x.t("down","false");
x.t("down","true");
x.t("down","value");
x.t("multiple","variants");
x.t("variants","gwrunnable");
x.t("queue","selectively");
x.t("queue","listener");
x.t("default","assumption");
x.t("default","stopped");
x.t("default","startable");
x.t("require","external");
x.t("property","state");
x.t("property","results");
x.t("property","definition");
x.t("property","accessor");
x.t("property","writable");
x.t("property","startable");
x.t("entities","current");
x.t("entities","sets");
x.t("entities","database");
x.t("assumes","listener");
x.t("gw.api.startableplugin","uses");
x.t("guidewire","strongly");
x.t("guidewire","entity");
x.t("automatically","persisted");
x.t("automatically","series");
x.t("apis","information");
x.t("apis","application");
x.t("original","changed");
x.t("needed","getstate");
x.t("put","java");
x.t("link","directly");
x.t("jms","queue");
x.t("start","method");
x.t("start","listener");
x.t("start","stop");
x.t("start","handler");
x.t("start","up");
x.t("start","request");
x.t("start","method\u2019s");
x.t("start","service");
x.t("start","pass");
x.t("start","cbh");
x.t("start","var");
x.t("servers","state");
x.t("servers","started");
x.t("servers","cluster");
x.t("servers","happens");
x.t("servers","startable");
x.t("new","entities");
x.t("new","jms");
x.t("new","thread");
x.t("new","class");
x.t("single","method");
x.t("single","variable");
x.t("signature","execute");
x.t("signature","gw.transaction.transaction.runwithnewbundle");
x.t("getting","setting");
x.t("want","change");
x.t("want","different");
x.t("==","started");
x.t("_callback.logstop","helloworlddistributedstartableplugin");
x.t("_callback.logstop","helloworlddistributedstartableplugin:started");
x.t("_callback.logstop","helloworlddistributedstartableplugin:stopped");
x.t("block","however");
x.t("block","argument");
x.t("block","shortcut");
x.t("block","define");
x.t("block","changes");
x.t("block","runs");
x.t("block","special");
x.t("block","run");
x.t("block","anonymous");
x.t("block","pass");
x.t("transaction.getcurrent","current");
x.t("includes","boolean");
x.t("gw.transaction.transaction.current","//");
x.t("indirectly","runs");
x.t("t.daemon=true","override");
x.t("messsage","claimcenter");
x.t("need","create");
x.t("need","user");
x.t("need","listener");
x.t("need","custom");
x.t("need","different");
x.t("need","reference");
x.t("need","send");
x.t("need","commit");
x.t("status","go");
x.t("status","started");
x.t("status","database");
x.t("status","startable");
x.t("appropriately","later");
x.t("appropriately","state");
x.t("indicates","whether");
x.t("//note","need");
x.t("proper","setting");
x.t("again","_state");
x.t("places","plugin");
x.t("add","method");
x.t("add","current");
x.t("add","code");
x.t("add","implementation");
x.t("add","entity");
x.t("add","@distributed");
x.t("relatively","straightforward");
x.t("typecode","typelist");
x.t("bundle.add","(e)");
x.t("complete","simple");
x.t("recommends","startable");
x.t("expect","administrator");
x.t("expect","startable");
x.t("track","internal");
x.t("guide","just");
x.t("guide","put");
x.t("guide","important");
x.t("guide","information");
x.t("guide","plugins");
x.t("guide","note");
x.t("go","server");
x.t("api","trigger");
x.t("api","logstart");
x.t("api","startable");
x.t("simple","example");
x.t("simple","interface");
x.t("simple","gosu");
x.t("simple","//");
x.t("simple","startable");
x.t("results","gosu");
x.t("results","query");
x.t("due","plugin");
x.t("according","getstate");
x.t("configuring","startable");
x.t("false","start");
x.t("false","stop");
x.t("false","stopped");
x.t("remember","add");
x.t("_thread.stop","_startedhowmanytimes");
x.t("_thread.stop","_thread");
x.t("serverstopping","boolean");
x.t("soap","apis");
x.t("directly","support");
x.t("directly","indirectly");
x.t("directly","page");
x.t("writing","startable");
x.t("_state","==");
x.t("_state","_callback.getstate");
x.t("_state","started");
x.t("_state","startablepluginstate");
x.t("_state","startablepluginstate.stopped");
x.t("_state","override");
x.t("_state","stopped");
x.t("_state","//");
x.t("true","plugin");
x.t("true","started");
x.t("true","startable");
x.t("true","server");
x.t("desired","result");
x.t("declare","plugin");
x.t("detects","condition");
x.t("java.lang.thread","uses");
x.t("text_val.focus","text_val.select");
x.t("name","state");
x.t("name","simple");
x.t("name","actual");
x.t("name","choose");
x.t("definition","combined");
x.t("definition","property");
x.t("definition","shortcut");
x.t("definition","earlier");
x.t("definition","var");
x.t("no","built-in");
x.t("no","arguments");
x.t("simplest","method");
x.t("simplest","version");
x.t("demonstrates","basic");
x.t("creating","block");
x.t("creating","anonymous");
x.t("getstate","method");
x.t("getstate","ignores");
x.t("getstate","gets");
x.t("libraries","files");
x.t("maintain","state");
x.t("stop","method");
x.t("stop","user");
x.t("stop","isshuttingdown");
x.t("stop","serverstopping");
x.t("stop","methods");
x.t("stop","request");
x.t("stop","whatever");
x.t("stop","starting");
x.t("stop","view");
x.t("stop","service");
x.t("stop","startable");
x.t("initialize","server");
x.t("constructor","start");
x.t("constructor","called");
x.t("handler","method");
x.t("handler","type");
x.t("handler","(serverstartup)");
x.t("handler","startableplugincallbackhandler");
x.t("handler","object");
x.t("gosu","plugin");
x.t("gosu","block");
x.t("gosu","blocks");
x.t("gosu","reference");
x.t("gosu","main");
x.t("gosu","class");
x.t("gosu","startable");
x.t("tasks","method");
x.t("tasks","specific");
x.t("follows","server");
x.t("changed","server");
x.t("existed","reason");
x.t("custom","persistent");
x.t("custom","listener");
x.t("custom","batch");
x.t("custom","code");
x.t("listen","reply");
x.t("argument","line");
x.t("argument","start");
x.t("argument","true");
x.t("argument","gosu");
x.t("argument","stop");
x.t("argument","gwrunnable");
x.t("argument","setstate");
x.t("argument","runwithnewbundle");
x.t("(writable)","bundle");
x.t("perform","startable");
x.t("handles","request");
x.t("handles","edge");
x.t("trivial","thread");
x.t("_callback.getstate","(stopped)");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","implement");
x.t("methods","multiple");
x.t("methods","start");
x.t("methods","object");
x.t("alternatively","combine");
x.t("shortcut","keyword");
x.t("shortcut","anonymous");
x.t("modifies","entity");
x.t("boolean","void");
x.t("boolean","variable");
x.t("updating","entity");
x.t("useful","start");
x.t("inner","classes");
x.t("inner","class");
x.t("up","false");
x.t("up","code");
x.t("up","value");
x.t("up","read");
x.t("up","messaging");
x.t("find","plugin");
x.t("combine","variable");
x.t("standard","java");
x.t("standard","class");
x.t("place","java");
x.t("web","services");
x.t("web","service");
x.t("gw","plugin");
x.t("gw","api");
x.t("consistent","across");
x.t("attempts","information");
x.t("writes","line");
x.t("claimcenter","integration");
x.t("claimcenter","user");
x.t("claimcenter","need");
x.t("claimcenter","web");
x.t("claimcenter","users");
x.t("write","new");
x.t("accessor","(get)");
x.t("accessor","function");
x.t("accessor","show");
x.t("started","keep");
x.t("started","start");
x.t("started","_callback.logstop");
x.t("started","false");
x.t("started","stop");
x.t("started","changestate");
x.t("started","instead");
x.t("started","_callback.logstart");
x.t("started","stopped");
x.t("started","_callback.state");
x.t("started","_thread");
x.t("started","administration");
x.t("started","_callback.log");
x.t("started","additionally");
x.t("started","startable");
x.t("sets","state");
x.t("sets","property");
x.t("sets","up");
x.t("sets","database");
x.t("string","user");
x.t("string","include");
x.t("local","state");
x.t("changestate","(stopped)");
x.t("changestate","newstate");
x.t("changestate","(started)");
x.t("attempt","trycount");
x.t("outgoing","messages");
x.t("in-line","function");
x.t("in-line","anonymous");
x.t("earlier","class");
x.t("rely","non-null");
x.t("second","method");
x.t("second","argument");
x.t("thread","start");
x.t("thread","proper");
x.t("thread","function");
x.t("thread","override");
x.t("thread","already");
x.t("manipulate","guidewire");
x.t("(get)","function");
x.t("simplify","code");
x.t("request","calls");
x.t("request","however");
x.t("request","attempts");
x.t("request","comes");
x.t("request","startable");
x.t("error","occurred");
x.t("blocks","implement");
x.t("blocks","gosu");
x.t("blocks","inner");
x.t("queries","user");
x.t("whatever","background");
x.t("strongly","recommends");
x.t("late","servers");
x.t("respect","request");
x.t("hold","current");
x.t("consistently","save");
x.t("messages","data");
x.t("minimum","start");
x.t("affects","entity");
x.t("clearly","consistently");
x.t("bother","distributed");
x.t("first","time");
x.t("helloworlddistributedstartableplugin","_state");
x.t("helloworlddistributedstartableplugin","implements");
x.t("helloworlddistributedstartableplugin","//");
x.t("reason","briefly");
x.t("trycount","try");
x.t("trycount","_callback.state");
x.t("trycount","_callback.log");
x.t("trycount","caught");
x.t("guidewire_selectall","var");
x.t("underlying","transport");
x.t("_callback.execute","//");
x.t("_callback.execute","var");
x.t("stops","local");
x.t("briefly","stop");
x.t("function","state");
x.t("function","look");
x.t("function","start");
x.t("function","gosu");
x.t("function","stop");
x.t("function","sets");
x.t("function","changestate");
x.t("function","guidewire_selectall");
x.t("function","override");
x.t("function","run");
x.t("cluster","default");
x.t("cluster","late");
x.t("cluster","approach");
x.t("cluster","combination");
x.t("cluster","declaring");
x.t("cluster","information");
x.t("cluster","decides");
x.t("cluster","server");
x.t("implements","istartableplugin");
x.t("implements","run");
x.t("startablepluginstate","state");
x.t("startablepluginstate","return");
x.t("startablepluginstate","value");
x.t("startablepluginstate","var");
x.t("approach","handles");
x.t("design","pattern");
x.t("customize","view");
x.t("editor","following");
x.t("different","parts");
x.t("different","batch");
x.t("different","depending");
x.t("different","plugins");
x.t("different","users");
x.t("different","behavior");
x.t("processes","writing");
x.t("processes","listeners");
x.t("straightforward","coding");
x.t("define","plugin");
x.t("define","in-line");
x.t("define","minimum");
x.t("define","private");
x.t("define","startable");
x.t("private","variables");
x.t("private","function");
x.t("private","variable");
x.t("startablepluginstate.stopped","//");
x.t("startablepluginstate.stopped","additionally");
x.t("startablepluginstate.stopped","var");
x.t("cannot","gosu");
x.t("whether","define");
x.t("whether","appropriate");
x.t("whether","server");
x.t("reads","second");
x.t("reads","database");
x.t("may","changes");
x.t("combination","state");
x.t("represents","default");
x.t("(serverstartup)","//");
x.t(".name","e.message");
x.t("instead","_state");
x.t("instead","anonymous");
x.t("instead","using");
x.t("instead","startable");
x.t("instead","server");
x.t("detailed","information");
x.t("language","directly");
x.t("starting","method");
x.t("starting","again");
x.t("starting","true");
x.t("starting","up");
x.t("starting","stopping");
x.t("//variable","definition");
x.t("gw.api.startable.startableplugincallbackhandler","uses");
x.t("logstart","writes");
x.t("user.util.unrestricteduser","catch");
x.t("internal","state");
x.t("internal","function");
x.t("internal","variable");
x.t("internal","tools");
x.t("types","instructions");
x.t("types","track");
x.t("types","plugins");
x.t("changes","entity");
x.t("changes","using");
x.t("changes","server");
x.t("pcf","files");
x.t("transport","mechanism");
x.t("basics","startable");
x.t("implementing","interface");
x.t("implementing","custom");
x.t("keyword","simplify");
x.t("real-world","startable");
x.t("listeners","started");
x.t("variant","pass");
x.t("gw.transaction.transaction.runwithnewbundle","bundle");
x.t("declaring","startable");
x.t("gwrunnable","public");
x.t("gwrunnable","block");
x.t("gwrunnable","simple");
x.t("gwrunnable","myblock=new");
x.t("important","notes");
x.t("important","type");
x.t("important","java");
x.t("important","startable");
x.t("persist","database");
x.t("simply","stops");
x.t("expected","value");
x.t("_callback.logstart","helloworlddistributedstartableplugin");
x.t("_callback.logstart","helloworlddistributedstartableplugin:started");
x.t("_callback.logstart","helloworlddistributedstartableplugin:stopped");
x.t("code","prepared");
x.t("code","initially");
x.t("code","trigger");
x.t("code","start");
x.t("code","block");
x.t("code","transaction.getcurrent");
x.t("code","_state");
x.t("code","directly");
x.t("code","initialize");
x.t("code","combine");
x.t("code","affects");
x.t("code","_callbackhandler.execute");
x.t("code","running");
x.t("code","depending");
x.t("code","specific");
x.t("code","runs");
x.t("code","special");
x.t("code","run");
x.t("code","threads");
x.t("task","send");
x.t("reference","current");
x.t("reference","guide");
x.t("steps","follows");
x.t("_callbackhandler.execute","(myblock)");
x.t("slightly","different");
x.t("override","property");
x.t("override","function");
x.t("return","_state");
x.t("return","private");
x.t("return","result");
x.t("tracks","started");
x.t("startableplugincallbackhandler","construct");
x.t("startableplugincallbackhandler","isstarting");
x.t("startableplugincallbackhandler","callback");
x.t("startableplugincallbackhandler","code");
x.t("startableplugincallbackhandler","override");
x.t("startableplugincallbackhandler","serverstartup");
x.t("startableplugincallbackhandler","var");
x.t("startableplugincallbackhandler","object");
x.t("listening","jms");
x.t("message","external");
x.t("database","transactions");
x.t("database","method");
x.t("database","implement");
x.t("database","state");
x.t("database","automatically");
x.t("database","default");
x.t("database","status");
x.t("database","true");
x.t("database","getstate");
x.t("database","expected");
x.t("database","value");
x.t("database","query");
x.t("database","transaction");
x.t("database","using");
x.t("database","even");
x.t("database","startable");
x.t("method\u2019s","isstartingup");
x.t("previous","topics");
x.t("persistence","starting");
x.t("persistence","startable");
x.t("event","messaging");
x.t("istartableplugin","interface");
x.t("istartableplugin","right-click");
x.t("istartableplugin","var");
x.t("variable","indicates");
x.t("variable","definition");
x.t("variable","alternatively");
x.t("variable","sets");
x.t("variable","hold");
x.t("variable","define");
x.t("variable","startablepluginstate.stopped");
x.t("variable","tracks");
x.t("variable","messagebody");
x.t("variable","call");
x.t("whose","argument");
x.t("bundle","create");
x.t("bundle","refer");
x.t("bundle","execute");
x.t("bundle","change");
x.t("bundle","need");
x.t("bundle","add");
x.t("bundle","specific");
x.t("bundle","newstate");
x.t("bundle","correct");
x.t("bundle","information");
x.t("bundle","save");
x.t("bundle","_callback.setstate");
x.t("bundle","your_block_body");
x.t("bundle","q.select");
x.t("java","method");
x.t("java","files");
x.t("java","gosu");
x.t("java","design");
x.t("java","cannot");
x.t("java","language");
x.t("java","plugins");
x.t("java","classes");
x.t("java","class");
x.t("java","startable");
x.t("java","plugin\u2019s");
x.t("(e)","writable_object.department");
x.t("(e)","//");
x.t("writable_object.department","example");
x.t("actual","user");
x.t("serverstartup","boolean");
x.t("occurred","messsage");
x.t("acknowledgment","however");
x.t("consider","publishing");
x.t("stopped","state");
x.t("stopped","configuring");
x.t("stopped","started");
x.t("stopped","changestate");
x.t("stopped","first");
x.t("stopped","using");
x.t("stopped","//");
x.t("stopped","across");
x.t("stopped","server");
x.t("rules","code");
x.t("null","else");
x.t("null","_callback");
x.t("null","_thread.stop");
x.t("null","_state");
x.t("null","rely");
x.t("null","(serverstopping)");
x.t("assumption","first");
x.t("tries","times");
x.t("typeof",".name");
x.t("configuration","plugins");
x.t("include","plugin");
x.t("include","constructor");
x.t("instances","bundles");
x.t("instances","query");
x.t("writable_object","bundle.add");
x.t("gw.api.util.logger","@distributed");
x.t("tools","user");
x.t("tools","interface");
x.t("tools","startable");
x.t("transport\u2019s","main");
x.t("main","task");
x.t("main","startable");
x.t("right-click","interface");
x.t("value","state");
x.t("value","true");
x.t("value","started");
x.t("value","database");
x.t("value","stopped");
x.t("value","startable");
x.t("similar","start");
x.t("running","version");
x.t("running","request");
x.t("running","anonymous");
x.t("helloworlddistributedstartableplugin:started","else");
x.t("helloworlddistributedstartableplugin:started","logstop");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","type");
x.t("implementation","start");
x.t("implementation","detects");
x.t("implementation","tries");
x.t("implementation","location");
x.t("implementation","itself");
x.t("implementation","class");
x.t("send","outgoing");
x.t("send","message");
x.t("depending","method");
x.t("depending","needs");
x.t("depending","whether");
x.t("specific","user");
x.t("writable","bundle");
x.t("writable","save");
x.t("writable","entity");
x.t("already","existed");
x.t("already","matching");
x.t("view","provide");
x.t("view","status");
x.t("process","custom");
x.t("broadcast","servers");
x.t("broadcast","system");
x.t("condition","reads");
x.t("condition","simply");
x.t("shuts","down");
x.t("_startedhowmanytimes","//");
x.t("_startedhowmanytimes","var");
x.t("newstate","trycount");
x.t("newstate","startablepluginstate");
x.t("newstate","user.util.unrestricteduser");
x.t("runs","rare");
x.t("runs","start");
x.t("runs","due");
x.t("runs","note");
x.t("runs","server");
x.t("services","introduction");
x.t("takes","arguments");
x.t("takes","no");
x.t("takes","argument");
x.t("hello","t.daemon=true");
x.t("hello","world");
x.t("read","value");
x.t("(serverstopping)","_state");
x.t("page","property");
x.t("page","stop");
x.t("page","error");
x.t("registry","editor");
x.t("location","slightly");
x.t("location","configuration");
x.t("show","state");
x.t("context","need");
x.t("context","simplest");
x.t("separate","bundle");
x.t("gw.api.database.query.make","(user)");
x.t("helloworldstartableplugin","goodbye");
x.t("helloworldstartableplugin","implements");
x.t("helloworldstartableplugin","hello");
x.t("server-database","cluster");
x.t("setstate","sets");
x.t("setstate","careful");
x.t("configure","run");
x.t("information","bundles");
x.t("information","remote");
x.t("information","register");
x.t("information","servers");
x.t("information","configuring");
x.t("information","gosu");
x.t("information","web");
x.t("information","define");
x.t("information","starting");
x.t("information","database");
x.t("information","adding");
x.t("information","startable");
x.t("messaging","reply");
x.t("messaging","transport\u2019s");
x.t("messaging","system");
x.t("data","example");
x.t("data","within");
x.t("data","likely");
x.t("data","changes");
x.t("data","startable");
x.t("privileges","view");
x.t("correct","(default)");
x.t("(default)","database");
x.t("query","results");
x.t("query","remember");
x.t("query","//variable");
x.t("query","var");
x.t("query","checked");
x.t("gw.transaction.transaction","uses");
x.t("gw.transaction.transaction","class");
x.t("joining","cluster");
x.t("this.intrinsictype.name","attempt");
x.t("defined","variable");
x.t("save","state");
x.t("save","return");
x.t("save","copy");
x.t("save","modify");
x.t("result","bundle.add");
x.t("result","bundle");
x.t("result","var");
x.t("persisted","broadcast");
x.t("happens","automatically");
x.t("appropriate","respect");
x.t("appropriate","startable");
x.t("appropriate","server");
x.t("ignores","argument");
x.t("_thread","thread");
x.t("_thread","null");
x.t("_callback.state","started");
x.t("_callback.state","stopped");
x.t("_callback.state","newstate");
x.t("_callback.setstate","bundle");
x.t("case","real-world");
x.t("application","sets");
x.t("application","propagates");
x.t("(user)","//");
x.t("values","current");
x.t("logstop","writes");
x.t("stopping","method");
x.t("stopping","startable");
x.t("choose","add");
x.t("called","execute");
x.t("called","system");
x.t("called","run");
x.t("destroys","listener");
x.t("structure","creating");
x.t("decides","whether");
x.t("print","hello");
x.t("plugins","plugin");
x.t("plugins","register");
x.t("plugins","start");
x.t("plugins","need");
x.t("plugins","soap");
x.t("plugins","simplest");
x.t("plugins","gw");
x.t("plugins","clearly");
x.t("plugins","function");
x.t("plugins","cluster");
x.t("plugins","define");
x.t("plugins","configuration");
x.t("plugins","main");
x.t("plugins","registry");
x.t("plugins","operate");
x.t("plugins","run");
x.t("plugins","similarities");
x.t("plugins","startable");
x.t("note","integrations");
x.t("note","need");
x.t("note","gw.transaction.transaction");
x.t("note","entity");
x.t("users","different");
x.t("users","administration");
x.t("administration","user");
x.t("administration","privileges");
x.t("transaction","application");
x.t("handler\u2019s","execute");
x.t("history","startable");
x.t("topics","override");
x.t("classes","library");
x.t("classes","gosu");
x.t("classes","implementing");
x.t("startup","form");
x.t("startup","however");
x.t("startup","startable");
x.t("startup","server");
x.t("typically","implement");
x.t("comes","server");
x.t("messagebody","information");
x.t("work","//");
x.t("cases","server");
x.t("copy","object");
x.t("itself","java");
x.t("itself","following");
x.t("operate","batch");
x.t("package","gw.api.startableplugin");
x.t("_callback.log","helloworldstartableplugin");
x.t("_callback.log","this.intrinsictype.name");
x.t("immediately","calls");
x.t("call","execute");
x.t("call","internal");
x.t("call","setstate");
x.t("call","following");
x.t("(started)","//");
x.t("myblock=new","gwrunnable");
x.t("run","system.out.println");
x.t("run","method");
x.t("run","current");
x.t("run","servers");
x.t("run","instead");
x.t("run","code");
x.t("run","server-database");
x.t("run","query");
x.t("run","print");
x.t("run","pass");
x.t("system","parameter");
x.t("system","however");
x.t("system","entities");
x.t("system","listen");
x.t("system","running");
x.t("system","startup");
x.t("service","write");
x.t("service","instead");
x.t("service","code");
x.t("service","startup");
x.t("service","server");
x.t("following","example");
x.t("following","create");
x.t("following","shows");
x.t("following","complete");
x.t("following","methods");
x.t("following","location");
x.t("special","notes");
x.t("special","type");
x.t("special","service");
x.t("entity","instance");
x.t("entity","related");
x.t("entity","string");
x.t("entity","types");
x.t("entity","instances");
x.t("entity","data");
x.t("anonymous","inner");
x.t("anonymous","java");
x.t("anonymous","classes");
x.t("anonymous","class");
x.t("signatures","execute");
x.t("either","user");
x.t("starts","plugin");
x.t("transaction.runwithnewbundle","bundle");
x.t("analogous","standard");
x.t("using","plugin");
x.t("using","block");
x.t("using","internal");
x.t("using","event");
x.t("class","java.lang.runnable");
x.t("class","alternate");
x.t("class","thing");
x.t("class","guidewire");
x.t("class","libraries");
x.t("class","gosu");
x.t("class","standard");
x.t("class","helloworlddistributedstartableplugin");
x.t("class","implements");
x.t("class","java");
x.t("class","helloworldstartableplugin");
x.t("class","special");
x.t("class","//");
x.t("class","var");
x.t("typelist","startablepluginstate");
x.t("//","create");
x.t("//","current");
x.t("//","plugin");
x.t("//","however");
x.t("//","property");
x.t("//","add");
x.t("//","_state");
x.t("//","thread");
x.t("//","private");
x.t("//","internal");
x.t("//","return");
x.t("//","implementation");
x.t("//","work");
x.t("//","call");
x.t("//","run");
x.t("//","modify");
x.t("//","server");
x.t("additionally","start");
x.t("additionally","stop");
x.t("setting","state");
x.t("setting","property");
x.t("setting","startable");
x.t("your_block_body","user");
x.t("similarities","messaging");
x.t("returns","typecode");
x.t("pass","callback");
x.t("pass","execute");
x.t("pass","value");
x.t("pass","either");
x.t("q.select","//");
x.t("adding","entity");
x.t("distributed","batch");
x.t("distributed","original");
x.t("distributed","add");
x.t("distributed","declare");
x.t("distributed","broadcast");
x.t("distributed","server");
x.t("@distributed","annotation");
x.t("@distributed","class");
x.t("across","servers");
x.t("series","steps");
x.t("catch","java.lang.exception");
x.t("catch","exceptions");
x.t("modify","properties");
x.t("modify","result");
x.t("associated","contexts");
x.t("world","override");
x.t("behavior","different");
x.t("behavior","private");
x.t("caught","typeof");
x.t("var","_callback");
x.t("var","new");
x.t("var","gw.transaction.transaction.current");
x.t("var","_state");
x.t("var","text_val=eval");
x.t("var","trycount");
x.t("var","writable_object");
x.t("var","_startedhowmanytimes");
x.t("var","gw.api.database.query.make");
x.t("var","_thread");
x.t("cbh","_callback.execute");
x.t("cbh","startableplugincallbackhandler");
x.t("commit","bundle");
x.t("isstartingup","parameter");
x.t("including","preupdate");
x.t("runwithnewbundle","method");
x.t("runwithnewbundle","api");
x.t("runwithnewbundle","pass");
x.t("edge","cases");
x.t("helloworlddistributedstartableplugin:stopped","else");
x.t("helloworlddistributedstartableplugin:stopped","_callback");
x.t("helloworlddistributedstartableplugin:stopped","following");
x.t("startable","plugin");
x.t("startable","istartableplugin");
x.t("startable","plugins");
x.t("shutting","down");
x.t("gw.api.startable.startablepluginstate","uses");
x.t("gw.api.startable.startablepluginstate","class");
x.t("even","state");
x.t("propagates","information");
x.t("careful","catch");
x.t("exceptions","create");
x.t("exceptions","//");
x.t("log","plugin");
x.t("log","string");
x.t("server","respects");
x.t("server","state");
x.t("server","batch");
x.t("server","however");
x.t("server","start");
x.t("server","handles");
x.t("server","bother");
x.t("server","cluster");
x.t("server","starting");
x.t("server","tools");
x.t("server","shuts");
x.t("server","joining");
x.t("server","startup");
x.t("server","immediately");
x.t("server","starts");
x.t("server","behavior");
x.t("server","shutting");
x.t("server","server");
x.t("threads","jms");
x.t("plugin\u2019s","start");
x.t("object","parameter");
x.t("object","instance");
x.t("object","discussed");
x.t("object","needed");
x.t("object","private");
x.t("gets","state");
x.t("checked","example");
x.t("matching","database");
x.t("contains","single");
}
