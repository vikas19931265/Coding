function FileData_Pairs(x)
{
x.t("complex","tasks");
x.t("example","uses");
x.t("example","checks");
x.t("example","want");
x.t("example","rpce");
x.t("example","add");
x.t("example","testing");
x.t("example","gosu");
x.t("example","write");
x.t("example","error");
x.t("example","two");
x.t("example","package");
x.t("example","class");
x.t("example","var");
x.t("looks","up");
x.t("referencing","original");
x.t("ignore","bean");
x.t("happen","related");
x.t("happen","thread");
x.t("userid","roleid");
x.t("userid","id");
x.t("publishing","web");
x.t("method","finds");
x.t("method","clone");
x.t("method","parameters");
x.t("method","bundle");
x.t("method","gets");
x.t("transactions","apis");
x.t("transactions","gosu");
x.t("possible","gosu");
x.t("possible","avoid");
x.t("parameter","true");
x.t("parameter","usesafebundleforwebserviceoperations");
x.t("@param","userid");
x.t("@param","roleids");
x.t("exist","@throws");
x.t("role","claimcenter");
x.t("role","already");
x.t("role","user.addtoroles");
x.t("role","loadrolebyidorthrow");
x.t("version","conflicts");
x.t("receives","soapretryableexception");
x.t("full","information");
x.t("full","entity");
x.t("within","plugin");
x.t("within","gosu");
x.t("roleid","exist");
x.t("roleid","roleids");
x.t("integration","guide");
x.t("integration","point");
x.t("integration","code");
x.t("integration","exception");
x.t("create","memory");
x.t("create","entirely");
x.t("studio","package");
x.t("static","type");
x.t("commits","database");
x.t("commits","bundle");
x.t("commits","result");
x.t("commits","rpc-encoded");
x.t("commits","entity");
x.t("contact","customer");
x.t("always","detect");
x.t("always","test");
x.t("always","strictly");
x.t("getaddresspublicids","poscode");
x.t("bundles","gosu");
x.t("bundles","database");
x.t("instance","uses");
x.t("instance","new");
x.t("instance","find");
x.t("instance","changes");
x.t("instance","reference");
x.t("instance","bundle");
x.t("instance","query");
x.t("related","code");
x.t("related","database");
x.t("required","entity");
x.t("covers","information");
x.t("flag","whichever");
x.t("summary","oneaddress");
x.t("summary","newlist.add");
x.t("getaddress","publicid");
x.t("performs","similar");
x.t("arguments","web");
x.t("arguments","gw.transaction.transaction.getcurrent");
x.t("topic","covers");
x.t("topic","duplicate");
x.t("situations","results");
x.t("try","serialize");
x.t("try","send");
x.t("plugin","rules");
x.t("current","database");
x.t("current","bundle");
x.t("current","writable");
x.t("current","transaction");
x.t("questions","convert");
x.t(".add","user");
x.t(".add","(e)");
x.t("user","@param");
x.t("user","role");
x.t("user","user");
x.t("user","current");
x.t("user","userpublicid");
x.t("user","==");
x.t("user","transaction.getcurrent");
x.t("user","exists");
x.t("user","roleids");
x.t("user","ignored");
x.t("user","adds");
x.t("user","var");
x.t("dataconversionexception","userid");
x.t("dataconversionexception","no");
x.t("uses","gw.api.webservice.exception.soapexception");
x.t("uses","java.util.arraylist");
x.t("uses","gw.transaction.transaction");
x.t("later","commit");
x.t(".bundle","property");
x.t("text_val.select","link");
x.t("potentially","return");
x.t("errors","happen");
x.t("errors","undo");
x.t("errors","follow");
x.t("errors","occur");
x.t("support","true");
x.t("modified","entity");
x.t("roll","back");
x.t("type","address");
x.t("type","refactoring");
x.t("customer","support");
x.t("best","reuse");
x.t("retry","soap");
x.t("times","serious");
x.t("public","id");
x.t("public","function");
x.t("public","ids");
x.t("@webservice","class");
x.t("calls","rpce");
x.t("calls","server");
x.t("initially","read-only");
x.t("explicitly","add");
x.t("explicitly","application");
x.t("userpublicid","string");
x.t("userpublicid","bundle");
x.t("userpublicid","//");
x.t("soap.local","objects");
x.t("soap.local","namespace");
x.t("locally-hosted","soap");
x.t("however","database");
x.t("however","generally");
x.t("entities","full");
x.t("entities","want");
x.t("entities","add");
x.t("entities","group");
x.t("entities","writing");
x.t("entities","small");
x.t("entities","function");
x.t("entities","match");
x.t("entities","grouped");
x.t("entities","database");
x.t("entities","bundle");
x.t("entities","writable");
x.t("entities","warning");
x.t("entities","//");
x.t("entities","matching");
x.t("convert","particular");
x.t("convert","existing");
x.t("assumes","reader");
x.t("guidewire","studio");
x.t("guidewire","entities");
x.t("guidewire","strongly");
x.t("partial","data");
x.t("checks","results");
x.t("a.postalcode","==");
x.t("apis","within");
x.t("apis","rpce");
x.t("apis","design");
x.t("apis","plugins");
x.t("detect","reload");
x.t("automatically","commits");
x.t("automatically","current");
x.t("automatically","rule");
x.t("property","however");
x.t("original","entity");
x.t("default","new");
x.t("default","includes");
x.t("default","(current)");
x.t("default","value");
x.t("no-argument","constructor");
x.t("instance\u2019s","changes");
x.t("back","errors");
x.t("link","directly");
x.t("rpce","operation");
x.t("rpce","web");
x.t("rpce","code");
x.t("details","public");
x.t("want","perform");
x.t("want","existing");
x.t("want","commit");
x.t("certain","entities");
x.t("certain","query");
x.t("certain","postal");
x.t("single","entity");
x.t("soapexception","integration");
x.t("soapexception","public");
x.t("soapexception","addresses");
x.t("==","throw");
x.t("==","null");
x.t("==","poscode");
x.t("new","dataconversionexception");
x.t("new","soapexception");
x.t("new","userrole");
x.t("new","address");
x.t("new","requiredfieldexception");
x.t("new","bundle");
x.t("new","writable");
x.t("new","specific");
x.t("new","entity");
x.t("new","arraylist");
x.t("engine","production");
x.t("refactor","code");
x.t("objects","current");
x.t("objects","soap");
x.t("objects","serialized");
x.t("speaking","gw.transaction.transaction.getcurrent");
x.t("belongs","user");
x.t("(userrole)","//");
x.t("includes","soap.local");
x.t("includes","rpce");
x.t("includes","incoming");
x.t("block","no-argument");
x.t("block","block");
x.t("block","in-line");
x.t("transaction.getcurrent",".add");
x.t("transaction.getcurrent",".commit");
x.t("messsage","claimcenter");
x.t("finds","address");
x.t("finds","specific");
x.t("list","public");
x.t("need","apis");
x.t("need","add");
x.t("need","database");
x.t("found","entity");
x.t("newaddress","address");
x.t("id","user");
x.t("id","following");
x.t("id","//");
x.t("id","returns");
x.t("id","matching");
x.t("recommends","web");
x.t("recommends","error");
x.t("add","example");
x.t("add","method");
x.t("add","current");
x.t("add","user");
x.t("add","entities");
x.t("add","found");
x.t("add","different");
x.t("add","calling");
x.t("add","read-only");
x.t("add","roles");
x.t("group","guidewire");
x.t("group","running");
x.t("clone","object");
x.t("guide","create");
x.t("guide","topic");
x.t("guide","new");
x.t("guide","web");
x.t("guide","may");
x.t("guide","simply");
x.t("guide","bundle");
x.t("api","public");
x.t("api","single");
x.t("api","implementations");
x.t("api","hosted");
x.t("api","information");
x.t("api","call");
x.t("results","create");
x.t("results","summary");
x.t("results","initially");
x.t("results","add");
x.t("results","higher");
x.t("exampleapi","//");
x.t("network","try");
x.t("testing","rpce");
x.t("testing","web");
x.t("applies","rpce");
x.t("simple","example");
x.t("soap","calls");
x.t("soap","apis");
x.t("soap","results");
x.t("soap","api");
x.t("soap","client");
x.t("large","data");
x.t("large","including");
x.t("@throws","dataconversionexception");
x.t("@throws","soapexception");
x.t("false","application");
x.t("duplicate","topic\u2019s");
x.t("writing","soap");
x.t("writing","web");
x.t("directly","page");
x.t("test","database");
x.t("gw.api.webservice.exception.soapexception","uses");
x.t("oneaddress","string");
x.t("oneaddress","var");
x.t("true","possible");
x.t("true","false");
x.t("true","types");
x.t("true","application");
x.t("(current)","bundle");
x.t("detects","ignore");
x.t("text_val.focus","text_val.select");
x.t("no","user");
x.t("no","longer");
x.t("no","data");
x.t("conflicts","parameter");
x.t("conflicts","commits");
x.t("operation","arguments");
x.t("creating","new");
x.t("tasks","api");
x.t("tasks","querying");
x.t("addresses","match");
x.t("addresses","return");
x.t("gosu","block");
x.t("gosu","throw");
x.t("gosu","function");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","class");
x.t("performance","questions");
x.t("follows","web");
x.t("constructor","example");
x.t("previously","save");
x.t("clients","catch");
x.t("perform","complex");
x.t("perform","tasks");
x.t("avoid","referencing");
x.t("avoid","calling");
x.t("avoid","case");
x.t("studio-registered","web");
x.t("argument","creating");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","method");
x.t("checking","example");
x.t("checking","situations");
x.t("checking","large");
x.t("checking","checking");
x.t("checking","bounds");
x.t("modifies","entity");
x.t("parameters","later");
x.t("parameters","include");
x.t("rule","sets");
x.t("exists","publicid");
x.t("whichever","appropriate");
x.t("find","address");
x.t("find","query");
x.t("namespace","warning");
x.t("up","bundle");
x.t("up","entity");
x.t("config.xml","configuration");
x.t("loaded","database");
x.t("implementations","bundle");
x.t("userrole","new");
x.t("userrole","userrole.role");
x.t("web","services");
x.t("web","service");
x.t("address","public");
x.t("address","however");
x.t("address","entities");
x.t("address","a.postalcode");
x.t("address","string");
x.t("address","(publicid)");
x.t("address","return");
x.t("address","entity");
x.t("claimcenter","integration");
x.t("claimcenter","data");
x.t("regarding","special");
x.t("entire","address");
x.t("entire","entity");
x.t("string","oneaddress");
x.t("string","address");
x.t("string","string");
x.t("string","roleids");
x.t("string","print");
x.t("string","//");
x.t("string","var");
x.t("sets","up");
x.t("sets","validation");
x.t("sets","//");
x.t("sets","commit");
x.t("local","data");
x.t("local","loopback");
x.t("write","gosu");
x.t("gw.transaction.transaction.getcurrent","current");
x.t("gw.transaction.transaction.getcurrent",".add");
x.t("gw.transaction.transaction.getcurrent","objects");
x.t("gw.transaction.transaction.getcurrent",".commit");
x.t("gw.transaction.transaction.getcurrent","important");
x.t(".commit","return");
x.t(".commit","//");
x.t("integrity","errors");
x.t("subobjects","always");
x.t("in-line","gosu");
x.t("thread","cluster");
x.t("addressexampleapi","public");
x.t("small","entities");
x.t("1000","throw");
x.t("request","return");
x.t("userrole.role","role");
x.t("error","checking");
x.t("error","occurred");
x.t("error","condition");
x.t("queries","potentially");
x.t("point","warning");
x.t("strongly","recommends");
x.t("java.util.arraylist","@webservice");
x.t("hosted","locally");
x.t("committing","entity");
x.t("know","changing");
x.t("occurs","soap");
x.t("validation","successfully");
x.t("finally","commits");
x.t("syntax","finds");
x.t("ws-i","web");
x.t("issues","writing");
x.t("throw","new");
x.t("throw","concurrentdatachangeexception");
x.t("throw","exceptions");
x.t("(roleid)","//");
x.t("guidewire_selectall","var");
x.t("setup","code");
x.t("function","getaddresspublicids");
x.t("function","getaddress");
x.t("function","web");
x.t("function","guidewire_selectall");
x.t("function","insertaddress");
x.t("function","contained");
x.t("function","addrolestouser");
x.t("design","rpce");
x.t("cluster","node");
x.t("newaddress.publicid","warning");
x.t("undo","related");
x.t("roleids","public");
x.t("roleids","==");
x.t("roleids","string");
x.t("roleids","var");
x.t("particular","locally-hosted");
x.t("may","need");
x.t("may","cases");
x.t("carefully","consider");
x.t("different","value");
x.t("publicid","userpublicid");
x.t("publicid","string");
x.t("detailed","example");
x.t("instead","refactor");
x.t("refactoring","results");
x.t("ignored","@param");
x.t("requiredfieldexception","roles");
x.t("section","assumes");
x.t("match","certain");
x.t("match","given");
x.t("newlist.add","oneaddress.publicid");
x.t("(publicid)","detailed");
x.t("changes","example");
x.t("changes","full");
x.t("changes","testing");
x.t("changes","no");
x.t("changes","appropriate");
x.t("changes","behavior");
x.t("changes","commit");
x.t("types","local");
x.t("things","know");
x.t("calling","locally-hosted");
x.t("calling","gw.transaction.transaction.getcurrent");
x.t("calling","following");
x.t("calling","commit");
x.t("important","detailed");
x.t("important","things");
x.t("important","following");
x.t("grouped","together");
x.t("simply","application");
x.t("node","modified");
x.t("added","@throws");
x.t("code","public");
x.t("code","add");
x.t("code","@throws");
x.t("code","perform");
x.t("code","avoid");
x.t("code","rule");
x.t("code","gw.transaction.transaction.getcurrent");
x.t("code","ws-i");
x.t("code","running");
x.t("code","typically");
x.t("code","entirely");
x.t("code","using");
x.t("code","returns");
x.t("client","receives");
x.t("client","calls");
x.t("client","committing");
x.t("client","code");
x.t("client","java");
x.t("follow","example");
x.t("reference","guide");
x.t("reference","entity");
x.t("reference","adding");
x.t("task","gosu");
x.t("ids","role");
x.t("ids","rpce");
x.t("ids","certain");
x.t("ids","match");
x.t("ids","querying");
x.t("ids","roles");
x.t("return","userpublicid");
x.t("return","partial");
x.t("return","address");
x.t("return","newaddress.publicid");
x.t("return","value");
x.t("return","data");
x.t("return","result");
x.t("return","var");
x.t("return","newlist");
x.t("serialize","//");
x.t("completes","want");
x.t("usesafebundleforwebserviceoperations","changes");
x.t("usesafebundleforwebserviceoperations","following");
x.t("adds","roles");
x.t("database","example");
x.t("database","transactions");
x.t("database","guidewire");
x.t("database","rpce");
x.t("database","queries");
x.t("database","error");
x.t("database","may");
x.t("database","changes");
x.t("database","database");
x.t("database","together");
x.t("database","query");
x.t("database","transaction");
x.t("database","entity");
x.t("database","manually");
x.t("memory","errors");
x.t("given","postal");
x.t("successfully","runs");
x.t("bundle","example");
x.t("bundle","within");
x.t("bundle","commits");
x.t("bundle","current");
x.t("bundle","user");
x.t("bundle","type");
x.t("bundle","explicitly");
x.t("bundle","automatically");
x.t("bundle","default");
x.t("bundle","new");
x.t("bundle","rpce");
x.t("bundle","includes");
x.t("bundle","transaction.getcurrent");
x.t("bundle","need");
x.t("bundle","group");
x.t("bundle","true");
x.t("bundle","gosu");
x.t("bundle","setup");
x.t("bundle","calling");
x.t("bundle","reference");
x.t("bundle","bundle");
x.t("bundle","query");
x.t("bundle","encapsulate");
x.t("bundle","transaction");
x.t("bundle","mentioned");
x.t("bundle","created");
x.t("bundle","var");
x.t("bundle","object");
x.t("java","classes");
x.t("java","plugins");
x.t("together","current");
x.t("together","save");
x.t("(e)","save");
x.t("variable","possible");
x.t("bean","version");
x.t("occurred","messsage");
x.t("existing","rpce");
x.t("existing","transaction");
x.t("rules","contact");
x.t("rules","engine");
x.t("reload","local");
x.t("changing","entity");
x.t("consider","configuration");
x.t("extremely","careful");
x.t("longer","roll");
x.t("null","throw");
x.t("null","roleids.length");
x.t("serialized","rpce");
x.t("serialized","data");
x.t("instances","bundles");
x.t("instances","default");
x.t("instances","new");
x.t("include","entities");
x.t("configuration","parameter");
x.t("soapretryableexception","guidewire");
x.t("value","static");
x.t("value","add");
x.t("value","true");
x.t("value","//");
x.t("similar","function");
x.t("running","code");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("send","data");
x.t("writable","bundle");
x.t("writable","transaction");
x.t("already","current");
x.t("already","belongs");
x.t("specific","id");
x.t("specific","bundle");
x.t("bounds","checking");
x.t("exception","happen");
x.t("exception","addresses");
x.t("exception","exception");
x.t("condition","occurs");
x.t("services","publishing");
x.t("services","topic");
x.t("services","entities");
x.t("services","parameters");
x.t("services","ws-i");
x.t("services","may");
x.t("services","section");
x.t("services","published");
x.t("services","deprecated");
x.t("services","(rpce)");
x.t("services","call");
x.t("systems","careful");
x.t("takes","entity");
x.t("runs","following");
x.t("page","error");
x.t("data","method");
x.t("data","commits");
x.t("data","flag");
x.t("data","explicitly");
x.t("data","automatically");
x.t("data","rpce");
x.t("data","web");
x.t("data","sets");
x.t("data","integrity");
x.t("data","throw");
x.t("data","instead");
x.t("data","changes");
x.t("data","database");
x.t("data","model");
x.t("data","across");
x.t("data","commit");
x.t("data","server");
x.t("information","bundles");
x.t("information","applies");
x.t("information","regarding");
x.t("information","important");
x.t("query","api");
x.t("query","results");
x.t("query","database");
x.t("query","case");
x.t("query","//");
x.t("gw.transaction.transaction","@webservice");
x.t("user.addtoroles","(userrole)");
x.t("appropriate","integration");
x.t("appropriate","times");
x.t("production","systems");
x.t("save","return");
x.t("save","database");
x.t("read-only","entities");
x.t("read-only","add");
x.t("result","add");
x.t("result","adds");
x.t("ignores","bean");
x.t("insertaddress","newaddress");
x.t("loadrolebyidorthrow","(roleid)");
x.t("case","example");
x.t("case","postal");
x.t("reuse","variable");
x.t("application","automatically");
x.t("application","detects");
x.t("application","ignores");
x.t("application","commit");
x.t("published","server");
x.t("deprecated","convert");
x.t("poscode","string");
x.t("poscode","//");
x.t("print","adding");
x.t("encapsulate","task");
x.t("two","methods");
x.t("oneaddress.publicid","return");
x.t("transaction","always");
x.t("transaction","api");
x.t("transaction","no");
x.t("transaction","calling");
x.t("transaction","//");
x.t("transaction","modify");
x.t("transaction","including");
x.t("plugins","studio-registered");
x.t("plugins","rules");
x.t("classes","java");
x.t("note","soap");
x.t("(rpce)","writing");
x.t("mentioned","previously");
x.t("cases","rpce");
x.t("typically","errors");
x.t("copy","new");
x.t("querying","database");
x.t("querying","entity");
x.t("real","integration");
x.t("package","example");
x.t("package","guidewire");
x.t("locally","modifies");
x.t("call","warning");
x.t("call","server");
x.t("entirely","new");
x.t("created","runwithnewbundle");
x.t("rpc-encoded","web");
x.t("incoming","entities");
x.t("model","details");
x.t("special","issues");
x.t("entity","instance");
x.t("entity","public");
x.t("entity","instance\u2019s");
x.t("entity","large");
x.t("entity","loaded");
x.t("entity","address");
x.t("entity","changes");
x.t("entity","instances");
x.t("entity","data");
x.t("service","looks");
x.t("service","method");
x.t("service","commits");
x.t("service","arguments");
x.t("service","soap.local");
x.t("service","follows");
x.t("service","clients");
x.t("service","config.xml");
x.t("service","important");
x.t("service","client");
x.t("service","completes");
x.t("service","already");
x.t("service","takes");
x.t("service","real");
x.t("service","system");
x.t("service","commit");
x.t("service","gets");
x.t("following","example");
x.t("following","simple");
x.t("following","code");
x.t("following","information");
x.t("system","sets");
x.t("contained","gosu");
x.t("warning","guidewire");
x.t("warning","rpce");
x.t("warning","avoid");
x.t("warning","carefully");
x.t("warning","extremely");
x.t("using","public");
x.t("class","example");
x.t("class","performs");
x.t("class","exampleapi");
x.t("class","addressexampleapi");
x.t("//","always");
x.t("//","try");
x.t("//","add");
x.t("//","address");
x.t("//","entire");
x.t("//","error");
x.t("//","syntax");
x.t("//","return");
x.t("//","data");
x.t("//","note");
x.t("//","copy");
x.t("//","pass");
x.t("//","commit");
x.t("//","deserialized");
x.t("concurrentdatachangeexception","exception");
x.t("retryable","exceptions");
x.t("roleids.length","==");
x.t("reader","understands");
x.t("postal","code");
x.t("returns","list");
x.t("returns","entire");
x.t("across","network");
x.t("arraylist","string");
x.t("adding","soap");
x.t("adding","entity");
x.t("loopback","soap");
x.t("manually","calling");
x.t("catch","retryable");
x.t("pass","argument");
x.t("q.getcount","1000");
x.t("modify","entities");
x.t("behavior","bundle");
x.t("occur","entity");
x.t("addrolestouser","userpublicid");
x.t("var","role");
x.t("var","roleid");
x.t("var","summary");
x.t("var","user");
x.t("var","new");
x.t("var","text_val=eval");
x.t("var","find");
x.t("var","userrole");
x.t("var","newlist");
x.t("including","subobjects");
x.t("including","serialized");
x.t("commit","method");
x.t("commit","create");
x.t("commit","default");
x.t("commit","new");
x.t("commit","objects");
x.t("commit","database");
x.t("commit","bundle");
x.t("commit","data");
x.t("commit","entity");
x.t("runwithnewbundle","runwithnewbundle");
x.t("runwithnewbundle","commit");
x.t("deserialized","request");
x.t("roles","user");
x.t("roles","finally");
x.t("roles","added");
x.t("roles","//");
x.t("exceptions","retry");
x.t("exceptions","return");
x.t("newlist","new");
x.t("newlist","//");
x.t("careful","soap");
x.t("careful","commit");
x.t("serious","data");
x.t("strictly","required");
x.t("understands","public");
x.t("matching","certain");
x.t("matching","data");
x.t("gets","user");
x.t("gets","address");
x.t("server","default");
x.t("server","includes");
x.t("server","soap");
x.t("server","performance");
x.t("server","client");
x.t("server","q.getcount");
x.t("higher","server");
x.t("object",".bundle");
x.t("object","best");
x.t("generally","speaking");
x.t("topic\u2019s","information");
}
