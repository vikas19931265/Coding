function FileData_Pairs(x)
{
x.t("example","contact");
x.t("example","plugin");
x.t("example","simple");
x.t("example","looking");
x.t("example","ssl/https");
x.t("example","encryptdes3");
x.t("example","makes");
x.t("example","suppose");
x.t("example","hide");
x.t("example","cannot");
x.t("example","column");
x.t("example","encrypting");
x.t("interfaces","automatically");
x.t("plain","text");
x.t("coding","support");
x.t("supports","encryption");
x.t("upgrade","claim");
x.t("upgrade","encryption");
x.t("upgrade","process");
x.t("inflation","encrypted");
x.t("uniquely","identify");
x.t("particularly","important");
x.t("properties","example");
x.t("properties","later");
x.t("properties","change");
x.t("properties","entities");
x.t("properties","need");
x.t("properties","during");
x.t("properties","normally");
x.t("properties","denormalized");
x.t("properties","gosu");
x.t("properties","encrypted");
x.t("properties","web");
x.t("properties","contain");
x.t("properties","suppose");
x.t("properties","against");
x.t("properties","database");
x.t("properties","data");
x.t("properties","sent");
x.t("properties","equality");
x.t("provide","encryption");
x.t("method","helps");
x.t("method","argument");
x.t("method","return");
x.t("method","invocation");
x.t("method","takes");
x.t("method","returns");
x.t("columns","length");
x.t("columns","special");
x.t("parameter","plugin");
x.t("parameter","missing");
x.t("parameter","specifies");
x.t("exist","server");
x.t("version","unencrypted");
x.t("version","messaging");
x.t("lastnamedenorm","denormalized");
x.t("claim","snapshots");
x.t("wish","encryption");
x.t("implement","plugin");
x.t("implement","getencryptionidentifier");
x.t("implement","enhancement");
x.t("implement","decrypt");
x.t("implement","encrypt");
x.t("implement","class");
x.t("within","claimcenter");
x.t("within","rules");
x.t("within","entity");
x.t("https","add");
x.t("files","overriding");
x.t("varchar","size=");
x.t("varchar","encryption");
x.t("varchar","masks");
x.t("every","record");
x.t("half","string");
x.t("integration","https");
x.t("integration","guide");
x.t("integration","overview");
x.t("integration","point");
x.t("integration","code");
x.t("integration","encryption");
x.t("integration","data");
x.t("sending","information");
x.t("create","new");
x.t("create","classes");
x.t("built-in","integrations");
x.t("contact","property");
x.t("older-style","find");
x.t("decrypted","throw");
x.t("decrypted","database");
x.t("decrypted","data");
x.t("embeds","equality");
x.t("static","literal");
x.t("refer","instructions");
x.t("describes","algorithm");
x.t("describes","names");
x.t("studio","prompts");
x.t("studio","navigate");
x.t("studio","using");
x.t("layer","uses");
x.t("character-based","column");
x.t("binary","types");
x.t("10","makes");
x.t("10","encryption=");
x.t("encryptedstring","claimcenter");
x.t("always","compares");
x.t("instructions","section");
x.t("required","length");
x.t("normal","upgrade");
x.t("responsible","encoding");
x.t("name=","encrypted_column");
x.t("comparisons","means");
x.t("comparisons","less");
x.t("plugin","wish");
x.t("plugin","studio");
x.t("plugin","current");
x.t("plugin","interface");
x.t("plugin","register");
x.t("plugin","simple");
x.t("plugin","remember");
x.t("plugin","overview");
x.t("plugin","detects");
x.t("plugin","name");
x.t("plugin","implementations");
x.t("plugin","write");
x.t("plugin","fields");
x.t("plugin","define");
x.t("plugin","properly");
x.t("plugin","encrypt");
x.t("plugin","return");
x.t("plugin","encryption");
x.t("plugin","changing");
x.t("plugin","implementation");
x.t("plugin","registry");
x.t("plugin","package");
x.t("plugin","returns");
x.t("integrations","secure");
x.t("integrations","external");
x.t("integrations","guidewire");
x.t("integrations","claimcenter");
x.t("integrations","encrypt");
x.t("secure","network");
x.t("secure","protocol");
x.t("creates","secondary");
x.t("tempvalue","local");
x.t("tempvalue","q.compare");
x.t("current","encryption");
x.t("demonstration","encryption");
x.t("detecting","accidental");
x.t("tables","installing");
x.t("tables","encrypted");
x.t("tables","import");
x.t("implemented","iencryption");
x.t("uses","java.lang.stringbuilder");
x.t("uses","encryption");
x.t("uses","gw.plugin.util.iencryption");
x.t("field","type");
x.t("field","path");
x.t("field","unique");
x.t("field","main");
x.t("helps","claimcenter");
x.t("last","time");
x.t("later","add");
x.t("later","important");
x.t("later","encryption");
x.t("text_val.select","link");
x.t("support","case-insensitive");
x.t("support","encryption");
x.t("support","changing");
x.t("necessary","property");
x.t("necessary","depends");
x.t("greaterthan","123");
x.t("interface","field");
x.t("interface","certain");
x.t("interface","name");
x.t("interface","responsibility");
x.t("value.length","value.length");
x.t("value.length","override");
x.t("register","plugin");
x.t("register","multiple");
x.t("prompts","name");
x.t("sample","encryption");
x.t("change","control");
x.t("change","encryption");
x.t("type","encryptedstring");
x.t("type","iencryption");
x.t("type","encrypted");
x.t("type","string");
x.t("mix","encrypted");
x.t("missing","specifies");
x.t("calls","plugin");
x.t("reverses","string");
x.t("external","systems");
x.t("time","during");
x.t("time","server");
x.t("hence","getencryptedlength");
x.t("iencryption","plugin");
x.t("iencryption","edit");
x.t("iencryption","override");
x.t("connection","applications");
x.t("form","bean.encrypted_column");
x.t("however","limitations");
x.t("however","no");
x.t("however","encrypted");
x.t("encrypts","field");
x.t("encrypts","constant");
x.t("identify","encryption");
x.t("buffer.reverse",".append");
x.t("multiple","iencryption");
x.t("product","claimcenter");
x.t("unencrypted","properties");
x.t("unencrypted","static");
x.t("unencrypted","text");
x.t("unencrypted","during");
x.t("unencrypted","avoid");
x.t("unencrypted","string");
x.t("unencrypted","q.compare");
x.t("unencrypted","carefully");
x.t("unencrypted","following");
x.t("unencrypted","versions");
x.t("automatically","runs");
x.t("automatically","application");
x.t("automatically","operate");
x.t("entities","database");
x.t("entities","dynamically");
x.t("text","example");
x.t("text","external");
x.t("text","unencrypted");
x.t("text","want");
x.t("text","appended");
x.t("text","merely");
x.t("text","end");
x.t("text","hello");
x.t("text","without");
x.t("require","extra");
x.t("guidewire","strongly");
x.t("guidewire","applications");
x.t("property","example");
x.t("property","lastnamedenorm");
x.t("property","creates");
x.t("property","access");
x.t("property","claimcenter");
x.t("property","encrypted_column");
x.t("property","literal");
x.t("property","cannot");
x.t("property","thus");
x.t("property","database");
x.t("property","data");
x.t("property","encryptionidentifier");
x.t("limitations","query");
x.t("original","text");
x.t("original","unencrypted");
x.t("removes","second");
x.t("encryptionbyreverseplugin","implements");
x.t("detect","whether");
x.t("put","known");
x.t("link","directly");
x.t("certain","data");
x.t("certain","encryptionidentifier");
x.t("details","security");
x.t("details","duplicate");
x.t("details","changing");
x.t("access","example");
x.t("==","equals");
x.t("want","strong");
x.t("among","encryption");
x.t("among","plugins");
x.t("new","plugin");
x.t("new","stringbuilder");
x.t("new","implementation");
x.t("new","data");
x.t("new","algorithm");
x.t("new","class");
x.t("stringbuilder","(value)");
x.t("start","start");
x.t("start","server");
x.t("size","argument");
x.t("size","encrypted");
x.t("size","override");
x.t("size","//");
x.t("messsage","claimcenter");
x.t("security","requirements");
x.t("security","number");
x.t("security","customize");
x.t("security","systems");
x.t("security","implications");
x.t("need","support");
x.t("need","know");
x.t("need","database-backed");
x.t("during","upgrade");
x.t("during","normal");
x.t("during","web");
x.t("during","encryption");
x.t("during","upgrades");
x.t("during","decryption");
x.t("add","remove");
x.t("add","additional");
x.t("unsupported","types");
x.t("id","implement");
x.t("id","current");
x.t("id","unique");
x.t("id","important");
x.t("id","comparing");
x.t("id","warning");
x.t("id","associated");
x.t("claim.secretval","claim.secretval2");
x.t("installing","encryption");
x.t("recommends","plugin");
x.t("recommends","encryption");
x.t("currentencryptionplugin","parameter");
x.t("guide","plugin");
x.t("guide","plugins");
x.t("network","additional");
x.t("network","setting");
x.t("normally","encrypted");
x.t("applies","types");
x.t("denormalized","column");
x.t("results","query");
x.t("check","search");
x.t("permitted","legally");
x.t("increase","space");
x.t("increase","accommodate");
x.t("simple","demonstration");
x.t("simple","fake");
x.t("(value)",".tostring");
x.t("(value)","override");
x.t("(value)","return");
x.t("remove","encrypted");
x.t("overview","config.xml");
x.t("overview","store");
x.t("overview","function");
x.t("overview","encryption");
x.t("depends","details");
x.t("mirror","lastname");
x.t("looking","up");
x.t("duplicate","check");
x.t("features","staging");
x.t("navigate","resources");
x.t("remember","registered");
x.t("directly","bean");
x.t("directly","page");
x.t("directly","sql");
x.t("ssl/https","secure");
x.t("requirements","warning");
x.t("true","example");
x.t("test","results");
x.t("writing","encryption");
x.t(".tostring","detecting");
x.t("detects","data");
x.t("text_val.focus","text_val.select");
x.t("account","numbers");
x.t("settings","column");
x.t("no","input");
x.t("no","greater");
x.t("no","encryption");
x.t("path","encrypted");
x.t("ran","important");
x.t("name","particularly");
x.t("name","describes");
x.t("name","current");
x.t("name","field");
x.t("name","new");
x.t("name","currentencryptionplugin");
x.t("name","encryption");
x.t("name","class");
x.t("gosu","property");
x.t("gosu","find");
x.t("gosu","encrypted");
x.t("gosu","code");
x.t("gosu","database");
x.t("gosu","rules");
x.t("gosu","expression");
x.t("gosu","generates");
x.t("communication","guidewire");
x.t("getencryptionidentifier","method");
x.t("edit","standard");
x.t("avoid","sending");
x.t("social","security");
x.t("comparison","==");
x.t("comparison","encrypted");
x.t("comparison","logic");
x.t("comparison","supported");
x.t("direct","equality");
x.t("base","configuration");
x.t("argument","length");
x.t("argument","following");
x.t("part","text");
x.t("(value:string)","string");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","sample");
x.t("alternatively","mark");
x.t("secondary","column");
x.t("notequals","tempvalue");
x.t("notequals","123");
x.t("notequals","q.getcolumnref");
x.t("encryptdes3","studio");
x.t("encryptdes3","interface");
x.t("overriding","column");
x.t("makes","property");
x.t("makes","column");
x.t("find","queries");
x.t("find","expressions");
x.t("find","query");
x.t("up","social");
x.t("constants","query");
x.t("determine","required");
x.t("encryption-related","change");
x.t("appended","earlier");
x.t("accidentally","encrypting");
x.t("staging","tables");
x.t("implementations","need");
x.t("standard","plugin");
x.t("config.xml","currentencryptionplugin");
x.t("encrypted","example");
x.t("encrypted","properties");
x.t("encrypted","columns");
x.t("encrypted","version");
x.t("encrypted","necessary");
x.t("encrypted","property");
x.t("encrypted","unencrypted");
x.t("encrypted","communication");
x.t("encrypted","fields");
x.t("encrypted","string");
x.t("encrypted","throw");
x.t("encrypted","q.compare");
x.t("encrypted","size=");
x.t("encrypted","database");
x.t("encrypted","encryption");
x.t("encrypted","specifying");
x.t("encrypted","data");
x.t("encrypted","column");
x.t("encrypted","querying");
x.t("encrypted","versions");
x.t("web","services");
x.t("web","service");
x.t("enhancement","properties");
x.t("search","example");
x.t("search","template");
x.t(".append","(value)");
x.t("claimcenter","provide");
x.t("claimcenter","integration");
x.t("claimcenter","encrypts");
x.t("claimcenter","automatically");
x.t("claimcenter","duplicate");
x.t("claimcenter","provides");
x.t("claimcenter","policycenter");
x.t("claimcenter","know");
x.t("claimcenter","contactmanager");
x.t("claimcenter","simply");
x.t("claimcenter","include");
x.t("claimcenter","primarily");
x.t("claimcenter","prevents");
x.t("claimcenter","generates");
x.t("string","direct");
x.t("string","second");
x.t("string","may");
x.t("string","implementing");
x.t("string","important");
x.t("string","return");
x.t("string","reversing");
x.t("string","value");
x.t("string","case");
x.t("string","values");
x.t("string","following");
x.t("string","returns");
x.t("string","reversed");
x.t("string","var");
x.t("string","specify");
x.t("fields","marked");
x.t("fields","appear");
x.t("fields","plugins");
x.t("wire","integration");
x.t("accessed","directly");
x.t("record","decrypted");
x.t("local","variable");
x.t("otherval2","//");
x.t("write","implement");
x.t("write","implementation");
x.t("abc:des3","encryption");
x.t("int","return");
x.t("critical","change");
x.t("snapshots","archive");
x.t("snapshots","adding");
x.t("personal","data");
x.t("contain","integration");
x.t("contain","encrypted");
x.t("extra","security");
x.t("input","size");
x.t("input","mask");
x.t("input","widgets");
x.t("attribute","applies");
x.t("earlier","column");
x.t("earlier","encrypting");
x.t("mask","value");
x.t("mask","expression");
x.t("second","half");
x.t("characters","appear");
x.t("marked","encrypted");
x.t("store","certain");
x.t("policycenter","important");
x.t("lastname","property");
x.t("request","encryption");
x.t("error","occurred");
x.t("point","properties");
x.t("queries","older-style");
x.t("queries","work");
x.t("queries","compare");
x.t("logic","directly");
x.t("logic","sql");
x.t("supported","comparison");
x.t("strongly","recommends");
x.t("config","plugins");
x.t("registered","implementation");
x.t("loads","entities");
x.t("decrypt","method");
x.t("decrypt","implement");
x.t("decrypt","text");
x.t("decrypt","(value:string)");
x.t("decrypt","data");
x.t("encrypted_column","type");
x.t("encrypted_column","type=");
x.t("suppose","tempvalue");
x.t("suppose","put");
x.t("suppose","claim.secretval");
x.t("suppose","earlier");
x.t("suppose","claim.otherval");
x.t("bean.encrypted_column","however");
x.t("know","encryption");
x.t("know","far");
x.t("affects","following");
x.t("means","find");
x.t("space","database");
x.t("exposed","gosu");
x.t("throw","exception");
x.t("databases","during");
x.t("databases","encryption");
x.t("guidewire_selectall","var");
x.t("literal","encrypted");
x.t("literal","value");
x.t("number","unique");
x.t("side","effect");
x.t("control","exposed");
x.t("function","decrypt");
x.t("function","guidewire_selectall");
x.t("function","encrypt");
x.t("function","getencryptedlength");
x.t("function","reverse");
x.t("hide","important");
x.t("design","integrations");
x.t("design","encryption");
x.t("q.compare","otherval");
x.t("q.compare","secretval");
x.t("implements","plugin");
x.t("implements","iencryption");
x.t("length","decrypted");
x.t("length","original");
x.t("length","encrypted");
x.t("length","application");
x.t("length","column");
x.t("maximum","length");
x.t("merely","removes");
x.t("private","personal");
x.t("private","function");
x.t("define","algorithm");
x.t("carefully","consider");
x.t("contactmanager","claimcenter");
x.t("customize","integration");
x.t("words","no");
x.t("cannot","encrypted");
x.t("cannot","greater");
x.t("expressions","work");
x.t("unique","among");
x.t("unique","id");
x.t("unique","identifier");
x.t("unique","encryption");
x.t("against","encrypted");
x.t("against","string");
x.t("against","values");
x.t("may","may");
x.t("may","different");
x.t("different","length");
x.t("whether","upgrade");
x.t("whether","property");
x.t("whether","data");
x.t("fake","encryption");
x.t("fake","algorithm");
x.t("editor","studio");
x.t("editor","configuration");
x.t("specifies","encryption");
x.t("specifies","implementation");
x.t("bank","account");
x.t("interaction","affects");
x.t("ways","direct");
x.t("ways","mark");
x.t("responsibility","encrypt");
x.t("accidental","duplication");
x.t("mitigate","risk");
x.t("format","actual");
x.t("properly","encrypt");
x.t("encrypt","properties");
x.t("encrypt","method");
x.t("encrypt","implement");
x.t("encrypt","(value:string)");
x.t("encrypt","encrypted");
x.t("encrypt","decrypt");
x.t("encrypt","data");
x.t("types","varchar");
x.t("types","varbinary");
x.t("types","two");
x.t("types","based");
x.t("types","including");
x.t("section","details");
x.t("implementing","getencryptedlength");
x.t("changes","snapshots");
x.t("important","built-in");
x.t("important","guidewire");
x.t("important","details");
x.t("important","gosu");
x.t("important","claimcenter");
x.t("important","unique");
x.t("important","encryption");
x.t("important","data");
x.t("important","upgrader");
x.t("important","information");
x.t("important","note");
x.t("important","careful");
x.t("simply","calls");
x.t("simply","reverses");
x.t("case-insensitive","search");
x.t("added","mirror");
x.t("expected","compare");
x.t("works","opposite");
x.t("java.lang.stringbuilder","class");
x.t("code","create");
x.t("code","implements");
x.t("claim.secretval2","encrypted");
x.t("identifier","change");
x.t("identifier","new");
x.t("identifier","tracks");
x.t("identifier","encryption");
x.t("end","text");
x.t("enable","encryption");
x.t("return","buffer.reverse");
x.t("return","size");
x.t("return","encrypted");
x.t("return","abc:des3");
x.t("return","maximum");
x.t("return","unique");
x.t("return","encryption");
x.t("return","mycompany:reverse");
x.t("return","reverse");
x.t("return","value.substring");
x.t("override","property");
x.t("override","function");
x.t("override","encryption");
x.t("size=","10");
x.t("thus","lastname");
x.t("tracks","encryption-related");
x.t("database","example");
x.t("database","last");
x.t("database","new");
x.t("database","test");
x.t("database","gosu");
x.t("database","side");
x.t("database","non-plaintext");
x.t("database","query");
x.t("database","column");
x.t("database","either");
x.t("database","using");
x.t("database","specify");
x.t("database","contains");
x.t("reversing","process");
x.t("appear","unencrypted");
x.t("appear","data");
x.t("accommodate","inflation");
x.t("known","series");
x.t("actual","encryption");
x.t("accesses","loads");
x.t("varbinary","date");
x.t("bean","properties");
x.t("bean","property");
x.t("greater","comparisons");
x.t("greater","less");
x.t("variable","containing");
x.t("legally","free");
x.t("encryption","example");
x.t("encryption","properties");
x.t("encryption","implement");
x.t("encryption","within");
x.t("encryption","integration");
x.t("encryption","character-based");
x.t("encryption","plugin");
x.t("encryption","necessary");
x.t("encryption","property");
x.t("encryption","unsupported");
x.t("encryption","id");
x.t("encryption","permitted");
x.t("encryption","features");
x.t("encryption","writing");
x.t("encryption","settings");
x.t("encryption","base");
x.t("encryption","attribute");
x.t("encryption","request");
x.t("encryption","length");
x.t("encryption","changes");
x.t("encryption","identifier");
x.t("encryption","data");
x.t("encryption","plugins");
x.t("encryption","algorithm");
x.t("encryption","decryption");
x.t("occurred","messsage");
x.t("rules","web");
x.t("consider","security");
x.t("less","comparisons");
x.t("less","important");
x.t("changing","encryption");
x.t("database-backed","implement");
x.t("configuration","guide");
x.t("configuration","claimcenter");
x.t("configuration","config");
x.t("include","actual");
x.t("non-plaintext","format");
x.t("value","example");
x.t("value","however");
x.t("value","alternatively");
x.t("value","against");
x.t("value","bean");
x.t("value","expression");
x.t("value","disable");
x.t("value","masked");
x.t("additional","security");
x.t("additional","encryption");
x.t("claim.otherval","claim.otherval2");
x.t("primarily","uses");
x.t("far","increase");
x.t("(size:int)","int");
x.t("unusual","characters");
x.t("tools","need");
x.t("right-click","registry");
x.t("main","database");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","exist");
x.t("implementation","create");
x.t("implementation","responsible");
x.t("implementation","register");
x.t("implementation","iencryption");
x.t("implementation","important");
x.t("implementation","application");
x.t("invocation","pagehelper.getmyencryptedcolumnvalue");
x.t("pagehelper.getmyencryptedcolumnvalue","claimcenter");
x.t("constant","value");
x.t("constant","sql");
x.t("involves","encrypted");
x.t("free","claimcenter");
x.t("already","decrypted");
x.t("already","encrypted");
x.t("process","important");
x.t("process","application");
x.t("type=","varchar");
x.t("type=","encrypted");
x.t("widgets","value");
x.t("builder","queries");
x.t("actually","works");
x.t("secretval2","//");
x.t("exception","during");
x.t("exception","import");
x.t("import","data");
x.t("services","interaction");
x.t("services","messaging");
x.t("systems","properties");
x.t("systems","design");
x.t("expression","method");
x.t("expression","type");
x.t("expression","form");
x.t("template","supports");
x.t("template","encryption");
x.t("takes","unencrypted");
x.t("takes","encrypted");
x.t("hello","becomes");
x.t("runs","server");
x.t("page","error");
x.t("registry","editor");
x.t("registry","encryption");
x.t("registry","right-click");
x.t("registry","choose");
x.t("specifying","type");
x.t("strong","encryption");
x.t("gw.plugin.util.iencryption","uses");
x.t("upgrading","claim");
x.t("data","example");
x.t("data","method");
x.t("data","every");
x.t("data","integration");
x.t("data","hence");
x.t("data","require");
x.t("data","detect");
x.t("data","new");
x.t("data","staging");
x.t("data","encrypted");
x.t("data","claimcenter");
x.t("data","design");
x.t("data","bank");
x.t("data","return");
x.t("data","database");
x.t("data","encryption");
x.t("data","already");
x.t("data","algorithm");
x.t("data","model");
x.t("data","across");
x.t("messaging","layer");
x.t("messaging","plugins");
x.t("information","plain");
x.t("information","upgrading");
x.t("information","adding");
x.t("query","embeds");
x.t("query","refer");
x.t("query","however");
x.t("query","involves");
x.t("query","builder");
x.t("query","actually");
x.t("query","query");
x.t("becomes","helloolleh");
x.t("authoritatively","detect");
x.t("upgrader","upgrade");
x.t("upgrader","encrypts");
x.t("upgrader","automatically");
x.t("upgrader","detects");
x.t("archive","databases");
x.t("opposite","compare");
x.t("equals","tempvalue");
x.t("equals","field");
x.t("equals","gosu");
x.t("equals","123");
x.t("equals","q.getcolumnref");
x.t("claim.otherval2","unencrypted");
x.t("upgrades","during");
x.t("appropriate","encryption");
x.t("removing","encrypted");
x.t("disable","plugin");
x.t("application","determine");
x.t("application","accesses");
x.t("application","decides");
x.t("application","startup");
x.t("implications","integrations");
x.t("values","constants");
x.t("values","accessed");
x.t("values","two");
x.t("encryption=","true");
x.t("case","input");
x.t("comparing","literal");
x.t("comparing","encryption");
x.t("called","plugin");
x.t("called","testbean");
x.t("otherval","notequals");
x.t("otherval","equals");
x.t("otherval","//");
x.t("decides","whether");
x.t("risk","accidentally");
x.t("choose","new");
x.t("plugins","uses");
x.t("plugins","gosu");
x.t("plugins","editor");
x.t("plugins","important");
x.t("plugins","encryption");
x.t("plugins","implementation");
x.t("plugins","registry");
x.t("plugins","called");
x.t("plugins","following");
x.t("done","within");
x.t("protocol","encrypt");
x.t("classes","contain");
x.t("column","uniquely");
x.t("column","within");
x.t("column","name=");
x.t("column","support");
x.t("column","increase");
x.t("column","encrypted");
x.t("column","encrypted_column");
x.t("column","words");
x.t("column","types");
x.t("column","added");
x.t("column","override");
x.t("column","data");
x.t("column","information");
x.t("date","types");
x.t("two","properties");
x.t("two","ways");
x.t("123","q.compare");
x.t("123","//");
x.t("note","fake");
x.t("doubles","size");
x.t("doubles","returns");
x.t("algorithm","plugin");
x.t("algorithm","later");
x.t("algorithm","product");
x.t("algorithm","claimcenter");
x.t("algorithm","critical");
x.t("algorithm","decrypt");
x.t("algorithm","encrypt");
x.t("algorithm","simply");
x.t("algorithm","identifier");
x.t("algorithm","enable");
x.t("algorithm","encryption");
x.t("algorithm","main");
x.t("algorithm","authoritatively");
x.t("algorithm","comparing");
x.t("algorithm","doubles");
x.t("algorithm","itself");
x.t("algorithm","append");
x.t("applications","built-in");
x.t("applications","add");
x.t("applications","encrypt");
x.t("mark","column");
x.t("based","varchar");
x.t("prevents","encrypting");
x.t("work","q.compare");
x.t("work","expected");
x.t("startup","time");
x.t("startup","update");
x.t("mycompany:reverse","private");
x.t("itself","example");
x.t("numbers","private");
x.t("operate","plain");
x.t("querying","encrypted");
x.t("getencryptedlength","method");
x.t("getencryptedlength","(size:int)");
x.t("getencryptedlength","doubles");
x.t("helloolleh","decrypt");
x.t("package","plugins");
x.t("reverse","(value)");
x.t("reverse","(value:string)");
x.t("duplication","encryption");
x.t("model","properties");
x.t("model","files");
x.t("model","fields");
x.t("model","important");
x.t("model","upgrader");
x.t("service","interfaces");
x.t("service","connection");
x.t("special","coding");
x.t("special","unusual");
x.t("special","tools");
x.t("following","example");
x.t("following","integrations");
x.t("following","gosu");
x.t("following","queries");
x.t("masked","value");
x.t("entity","called");
x.t("either","encrypted");
x.t("either","two");
x.t("secretval","greaterthan");
x.t("secretval","notequals");
x.t("secretval","equals");
x.t("already-encrypted","data");
x.t("warning","currentencryptionplugin");
x.t("warning","gosu");
x.t("setting","encrypted");
x.t("compares","either");
x.t("containing","string");
x.t("//","unencrypted");
x.t("//","no");
x.t("//","encrypted");
x.t("//","bad");
x.t("//","encrypting");
x.t("class","encryptionbyreverseplugin");
x.t("class","name");
x.t("class","implements");
x.t("encryptionidentifier","method");
x.t("encryptionidentifier","string");
x.t("encryptionidentifier","override");
x.t("using","current");
x.t("using","plugins");
x.t("across","network");
x.t("across","wire");
x.t("adding","removing");
x.t("adding","column");
x.t("compare","property");
x.t("compare","encrypted");
x.t("compare","constant");
x.t("bad","mix");
x.t("returns","original");
x.t("returns","encrypted");
x.t("returns","input");
x.t("returns","unique");
x.t("returns","appropriate");
x.t("series","special");
x.t("without","special");
x.t("sql","gosu");
x.t("sql","comparison");
x.t("sql","query");
x.t("associated","database");
x.t("append","reversed");
x.t("reversed","version");
x.t("reversed","part");
x.t("value.substring","value.length");
x.t("names","algorithm");
x.t("var","text_val=eval");
x.t("var","buffer");
x.t("decryption","implemented");
x.t("decryption","request");
x.t("decryption","mitigate");
x.t("decryption","done");
x.t("versions","data");
x.t("versions","upgrader");
x.t("including","binary");
x.t("effect","equality");
x.t("sent","across");
x.t("generates","always");
x.t("generates","input");
x.t("generates","visible");
x.t("visible","masks");
x.t("testbean","claimcenter");
x.t("equality","comparison");
x.t("q.getcolumnref","otherval2");
x.t("q.getcolumnref","secretval2");
x.t("q.getcolumnref","otherval");
x.t("careful","encryption");
x.t("buffer","new");
x.t("encoding","unencrypted");
x.t("dynamically","return");
x.t("masks","input");
x.t("masks","values");
x.t("encrypting","properties");
x.t("encrypting","text");
x.t("encrypting","string");
x.t("encrypting","doubles");
x.t("encrypting","already-encrypted");
x.t("specify","plugin");
x.t("specify","maximum");
x.t("server","start");
x.t("server","ran");
x.t("server","upgrader");
x.t("server","startup");
x.t("resources","configuration");
x.t("contains","unencrypted");
x.t("update","main");
}
