function FileData_Pairs(x)
{
x.t("example","demonstrates");
x.t("example","editor");
x.t("root","directory");
x.t("method","method");
x.t("method","exactly");
x.t("provide","empty");
x.t("construct","override");
x.t("parameter","unavailable");
x.t("implement","initializableplugin");
x.t("setdestinationid","(id:int)");
x.t("integration","guide");
x.t("studio","_servername");
x.t("studio","plugins");
x.t("studio","following");
x.t("built-in","property");
x.t("static","variable");
x.t("name/value","pairs");
x.t("required","main");
x.t("key","name");
x.t("plugin","root");
x.t("plugin","implement");
x.t("plugin","uses");
x.t("plugin","interface");
x.t("plugin","during");
x.t("plugin","overview");
x.t("plugin","parameters");
x.t("plugin","code");
x.t("plugin","implementation");
x.t("plugin","temporary");
x.t("plugin","instantiates");
x.t("java.plugin","class");
x.t("mytransport","implements");
x.t("uses","java.plugin");
x.t("uses","parameters");
x.t("uses","java.util.map");
x.t("text_val.select","link");
x.t("interface","claimcenter");
x.t("interface","addition");
x.t("interface","implementing");
x.t("resume","override");
x.t("calls","plugin");
x.t("calls","setparameters");
x.t("calls","plugin\u2019s");
x.t("_servername","parameters");
x.t("_servername","string");
x.t("initializableplugin","interface");
x.t("initializableplugin","private");
x.t("text","values");
x.t("property","map");
x.t("getting","plugin");
x.t("getting","local");
x.t("getting","special");
x.t("link","directly");
x.t("objects","plugin");
x.t("access","plugin");
x.t("access","values");
x.t("myservername","string");
x.t("message.reportack","getting");
x.t("messsage","claimcenter");
x.t("initialization","example");
x.t("file","path");
x.t("initializableplugin.root_dir","parameter");
x.t("add","optional");
x.t("during","initialization");
x.t("guide","plugins");
x.t("overview","getting");
x.t("directly","page");
x.t("text_val.focus","text_val.select");
x.t("settings","plugin");
x.t("demonstrates","define");
x.t("path","root");
x.t("path","getting");
x.t("path","temp");
x.t("name","root");
x.t("name","static");
x.t("exactly","argument");
x.t("gosu","example");
x.t("gosu","plugins");
x.t("constructor","provide");
x.t("constructor","application");
x.t("argument","java.util.map");
x.t("(id:int)","override");
x.t("message:entity.message","transformedpayload:string");
x.t("{transformedpayload}","message.reportack");
x.t("parameters","plugin");
x.t("parameters","uses");
x.t("parameters","text");
x.t("parameters","myservername");
x.t("parameters","map");
x.t("parameters","pairs");
x.t("parameters","defined");
x.t("parameters","plugins");
x.t("parameters","pass");
x.t("parameters","names");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","required");
x.t("shutdown","override");
x.t("map","key");
x.t("map","parameters");
x.t("map","map");
x.t("map","string");
x.t("map","values");
x.t("======","{message.payload}");
x.t("osgi","plugins");
x.t("claimcenter","integration");
x.t("claimcenter","calls");
x.t("claimcenter","treats");
x.t("pairs","string");
x.t("pairs","claimcenter");
x.t("string","string");
x.t("string","values");
x.t("string","//");
x.t("empty","constructor");
x.t("local","file");
x.t("addition","main");
x.t("error","occurred");
x.t("java.util.map","uses");
x.t("java.util.map","object");
x.t("next","define");
x.t("setparameters","method");
x.t("setparameters","construct");
x.t("setparameters","parameters");
x.t("guidewire_selectall","var");
x.t("function","setdestinationid");
x.t("function","resume");
x.t("function","shutdown");
x.t("function","setparameters");
x.t("function","guidewire_selectall");
x.t("function","send");
x.t("function","suspend");
x.t("implements","messagetransport");
x.t("initializableplugin.temp_dir","parameter");
x.t("editor","studio");
x.t("editor","getting");
x.t("editor","add");
x.t("editor","function");
x.t("editor","pass");
x.t("define","methods");
x.t("define","actual");
x.t("private","var");
x.t("implementing","override");
x.t("{message.payload}","--");
x.t("directory","path");
x.t("directory","name");
x.t("directory","gosu");
x.t("code","parameters");
x.t("appplication","calls");
x.t("override","function");
x.t("transformedpayload:string","print");
x.t("known","name/value");
x.t("message","send");
x.t("actual","plugin");
x.t("java","plugins");
x.t("variable","initializableplugin.root_dir");
x.t("variable","initializableplugin.temp_dir");
x.t("occurred","messsage");
x.t("keys","map");
x.t("main","plugin");
x.t("main","interface");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","plugin");
x.t("send","message:entity.message");
x.t("send","======");
x.t("--","{transformedpayload}");
x.t("temporary","directory");
x.t("represent","numbers");
x.t("registry","studio");
x.t("registry","editor");
x.t("page","error");
x.t("optional","parameters");
x.t("messagetransport","initializableplugin");
x.t("temp","directory");
x.t("timeout","values");
x.t("defined","plugins");
x.t("values","studio");
x.t("values","settings");
x.t("values","map");
x.t("values","known");
x.t("values","even");
x.t("application","//");
x.t("unavailable","osgi");
x.t("port","numbers");
x.t("print","message");
x.t("plugins","plugin");
x.t("plugins","access");
x.t("plugins","getting");
x.t("plugins","java");
x.t("plugins","registry");
x.t("note","empty");
x.t("treats","plugin");
x.t("numbers","objects");
x.t("numbers","timeout");
x.t("following","gosu");
x.t("special","built-in");
x.t("class","mytransport");
x.t("//","calls");
x.t("//","access");
x.t("//","next");
x.t("//","note");
x.t("pass","plugin");
x.t("pass","server");
x.t("instantiates","appplication");
x.t("names","keys");
x.t("names","port");
x.t("var","_servername");
x.t("var","text_val=eval");
x.t("even","represent");
x.t("suspend","override");
x.t("server","names");
x.t("plugin\u2019s","setparameters");
x.t("object","map");
}
