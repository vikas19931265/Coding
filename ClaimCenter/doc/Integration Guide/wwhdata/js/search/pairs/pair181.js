function FileData_Pairs(x)
{
x.t("example","convert");
x.t("example","gosu");
x.t("example","2-character");
x.t("included","claimcenter");
x.t("properties","governed");
x.t("properties","file");
x.t("exchanger","instance");
x.t("exchanger","interface");
x.t("exchanger","instantiate");
x.t("exchanger","class");
x.t("method","stringsubstitution");
x.t("method","takes");
x.t("method","called");
x.t("token","method");
x.t("token","translates");
x.t("implement","plugin");
x.t("implement","class");
x.t("needs","mapped");
x.t("look-up","table");
x.t("integration","guide");
x.t("sending","final");
x.t("refer","java");
x.t("table","look");
x.t("events","message");
x.t("instance","convert");
x.t("instance","myexchanger");
x.t("plugin","may");
x.t("plugin","code");
x.t("plugin","java");
x.t("situations","instead");
x.t("myexchangerinstance","new");
x.t("myexchangerinstance","call");
x.t("text_val.select","link");
x.t("interface","method");
x.t("interface","called");
x.t("look","properties");
x.t("payload","implement");
x.t("payload","find");
x.t("payload","string");
x.t("payload","message");
x.t("payload","mapping");
x.t("payload","using");
x.t("governed","typelists");
x.t("external","system");
x.t("however","work");
x.t("scans","message");
x.t("convert","items");
x.t("convert","code");
x.t("convert","message");
x.t("text","needs");
x.t("text","substitution");
x.t("text","injury=");
x.t("text","replace");
x.t("substitution","java");
x.t("substitution","class");
x.t("put","delimiters");
x.t("link","directly");
x.t("items","payload");
x.t("new","stringsubstitution");
x.t("new","string");
x.t("new","myexchanger");
x.t("new","value");
x.t("new","values");
x.t("start","delimiter");
x.t("start","end");
x.t("translate","token");
x.t("details","class");
x.t("delimiter","put");
x.t("delimiter","end");
x.t("messsage","claimcenter");
x.t("need","convert");
x.t("need","map");
x.t("file","substitute");
x.t("typecode","meaning");
x.t("around","gosu");
x.t("exposure.injurycode","generate");
x.t("guide","messaging");
x.t("api","details");
x.t("api","libraries");
x.t("api","documentation");
x.t("directly","page");
x.t("text_val.focus","text_val.select");
x.t("common","reason");
x.t("typelists","typecode");
x.t("libraries","map");
x.t("codes","system");
x.t("gosu","template");
x.t("constructor","containing");
x.t("surrounded","delimiters");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("replaced","example");
x.t("inner","interface");
x.t("stringsubstitution","instance");
x.t("stringsubstitution","myexchangerinstance");
x.t("stringsubstitution","mysub");
x.t("stringsubstitution","class");
x.t("mysub","new");
x.t("find","strings");
x.t("final","destination");
x.t("destination","common");
x.t("map","codes");
x.t("map","message");
x.t("strings","surrounded");
x.t("claimcenter","integration");
x.t("claimcenter","code");
x.t("claimcenter","java");
x.t("string","refer");
x.t("string","substitution");
x.t("string","used");
x.t("string","object");
x.t("error","occurred");
x.t("delimiters","exchanger");
x.t("delimiters","text");
x.t("delimiters","around");
x.t("delimiters","define");
x.t("injury=","exposure.injurycode");
x.t("injury=","a1");
x.t("mapped","replaced");
x.t("reason","mapping");
x.t("com.guidewire.util.stringsubstitution","refer");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("implements","exchanger");
x.t("implements","inner");
x.t("may","need");
x.t("define","substitutes");
x.t("substitutes","new");
x.t("exchange","translate");
x.t("myexchanger","myexchangerinstance");
x.t("myexchanger","stringsubstitution");
x.t("instead","need");
x.t("replace","example");
x.t("code","xyz");
x.t("code","choose");
x.t("code","a1");
x.t("reference","string");
x.t("end","delimiter");
x.t("end","delimiters");
x.t("typecodes","properties");
x.t("instantiate","stringsubstitution");
x.t("instantiate","class");
x.t("message","sending");
x.t("message","payload");
x.t("java","plugin");
x.t("java","api");
x.t("java","utility");
x.t("java","plugins");
x.t("java","class");
x.t("documentation","api");
x.t("documentation","reference");
x.t("occurred","messsage");
x.t("value","class");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("xyz","external");
x.t("generate","text");
x.t("systems","however");
x.t("template","text");
x.t("template","injury=");
x.t("substitute","method");
x.t("substitute","new");
x.t("takes","string");
x.t("page","error");
x.t("messaging","events");
x.t("messaging","plugin");
x.t("messaging","messaging");
x.t("meaning","systems");
x.t("utility","java");
x.t("utility","class");
x.t("values","exchanger");
x.t("choose","start");
x.t("called","exchange");
x.t("called","stringsubstitution.exchanger");
x.t("plugins","function");
x.t("plugins","message");
x.t("plugins","messaging");
x.t("a1","claimcenter");
x.t("a1","message");
x.t("work","situations");
x.t("mapping","typecodes");
x.t("mapping","utility");
x.t("2-character","string");
x.t("call","substitute");
x.t("system","example");
x.t("system","implement");
x.t("used","start");
x.t("translates","returns");
x.t("class","included");
x.t("class","look-up");
x.t("class","scans");
x.t("class","constructor");
x.t("class","com.guidewire.util.stringsubstitution");
x.t("class","implements");
x.t("class","java");
x.t("using","text");
x.t("containing","delimiters");
x.t("returns","new");
x.t("var","text_val=eval");
x.t("stringsubstitution.exchanger","exchanger");
x.t("object","token");
x.t("object","instantiate");
}
