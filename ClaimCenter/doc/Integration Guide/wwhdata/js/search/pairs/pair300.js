function FileData_Pairs(x)
{
x.t("interfaces","entity");
x.t("extensions","java");
x.t("example","bundle");
x.t("method","current");
x.t("method","argument");
x.t("method","bundle");
x.t("method","entity");
x.t("properties","downcast");
x.t("properties","methods");
x.t("properties","syntax");
x.t("downcasting","base");
x.t("shown","following");
x.t("integration","guide");
x.t("integration","topics");
x.t("create","new");
x.t("instance","newbeaninstance");
x.t("instance","call");
x.t("instance","using");
x.t("plugin","code");
x.t("current","bundle");
x.t("text_val.select","link");
x.t("support","accessing");
x.t("extension","properties");
x.t("extension","interface");
x.t("interface","properties");
x.t("interface","addressext");
x.t("type\u2019s","type");
x.t("type","property");
x.t("type","entity");
x.t("customer","extensions");
x.t("customer","extension");
x.t("packages","customer");
x.t("property","pass");
x.t("new","address");
x.t("new","instances");
x.t("new","entity");
x.t("link","directly");
x.t("extensions.cc.contact.entity.addressext","import");
x.t("transaction.getcurrent","method");
x.t("transaction.getcurrent","address");
x.t("transaction.getcurrent","//");
x.t("downcast","customer");
x.t("messsage","claimcenter");
x.t("need","customer");
x.t("need","base");
x.t("typecode","data");
x.t("guide","integration");
x.t("api","new");
x.t("api","creating");
x.t("recommended","api");
x.t("recommended","typical");
x.t("newinstance","method");
x.t("(address)","b.newbeaninstance");
x.t("directly","page");
x.t("requires","explicit");
x.t("creating","new");
x.t("creating","entity");
x.t("text_val.focus","text_val.select");
x.t("gw.pl.contact.entity.address","import");
x.t("b.newbeaninstance","address.type.get");
x.t("argument","depending");
x.t("base","entity");
x.t("base","class");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("exists","current");
x.t("methods","address");
x.t("(addressext)","address.type.newinstance");
x.t("mistakes","cannot");
x.t("osgi","support");
x.t("address","a1");
x.t("address","entity");
x.t("claimcenter","integration");
x.t("addressext","a2");
x.t("newbeaninstance","method");
x.t("error","occurred");
x.t("syntax","varies");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("gw.pl.persistence.core.bundle","import");
x.t("approach","requires");
x.t("whether","need");
x.t("address.type.newinstance","(b)");
x.t("cannot","caught");
x.t("accessing","entity");
x.t("types","thus");
x.t("compile","time");
x.t("explicit","downcasting");
x.t("reference","method");
x.t("code","current");
x.t("code","import");
x.t("thus","easier");
x.t("java","plugin");
x.t("java","recommended");
x.t("java","creating");
x.t("java","osgi");
x.t("java","function");
x.t("java","java");
x.t("bundle","create");
x.t("bundle","transaction.getcurrent");
x.t("bundle","exists");
x.t("bundle","reference");
x.t("bundle","class");
x.t("occurred","messsage");
x.t("instances","java");
x.t("instances","although");
x.t("discussion","two");
x.t("address.type.get","approach");
x.t("easier","mistakes");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("depending","whether");
x.t("import","extensions.cc.contact.entity.addressext");
x.t("import","gw.pl.contact.entity.address");
x.t("import","gw.pl.persistence.core.bundle");
x.t("import","gw.transaction.transaction");
x.t("although","recommended");
x.t("page","error");
x.t("separate","interfaces");
x.t("data","java");
x.t("gw.transaction.transaction","bundle");
x.t("typical","create");
x.t("topics","java");
x.t("varies","discussion");
x.t("two","separate");
x.t("a1","(address)");
x.t("a1","address.type.newinstance");
x.t("a2","(addressext)");
x.t("call","newinstance");
x.t("entity","instance");
x.t("entity","interface");
x.t("entity","type\u2019s");
x.t("entity","type");
x.t("entity","packages");
x.t("entity","typecode");
x.t("entity","types");
x.t("entity","instances");
x.t("following","example");
x.t("following","code");
x.t("using","following");
x.t("//","need");
x.t("class","shown");
x.t("class","entity");
x.t("pass","bundle");
x.t("(b)","//");
x.t("(b)","alternative");
x.t("alternative","api");
x.t("caught","compile");
x.t("var","text_val=eval");
}
