function FileData_Pairs(x)
{
x.t("example","suppose");
x.t("method","however");
x.t("method","getting");
x.t("method","mentioned");
x.t("method","using");
x.t("integration","guide");
x.t("integration","topics");
x.t("static","instance");
x.t("always","entity.equals");
x.t("instance","name");
x.t("double","equals");
x.t("line","incorrect");
x.t("text_val.select","link");
x.t("support","accessing");
x.t("unsafe","test");
x.t("type","called");
x.t("however","sure");
x.t("claim.getstate","==");
x.t("claim.getstate",".equals");
x.t("claim.getstate","returns");
x.t("entities","two");
x.t("link","directly");
x.t("==","double");
x.t("==","claimstate.tc_open.get");
x.t("==","claim2.getstate");
x.t("want","compare");
x.t("getting","static");
x.t("messsage","claimcenter");
x.t("omits","method");
x.t("typecode","type");
x.t("typecode","data");
x.t("typecode","values");
x.t("typecode","classes");
x.t("typecode","class");
x.t("incorrect","omits");
x.t("incorrect","either");
x.t("unsupported","comparing");
x.t(".equals","claimstate.tc_open.get");
x.t(".equals","claim2.getstate");
x.t(".equals","(claimstate.tc_open)");
x.t("guide","integration");
x.t("sure","reference");
x.t("directly","page");
x.t("test","equality");
x.t("text_val.focus","text_val.select");
x.t("name","claim.getstate");
x.t("claimstate.tc_open.get","claim1.getstate");
x.t("claimstate.tc_open.get","following");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("osgi","support");
x.t("claimcenter","integration");
x.t("error","occurred");
x.t("suppose","code");
x.t("syntax","claim.getstate");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("accessing","entity");
x.t("instead","following");
x.t("reference","actual");
x.t("code","claim.getstate");
x.t("code","compares");
x.t("typecodes","function");
x.t("typecodes","claim1.getstate");
x.t("typecodes","comparing");
x.t("typecodes","compare");
x.t("java","example");
x.t("java","==");
x.t("java","osgi");
x.t("java","comparing");
x.t("actual","typecode");
x.t("claim1.getstate","==");
x.t("claim1.getstate",".equals");
x.t("occurred","messsage");
x.t("instances","typecodes");
x.t("instances","equality");
x.t("(otherentity)","method");
x.t("value","incorrect");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("specific","value");
x.t("claim2.getstate","claim.getstate");
x.t("claim2.getstate","careful");
x.t("expression","syntax");
x.t("page","error");
x.t("data","java");
x.t("equals","method");
x.t("equals","operator");
x.t("claimstate","want");
x.t("result","specific");
x.t("comparing","typecodes");
x.t("comparing","entity");
x.t("values","equality");
x.t("called","claimstate");
x.t("topics","java");
x.t("entity.equals","(otherentity)");
x.t("classes","java");
x.t("two","entities");
x.t("two","typecodes");
x.t("mentioned","typecode");
x.t("entity","typecode");
x.t("entity","instances");
x.t("either","following");
x.t("following","line");
x.t("following","java");
x.t("following","expression");
x.t("using","method");
x.t("using","==");
x.t("similarly","equals");
x.t("class","using");
x.t("(claimstate.tc_open)","instead");
x.t("compares","two");
x.t("compare","typecode");
x.t("compare","result");
x.t("compare","entity");
x.t("returns","typecode");
x.t("operator","unsafe");
x.t("operator","unsupported");
x.t("var","text_val=eval");
x.t("equality","always");
x.t("equality","similarly");
x.t("equality","compare");
x.t("careful","code");
}
