function FileData_Pairs(x)
{
x.t("supports","getting");
x.t("supports","using");
x.t(".class","files");
x.t("example","wsimport");
x.t("example","api");
x.t("example","suppose");
x.t("example","show");
x.t("example","choose");
x.t("example","http://mycompany.com");
x.t("disambiguating","grouping");
x.t("looks","helloworldapiporttype");
x.t("system.out.println","web");
x.t("publishing","web");
x.t("internet","published");
x.t("exist","create");
x.t("exist","wsimport");
x.t("placed","hierarchy");
x.t("version","axis");
x.t("claimcenter/bin/gwcc","regen-soap-api");
x.t("just",".class");
x.t("preferred","language");
x.t("files",".class");
x.t("files","example");
x.t("files","placed");
x.t("files","subdirectory_name");
x.t("files","refer");
x.t("files","source");
x.t("files","add");
x.t("files","no");
x.t("files","decide");
x.t("files","compile");
x.t("files","java");
x.t("files","depending");
x.t("files","represent");
x.t("files","copy");
x.t("files",".java");
x.t("files","following");
x.t("files","compiled");
x.t("publishes","ws-i");
x.t("subdirectory","current");
x.t("subdirectory","add");
x.t("subdirectory","java");
x.t("subdirectory","already");
x.t("subdirectory_name","subdirectory");
x.t("subdirectory_name","reversed_namespace");
x.t("subdirectory_name","wsdl_location_url");
x.t("subdirectory_name","words");
x.t("subdirectory_name","directory");
x.t("subdirectory_name","value");
x.t("project\u2019s","src");
x.t("project\u2019s","class");
x.t("annotation","override");
x.t("integration","guide");
x.t("create","directory");
x.t("create","java");
x.t("built-in","java");
x.t("built-in","utility");
x.t("refer","wsimport");
x.t("static","void");
x.t("wsimport","action");
x.t("wsimport","wsdl_location_url");
x.t("wsimport","http://localhost");
x.t("wsimport","java");
x.t("wsimport","tool");
x.t("wsimport","note");
x.t("source","files");
x.t("source","file");
x.t("source","tool");
x.t("doing","probably");
x.t("once","port");
x.t("required","permissions");
x.t("action","fails");
x.t("soap11port","example");
x.t("void","main");
x.t("converting","wsdl");
x.t("current","directory");
x.t("topic","calls");
x.t("com.example.example.helloworldapi.helloworldapi","import");
x.t("uses","built-in");
x.t("uses","demonstrate");
x.t("generating","ws-i");
x.t("text_val.select","link");
x.t("working","directory");
x.t("/src/com/example/com/mycompany/helloworld.java","compiled");
x.t("interface","name");
x.t("necessary","web");
x.t("open","source");
x.t("open","command");
x.t("change","working");
x.t("type","http");
x.t("type","syntax");
x.t("type","following");
x.t("basic","authentication");
x.t("basic","naming");
x.t("calls","subdirectory_name");
x.t("calls","soap");
x.t("assure","subdirectory");
x.t("assure","subdirectory_name");
x.t("hierarchical","structure");
x.t("hierarchy","package");
x.t("public","static");
x.t("public","class");
x.t("port.helloworld","//");
x.t("followed","fully");
x.t("compiles","against");
x.t("automatically","generated");
x.t("apis","preferred");
x.t("guidewire","applications");
x.t("default","http://example.com");
x.t("require","authentication");
x.t("link","directly");
x.t("rpce","web");
x.t("getting","wsdl");
x.t("getting","ws-i");
x.t("details","declaring");
x.t("details","generate");
x.t("want","just");
x.t("want","place");
x.t("want","generate");
x.t("want","generated");
x.t("objects","wsdl");
x.t("new","helloworldapi");
x.t("new","api_interface_name");
x.t("new","generated");
x.t("access","wsdl");
x.t("helloworldapi",".gethelloworldapisoap11port");
x.t("helloworldapi","java");
x.t(".gethelloworldapisoap11port","once");
x.t(".gethelloworldapisoap11port","//");
x.t("includes","built-in");
x.t("command","wsimport");
x.t("command","prompt");
x.t("command","directory");
x.t("current_directory","subdirectory_name");
x.t("current_directory","/src/com/example/com/mycompany/helloworld.java");
x.t("current_directory","/com/example/com/mycompany/helloworld.class");
x.t("publish","web");
x.t("messsage","claimcenter");
x.t("http","basic");
x.t("http","path");
x.t("found","tool");
x.t("need","class");
x.t("file","following");
x.t("reversed_namespace","fully_qualified_name");
x.t("com.mycompany.helloworld","namespace");
x.t("(ws-i)","calling");
x.t("add","directory");
x.t("guide","web");
x.t("api","interface");
x.t("api","methods");
x.t("api","launch");
x.t("api","client");
x.t("api","itself");
x.t("meaningful","disambiguating");
x.t(".get","api_interface_name");
x.t("simple","example");
x.t("soap","api");
x.t("soap","1.1");
x.t("soap","client");
x.t("soap","header");
x.t("fails","error");
x.t("url","published");
x.t("depends","whether");
x.t("throws","exception");
x.t("directly","publish");
x.t("directly","running");
x.t("directly","page");
x.t("wsdl_location_url","type");
x.t("wsdl_location_url","-s");
x.t("declare","web");
x.t("text_val.focus","text_val.select");
x.t("no","subdirectory_name");
x.t("no","automatically");
x.t("libraries","calling");
x.t("libraries","generate");
x.t("axis","tool");
x.t("creating","client");
x.t("name","subdirectory");
x.t("name","basic");
x.t("name","helloworldapi");
x.t("name","com.mycompany.helloworld");
x.t("name","src");
x.t("name","namespace");
x.t("name","perhaps");
x.t("path","wsdl");
x.t("path","write");
x.t("path","java");
x.t("path","copy");
x.t("wsdl","internet");
x.t("wsdl","files");
x.t("wsdl","getting");
x.t("wsdl","web");
x.t("wsdl","disk");
x.t("wsdl","ws-i");
x.t("wsdl","java");
x.t("wsdl","running");
x.t("wsdl","tool");
x.t("wsdl","typical");
x.t("wsdl","-s");
x.t("wsdl","port");
x.t("com.example.example.helloworldapi.helloworldapiporttype","public");
x.t("argument","@wsiwebservice");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("regen-soap-api","tool");
x.t("src","wsimport");
x.t("src","assure");
x.t("src","important");
x.t("src","folder");
x.t("exists","running");
x.t("exists","run");
x.t("methods","directly");
x.t("methods","ws-i");
x.t("regenerates","libraries");
x.t("place","local");
x.t("place","java");
x.t("namespace","default");
x.t("namespace","objects");
x.t("namespace","url");
x.t("namespace","declare");
x.t("namespace","web");
x.t("namespace","string");
x.t("namespace","ws-i");
x.t("namespace","reverse");
x.t("namespace","specify");
x.t("overriding","permissions");
x.t("web","services");
x.t("web","service");
x.t("decide","name");
x.t("claimcenter","integration");
x.t("claimcenter","web");
x.t("claimcenter","ws-i");
x.t("local","wsdl");
x.t("local","disk");
x.t("string","argument");
x.t("string","res");
x.t("string","args");
x.t("write","java");
x.t("procedures","converting");
x.t("permissions","necessary");
x.t("permissions","ws-i");
x.t("error","directory");
x.t("error","occurred");
x.t("contrast","guidewire");
x.t("prompt","change");
x.t("java-compatible","stubs");
x.t("disk","wsimport");
x.t("disk","want");
x.t("next","step");
x.t("fully_qualified_name","continuing");
x.t("fully_qualified_name",".java");
x.t("suppose","subdirectory_name");
x.t("suppose","web");
x.t("syntax","new");
x.t("ws-i","wsdl");
x.t("ws-i","web");
x.t("domain","name");
x.t("1.1","port");
x.t("guidewire_selectall","var");
x.t("http://localhost","portnumber");
x.t("worrying","authentication-specific");
x.t("function","guidewire_selectall");
x.t("approach","documentation");
x.t("continuing","example");
x.t("api_interface_name","soap11port");
x.t("api_interface_name",".get");
x.t("launch","server");
x.t("specifies","declaration");
x.t("represents","namespace");
x.t("words","location");
x.t("whether","want");
x.t("against","new");
x.t("against","whether");
x.t("language","several");
x.t("ways","create");
x.t("step","depends");
x.t("step","directory");
x.t("1.6","wsimport");
x.t("1.6","includes");
x.t("directory","project\u2019s");
x.t("directory","topic");
x.t("directory","type");
x.t("directory","want");
x.t("directory","found");
x.t("directory","place");
x.t("directory","java");
x.t("directory","already");
x.t("declaring","namespace");
x.t("compile","against");
x.t("calling","web");
x.t("calling","claimcenter");
x.t("stub","classes");
x.t("important","assure");
x.t("purpose","service");
x.t("client","calls");
x.t("client","code");
x.t("client","connections");
x.t("code","looks");
x.t("code","open");
x.t("code","compiles");
x.t("code","import");
x.t("reference","api");
x.t("reference","soap");
x.t("reference","call");
x.t("folder",".class");
x.t("folder","add");
x.t("folder","name");
x.t("folder","next");
x.t("folder","location");
x.t("fully","qualified");
x.t("override","namespace");
x.t("cxf","open");
x.t("header","authentication");
x.t("java","project\u2019s");
x.t("java","files");
x.t("java","source");
x.t("java","soap");
x.t("java","procedures");
x.t("java","ws-i");
x.t("java","function");
x.t("java","1.6");
x.t("java","calling");
x.t("java","code");
x.t("java","java");
x.t("java","stubs");
x.t("java","tool");
x.t("java","classes");
x.t("java","class");
x.t("java","adding");
x.t("embedded","version");
x.t("documentation","uses");
x.t("documentation","details");
x.t("occurred","messsage");
x.t("authentication-specific","code");
x.t("sources","getting");
x.t("qualified","name");
x.t("running","command");
x.t("running","application");
x.t("running","server");
x.t("value","src");
x.t("main","string");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("several","ways");
x.t("already","exist");
x.t("already","exists");
x.t("depending","doing");
x.t("declaration","represents");
x.t("res","port.helloworld");
x.t("res","adding");
x.t("generated","libraries");
x.t("generated","java");
x.t("generated","classes");
x.t("generate","java-compatible");
x.t("generate","stub");
x.t("generate","java");
x.t("connections","claimcenter");
x.t("computer","run");
x.t("perhaps","meaningful");
x.t("convention",".java");
x.t("import","com.example.example.helloworldapi.helloworldapi");
x.t("import","com.example.example.helloworldapi.helloworldapiporttype");
x.t("exception","//");
x.t("services","publishing");
x.t("services","claimcenter/bin/gwcc");
x.t("services","(ws-i)");
x.t("services","no");
x.t("services","wsdl");
x.t("services","computer");
x.t("services","using");
x.t("represent","hierarchical");
x.t("authentication","overriding");
x.t("authentication","java");
x.t("page","error");
x.t("stubs","wsdl");
x.t("stubs","using");
x.t("output","demonstrate");
x.t("location","files");
x.t("location","current_directory");
x.t("specifying","required");
x.t("show","calling");
x.t("tool","supports");
x.t("tool","rpce");
x.t("tool","regenerates");
x.t("tool","next");
x.t("tool","cxf");
x.t("tool","documentation");
x.t("tool","output");
x.t("tool","called");
x.t("tool","note");
x.t("tool","axis2");
x.t("tool","generates");
x.t("typical","namespace");
x.t("information","purpose");
x.t("probably","need");
x.t("result","system.out.println");
x.t("result","res");
x.t("utility","generate");
x.t("utility","generates");
x.t("published","directly");
x.t("published","web");
x.t("application","approach");
x.t("-s","subdirectory_name");
x.t("-s","src");
x.t("called","wsimport");
x.t("choose","folder");
x.t("structure","current_directory");
x.t("structure","web");
x.t("port","new");
x.t("port","web");
x.t("port","reference");
x.t("port","service");
x.t("args","throws");
x.t("print","result");
x.t("classes","soap");
x.t("classes","wsdl");
x.t("classes","reference");
x.t("classes","java");
x.t("note","wsimport");
x.t("note","contrast");
x.t("two","sources");
x.t("/cc/ws/example/helloworldapi","wsdl");
x.t("/com/example/com/mycompany/helloworld.class","java");
x.t("applications","generate");
x.t("copy","files");
x.t("copy","subdirectory_name");
x.t("itself","access");
x.t(".java","example");
x.t(".java","files");
x.t(".java","file");
x.t("reverse","order");
x.t("order","followed");
x.t("package","name");
x.t("call","api");
x.t("call","web");
x.t("service","example");
x.t("service","type");
x.t("service","apis");
x.t("service","default");
x.t("service","require");
x.t("service","api");
x.t("service","path");
x.t("service","namespace");
x.t("service","string");
x.t("service","specifies");
x.t("service","fully");
x.t("service","java");
x.t("service","specifying");
x.t("service","result");
x.t("service","two");
x.t("service","following");
x.t("service","without");
x.t("service","passing");
x.t("service","helloworldapiporttype");
x.t("run","wsimport");
x.t("run","soap");
x.t("following","command");
x.t("following","simple");
x.t("following","location");
x.t("following","structure");
x.t("using","wsimport");
x.t("using","local");
x.t("using","embedded");
x.t("using","java");
x.t("demonstrate","wsimport");
x.t("demonstrate","creating");
x.t("class","files");
x.t("class","path");
x.t("class","wsitestnoauth");
x.t("http://mycompany.com","specify");
x.t("@wsiwebservice","annotation");
x.t("//","reference");
x.t("//","print");
x.t("//","call");
x.t("axis2","open");
x.t("company","domain");
x.t("grouping","information");
x.t("adding","http");
x.t("adding","soap");
x.t("without","worrying");
x.t("var","text_val=eval");
x.t("compiled",".class");
x.t("compiled","class");
x.t("passing","namespace");
x.t("http://example.com","details");
x.t("http://example.com","suppose");
x.t("helloworldapiporttype","port");
x.t("generates",".class");
x.t("generates","java-compatible");
x.t("generates","java");
x.t("generates",".java");
x.t("portnumber","/cc/ws/example/helloworldapi");
x.t("naming","convention");
x.t("wsitestnoauth","public");
x.t("server","example");
x.t("server","publishes");
x.t("server","generating");
x.t("specify","namespace");
x.t("specify","company");
}
