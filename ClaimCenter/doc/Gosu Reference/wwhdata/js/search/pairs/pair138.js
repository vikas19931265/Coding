function FileData_Pairs(x)
{
x.t("example","resulting");
x.t("example","concrete");
x.t("example","array");
x.t("example","suppose");
x.t("example","define");
x.t("example","return");
x.t("example","following");
x.t("example","class");
x.t("passed","items");
x.t("passed","code");
x.t("c1","c2");
x.t("debugging","return");
x.t("method","printstrings");
x.t("method","think");
x.t("method","wide");
x.t("method","definition");
x.t("method","name");
x.t("method","generic");
x.t("method","means");
x.t("method","languages");
x.t("method","already");
x.t("method","takes");
x.t("method","runs");
x.t("method","defined");
x.t("method","called");
x.t("method","call");
x.t("method","immediately");
x.t("method","package");
x.t("method","signatures");
x.t("method","using");
x.t("method","returns");
x.t("fortunately","generics");
x.t("c2","c3");
x.t("easy","important");
x.t("rather","list");
x.t("rather","identified");
x.t("just","single");
x.t("just","object");
x.t("c3","//");
x.t("generic_type_name","string");
x.t("generic_type_name","class");
x.t("abcd","ab");
x.t("thevalue","variable");
x.t("thevalue","mymap.get");
x.t("lists","basic");
x.t("cast","however");
x.t("full","language\u2019s");
x.t("one-letter","variable");
x.t("within","method");
x.t("within","method\u2019s");
x.t("create","function");
x.t("hard-to-read","code");
x.t("always","operates");
x.t("key","value");
x.t("key","class");
x.t("key","object");
x.t("once","abstract");
x.t("arguments","return");
x.t("abc","thevalue");
x.t("abc","29");
x.t("abc","var");
x.t("ability","generic");
x.t("t.printandreturnfirst","mystrings");
x.t("modifiers","method");
x.t("mycollection.iterator.next","myclass");
x.t("hash","maps");
x.t("strs","new");
x.t("strs","print");
x.t("strs","arraylist");
x.t("c.iterator.next",".myclassmethod");
x.t("uses","java.util.arraylist");
x.t("last","t.returnlast");
x.t("last","strongly");
x.t("last","variable");
x.t("last","item");
x.t("text_val.select","link");
x.t("longerstrings","strongly");
x.t("longerstrings","correct");
x.t("longerstrings","strs.findall");
x.t("people","defined");
x.t("support","multiple");
x.t("errors","rather");
x.t("necessary","apis");
x.t("tell","method");
x.t("thing","know");
x.t("type","example");
x.t("type","modifiers");
x.t("type","items");
x.t("type","list");
x.t("type","due");
x.t("type","requires");
x.t("type","findall");
x.t("type","collection");
x.t("type","function");
x.t("type","define");
x.t("type","things");
x.t("type","casting");
x.t("type","simply");
x.t("type","code");
x.t("type","variety");
x.t("type","usage");
x.t("type","extracting");
x.t("type","inference");
x.t("type","names");
x.t("type","var");
x.t("type","object");
x.t("basic","lists");
x.t("basic","hash");
x.t("printstrings","strs");
x.t("printstrings","(thelist)");
x.t("time","fortunately");
x.t("time","method");
x.t("time","want");
x.t("time","improves");
x.t("time","mistake");
x.t("time","integer");
x.t("time","cases");
x.t("time","parameterized");
x.t("importantly","casting");
x.t("operates","generic");
x.t("public","function");
x.t("key-value","maps");
x.t("compiler","tell");
x.t("simpler","gosu");
x.t("multiple","types");
x.t("multiple","dimensions");
x.t("however","strongly");
x.t("however","code");
x.t("mystrings","new");
x.t("mystrings","code");
x.t("mystrings","print");
x.t("inside","method");
x.t("apis","once");
x.t("apis","people");
x.t("apis","designed");
x.t("apis","generics");
x.t("apis","due");
x.t("apis","work");
x.t("text","first");
x.t("put","key");
x.t("really","represent");
x.t("automatically","matching");
x.t("link","directly");
x.t("objects","however");
x.t("objects","syntax");
x.t("objects","collection");
x.t("objects","define");
x.t("objects","myclass");
x.t("want","full");
x.t("want","list");
x.t("want","write");
x.t("want","call");
x.t("want","class");
x.t("new","apis");
x.t("new","genericstest");
x.t("new","mymapping");
x.t("new","instances");
x.t("new","arraylist");
x.t("new","com.example.test3");
x.t("items","example");
x.t("items","collection");
x.t("single","type");
x.t("think","time");
x.t("offer","power");
x.t("parameterizing","method");
x.t("designed","generics");
x.t("generics","example");
x.t("generics","support");
x.t("generics","type");
x.t("generics","offer");
x.t("generics","array");
x.t("generics","defining");
x.t("generics","function");
x.t("generics","design");
x.t("generics","define");
x.t("generics","wildcards");
x.t("generics","works");
x.t("generics","consumer");
x.t("generics","return");
x.t("generics","abstract");
x.t("generics","typically");
x.t("generics","using");
x.t("messsage","gosu");
x.t("finds","api");
x.t("list","type");
x.t("list","public");
x.t("list","gosu");
x.t("list","address");
x.t("list","strings");
x.t("list","string");
x.t("list","strongly");
x.t("list","case");
x.t("list","myclass");
x.t("list","var");
x.t("list","object");
x.t("need","define");
x.t("infer","type");
x.t("add","generic");
x.t("add","casting");
x.t("add","code");
x.t("add","finer");
x.t("improves","reliability");
x.t("guide","gosu");
x.t("api","easy");
x.t("api","finds");
x.t("api","call");
x.t("due","type");
x.t("due","issue");
x.t("results","hard-to-read");
x.t("results","mymap");
x.t("remove","myclass");
x.t("assume","text");
x.t("meanings","type");
x.t("a.size","return");
x.t("t.returnlast","mystrings");
x.t("collections","collection");
x.t("collections","code");
x.t("looking","code");
x.t("directly","page");
x.t("bracket","notation");
x.t("requires","special");
x.t("dangerous","actual");
x.t("language\u2019s","ability");
x.t("writing","class");
x.t("text_val.focus","text_val.select");
x.t("resulting","value");
x.t("wide","variety");
x.t("wrong","object");
x.t("definition","parameterize");
x.t("definition","convention");
x.t("definition","values");
x.t("definition","case");
x.t("definition","parameterized");
x.t("symbols","method");
x.t("symbols","symbols");
x.t("symbols","pinned");
x.t("strongly-typed","code");
x.t("name","gosu");
x.t("gosu","generics");
x.t("gosu","strongly");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","knows");
x.t("gosu","called");
x.t("typed","public");
x.t("typed","results");
x.t("typed","string");
x.t("typed","match");
x.t("typed","compile");
x.t("typed","removing");
x.t("typed","arraylist");
x.t("typed","var");
x.t("findall","method");
x.t("polymorphic","method");
x.t("angle","bracket");
x.t("angle","brackets");
x.t("brackets","special");
x.t("concrete","types");
x.t("test3","//");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","add");
x.t("methods","object");
x.t("preferably","example");
x.t("makes","code");
x.t("standard","collection");
x.t("identified","flagged");
x.t("generic","type");
x.t("generic","types");
x.t("com.example","uses");
x.t("address","objects");
x.t("address","note");
x.t("strings","function");
x.t("allows","remove");
x.t("generalize","apis");
x.t("array","list");
x.t("string","abcd");
x.t("string","one-letter");
x.t("string","strs");
x.t("string","type");
x.t("string","objects");
x.t("string","gosu");
x.t("string","ab");
x.t("string","address1");
x.t("string","values");
x.t("string","integer");
x.t("string","used");
x.t("string","var");
x.t("string","object");
x.t("allow","method");
x.t("local","variable");
x.t("write","something");
x.t("...you","generics");
x.t("defining","apis");
x.t("printandreturnfirst","alist");
x.t("earlier","example");
x.t("functions","defined");
x.t("error","occurred");
x.t("sometimes","need");
x.t("strongly","typed");
x.t("strongly","types");
x.t("choices","parameterize");
x.t("something","stores");
x.t("know","define");
x.t("syntax","called");
x.t("syntax","arraylist");
x.t("suppose","want");
x.t("suppose","local");
x.t("java.util.arraylist","class");
x.t("collection","passed");
x.t("collection","type");
x.t("collection","api");
x.t("collection","angle");
x.t("collection","address");
x.t("collection","allows");
x.t("collection","greatest");
x.t("collection","package");
x.t("collection","myclass");
x.t("collection","object");
x.t("concise","var");
x.t("fail","run");
x.t("first","t.printandreturnfirst");
x.t("first","c.iterator.next");
x.t("first","strongly");
x.t("first","variable");
x.t("first","item");
x.t("means","add");
x.t("guidewire_selectall","var");
x.t("constructors","basic");
x.t("alist","[0]");
x.t("alist","arraylist");
x.t("function","method");
x.t("function","key");
x.t("function","printstrings");
x.t("function","put");
x.t("function","infer");
x.t("function","printandreturnfirst");
x.t("function","guidewire_selectall");
x.t("function","takes");
x.t("function","returnlast");
x.t("thelist=","new");
x.t("approach","typically");
x.t("design","new");
x.t("reliability","code");
x.t("define","type");
x.t("define","apis");
x.t("define","list");
x.t("define","collection");
x.t("define","utility");
x.t("define","class");
x.t("straightforward","intuitive");
x.t(".myclassmethod","quickly");
x.t(".myclassmethod","note");
x.t("different","types");
x.t("[lastitemindex]","within");
x.t("extracted","items");
x.t("genericstest","method");
x.t("genericstest","string");
x.t("genericstest","//");
x.t("stores","key-value");
x.t("instead","writing");
x.t("collection_class","of_type");
x.t("things","makes");
x.t("match","type");
x.t("match","exact");
x.t("types","method");
x.t("types","just");
x.t("types","arguments");
x.t("types","errors");
x.t("types","really");
x.t("types","collections");
x.t("types","string");
x.t("types","suppose");
x.t("types","define");
x.t("types","types");
x.t("types","return");
x.t("types","already");
x.t("types","two");
x.t("types","class");
x.t("casting","necessary");
x.t("casting","wrong");
x.t("casting","fail");
x.t("casting","specific");
x.t("casting","happens");
x.t("compile","time");
x.t("parameterize","method");
x.t("parameterize","class");
x.t("wildcards","generalize");
x.t("important","thing");
x.t("simply","call");
x.t("simply","object");
x.t("expected","string");
x.t("calling","methods");
x.t("works","multiple");
x.t("works","automatically");
x.t("reference","guide");
x.t("code","inside");
x.t("code","assume");
x.t("code","strongly-typed");
x.t("code","concise");
x.t("code","extracted");
x.t("code","compile");
x.t("code","works");
x.t("code","runs");
x.t("code","created");
x.t("code","run");
x.t("code","coercion");
x.t("code","class");
x.t("code","symbol");
x.t("code","manually");
x.t("code","myclass");
x.t("ab","abc");
x.t("ab","123");
x.t("languages","known");
x.t("return","last");
x.t("return","type");
x.t("return","list");
x.t("return","first");
x.t("return","alist");
x.t("return","[lastitemindex]");
x.t("return","value");
x.t("return","result");
x.t("return","values");
x.t("consumer","api");
x.t("abstract","using");
x.t("abstract","behavior");
x.t("previous","example");
x.t("exact","type");
x.t("issue","additionally");
x.t("known","making");
x.t("method\u2019s","gosu");
x.t("actual","casting");
x.t("variable","last");
x.t("variable","preferably");
x.t("variable","strongly");
x.t("variable","first");
x.t("variable","case");
x.t("carried","information");
x.t("quickly","looking");
x.t("mymapping","string");
x.t("mymapping","function");
x.t("occurred","messsage");
x.t("greatest","power");
x.t("variety","apis");
x.t("variety","collections");
x.t("mymap","new");
x.t("instances","parameterized");
x.t("value","longerstrings");
x.t("value","strongly");
x.t("value","function");
x.t("value","match");
x.t("value","variable");
x.t("value","using");
x.t("value","object");
x.t("power","gosu");
x.t("power","define");
x.t("usage","adding");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("already","time");
x.t("already","compiler");
x.t("already","carried");
x.t("already","defined");
x.t("specific","type");
x.t("specific","types");
x.t("knows","return");
x.t("mistake","casting");
x.t("parameterization","without");
x.t("classname","generic_type_name");
x.t("convention","generic_type_name");
x.t("mymap.put","abc");
x.t("(assigned)","specific");
x.t("making","polymorphic");
x.t("notation","collection_class");
x.t("notation","classname");
x.t("takes","standard");
x.t("takes","specific");
x.t("although","generics");
x.t("although","specify");
x.t("[0]","code");
x.t("[0]","return");
x.t("runs","symbols");
x.t("runs","code");
x.t("runs","value");
x.t("represent","earlier");
x.t("represent","types");
x.t("returnlast","arraylist");
x.t("page","error");
x.t("str","str.length");
x.t("extracting","object");
x.t("dimensions","types");
x.t("correct","expected");
x.t("information","type");
x.t("granularity","type");
x.t("defined","arguments");
x.t("defined","generics");
x.t("practice","sometimes");
x.t("inference","special");
x.t("address1","address2");
x.t("result","type");
x.t("result","strongly");
x.t("happens","run");
x.t("removing","cast");
x.t("29","thevalue");
x.t("address2","address3");
x.t("case","list");
x.t("case","symbols");
x.t("case","already");
x.t("strs.findall","str");
x.t("values","angle");
x.t("values","even");
x.t("values","object");
x.t("utility","class");
x.t("finer","granularity");
x.t("maps","example");
x.t("maps","instead");
x.t("address3","address4");
x.t("print","debugging");
x.t("print","last");
x.t("print","want");
x.t("print","alist");
x.t("called","parameterizing");
x.t("called","array");
x.t("called","parameterization");
x.t("note","code");
x.t("note","practice");
x.t("address4","create");
x.t("(thelist)","gosu");
x.t("two","choices");
x.t("classes","want");
x.t("integer","gosu");
x.t("integer","mymap.put");
x.t("integer","object");
x.t("123","var");
x.t("typically","results");
x.t("typically","straightforward");
x.t("typically","even");
x.t("work","multiple");
x.t("work","different");
x.t("cases","types");
x.t("lastitemindex","a.size");
x.t("call","method");
x.t("call","add");
x.t("call","types");
x.t("package","com.example");
x.t("created","new");
x.t("immediately","method");
x.t("special","meanings");
x.t("special","syntax");
x.t("special","object");
x.t("run","time");
x.t("following","example");
x.t("used","method");
x.t("used","type");
x.t("signatures","class");
x.t("using","apis");
x.t("using","gosu");
x.t("using","functions");
x.t("class","method");
x.t("class","always");
x.t("class","definition");
x.t("class","angle");
x.t("class","test3");
x.t("class","strongly");
x.t("class","means");
x.t("class","genericstest");
x.t("class","mymapping");
x.t("class","specific");
x.t("class","represent");
x.t("class","pass");
x.t("class","myclass");
x.t("class","parameterized");
x.t("class","var");
x.t("coercion","type");
x.t("additionally","dangerous");
x.t("flagged","compile");
x.t("//","return");
x.t("//","result");
x.t("//","print");
x.t("pinned","(assigned)");
x.t("symbol","used");
x.t("arraylist","address");
x.t("arraylist","string");
x.t("arraylist","print");
x.t("arraylist","myclass");
x.t("arraylist","var");
x.t("returns","collection");
x.t("returns","first");
x.t("manually","add");
x.t("pass","array");
x.t("across","multiple");
x.t("adding","generic");
x.t("myclass","c1");
x.t("myclass","objects");
x.t("myclass","approach");
x.t("myclass",".myclassmethod");
x.t("myclass","calling");
x.t("myclass","following");
x.t("myclass","myclass");
x.t("myclass","object");
x.t("without","gosu");
x.t("names","parameterized");
x.t("behavior","across");
x.t("var","mycollection.iterator.next");
x.t("var","strs");
x.t("var","last");
x.t("var","longerstrings");
x.t("var","mystrings");
x.t("var","new");
x.t("var","text_val=eval");
x.t("var","first");
x.t("var","thelist=");
x.t("var","lastitemindex");
x.t("str.length","previous");
x.t("intuitive","although");
x.t("parameterized","method");
x.t("parameterized","methods");
x.t("parameterized","classes");
x.t("parameterized","class");
x.t("of_type","example");
x.t("even","simpler");
x.t("even","gosu");
x.t("mymap.get","abc");
x.t("com.example.test3","var");
x.t("object","rather");
x.t("object","just");
x.t("object","within");
x.t("object","importantly");
x.t("object","allow");
x.t("object","...you");
x.t("object","collection");
x.t("object","constructors");
x.t("object","function");
x.t("object","value");
x.t("object","although");
x.t("object","using");
x.t("object","returns");
x.t("object","var");
x.t("object","object");
x.t("specify","specific");
x.t("item","last");
x.t("item","list");
x.t("matching","type");
}
