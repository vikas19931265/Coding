function FileData_Pairs(x)
{
x.t("statements","claimcenter");
x.t("statements","contain");
x.t("statements","against");
x.t("statements","keyword");
x.t("statements","query");
x.t("column2","query.select");
x.t("column2","var");
x.t("example","query");
x.t("proceeding","secondary");
x.t("method","creates");
x.t("method","although");
x.t("method","query");
x.t("provide","functionality");
x.t("provide","no");
x.t("columns","fields");
x.t("drive","processing");
x.t("fetch","application");
x.t("defines","loop");
x.t("building","simple");
x.t("hashmap","string");
x.t("right","natural");
x.t("suffers","sql");
x.t("query.compare","field-name");
x.t("within","select");
x.t("relational","query");
x.t("static","gw.api.database.query.make");
x.t("table","qeury.join");
x.t("table","column");
x.t("table","var");
x.t("foreign-key","joins");
x.t("result.orderby","row");
x.t("seems","order");
x.t("source","data");
x.t("source","information");
x.t("source","based");
x.t("name/value","pairs");
x.t("related","entities");
x.t("related","column");
x.t("having","query.having");
x.t("table1","table2");
x.t("action","result");
x.t("table2","declares");
x.t("execute","equivalent");
x.t("creates","query");
x.t("creates","result");
x.t("tables","join");
x.t("fetching","data");
x.t("query.select","\\row-");
x.t("field","example");
x.t("field","information");
x.t("text_val.select","link");
x.t("refine","query");
x.t("refine","result");
x.t("interface","defines");
x.t("working","row");
x.t("support","table1");
x.t("calls","select");
x.t("orders","results");
x.t("left","proceeding");
x.t("java.lang.iterable","interface");
x.t("execution","query");
x.t("sort","results");
x.t("implied","aggregate");
x.t("implied","sql");
x.t("keywords","clauses");
x.t("apis","provide");
x.t("apis","support");
x.t("apis","overview");
x.t("apis","function");
x.t("apis","define");
x.t("apis","purpose");
x.t("apis","compared");
x.t("apis","send");
x.t("apis","query");
x.t("apis","joining");
x.t("high-level","steps");
x.t("entities","queries");
x.t("removes","items");
x.t("link","directly");
x.t("objects","drive");
x.t("objects","returns");
x.t("items","results");
x.t("items","iterate");
x.t("items","fetched");
x.t("items","intersect");
x.t("loop","following");
x.t("getting","result");
x.t("distinct","query.withdistinct");
x.t("new","hashmap");
x.t("single","result");
x.t("query.comparenotin","field-name");
x.t("top","first");
x.t("top","grouping");
x.t("messsage","gosu");
x.t("orderedresult","result.orderby");
x.t("group","implied");
x.t("group","clause");
x.t("unsupported","sql");
x.t("beginning","primary");
x.t("guide","query");
x.t("results","fetching");
x.t("results","group");
x.t("results","unsupported");
x.t("results","first");
x.t("results","grouped");
x.t("results","specific");
x.t("results","fetched");
x.t("results","query");
x.t("results","information");
x.t("results","based");
x.t("results","clause");
x.t("simple","queries");
x.t("overview","query");
x.t("features","query");
x.t("features","sql");
x.t("duplicate","items");
x.t("duplicate","instances");
x.t("directly","page");
x.t("cycle","claimcenter");
x.t("cycle","queries");
x.t("cycle","query");
x.t("counts","starting");
x.t("entity-type","declares");
x.t("entity-type","begins");
x.t("true","eliminates");
x.t("specified","criteria");
x.t("text_val.focus","text_val.select");
x.t("functionality","similar");
x.t("common","values");
x.t("union","query1");
x.t("union","var");
x.t("no","equivalent");
x.t("gosu","reference");
x.t("follows","high-level");
x.t("iterate","result");
x.t("query.make","entity-type");
x.t("references","selected");
x.t("query.between","field-name");
x.t("restricting","queries");
x.t("performance","often");
x.t("declares","tables");
x.t("declares","primary");
x.t("eliminates","duplicate");
x.t("aggregate","functions");
x.t("limit","results");
x.t("limit","result.getcountlimitedby");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","java.lang.iterable");
x.t("illustrates","processing");
x.t("secondary","source");
x.t("secondary","sources");
x.t("parameters","query.comparenotin");
x.t("parameters","query.between");
x.t("parameters","query.compareignorecase");
x.t("parameters","query.comparein");
x.t("parameters","query.contains");
x.t("parameters","query.startswith");
x.t("parameters","fetches");
x.t("inner","joins");
x.t("field1",".thenby");
x.t("field1","row");
x.t("combine","items");
x.t("field2","sort");
x.t("field2","produces");
x.t("field-name","parameters");
x.t("claimcenter","queries");
x.t("claimcenter","query");
x.t("claimcenter","application");
x.t("claimcenter","entity");
x.t("claimcenter","generates");
x.t("string","integer");
x.t("pairs","instead");
x.t("fields","return");
x.t("fields","information");
x.t("fields","order");
x.t(".union","query2");
x.t("int","limit");
x.t("int","number");
x.t(".intersect","query2");
x.t("natural","inner");
x.t("natural","specifying");
x.t("qeury.join","foreign-key");
x.t(".thenby","row");
x.t("contain","keywords");
x.t("second","query");
x.t("selected","entity");
x.t("functions","within");
x.t("functions","union");
x.t("functions","fields");
x.t("result.getcountlimitedby","int");
x.t("error","occurred");
x.t("equivalent","features");
x.t("equivalent","query");
x.t("equivalent","sql");
x.t("queries","query.compare");
x.t("queries","table");
x.t("queries","distinct");
x.t("queries","single");
x.t("queries","items");
x.t("queries","include");
x.t("queries","query");
x.t("queries","application");
x.t("queries","join");
x.t("queries","predicates");
x.t("queries","two");
x.t("queries","except");
x.t("supported","sql");
x.t("query.withdistinct","true");
x.t("blocks","having");
x.t("query.compareignorecase","field-name");
x.t("syntax","alternative");
x.t("syntax","specify");
x.t("select","statements");
x.t("select","method");
x.t("select","blocks");
x.t("select","var");
x.t("first","limit");
x.t("first","int");
x.t("feature","seldom");
x.t("guidewire_selectall","var");
x.t("processing","cycle");
x.t("number","rows");
x.t("written","correctly");
x.t("function","guidewire_selectall");
x.t("meets","specified");
x.t("determining","result");
x.t("inappropriate","results");
x.t("define","execute");
x.t("against","claimcenter");
x.t("specifies","claimcenter");
x.t("starting","iterate");
x.t("begins","query");
x.t("row","field1");
x.t("row","field2");
x.t("row","queries");
x.t("row","row");
x.t("instead","entity");
x.t("reduce","items");
x.t("types","objects");
x.t("keyword","clause");
x.t("ordering","results");
x.t("ordering","fetched");
x.t("ordering","information");
x.t("purpose","select");
x.t("query.comparein","field-name");
x.t("grouped","common");
x.t("reference","guide");
x.t("steps","invoke");
x.t("code","seems");
x.t("code","calls");
x.t("code","accesses");
x.t("query.contains","field-name");
x.t("rows","top");
x.t("primary","source");
x.t("return","items");
x.t("return","results");
x.t("often","suffers");
x.t("database","orders");
x.t("database","aggregate");
x.t("database","processing");
x.t("database","code");
x.t("database","result");
x.t("database","based");
x.t("database","sql");
x.t("avoiding","duplicate");
x.t("produces","result");
x.t("accesses","information");
x.t("occurred","messsage");
x.t("compared","supported");
x.t("query1",".union");
x.t("query1",".intersect");
x.t("instances","fetch");
x.t("instances","fetched");
x.t("instances","information");
x.t("instances","column1");
x.t("query2","combine");
x.t("query2","reduce");
x.t("sources","information");
x.t("include","syntax");
x.t("similar","features");
x.t("query.having","return");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("send","queries");
x.t("specific","columns");
x.t("builder","apis");
x.t("builder","expression");
x.t("fetched","items");
x.t("fetched","second");
x.t("fetched","database");
x.t("fetched","query");
x.t("fetched","two");
x.t("triggers","execution");
x.t("although","code");
x.t("expression","generates");
x.t("clauses","keyword");
x.t("page","error");
x.t("gw.api.database.query.make","entitytype");
x.t("diagram","illustrates");
x.t("separate","queries");
x.t("specifying","join");
x.t("query","beginning");
x.t("query","results");
x.t("query","follows");
x.t("query","query.make");
x.t("query","performance");
x.t("query","builder");
x.t("query","application");
x.t("query","note");
x.t("query","sql");
x.t("query","object");
x.t("query","generally");
x.t("information","building");
x.t("information","working");
x.t("information","left");
x.t("information","getting");
x.t("information","restricting");
x.t("information","meets");
x.t("information","determining");
x.t("information","ordering");
x.t("information","primary");
x.t("information","avoiding");
x.t("information","joining");
x.t("information","result");
x.t("information","towards");
x.t("data","action");
x.t("data","information");
x.t("data","runtime");
x.t("joining","related");
x.t("result","objects");
x.t("result","top");
x.t("result","counts");
x.t("result","code");
x.t("result","return");
x.t("result","triggers");
x.t("result","object");
x.t("result","contains");
x.t("entitytype","method");
x.t("meaning","sql");
x.t("application","database");
x.t("runtime","application");
x.t("join","table");
x.t("join","query");
x.t("join","produce");
x.t("predicates","fields");
x.t("values","field");
x.t("values","aggregate");
x.t("intersect","var");
x.t("two","types");
x.t("two","separate");
x.t("note","query");
x.t("integer","row");
x.t("column","field");
x.t("column","var");
x.t("based","related");
x.t("based","query");
x.t("based","values");
x.t("joins","secondary");
x.t("joins","sql");
x.t("correctly","relational");
x.t("order","results");
x.t("order","column1");
x.t("entity","instances");
x.t("following","diagram");
x.t("clause","written");
x.t("clause","database");
x.t("clause","sql");
x.t("query.startswith","field-name");
x.t("except","removes");
x.t("returns","information");
x.t("criteria","information");
x.t("grouping","ordering");
x.t("intersection","query1");
x.t("alternative","query");
x.t("sql","statements");
x.t("sql","apis");
x.t("sql","group");
x.t("sql","features");
x.t("sql","equivalent");
x.t("sql","queries");
x.t("sql","syntax");
x.t("sql","select");
x.t("sql","feature");
x.t("sql","meaning");
x.t("invoke","static");
x.t("invoke","select");
x.t("towards","right");
x.t("seldom","used");
x.t("var","table");
x.t("var","orderedresult");
x.t("var","union");
x.t("var","text_val=eval");
x.t("var","query");
x.t("var","intersection");
x.t("restrictions","invoke");
x.t("\\row-","new");
x.t("fetches","information");
x.t("generates","implied");
x.t("generates","sql");
x.t("produce","inappropriate");
x.t("object","creates");
x.t("object","refine");
x.t("object","references");
x.t("object","methods");
x.t("object","processing");
x.t("object","specifies");
x.t("object","ordering");
x.t("object","entity");
x.t("object","restrictions");
x.t("generally","results");
x.t("column1","column2");
x.t("contains","name/value");
x.t("specify","natural");
}
