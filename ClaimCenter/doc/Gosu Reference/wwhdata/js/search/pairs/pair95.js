function FileData_Pairs(x)
{
x.t("statements","query");
x.t("example","want");
x.t("example","query");
x.t("example","following");
x.t("method","description");
x.t("method","sort");
x.t("properties","related");
x.t("properties","methods");
x.t("properties","ordering");
x.t("notes","related");
x.t("notes","based");
x.t("notes","var");
x.t("clear","previous");
x.t("within","city");
x.t("within","postal");
x.t("sensitivity","ordering");
x.t("description","orderby");
x.t("descending","order");
x.t("row.postalcode","compile");
x.t("instance","properties");
x.t("instance","row");
x.t("instance","primary");
x.t("key","database-backed");
x.t("related","instance");
x.t("related","entities");
x.t("related","note");
x.t("related","date");
x.t("foreign","keys");
x.t("comparisons","automatically");
x.t("java.lang.comparable","methods");
x.t("execute","query");
x.t("orderbydescending","clears");
x.t("uses","orderby");
x.t("uses","gw.api.database.query");
x.t("traverse","database-backed");
x.t("last","viewed");
x.t("text_val.select","link");
x.t("working","results");
x.t("statement","specifies");
x.t("statement","sorts");
x.t("support","following");
x.t("interface","java.lang.comparable");
x.t("sample","gosu");
x.t("sample","code");
x.t("objectaccesspath","simpleproperty");
x.t("calculations","need");
x.t("times","need");
x.t("orders","notes");
x.t("orders","results");
x.t("orders","specified");
x.t("time","gosu");
x.t("however","results");
x.t("sort","notes");
x.t("sort","results");
x.t("sort","addresses");
x.t("sort","string");
x.t("sort","result");
x.t("ascending","order");
x.t("multiple","levels");
x.t("locale","sensitivity");
x.t("apis","working");
x.t("apis","support");
x.t("apis","return");
x.t("apis","query");
x.t("apis","order");
x.t("apis","specify");
x.t("apis","object");
x.t("default","sql");
x.t("property","example");
x.t("property","access");
x.t("property","postalcode");
x.t("property","names");
x.t("checks","property");
x.t("entities","query");
x.t("entities","specify");
x.t("automatically","contrast");
x.t("link","directly");
x.t("items","results");
x.t("items","according");
x.t("items","match");
x.t("items","order");
x.t("queryaddresses.select","resultaddresses");
x.t("objects","method");
x.t("access","path");
x.t("want","three");
x.t("want","ordered");
x.t("address_line1","comparison");
x.t("block","argument");
x.t("block","specifies");
x.t("block","code");
x.t("block","variable");
x.t("block","following");
x.t("messsage","gosu");
x.t("lets","specify");
x.t("queryaddresses","query.make");
x.t("need","locale");
x.t("need","join");
x.t("need","order");
x.t("results","properties");
x.t("results","related");
x.t("results","however");
x.t("results","default");
x.t("results","specified");
x.t("results","random");
x.t("results","function");
x.t("results","ordering");
x.t("results","return");
x.t("results","often");
x.t("results","query");
x.t("results","city");
x.t("results","column");
x.t("results","street");
x.t("results","using");
x.t("results","postal");
x.t("results","without");
x.t("guide","query");
x.t("iterator","resultaddresses.iterator");
x.t("according","ordering");
x.t("thenbydescending","times");
x.t("thenbydescending","orders");
x.t("simple","property");
x.t("simple","non-foreign");
x.t("simple","database-backed");
x.t("(address)","//");
x.t("directly","page");
x.t("specified","column");
x.t("viewed","uses");
x.t("built","java");
x.t("text_val.focus","text_val.select");
x.t("resultaddresses","queryaddresses.select");
x.t("resultaddresses","orderby");
x.t("resultaddresses","thenby");
x.t("path","traverse");
x.t("path","expressions");
x.t("path","cannot");
x.t("path","primary");
x.t("gosu","sample");
x.t("gosu","checks");
x.t("gosu","block");
x.t("gosu","blocks");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","expression");
x.t("gosu","submit");
x.t("codes","addresses");
x.t("addresses","uses");
x.t("addresses","want");
x.t("addresses","chicago");
x.t("addresses","select");
x.t("addresses","city");
x.t("addresses","order");
x.t("addresses","var");
x.t("query.make","(address)");
x.t("query.make","note");
x.t("iterate","result");
x.t("iterate","ordered");
x.t("dictionary","ordering");
x.t("comparison","methods");
x.t("comparison","preceding");
x.t("argument","gosu");
x.t("virtual","properties");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("useful","option");
x.t("methods","calculations");
x.t("methods","orders");
x.t("methods","sort");
x.t("methods","built");
x.t("methods","gosu");
x.t("methods","ordering");
x.t("methods","generate");
x.t("methods","query");
x.t("methods","result");
x.t("methods","following");
x.t("methods","returns");
x.t("methods","thenby");
x.t("constructs","executes");
x.t("address","instance");
x.t("enhancement","methods");
x.t("orderby","clears");
x.t("orderby","row");
x.t("orderby","ordering");
x.t("orderby","\\row-");
x.t("querynotes","query.make");
x.t("string","values");
x.t("three","levels");
x.t("rely","comparison");
x.t("random","order");
x.t("preceding","sql");
x.t("begin","iterate");
x.t("querynotes.select","result");
x.t("error","occurred");
x.t("chicago","queryaddresses.compare");
x.t("chicago","order");
x.t("chicago","var");
x.t("blocks","against");
x.t("blocks","pass");
x.t("equivalent","query");
x.t("contrast","collection");
x.t("syntax","row");
x.t("simpleproperty","block");
x.t("select","statements");
x.t("select","addresses");
x.t("functionally","equivalent");
x.t("collection","enhancement");
x.t("guidewire_selectall","var");
x.t("gw.api.database.query","var");
x.t("queryaddresses.compare","city");
x.t("activity","related");
x.t("activity","multiple");
x.t("function","guidewire_selectall");
x.t("clears","previous");
x.t("expressions","pass");
x.t("represents","instance");
x.t("represents","access");
x.t("specifies","simple");
x.t("specifies","three");
x.t("against","column");
x.t("cannot","include");
x.t("row","row.postalcode");
x.t("row","objectaccesspath");
x.t("row","represents");
x.t("row","row");
x.t("row","convention");
x.t("row","postalcode");
x.t("row","city");
x.t("row","addressline1");
x.t("match","query");
x.t("compile","time");
x.t("ordering","method");
x.t("ordering","orders");
x.t("ordering","results");
x.t("ordering","thenbydescending");
x.t("ordering","addresses");
x.t("ordering","methods");
x.t("ordering","rely");
x.t("ordering","ordering");
x.t("ordering","query");
x.t("ordering","city");
x.t("non-foreign","key");
x.t("reference","guide");
x.t("reference","gosu");
x.t("code","within");
x.t("code","uses");
x.t("code","orders");
x.t("code","sort");
x.t("code","want");
x.t("code","resultaddresses");
x.t("code","gosu");
x.t("code","constructs");
x.t("code","street");
x.t("code","var");
x.t("end","simple");
x.t("return","results");
x.t("return","sql");
x.t("primary","entity");
x.t("often","need");
x.t("option","sql");
x.t("database","database");
x.t("database","sorts");
x.t("database","fetches");
x.t("resultaddresses.iterator","//");
x.t("previous","ordering");
x.t("previous","order");
x.t("variable","row");
x.t("variable","named");
x.t("yields","object");
x.t("java","interface");
x.t("occurred","messsage");
x.t("database-backed","foreign");
x.t("database-backed","property");
x.t("keys","end");
x.t("include","virtual");
x.t("postal_code","address_line1");
x.t("postal_code","comparison");
x.t("named","row");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("builder","apis");
x.t("sorts","fetched");
x.t("sorts","result");
x.t("fetched","items");
x.t("fetched","data");
x.t("generate","order");
x.t("convention","represents");
x.t("expression","yields");
x.t("resultnotes","querynotes.select");
x.t("page","error");
x.t("regard","order");
x.t("query","notes");
x.t("query","uses");
x.t("query","block");
x.t("query","results");
x.t("query","addresses");
x.t("query","iterate");
x.t("query","begin");
x.t("query","reference");
x.t("query","database");
x.t("query","builder");
x.t("query","result");
x.t("query","predicates");
x.t("data","dictionary");
x.t("data","following");
x.t("postalcode","address");
x.t("postalcode","//");
x.t("result","items");
x.t("result","objects");
x.t("result","block");
x.t("result","orderby");
x.t("result","postal");
x.t("result","object");
x.t("equals","chicago");
x.t("submit","query");
x.t("predicates","sorts");
x.t("join","related");
x.t("values","locale-sensitive");
x.t("city","within");
x.t("city","sort");
x.t("city","want");
x.t("city","resultaddresses");
x.t("city","chicago");
x.t("city","postal_code");
x.t("city","equals");
x.t("city","//");
x.t("city","postal");
x.t("ordered","results");
x.t("ordered","city");
x.t("ordered","street");
x.t("ordered","postal");
x.t("column","descending");
x.t("column","ascending");
x.t("column","property");
x.t("column","names");
x.t("date","activity");
x.t("note","last");
x.t("note","//");
x.t("executes","functionally");
x.t("based","date");
x.t("row.activity.lastvieweddate","//");
x.t("street","example");
x.t("street","call");
x.t("street","following");
x.t("order","clear");
x.t("order","orderbydescending");
x.t("order","items");
x.t("order","results");
x.t("order","useful");
x.t("order","methods");
x.t("order","ordering");
x.t("order","postal_code");
x.t("order","query");
x.t("order","city");
x.t("order","clause");
x.t("order","thenby");
x.t("call","ordering");
x.t("clause","lets");
x.t("clause","sql");
x.t("following","sample");
x.t("following","gosu");
x.t("following","syntax");
x.t("following","ordering");
x.t("following","sql");
x.t("entity","simple");
x.t("entity","query");
x.t("//","within");
x.t("//","execute");
x.t("//","sort");
x.t("//","query");
x.t("using","locale-sensitive");
x.t("postal","codes");
x.t("postal","code");
x.t("pass","ordering");
x.t("returns","result");
x.t("levels","ordering");
x.t("addressline1","//");
x.t("sql","example");
x.t("sql","statement");
x.t("sql","select");
x.t("sql","query");
x.t("sql","order");
x.t("without","regard");
x.t("names","blocks");
x.t("names","data");
x.t("var","queryaddresses");
x.t("var","iterator");
x.t("var","resultaddresses");
x.t("var","text_val=eval");
x.t("var","querynotes");
x.t("var","resultnotes");
x.t("\\row-","row.activity.lastvieweddate");
x.t("fetches","items");
x.t("thenby","orders");
x.t("thenby","thenbydescending");
x.t("thenby","row");
x.t("specify","database");
x.t("specify","order");
x.t("specify","object");
x.t("object","access");
x.t("object","path");
x.t("object","gosu");
x.t("locale-sensitive","comparisons");
}
