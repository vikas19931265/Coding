function FileData_Pairs(x)
{
x.t("example","single");
x.t("example","group");
x.t("example","filter");
x.t("example","query");
x.t("example","specify");
x.t("complex","whenever");
x.t("complex","query");
x.t("subroutine","creates");
x.t("subroutine","form");
x.t("subroutine","subroutines");
x.t("subroutine","result");
x.t("(queryfilterbloomingtonorchicago)","//");
x.t("debugging","maintenance");
x.t("label","property");
x.t("leaves","page");
x.t("subsets","results");
x.t("subsets","data");
x.t("subsets","result");
x.t("construct","refine");
x.t("method","build");
x.t("method","apply");
x.t("method","field");
x.t("method","want");
x.t("method","filter");
x.t("method","takes");
x.t("method","query");
x.t("method","city");
x.t("greaterthanorequals","2012-01-01");
x.t("processchicago","aresult");
x.t("processchicago","result");
x.t("parameter","mandatory");
x.t("localization","purposes");
x.t("unchanged","during");
x.t("relational","database");
x.t("iteration","addresses");
x.t("query.compare","state");
x.t("query.compare","mandatory");
x.t("query.compare","createtime");
x.t("query.compare","optional");
x.t("query.compare","city");
x.t("queryfilterbloomingtonorchicago","new");
x.t("illinois","addresses");
x.t("illinois","bloomington");
x.t("illinois","code");
x.t("illinois","var");
x.t("implement","beanbasedqueryfilter");
x.t("build","query");
x.t("create","standard");
x.t("create","query");
x.t("result.orderby","row");
x.t("row.postalcode","//");
x.t("iquerybeanresult","address");
x.t("once","user");
x.t("once","main");
x.t("kinds","filters");
x.t("kinds","filter");
x.t("ensures","no");
x.t("locating","part");
x.t("key","string");
x.t("enters","page");
x.t("apply","needed");
x.t("apply","ordering");
x.t("apply","predicate");
x.t("apply","data");
x.t("apply","query");
x.t("apply","restrictive");
x.t("arguments","name");
x.t("creates","standard");
x.t("creates","adds");
x.t("builds","query");
x.t("user","leaves");
x.t("user","enters");
x.t("user","interface");
x.t("user","left");
x.t("user","makes");
x.t("user","user\u2019s");
x.t("field","boolean");
x.t("field","pcf");
x.t("field","query");
x.t("field","result");
x.t("field","var");
x.t("uses","simple");
x.t("uses","gw.api.filters.standardqueryfilter");
x.t("uses","gw.api.database.query");
x.t("uses","gw.api.database.iquerybeanresult");
x.t("later","uses");
x.t("later","address");
x.t("later","var");
x.t("(queryfilter2012address)","//");
x.t("query.select","result.orderby");
x.t("line","breaks");
x.t("cache","recent");
x.t("cacheoptions","property");
x.t("text_val.select","link");
x.t("working","results");
x.t("refine","query");
x.t("support","toolbar");
x.t("support","special");
x.t("standardqueryfilter","bloomington");
x.t("standardqueryfilter","queryfilterbloomington");
x.t("standardqueryfilter","chicago");
x.t("standardqueryfilter","2012");
x.t("standardqueryfilter","queryfilterchicago");
x.t("standardqueryfilter","myqueryfilter");
x.t("standardqueryfilter","queryfilterevantson");
x.t("standardqueryfilter","class");
x.t("standardqueryfilter","object");
x.t("state","illinois");
x.t("state","equals");
x.t("interface","standard");
x.t("interface","row");
x.t("displays","standard");
x.t("displays","first");
x.t("displays","together");
x.t("displays","toolbarfilteroption");
x.t("potentially","different");
x.t("type","query");
x.t("type","toolbar");
x.t("sample","gosu");
x.t("java.util.date","//");
x.t("evaluates","potentially");
x.t("time","user");
x.t("time","using");
x.t("queryfilter2012address","new");
x.t("processbloomington","aresult");
x.t("processbloomington","result");
x.t("(queryfilterevanston)","address");
x.t("mandatory","filter");
x.t("mandatory","option");
x.t("mandatory","query");
x.t("mandatory","optional");
x.t("mandatory","equals");
x.t("single-line","filter");
x.t("left","page");
x.t("claim.claimnumber","disable");
x.t("response","changes");
x.t("form","sql");
x.t("widget","toolbar");
x.t("multiple","standard");
x.t("whenever","joins");
x.t("filters","apply");
x.t("filters","type");
x.t("filters","mandatory");
x.t("filters","want");
x.t("filters","single");
x.t("filters","list");
x.t("filters","creating");
x.t("filters","gosu");
x.t("filters","filtering");
x.t("filters","combine");
x.t("filters","sometimes");
x.t("filters","accept");
x.t("filters","function");
x.t("filters","added");
x.t("filters","often");
x.t("filters","view");
x.t("filters","page");
x.t("filters","information");
x.t("filters","subroutines");
x.t("filters","toolbar");
x.t("filters","result");
x.t("filters","predicates");
x.t("filters","using");
x.t("filters","including");
x.t("filters","effect");
x.t("filters","specify");
x.t("apis","working");
x.t("needed","adding");
x.t("aresult.addfilter","(queryfilterevanston)");
x.t("aresult.addfilter","(queryfilterchicago)");
x.t("aresult.addfilter","(queryfilterbloomington)");
x.t("iterators","list");
x.t("property","localization");
x.t("property","text");
x.t("property","filter");
x.t("property","false");
x.t("property","display");
x.t("property","specifies");
x.t("property","option");
x.t("property","toolbar");
x.t("text","menu");
x.t("text","drop-down");
x.t("default","filter");
x.t("speed","application");
x.t("link","directly");
x.t("want","single");
x.t("want","list");
x.t("want","results");
x.t("want","filter");
x.t("want","query");
x.t("items","obtain");
x.t("items","different");
x.t("new","standardqueryfilter");
x.t("new","gw.api.filters.standardqueryfilter");
x.t("single","filter");
x.t("single","argument");
x.t("single","comparison");
x.t("single","standard");
x.t("single","result");
x.t("single","toolbar");
x.t("single","object");
x.t("objects","implement");
x.t("block","single-line");
x.t("block","query");
x.t("createtime","greaterthanorequals");
x.t("satisfies","using");
x.t("passes","query");
x.t("top","list");
x.t("messsage","gosu");
x.t("combines","query");
x.t("list","options");
x.t("list","view");
x.t("list","views");
x.t("lets","users");
x.t("menu","label");
x.t("menu","displays");
x.t("menu","filters");
x.t("menu","single");
x.t("menu","options");
x.t("menu","drop-down");
x.t("menu","query");
x.t("add","multiple");
x.t("add","filters");
x.t("add","single");
x.t("add","bloomington");
x.t("add","standard");
x.t("add","chicago");
x.t("add","evanston");
x.t("add","query");
x.t("add","two");
x.t("add","specify");
x.t("during","life");
x.t("during","2012");
x.t("result.clearfilters","//");
x.t("paste","code");
x.t("group","filter");
x.t("group","toolbar");
x.t("results","complex");
x.t("results","filtering");
x.t("results","standard");
x.t("results","write");
x.t("results","function");
x.t("results","include");
x.t("results","cases");
x.t("guide","query");
x.t("filter","method");
x.t("filter","apply");
x.t("filter","displays");
x.t("filter","property");
x.t("filter","items");
x.t("filter","new");
x.t("filter","lets");
x.t("filter","add");
x.t("filter","filter");
x.t("filter","applies");
x.t("filter","false");
x.t("filter","name");
x.t("filter","addresses");
x.t("filter","further");
x.t("filter","standard");
x.t("filter","instantiating");
x.t("filter","selection");
x.t("filter","array");
x.t("filter","toolbarfilteroptionsgroup");
x.t("filter","options");
x.t("filter","represents");
x.t("filter","filter.compare");
x.t("filter","restrict");
x.t("filter","option");
x.t("filter","predicate");
x.t("filter","drop-down");
x.t("filter","recalculation");
x.t("filter","process");
x.t("filter","widgets");
x.t("filter","expression");
x.t("filter","query");
x.t("filter","toolbar");
x.t("filter","result");
x.t("filter","predicates");
x.t("filter","city");
x.t("filter","following");
x.t("filter","caching");
x.t("filter","using");
x.t("filter","restricts");
x.t("filter","names");
x.t("simple","compare");
x.t("applies","activity");
x.t("applies","different");
x.t("applies","toolbar");
x.t("remove","line");
x.t("remove","filters");
x.t("entry","page");
x.t("(address)","query.compare");
x.t("(address)",".select");
x.t("sure","filter");
x.t("resolves","single");
x.t("resolves","array");
x.t("spaces","code");
x.t("spaces","readability");
x.t("false","property");
x.t("false","caution");
x.t("false","note");
x.t("directly","page");
x.t("requirements","claimcenter");
x.t("gw.api.filters.standardqueryfilter","mandatory");
x.t("gw.api.filters.standardqueryfilter","new");
x.t("gw.api.filters.standardqueryfilter","optional");
x.t("gw.api.filters.standardqueryfilter","//");
x.t("true","new");
x.t("true","alternatively");
x.t("true","note");
x.t("true","using");
x.t("true","adding");
x.t("text_val.focus","text_val.select");
x.t("maintain","query");
x.t("overall","programming");
x.t("obtain","iterate");
x.t("obtain","result");
x.t("creating","standard");
x.t("name","label");
x.t("name","string");
x.t("no","item");
x.t("gosu","block");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","expression");
x.t("gosu","class");
x.t("iterate","example");
x.t("iterate","addresses");
x.t("iterate","result");
x.t("iterate","subset");
x.t("constructor","group");
x.t("constructor","filter");
x.t("constructor","takes");
x.t("addresses","state");
x.t("addresses","filter");
x.t("addresses","bloomington");
x.t("addresses","chicago");
x.t("addresses","added");
x.t("addresses","cities");
x.t("addresses","query");
x.t("addresses","city");
x.t("addresses","var");
x.t("query.make","(address)");
x.t("retains","applies");
x.t("argument","standardqueryfilter");
x.t("comparison","predicate");
x.t("part","query");
x.t("filtering","results");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","standard");
x.t("bloomington","aresult.addfilter");
x.t("bloomington","filter");
x.t("bloomington","chicago");
x.t("bloomington","orcriteria.compare");
x.t("bloomington","note");
x.t("further","restricts");
x.t("boolean","logic");
x.t("orcriteria","orcriteria.compare");
x.t("constructs","query");
x.t("constructs","general");
x.t("alternatively","specify");
x.t("parameters","filters");
x.t("standard","query");
x.t("sends","relational");
x.t("instantiating","new");
x.t("combine","filter");
x.t("combine","predicates");
x.t("compound","predicate");
x.t("makes","debugging");
x.t("makes","changes");
x.t("makes","page");
x.t("beanbasedqueryfilter","interface");
x.t("address","result.orderby");
x.t("address","filters");
x.t("address","aresult");
x.t("address","instances");
x.t("address","result");
x.t("address","var");
x.t("selection","made");
x.t("write","query");
x.t("claimcenter","combines");
x.t("claimcenter","application");
x.t("string","literal");
x.t("string","identifier");
x.t("string","literals");
x.t("(queryfilterchicago)","address");
x.t("(queryfilterchicago)","result.addfilter");
x.t("array","example");
x.t("array","objects");
x.t("array","constructor");
x.t("array","standard");
x.t("array","two");
x.t("addition","using");
x.t("second","filter");
x.t("three","subroutines");
x.t(".thenby","row");
x.t("aresult","iquerybeanresult");
x.t("aresult","print");
x.t("queryfilterbloomington","new");
x.t("queryfilterbloomington","query");
x.t("extra","spaces");
x.t("moving","option");
x.t("remain","unchanged");
x.t("complicated","joins");
x.t("2012-01-01","java.util.date");
x.t("recent","toolbar");
x.t("error","occurred");
x.t("sometimes","want");
x.t("sometimes","may");
x.t("logic","ensures");
x.t("logic","add");
x.t("logic","overall");
x.t("logic","standard");
x.t("logic","predicates");
x.t("logic","using");
x.t("queries","themselves");
x.t("chicago","uses");
x.t("chicago","aresult.addfilter");
x.t("chicago","filter");
x.t("chicago","addresses");
x.t("chicago","address");
x.t("chicago","second");
x.t("chicago","evanston");
x.t("chicago","2012");
x.t("chicago","added");
x.t("chicago","order");
x.t("chicago","//");
x.t("chicago","var");
x.t("evanston","aresult.addfilter");
x.t("evanston","filter");
x.t("evanston","subroutines");
x.t("toolbarfilteroptionsgroup","expression");
x.t("display","key");
x.t("display","keys");
x.t("involved","locating");
x.t("selectonentry","property");
x.t("select","method");
x.t("select","addresses");
x.t("select","drop-down");
x.t("unit","easily");
x.t("accept","different");
x.t("first","parameter");
x.t("first","filter");
x.t("first","parameters");
x.t("options","label");
x.t("options","once");
x.t("options","user");
x.t("options","response");
x.t("options","filter");
x.t("options","remain");
x.t("options","override");
x.t("options","toolbarfilteroption");
x.t("options","toolbar");
x.t("options","comes");
x.t("options","tab");
x.t("activitypatternslv","list");
x.t("life","span");
x.t("guidewire_selectall","var");
x.t("subselects","compound");
x.t("subselects","several");
x.t("gw.api.database.query","uses");
x.t("2012","later");
x.t("2012","addresses");
x.t("2012","address");
x.t("processing","subroutine");
x.t("activity","patterns");
x.t("literal","example");
x.t("constructors","toolbarfilteroption");
x.t("function","processchicago");
x.t("function","processbloomington");
x.t("function","guidewire_selectall");
x.t("function","processevanston");
x.t("queryfilterchicago","new");
x.t("queryfilterchicago","query");
x.t("queryfilterchicago","//");
x.t("address.postalcode","addfilter");
x.t("address.postalcode","using");
x.t("address.postalcode","//");
x.t("address.postalcode","address.createtime");
x.t("combining","predicates");
x.t("implements","beanbasedqueryfilter");
x.t("different","subsets");
x.t("different","kinds");
x.t("different","field");
x.t("different","ways");
x.t("different","value");
x.t("processes","different");
x.t("represents","named");
x.t("expressions","involved");
x.t("maintenance","easier");
x.t("specifies","standard");
x.t("specifies","array");
x.t("filter.compare","mandatory");
x.t("editor","contains");
x.t("may","want");
x.t("ways","iterate");
x.t("row","row.postalcode");
x.t("row","iterators");
x.t("row","row.city");
x.t("reduce","speed");
x.t("gw.api.filters","package");
x.t("gw.api.filters","contains");
x.t("address.city","address.state");
x.t("pcf","editor");
x.t("changes","user");
x.t("changes","reduce");
x.t("changes","setting");
x.t("ordering","grouping");
x.t("ordering","var");
x.t("myqueryfilter","new");
x.t("myqueryfilter","query");
x.t("added","subroutine");
x.t("added","during");
x.t("added","database");
x.t("purpose","query");
x.t("reference","guide");
x.t("code","creates");
x.t("code","builds");
x.t("code","passes");
x.t("code","block");
x.t("code","remove");
x.t("code","constructs");
x.t("code","standard");
x.t("code","adds");
x.t("code","often");
x.t("code","main");
x.t("code","valid");
x.t("code","separate");
x.t("code","location");
x.t("code","subroutines");
x.t("identifier","filter");
x.t("restrict","iteration");
x.t("restrict","items");
x.t("restrict","result");
x.t("adds","standard");
x.t("adds","two");
x.t("often","standard");
x.t("override","text");
x.t("database","during");
x.t("database","addition");
x.t("cities","bloomington");
x.t("orcriteria.compare","city");
x.t("option","field");
x.t("option","top");
x.t("option","entry");
x.t("option","true");
x.t("option","alternatively");
x.t("option","moving");
x.t("option","toolbar");
x.t("option","following");
x.t("option","setting");
x.t("option","effect");
x.t("previous","code");
x.t("java","gosu");
x.t("together","order");
x.t("span","page");
x.t("occurred","messsage");
x.t("pre-defined","standard");
x.t("addfilter","method");
x.t("addfilter","queryfilterchicago");
x.t("made","user");
x.t("sessions","user");
x.t("reverts","default");
x.t("configuration","claimcenter");
x.t("configuration","application");
x.t("include","address");
x.t("instances","standard");
x.t("result.addfilter","(queryfilterbloomingtonorchicago)");
x.t("result.addfilter","(queryfilter2012address)");
x.t("result.addfilter","(queryfilterchicago)");
x.t("keys","string");
x.t("routines","want");
x.t("main","routine");
x.t("main","query");
x.t("named","query");
x.t("predicate","method");
x.t("predicate","uses");
x.t("predicate","single");
x.t("predicate","add");
x.t("predicate","applies");
x.t("predicate","gosu");
x.t("predicate","methods");
x.t("predicate","expressions");
x.t("predicate","result");
x.t("easier","following");
x.t("processevanston","aresult");
x.t("processevanston","result");
x.t("cachekey","property");
x.t("value","time");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("several","routines");
x.t("drop-down","menu");
x.t("toolbarfilteroption","filter");
x.t("toolbarfilteroption","expression");
x.t("recalculation","filter");
x.t("recalculation","generally");
x.t("builder","apis");
x.t("builder","code");
x.t("builder","predicate");
x.t("builder","query");
x.t("builder","result");
x.t("programming","unit");
x.t("view","subsets");
x.t("view","displays");
x.t("view","retains");
x.t("view","reverts");
x.t("view","recalculate");
x.t("view","contains");
x.t("process","illinois");
x.t("process","results");
x.t("process","different");
x.t("typekey.state.tc_il","//");
x.t("widgets","toolbar");
x.t("force","list");
x.t("takes","single");
x.t("takes","two");
x.t("expression","evaluates");
x.t("expression","claim.claimnumber");
x.t("expression","resolves");
x.t("breaks","spaces");
x.t("breaks","extra");
x.t("valid","toolbar");
x.t("page","example");
x.t("page","filter");
x.t("page","error");
x.t("page","sometimes");
x.t("page","configuration");
x.t("page","force");
x.t("page","disable");
x.t("page","returns");
x.t("page","specify");
x.t("separate","code");
x.t("separate","query");
x.t("location","makes");
x.t("purposes","specify");
x.t("query","complex");
x.t("query","query.compare");
x.t("query","once");
x.t("query","filters");
x.t("query","filter");
x.t("query","results");
x.t("query","addresses");
x.t("query","query.make");
x.t("query","filtering");
x.t("query","orcriteria");
x.t("query","sends");
x.t("query","complicated");
x.t("query","logic");
x.t("query","code");
x.t("query","predicate");
x.t("query","builder");
x.t("query","routine");
x.t("query","query");
x.t("query","result");
x.t("query","predicates");
x.t("query","compare");
x.t("query","produce");
x.t("routine","construct");
x.t("routine","standard");
x.t("routine","processes");
x.t("routine","debug");
x.t("routine","pass");
x.t("data","list");
x.t("information","combining");
x.t("information","using");
x.t("queryfilterevanston","new");
x.t("optional","options");
x.t("optional","query");
x.t("optional","equals");
x.t("result","method");
x.t("result","processchicago");
x.t("result","apply");
x.t("result","uses");
x.t("result","query.select");
x.t("result","want");
x.t("result","satisfies");
x.t("result","add");
x.t("result","result.clearfilters");
x.t("result","sure");
x.t("result","query.make");
x.t("result","three");
x.t("result","logic");
x.t("result","addfilter");
x.t("result","result.addfilter");
x.t("result","processevanston");
x.t("result","query");
x.t("result","information");
x.t("result","result");
x.t("result","subroutines");
x.t("result","print");
x.t("result","following");
x.t("result","//");
x.t("result","object");
x.t("subroutines","apply");
x.t("subroutines","iterate");
x.t("subroutines","processing");
x.t("subroutines","process");
x.t("subroutines","//");
x.t("toolbar","widget");
x.t("toolbar","filters");
x.t("toolbar","filter");
x.t("equals","false");
x.t("equals","true");
x.t("equals","bloomington");
x.t("equals","chicago");
x.t("equals","evanston");
x.t("equals","typekey.state.tc_il");
x.t("inline","constructor");
x.t("inline","constructors");
x.t("caution","recalculation");
x.t("predicates","subroutine");
x.t("predicates","field");
x.t("predicates","true");
x.t("predicates","standard");
x.t("predicates","queries");
x.t("predicates","logic");
x.t("predicates","subselects");
x.t("predicates","main");
x.t("predicates","query");
x.t("predicates","using");
x.t("application","user");
x.t("application","list");
x.t("application","renders");
x.t("themselves","following");
x.t("disable","filter");
x.t("choose","drop-down");
x.t("city","illinois");
x.t("city","field");
x.t("city","processbloomington");
x.t("city","address");
x.t("city","chicago");
x.t("city","equals");
x.t("print","address.city");
x.t("ordered","result");
x.t("users","select");
x.t("users","choose");
x.t("two","kinds");
x.t("two","arguments");
x.t("two","standard");
x.t("two","predicates");
x.t("note","previous");
x.t("note","package");
x.t("subset","main");
x.t("queryfilterevantson","query");
x.t("readability","copy");
x.t("joins","subselects");
x.t("joins","predicates");
x.t("cases","separate");
x.t("debug","maintain");
x.t("easily","obtain");
x.t("row.city",".thenby");
x.t("row.city","print");
x.t("gw.api.database.iquerybeanresult","uses");
x.t("copy","paste");
x.t("comes","filter");
x.t("renders","updated");
x.t("package","gw.api.filters");
x.t("package","contains");
x.t("order","city");
x.t("order","specify");
x.t("literals","toolbar");
x.t("special","type");
x.t("following","example");
x.t("following","sample");
x.t("following","gosu");
x.t("address.state","address.postalcode");
x.t("caching","list");
x.t("caching","setting");
x.t("caching","generally");
x.t("recalculate","filter");
x.t("using","method");
x.t("using","standard");
x.t("using","logic");
x.t("using","inline");
x.t("class","constructor");
x.t("class","returns");
x.t("//","create");
x.t("//","add");
x.t("//","remove");
x.t("//","iterate");
x.t("//","select");
x.t("//","result");
x.t("//","subroutines");
x.t("//","pass");
x.t("general","purpose");
x.t("setting","cacheoptions");
x.t("setting","selectonentry");
x.t("setting","cachekey");
x.t("pass","result");
x.t("pass","ordered");
x.t("grouping","requirements");
x.t("compare","predicate");
x.t("compare","city");
x.t("adding","standard");
x.t("restricts","iteration");
x.t("tab","add");
x.t("tab","toolbar");
x.t("tab","tab");
x.t("returns","list");
x.t("returns","standard");
x.t("restrictive","predicates");
x.t("sql","query");
x.t("names","localization");
x.t("names","display");
x.t("var","queryfilterbloomingtonorchicago");
x.t("var","queryfilter2012address");
x.t("var","text_val=eval");
x.t("var","queryfilterbloomington");
x.t("var","queryfilterchicago");
x.t("var","myqueryfilter");
x.t("var","query");
x.t("var","queryfilterevanston");
x.t("var","result");
x.t("including","standard");
x.t("effect","user");
x.t("effect","time");
x.t("(queryfilterbloomington)","address");
x.t("patterns","activitypatternslv");
x.t("produce","result");
x.t("views","cache");
x.t("views","support");
x.t("views","page");
x.t("views","recalculate");
x.t(".select","//");
x.t("object","subroutine");
x.t("object","create");
x.t("object","add");
x.t("object","filter");
x.t("object","addresses");
x.t("object","select");
x.t("object","first");
x.t("object","implements");
x.t("object","gw.api.filters");
x.t("object","restrict");
x.t("object","main");
x.t("contains","line");
x.t("contains","standardqueryfilter");
x.t("contains","pre-defined");
x.t("contains","toolbar");
x.t("address.createtime","add");
x.t("item","result");
x.t("specify","default");
x.t("specify","filter");
x.t("specify","standard");
x.t("specify","array");
x.t("specify","java");
x.t("specify","following");
x.t("generally","list");
x.t("user\u2019s","sessions");
x.t("updated","page");
}
