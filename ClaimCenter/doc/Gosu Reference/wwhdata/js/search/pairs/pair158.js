function FileData_Pairs(x)
{
x.t("example","hyphens");
x.t("example","new");
x.t("example","element");
x.t("example","choice");
x.t("example","possibility");
x.t("example","gosu");
x.t("example","natural");
x.t("example","suppose");
x.t("example","top-level");
x.t("example","cannot");
x.t("example","myprop");
x.t("example","embedded");
x.t("example","numeric");
x.t("example","xsd");
x.t("example","load");
x.t("example","var");
x.t("complex","type");
x.t("complex","types");
x.t("root","a_b");
x.t("root","generated");
x.t("root","placeholder");
x.t("root","xsd");
x.t("differently","top-level");
x.t("unlike","generated");
x.t("referencing","additional");
x.t("equal","size");
x.t("properties","example");
x.t("properties","start");
x.t("properties","childname");
x.t("properties","xml-related");
x.t("properties","gosu");
x.t("properties","methods");
x.t("properties","whether");
x.t("properties","types");
x.t("properties","represent");
x.t("properties","called");
x.t("properties","immediately");
x.t("properties","elements");
x.t("properties","xsd");
x.t("properties","xsd-based");
x.t("illustrate","point");
x.t("integers","circumstances");
x.t("notes","generated");
x.t("prepends","underscore");
x.t("child2elem","xml");
x.t("exist","once");
x.t("exist","list");
x.t("exist","gosu");
x.t("xsd:list","itemtype=");
x.t("xsd:list","xsd:schema");
x.t("defines","phone");
x.t("defines","child");
x.t(".anonymous.elements","a_b_c");
x.t(".anonymous.elements","pathfromroot_elementname");
x.t("pattern","convert");
x.t("pattern","gosu");
x.t("rather","child");
x.t("files","file");
x.t("files","starting");
x.t("mycompany.schemas","put");
x.t("within","element");
x.t("within","name");
x.t("within","namespace");
x.t("within","xsd");
x.t("distinctions","terminology");
x.t("every","element");
x.t("every","definition");
x.t("every","child");
x.t("lists","notes");
x.t("lists","exist");
x.t("lists","aware");
x.t("lists","types");
x.t("lists","using");
x.t("elementname","represents");
x.t("elementname","lower");
x.t("anywhere","property");
x.t("hyphens","disallowed");
x.t("wish","access");
x.t("describes","type");
x.t("describes","element");
x.t("describes","strict");
x.t("describes","attribute");
x.t("table","lists");
x.t("table","every");
x.t("table","schema");
x.t("table","value");
x.t("table","note");
x.t("embeds","type");
x.t("embeds","path");
x.t("built-in","complex");
x.t("create","complex");
x.t("create","type");
x.t("create","new");
x.t("create","objects");
x.t("create","assign");
x.t("create","phone");
x.t("create","three");
x.t("a_b_c","complex");
x.t("a_b_c","within");
x.t("anonymous.elements","pathfromroot_elementname");
x.t("uppercase","gosu");
x.t("inserts","value");
x.t("/child1","/element1");
x.t("/child1","child1");
x.t("instance","complex");
x.t("instance","every");
x.t("instance","property");
x.t("instance","element");
x.t("instance","e.work");
x.t("instance","simple");
x.t("instance","attribute");
x.t("instance","e.home");
x.t("instance","xml");
x.t("instance","important");
x.t("instance","using");
x.t("instance","additionally");
x.t("instance","child");
x.t("various","definitions");
x.t("home","type=");
x.t("home","numbers");
x.t("always","reference");
x.t("once","gosu");
x.t("once","discussion");
x.t("once","says");
x.t("once","element.address");
x.t("/child2","/element1");
x.t("/child2","child2");
x.t("performs","slight");
x.t("name=","home");
x.t("name=","phone");
x.t("name=","cell");
x.t("name=","child1");
x.t("name=","child2");
x.t("name=","person");
x.t("name=","areacode");
x.t("name=","mainnumber");
x.t("name=","element1");
x.t("name=","work");
x.t("array/list","index");
x.t("element.propertyname","[0]");
x.t("improve","readability");
x.t("/element1","example");
x.t("/element1","----------");
x.t("/element1","xsd");
x.t("----------","xml.child1");
x.t("----------","xml");
x.t("organized","subdirectories");
x.t("subdirectories","package");
x.t("creates","properties");
x.t("creates","type");
x.t("creates","new");
x.t("creates","list");
x.t("creates","intermediate");
x.t("creates","types");
x.t("creates","two");
x.t("creates","xsd");
x.t("refers","built-in");
x.t("backing","type");
x.t("topic","schema");
x.t("uppercases","following");
x.t("renames","item");
x.t("try","actual");
x.t("xsd:complextype","xsd:sequence");
x.t("xsd:complextype","xsd:choice");
x.t("version=","1.0");
x.t("derived","list");
x.t("contexts","phone");
x.t("declared","lists");
x.t("declared","web");
x.t("declared","types");
x.t("declared","schema");
x.t("declared","xsd");
x.t("later","time");
x.t("later","decide");
x.t("aspect","normalization");
x.t("xml.print","output");
x.t("xml.print","print");
x.t("text_val.select","link");
x.t("tell","gosu");
x.t("singular","example");
x.t("support","common");
x.t("look","following");
x.t("necessary","$typeinstance");
x.t("type","example");
x.t("type","complex");
x.t("type","embeds");
x.t("type","describes");
x.t("type","instance");
x.t("type","singular");
x.t("type","support");
x.t("type","(2)");
x.t("type","hierarchy");
x.t("type","multiple");
x.t("type","property");
x.t("type","want");
x.t("type","java.lang.integer");
x.t("type","includes");
x.t("type","list");
x.t("type","simple");
x.t("type","directly");
x.t("type","definition");
x.t("type","name");
x.t("type","path");
x.t("type","no");
x.t("type","follows");
x.t("type","natural");
x.t("type","attribute");
x.t("type","three");
x.t("type","pathfromroot");
x.t("type","automatic");
x.t("type","represents");
x.t("type","different");
x.t("type","java.util.list");
x.t("type","schema");
x.t("type","appear");
x.t("type","instances");
x.t("type","xsd:anytype");
x.t("type","schema.elementname");
x.t("type","examples");
x.t("type","implicitly");
x.t("type","integer");
x.t("type","xsd:int");
x.t("type","system");
x.t("type","xsd");
x.t("type","names");
x.t("type","schema.anonymous.elements.element1_child1");
x.t("type","var");
x.t("type","schema.anonymous.elements.element1_child2");
x.t("basic","properties");
x.t("tends","harder");
x.t(".anonymous.types.simple","pathfromroot");
x.t("change","following");
x.t("change","child");
x.t("providing","access");
x.t("http://www.w3.org/2001/xmlschema","xsd:element");
x.t("/xsd:complextype","/xsd:element");
x.t("/xsd:complextype","/xsd:schema");
x.t("complextype","name=");
x.t("e.work.mainnumber","555-1214");
x.t("times","property");
x.t("hierarchy","files");
x.t("hierarchy","think");
x.t("hierarchy","configuration");
x.t("(2)","complex");
x.t("time","simplecontent");
x.t("slight","normalization");
x.t("packages","properties");
x.t("packages","become");
x.t("however","writing");
x.t("however","gosu");
x.t("however","worry");
x.t("inside","element");
x.t("whenever","create");
x.t("parsing","normalization");
x.t("xmlns:xsd=","http://www.w3.org/2001/xmlschema");
x.t("multiple","times");
x.t("multiple","ways");
x.t("multiple","elements");
x.t("put","xsd");
x.t("typesafe","important");
x.t("property","example");
x.t("property","every");
x.t("property","inserts");
x.t("property","type");
x.t("property","element");
x.t("property","list");
x.t("property","simple");
x.t("property","element.childname");
x.t("property","name");
x.t("property","gosu");
x.t("property","transforms");
x.t("property","syntax");
x.t("property","appear");
x.t("property","accesses");
x.t("property","element.childname_elem");
x.t("property","becomes");
x.t("property","_elem");
x.t("property","element.attributename");
x.t("property","//");
x.t("property","xsd");
x.t("property","transform");
x.t("property","without");
x.t("property","names");
x.t("text","pathfromroot");
x.t("text","anonymous");
x.t("convert","simpletype");
x.t("original","schema");
x.t("lowercase","gosu");
x.t("lowercase","types");
x.t("removes","invalid");
x.t("removes","character");
x.t("default","lists");
x.t("default","type");
x.t("automatically","creates");
x.t("needed","feature");
x.t("link","directly");
x.t("new","complex");
x.t("new","packagename.myschema.element1");
x.t("new","simple");
x.t("new","schema.person");
x.t("new","address");
x.t("new","syntax");
x.t("new","top-level");
x.t("new","schema.types.complex.phone");
x.t("new","types");
x.t("new","my.package.xsdname.elements.address");
x.t("new","schema.element1");
x.t("element","complex");
x.t("element","exist");
x.t("element","instance");
x.t("element","always");
x.t("element","name=");
x.t("element","declared");
x.t("element","type");
x.t("element","property");
x.t("element","list");
x.t("element","childname");
x.t("element","simple");
x.t("element","definition");
x.t("element","name");
x.t("element","declarations");
x.t("element","incompatible");
x.t("element","attribute");
x.t("element","syntax");
x.t("element","xml");
x.t("element","reference");
x.t("element","child2_elem");
x.t("element","value");
x.t("element","defined");
x.t("element","called");
x.t("element","either");
x.t("element","definitions");
x.t("element","names");
x.t("element","contains");
x.t("element","object");
x.t("access","original");
x.t("access","element");
x.t("access","child");
x.t("access","object");
x.t("getting","setting");
x.t("objects","properties");
x.t("objects","gosu");
x.t("want","create");
x.t("want","although");
x.t("want","cases");
x.t("items","list");
x.t("items","automatic");
x.t("think","representing");
x.t("start","characters");
x.t("start","initial");
x.t("/xsd:element","/xsd:schema");
x.t("/xsd:element","/xsd:sequence");
x.t("/xsd:element","xsd");
x.t("java.lang.integer","xml.child2");
x.t("java.lang.integer","child");
x.t("p.areacode","415");
x.t("e.work","//");
x.t("document","element");
x.t("document","instead");
x.t("document","schema");
x.t("document","although");
x.t("includes","no");
x.t("includes","word");
x.t("choice","defines");
x.t("choice","xsd:choice");
x.t("top","level");
x.t("packagename.myschema.element1","var");
x.t("size","list");
x.t("/xsd:choice","/xsd:complextype");
x.t("messsage","gosu");
x.t("file","hierarchy");
x.t("file","path");
x.t("file","system");
x.t("able","want");
x.t("indicates","properties");
x.t("list","example");
x.t("list","integers");
x.t("list","properties");
x.t("list","exist");
x.t("list","xsd:list");
x.t("list","type");
x.t("list","however");
x.t("list","property");
x.t("list","assign");
x.t("list","addresses");
x.t("list","zero");
x.t("list","exists");
x.t("list","equivalent");
x.t("list","index");
x.t("list","upon");
x.t("list","integer");
x.t("need","schema");
x.t("standards","packages");
x.t("finds","invalid");
x.t("hyphen","gosu");
x.t("strict","valid");
x.t("childname","however");
x.t("childname","property");
x.t("childname","childname_elem");
x.t("childname","cannot");
x.t("childname","represent");
x.t("qualities","references");
x.t("maxoccurs","property\u2019s");
x.t("maxoccurs","attribute");
x.t("maxoccurs","greater");
x.t("group","names");
x.t("group","contains");
x.t("add","element");
x.t("add","attributes");
x.t("during","parsing");
x.t("assign","complex");
x.t("assign","element");
x.t("assign","list");
x.t("assign","phone");
x.t("assignment","becomes");
x.t("assignment","even");
x.t("guide","gosu");
x.t("harder","understand");
x.t("simple","type");
x.t("simple","underscore");
x.t("simple","types");
x.t("simple","content");
x.t("xsd:sequence","xsd:element");
x.t("xsd:sequence","maxoccurs=");
x.t("xsd:sequence","xsd");
x.t("recommended","xsd");
x.t("xml-related","gosu");
x.t("xml-related","code");
x.t("remember","reference");
x.t("become","lowercase");
x.t("become","list");
x.t("pathfromroot_elementname","example");
x.t("pathfromroot_elementname","important");
x.t("util.schemaaccess","special");
x.t("possibility","exists");
x.t("directly","assign");
x.t("directly","page");
x.t("writing","xml-related");
x.t("circumstances","property");
x.t("requires","no");
x.t("converts","invalid");
x.t("true","size");
x.t("unbounded","xsd:element");
x.t("unbounded","/xsd:sequence");
x.t("text_val.focus","text_val.select");
x.t("path","root");
x.t("path","pathfromroot");
x.t("path","schema");
x.t("path","claimcenter/modules/configuration/gsrc/mycompany/schemas");
x.t("name","embeds");
x.t("name","element.childname");
x.t("name","parentname");
x.t("name","address");
x.t("name","schema");
x.t("name","appear");
x.t("name","although");
x.t("name","context");
x.t("name","gets");
x.t("element.childname","property");
x.t("element.childname","child");
x.t("definition","complex");
x.t("definition","example");
x.t("definition","type");
x.t("definition","inside");
x.t("definition","element");
x.t("definition","top");
x.t("definition","simple");
x.t("definition","attribute");
x.t("definition","language");
x.t("definition","n/a");
x.t("definition","causes");
x.t("definition","either");
x.t("definition","following");
x.t("definition","xsd");
x.t("no","type");
x.t("no","simple");
x.t("no","characters");
x.t("no","changes");
x.t("no","defined");
x.t("property\u2019s","type");
x.t("common","pattern");
x.t("myprop2","myprop3");
x.t("creating","xml");
x.t("[1]","xml.child1");
x.t("gosu","create");
x.t("gosu","performs");
x.t("gosu","creates");
x.t("gosu","declared");
x.t("gosu","packages");
x.t("gosu","whenever");
x.t("gosu","removes");
x.t("gosu","default");
x.t("gosu","automatically");
x.t("gosu","finds");
x.t("gosu","converts");
x.t("gosu","syntax");
x.t("gosu","appends");
x.t("gosu","xml");
x.t("gosu","changes");
x.t("gosu","simply");
x.t("gosu","reference");
x.t("gosu","code");
x.t("gosu","java");
x.t("gosu","null");
x.t("gosu","exposes");
x.t("gosu","generated");
x.t("gosu","context");
x.t("gosu","behaves");
x.t("gosu","classes");
x.t("gosu","special");
x.t("gosu","xsd");
x.t("gosu","load");
x.t("gosu","naming");
x.t("references","top-level");
x.t("a_b","fully-qualified");
x.t("a_b","note");
x.t("follows","element");
x.t("myprop3","xsd");
x.t("schema.person","e.cell.areacode");
x.t("schema.person","e.cell");
x.t("schema.person","var");
x.t("addresses","following");
x.t("declares","new");
x.t("declares","element");
x.t("parentname","childname");
x.t("childname_elem","every");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("methods","xmlelement");
x.t("further","remember");
x.t("xsd:choice","xsd:element");
x.t("xsd:choice","xsd");
x.t("inner","classes");
x.t(".anonymous.types.complex","pathfromroot");
x.t("prominent","aspect");
x.t("zero","[0]");
x.t("exists","syntax");
x.t("exists","child");
x.t("declarations","xsd");
x.t("namespace","class");
x.t("phone","xsd:sequence");
x.t("phone","xsd:element");
x.t("phone","number");
x.t("phone","/xsd:sequence");
x.t("phone","numbers");
x.t("web","service");
x.t("decide","add");
x.t("produced","type");
x.t("childelement","list");
x.t("address","xsd");
x.t("address","child");
x.t("address","element.address");
x.t("itemtype=","xsd:int");
x.t("natural","property");
x.t("natural","gosu");
x.t("xsd:element","name=");
x.t("e.cell.mainnumber","555-1213");
x.t("incompatible","example");
x.t("incompatible","assignment");
x.t("shorthand","syntax");
x.t("understand","example");
x.t("understand","getting");
x.t("attribute","example");
x.t("attribute","instance");
x.t("attribute","property");
x.t("attribute","definition");
x.t("attribute","path");
x.t("attribute","value");
x.t("three","element");
x.t("three","different");
x.t("three","types");
x.t("cell","number");
x.t("cell","type=");
x.t("contain","reference");
x.t("characters","no");
x.t("characters","gosu");
x.t("characters","remain");
x.t("characters","intermediate");
x.t("remain","gosu");
x.t("e.home","//");
x.t("xml.child1","xml.print");
x.t("xml.child1","[1]");
x.t("xml.child1","null");
x.t("xml.child1","[0]");
x.t("xml.child1","[2]");
x.t("quality","distinguishes");
x.t("pathfromroot","example");
x.t("pathfromroot","path");
x.t("pathfromroot","a_b");
x.t("pathfromroot","note");
x.t("child1","/child1");
x.t("child1","type");
x.t("child1","property");
x.t("child1","xml");
x.t("child1","--");
x.t("child1","type=");
x.t("child1","xsd:simpletype");
x.t("child1","//");
x.t("xml.child2","xml.print");
x.t("xml.child2","//");
x.t("e.cell.areacode","415");
x.t("error","cannot");
x.t("error","occurred");
x.t("strongly","recommended");
x.t("point","further");
x.t("child2","/child2");
x.t("child2","type");
x.t("child2","property");
x.t("child2","element");
x.t("child2","xml");
x.t("child2","type=");
x.t("child2","//");
x.t("review","following");
x.t("415","e.cell.mainnumber");
x.t("415","p.mainnumber");
x.t("contrast","want");
x.t("equivalent","adding");
x.t("syntax","element.propertyname");
x.t("syntax","access");
x.t("syntax","element");
x.t("syntax","creating");
x.t("syntax","gosu");
x.t("syntax","error");
x.t("syntax","inserting");
x.t("suppose","want");
x.t("suppose","element");
x.t("suppose","top");
x.t("suppose","three");
x.t("suppose","following");
x.t("suppose","xsd");
x.t("suppose","child");
x.t("know","type");
x.t("automatic","insertion");
x.t("intermediate","xml");
x.t("intermediate","layers");
x.t("(wsdl)","document");
x.t(".types.simple","typename");
x.t("transforms","list");
x.t("appends","numbers");
x.t("416","e.work.mainnumber");
x.t("1.0","element1");
x.t("top-level","complex");
x.t("top-level","type");
x.t("top-level","element");
x.t("top-level","simple");
x.t("top-level","schema.elementname");
x.t("means","list");
x.t(".anonymous.attributes","a_b_c");
x.t(".anonymous.attributes","pathfromroot");
x.t("schemas","during");
x.t("first","insertion");
x.t("first","character");
x.t("417","e.home.mainnumber");
x.t("e.home.mainnumber","555-1215");
x.t("feature","significantly");
x.t("guidewire_selectall","var");
x.t("cause","gosu");
x.t("number","example");
x.t("number","home");
x.t("number","multiple");
x.t("number","element");
x.t("number","simple");
x.t("number","gosu");
x.t("number","suppose");
x.t("occurrence","declared");
x.t(".types.complex","typename");
x.t("function","guidewire_selectall");
x.t("parent","child");
x.t("underscore","change");
x.t("underscore","characters");
x.t("underscore","duplicates");
x.t("underscore","entirely");
x.t("design","later");
x.t("schema.types.complex.phone","p.areacode");
x.t("cannot","create");
x.t("cannot","assign");
x.t("cannot","xsd");
x.t("represents","element");
x.t("represents","phone");
x.t("represents","fully-qualified");
x.t("different","contexts");
x.t("different","element");
x.t("different","phone");
x.t("different","element-based");
x.t("whether","property");
x.t("whether","list");
x.t("insertion","lists");
x.t("insertion","true");
x.t("insertion","words");
x.t("insertion","insertion");
x.t("insertion","xml");
x.t("insertion","{xml.child1.count}");
x.t("define","inner");
x.t("may","element");
x.t("normalization","gosu");
x.t("normalization","capitalization");
x.t("normalization","names");
x.t("person","xsd:complextype");
x.t("words","add");
x.t("words","suppose");
x.t("powerful","xml");
x.t("starting","claimcenter/modules/configuration/gsrc");
x.t("java.util.list","parameterized");
x.t("aware","gosu");
x.t("row","examples");
x.t("language","(wsdl)");
x.t("instead","property");
x.t("instead","gosu");
x.t("capitalization","conform");
x.t("examples.pl.gosu.xml","xsd:schema");
x.t("xsd:string","xsd:element");
x.t("xsd:string","/xsd:sequence");
x.t("ways","want");
x.t("e.work.areacode","416");
x.t("p.mainnumber","555-1212");
x.t("e.cell.$typeinstance","e.work.$typeinstance");
x.t("index","equal");
x.t("index","assignment");
x.t("index","notation");
x.t("types","example");
x.t("types","properties");
x.t("types","derived");
x.t("types","type");
x.t("types","tends");
x.t("types","element");
x.t("types","start");
x.t("types","gosu");
x.t("types","phone");
x.t("types","attribute");
x.t("types","function");
x.t("types","powerful");
x.t("types","important");
x.t("types","mutually");
x.t("types","represent");
x.t("types","defined");
x.t("types","based");
x.t("types","following");
x.t("types","xsds");
x.t("types","containing");
x.t("types","xsd-based");
x.t("types","object");
x.t("xml","version=");
x.t("xml","property");
x.t("xml","new");
x.t("xml","objects");
x.t("xml","document");
x.t("xml","gosu");
x.t("xml","child1");
x.t("xml","child2");
x.t("xml","code");
x.t("xml","child2_elem");
x.t("xml","generate");
x.t("xml","elements");
x.t("xml","xsd-based");
x.t("rightmost","column");
x.t("changes","example");
x.t("changes","simply");
x.t("capitals","properties");
x.t("capitals","type");
x.t("important","distinctions");
x.t("important","however");
x.t("important","property");
x.t("important","need");
x.t("important","quality");
x.t("important","know");
x.t("important","note");
x.t("important","concepts");
x.t("(1)","simple");
x.t("simply","prepends");
x.t("simply","renames");
x.t("simply","type");
x.t("simply","change");
x.t("simply","add");
x.t("initial","capitals");
x.t("element-based","types");
x.t("works","simple");
x.t("reference","backing");
x.t("reference","new");
x.t("reference","element");
x.t("reference","guide");
x.t("reference","path");
x.t("reference","phone");
x.t("reference","xsd");
x.t("code","example");
x.t("code","creates");
x.t("code","requires");
x.t("code","significantly");
x.t("code","without");
x.t("code","var");
x.t("elementa","elementb");
x.t("rows","contain");
x.t(".elements","elementname");
x.t("invalid","within");
x.t("invalid","characters");
x.t("invalid","first");
x.t("invalid","character");
x.t("myprop","myprop2");
x.t("level","type");
x.t("level","hierarchy");
x.t("level","element");
x.t("level","top");
x.t("level","group");
x.t("level","schema");
x.t("level","lower");
x.t("level","names");
x.t("elementb","declared");
x.t("elementb","gosu");
x.t("fully","qualified");
x.t("slightly","differently");
x.t("child2_elem","property");
x.t("child2_elem","//");
x.t("element.children","element.getchild");
x.t("schema","referencing");
x.t("schema",".anonymous.elements");
x.t("schema","elementname");
x.t("schema","anonymous.elements");
x.t("schema",".anonymous.types.simple");
x.t("schema","access");
x.t("schema","util.schemaaccess");
x.t("schema","definition");
x.t("schema",".anonymous.types.complex");
x.t("schema","produced");
x.t("schema",".types.simple");
x.t("schema",".anonymous.attributes");
x.t("schema",".types.complex");
x.t("schema","represents");
x.t("schema","important");
x.t("schema",".elements");
x.t("schema","schema");
x.t("schema","include");
x.t("schema","analogy");
x.t("schema","location");
x.t("schema","xsd");
x.t("schema",".attributes");
x.t("appear","once");
x.t("appear","multiple");
x.t("lower","top");
x.t("lower","level");
x.t("lower","levels");
x.t("simplecontent","simply");
x.t("/xsd:schema","review");
x.t("/xsd:schema","suppose");
x.t("/xsd:schema","code");
x.t("/xsd:schema","output");
x.t("embedded","complex");
x.t("embedded","simple");
x.t("greater","property\u2019s");
x.t("greater","child");
x.t("java","define");
x.t("n/a","schema");
x.t("actual","examples");
x.t("e.home.areacode","417");
x.t("accesses","element\u2019s");
x.t("upon","first");
x.t("occurred","messsage");
x.t("less","typesafe");
x.t("shortcuts","inserting");
x.t("element.childname_elem","property");
x.t("compared","backing");
x.t("null","xml.child2");
x.t("null","words");
x.t("configuration","module");
x.t("instances","suppose");
x.t("instances","xml");
x.t("instances","compared");
x.t("qualified","type");
x.t("layers","may");
x.t("discussion","list");
x.t("include","schema");
x.t("easier","read");
x.t("named","childname");
x.t("named","child2");
x.t("terminology","understanding");
x.t("value","rather");
x.t("value","list");
x.t("value","design");
x.t("value","greater");
x.t("value","child");
x.t("similar","gosu");
x.t("additional","schemas");
x.t("unusual","case");
x.t("mutually","incompatible");
x.t("my.package.xsdname.elements.address","note");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("several","rows");
x.t("--","default");
x.t("--","xsd");
x.t("element\u2019s","backing");
x.t("element\u2019s","$typeinstance");
x.t("generate","xsd");
x.t("claimcenter/modules/configuration/gsrc/mycompany/schemas","gosu");
x.t("generated","properties");
x.t("generated","type");
x.t("generated","name");
x.t("generated","types");
x.t("generated","xsd-based");
x.t("xmlelement","instance");
x.t("xmlelement","child2");
x.t("xmlelement","element.children");
x.t("xsd:anytype","--");
x.t("xsd:anytype","xsd");
x.t("exposes","property");
x.t("exposes","list");
x.t("exposes","shortcuts");
x.t("analogy","similar");
x.t("type=","phone");
x.t("type=","xsd:string");
x.t("type=","xsd:int");
x.t("worry","whether");
x.t("{xml.child1.count}","xml.print");
x.t("{xml.child1.count}","xml.child1");
x.t("valid","example");
x.t("valid","xml");
x.t("read","understand");
x.t("read","xsd");
x.t("although","easier");
x.t("although","cases");
x.t("although","package");
x.t("represent","address");
x.t("represent","individual");
x.t("represent","names");
x.t("represent","child");
x.t("says","property");
x.t("word","anonymous");
x.t("conform","gosu");
x.t("areacode","type=");
x.t("[0]","array/list");
x.t("[0]","new");
x.t("[0]","childelement");
x.t("[0]","xml.child1");
x.t("notation","property");
x.t("page","error");
x.t("location","new");
x.t("attributename","lower");
x.t("context","hyphen");
x.t("context","gosu");
x.t("/xsd:sequence","/xsd:complextype");
x.t("/xsd:sequence","/xsd:choice");
x.t("output","insertion");
x.t("output","xml");
x.t("data","strongly");
x.t("module","gosu");
x.t("optional","definitions");
x.t("becomes","list");
x.t("becomes","insertion");
x.t("becomes","list-based");
x.t("schema.elementname","element");
x.t("schema.elementname","important");
x.t("behaves","slightly");
x.t("_elem","suffix");
x.t("duplicates","gosu");
x.t("xsd:schema","xmlns:xsd=");
x.t("maxoccurs=","unbounded");
x.t("schema.element1","xml.child1");
x.t("schema.element1","print");
x.t("appropriate","gosu");
x.t("examples","illustrate");
x.t("examples","try");
x.t("examples","suppose");
x.t("examples","occurrence");
x.t("examples","reference");
x.t("examples","examples");
x.t("examples","xsd");
x.t("$typeinstance","property");
x.t("defined","top-level");
x.t("defined","level");
x.t("defined","lower");
x.t("defined","names");
x.t("distinguishes","types");
x.t("placeholder","text");
x.t("removing","start");
x.t("e.cell","e.work");
x.t("e.cell","//");
x.t("claimcenter/modules/configuration/gsrc","example");
x.t("significantly","improve");
x.t("significantly","easier");
x.t("values","elements");
x.t("implicitly","refers");
x.t("utility","object");
x.t("disallowed","removed");
x.t("letter","gosu");
x.t("case","removing");
x.t("case","child");
x.t("structure","within");
x.t("fully-qualified","type");
x.t("fully-qualified","path");
x.t("called","pathfromroot");
x.t("called","elementa");
x.t("called","contains");
x.t("element.attributename","unlike");
x.t("character","uppercase");
x.t("character","uppercases");
x.t("character","lowercase");
x.t("character","first");
x.t("character","underscore");
x.t("character","invalid");
x.t("character","unusual");
x.t("character","otherwise");
x.t("character","following");
x.t("e.home.$typeinstance","element\u2019s");
x.t("print","----------");
x.t("print","insertion");
x.t("xsd:simpletype","xsd:list");
x.t("classes","within");
x.t("classes","organized");
x.t("note","complex");
x.t("note","every");
x.t("note","necessary");
x.t("note","simple");
x.t("note","following");
x.t("note","xsds");
x.t("column","indicates");
x.t("integer","maxoccurs");
x.t("integer","means");
x.t("two","properties");
x.t("otherwise","valid");
x.t("mainnumber","type=");
x.t("readability","xml-related");
x.t("based","names");
x.t("cases","able");
x.t("cases","gosu");
x.t("cases","optional");
x.t("work","number");
x.t("work","type=");
x.t("inserting","items");
x.t("imply","elements");
x.t("numeric","digit");
x.t("element1","xsd:complextype");
x.t("element1","child1");
x.t("element1","child2");
x.t("object\u2019s","value");
x.t("e.work.$typeinstance","e.home.$typeinstance");
x.t("package","mycompany.schemas");
x.t("package","includes");
x.t("package","file");
x.t("package","examples.pl.gosu.xml");
x.t("causes","gosu");
x.t("numbers","example");
x.t("numbers","multiple");
x.t("numbers","cell");
x.t("numbers","code");
x.t("numbers","work");
x.t("xsd:int","maxoccurs");
x.t("xsd:int","xsd:sequence");
x.t("xsd:int","/xsd:sequence");
x.t("xsd:int","maxoccurs=");
x.t("xsd:int","/xsd:simpletype");
x.t("immediately","table");
x.t("entirely","invalid");
x.t("subclass","xmlelement");
x.t("list-based","property");
x.t("system","element");
x.t("system","level");
x.t("elements","needed");
x.t("elements","simple");
x.t("elements","become");
x.t("elements","name");
x.t("elements","no");
x.t("elements","rightmost");
x.t("elements","important");
x.t("elements","code");
x.t("elements","appear");
x.t("elements","less");
x.t("elements","represent");
x.t("elements","names");
x.t("following","table");
x.t("following","qualities");
x.t("following","gosu");
x.t("following","child1");
x.t("following","code");
x.t("following","xsd:schema");
x.t("following","letter");
x.t("following","character");
x.t("following","xsd");
x.t("corresponding","instance");
x.t("either","complex");
x.t("either","simple");
x.t("either","(1)");
x.t("either","simply");
x.t("individual","element");
x.t("anonymous","fully");
x.t("anonymous","imply");
x.t("separated","underscore");
x.t("service","definition");
x.t("special","shorthand");
x.t("special","utility");
x.t("digit","gosu");
x.t("using","$typeinstance");
x.t("using","xsds");
x.t("using","xsd");
x.t("setting","values");
x.t("understanding","gosu");
x.t("xsds","properties");
x.t("xsds","gosu");
x.t("xsds","following");
x.t("containing","text");
x.t("class","several");
x.t("//","child1");
x.t("//","child2");
x.t("//","syntax");
x.t("//","xml");
x.t("//","schema.anonymous.elements.element1_child2");
x.t("555-1212","e.cell.$typeinstance");
x.t("555-1212","e.cell");
x.t("additionally","different");
x.t("[2]","print");
x.t("xsd-based","properties");
x.t("xsd-based","names");
x.t("xsd","properties");
x.t("xsd","defines");
x.t("xsd","files");
x.t("xsd","describes");
x.t("xsd","various");
x.t("xsd","topic");
x.t("xsd","tell");
x.t("xsd","look");
x.t("xsd","basic");
x.t("xsd","type");
x.t("xsd","complextype");
x.t("xsd","put");
x.t("xsd","element");
x.t("xsd","choice");
x.t("xsd","file");
x.t("xsd","list");
x.t("xsd","maxoccurs");
x.t("xsd","declares");
x.t("xsd","types");
x.t("xsd","xml");
x.t("xsd","works");
x.t("xsd","instances");
x.t("xsd","generated");
x.t("xsd","data");
x.t("xsd","xsd:schema");
x.t("xsd","appropriate");
x.t("xsd","package");
x.t("xsd","corresponding");
x.t("xsd","using");
x.t("xsd","associated");
x.t("xsd","names");
x.t("levels","schema");
x.t("555-1213","e.work.areacode");
x.t("adding","element");
x.t("load","xsd");
x.t("names","element");
x.t("names","group");
x.t("names","simple");
x.t("names","gosu");
x.t("names","prominent");
x.t("names","attribute");
x.t("names","parent");
x.t("names","row");
x.t("names","important");
x.t("names","elementa");
x.t("names","structure");
x.t("names","cases");
x.t("names","separated");
x.t("names","contains");
x.t("child","element");
x.t("child","instead");
x.t("child","named");
x.t("child","elements");
x.t("element.getchild","childname");
x.t("without","_elem");
x.t("without","xsd");
x.t("definitions","cause");
x.t("definitions","reference");
x.t("definitions","xsd");
x.t("associated","type");
x.t("associated","xsd");
x.t("transform","list");
x.t("simpletype","later");
x.t("simpletype","element");
x.t("schema.anonymous.elements.element1_child1","subclass");
x.t("schema.anonymous.elements.element1_child1","var");
x.t("555-1214","e.home.areacode");
x.t("/xsd:simpletype","/xsd:element");
x.t("var","child2elem");
x.t("var","new");
x.t("var","text_val=eval");
x.t("var","child1");
x.t("var","child2");
x.t("var","xml");
x.t("parameterized","type");
x.t(".attributes","attributename");
x.t("suffix","case");
x.t("suffix","contains");
x.t("schema.anonymous.elements.element1_child2","note");
x.t("schema.anonymous.elements.element1_child2","xsd");
x.t("555-1215","contrast");
x.t("representing","schema");
x.t("naming","standards");
x.t("removed","gosu");
x.t("even","associated");
x.t("element.address","property");
x.t("element.address","[0]");
x.t("concepts","xsd");
x.t("object","wish");
x.t("object","instance");
x.t("object","providing");
x.t("object","schema");
x.t("object","xmlelement");
x.t("object","defined");
x.t("contains","element");
x.t("contains","invalid");
x.t("contains","embedded");
x.t("contains","child");
x.t("typename","lower");
x.t("content","anywhere");
x.t("content","common");
x.t("content","_elem");
x.t("content","child");
x.t("attributes","element");
x.t("attributes","simpletype");
x.t("item","simple");
x.t("gets","object\u2019s");
}
