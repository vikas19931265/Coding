function FileData_Pairs(x)
{
x.t("example","enclosing");
x.t("example","name");
x.t("example","enumeration");
x.t("example","search");
x.t("example","suppose");
x.t("example","schema");
x.t("example","xsd");
x.t("looks","local");
x.t("properties","generated");
x.t("properties","enhancements");
x.t("properties","subelements");
x.t("provide","xsd");
x.t("safer","treating");
x.t("exist","need");
x.t("available","generated");
x.t("method","method");
x.t("method","asutfstring");
x.t("method","transforms");
x.t("method","node");
x.t("possible","enumeration");
x.t("possible","child");
x.t("prepends","underscore");
x.t("normalized","name");
x.t("xsd:list","always");
x.t("/xsd:restriction","/xsd:simpletype");
x.t("ref=","test1");
x.t("ref=","test2");
x.t("defines","enumeration");
x.t("defines","package");
x.t("defines","xsd");
x.t("asutfstring","method");
x.t("restriction","defines");
x.t("restriction","color");
x.t("just","element");
x.t("converted","underscore");
x.t("xsd:integer","xsd:attribute");
x.t("files","file");
x.t("every","complextype");
x.t("every","class");
x.t("every","simpletype");
x.t("within","gosu");
x.t("tree","enumerated");
x.t("tree","xml");
x.t("tree","untyped");
x.t("create","in-line");
x.t("create","directory");
x.t("example.pkg","called");
x.t("static","properties");
x.t("static","parse");
x.t("contact","guidewire");
x.t("green","/xsd:restriction");
x.t("related","entities");
x.t("source","validate");
x.t("source","code");
x.t("once","text");
x.t("once","gosu");
x.t("once","appears");
x.t("enum","instance");
x.t("instance","following");
x.t("always","converts");
x.t("impose","restrictions");
x.t("name=","simpletest");
x.t("name=","color");
x.t("name=","id");
x.t("name=","test1");
x.t("name=","test2");
x.t("name=","test3");
x.t("name=","test4");
x.t("name=","final");
x.t("name=","testtype");
x.t("name=","number");
x.t("simpletest","xsd:complextype");
x.t("node\u2019s","text");
x.t("enumerations","gosu");
x.t("subpackage","suffix");
x.t("enclosing","type");
x.t("enclosing","element");
x.t("limits","xsd:list");
x.t("current","xml");
x.t("trees","using");
x.t("discussed","legacy");
x.t("version=","1.0");
x.t("xsd:complextype","name=");
x.t("xsd:complextype","xsd:sequence");
x.t("creates","tentative");
x.t("questions","gosu");
x.t("helps","example");
x.t("sequences","appear");
x.t("uses","just");
x.t("uses","name");
x.t("until","name");
x.t("text_val.select","link");
x.t("errors","due");
x.t("tell","gosu");
x.t("tell","claimcenter");
x.t("interface","gw.xml");
x.t("support","features");
x.t("support","loading");
x.t("support","qualified");
x.t("http://www.w3.org/2001/xmlschema","xsd:simpletype");
x.t("/xsd:complextype","/xsd:element");
x.t("/xsd:complextype","xsd:element");
x.t("type","myaddress");
x.t("type","name");
x.t("type","definition");
x.t("type","contrast");
x.t("type","define");
x.t("type","loader");
x.t("type","enums");
x.t("type","named");
x.t("type","classes");
x.t("type","system");
x.t("type","anonymous");
x.t("type","class");
x.t("type","definitions");
x.t("type","generates");
x.t("complextype","property");
x.t("complextype","simpletype");
x.t("times","appears");
x.t("type\u2019s","name");
x.t("hierarchy","defines");
x.t("hierarchy","next");
x.t("hierarchy","configuration");
x.t("hierarchy","location");
x.t("xmlns:xsd=","http://www.w3.org/2001/xmlschema");
x.t("extend","ixmlnode");
x.t("multiple","times");
x.t("myaddress","element");
x.t("however","importing");
x.t("parsing","specific");
x.t("apis","current");
x.t("apis","structured");
x.t("apis","gosu");
x.t("apis","collection-like");
x.t("apis","manipulating");
x.t("apis","xmlnode");
x.t("structured","xml");
x.t("require","xsd");
x.t("put","xsds");
x.t("put","xsd");
x.t("entities","load");
x.t("property","attribute");
x.t("property","lastly");
x.t("property","accessing");
x.t("property","appropriate");
x.t("text","value");
x.t("text","child");
x.t("three-step","process");
x.t("limitations","xsd");
x.t("guidewire","professional");
x.t("link","directly");
x.t("differences","current");
x.t("differences","legacy");
x.t("objects","properties");
x.t("objects","cannot");
x.t("/xsd:element","xsd:complextype");
x.t("/xsd:element","/xsd:schema");
x.t("mycompany/messaging/mydata.xsd","package");
x.t("element","tree");
x.t("element","type");
x.t("element","name");
x.t("element","part");
x.t("element","occurs");
x.t("element","define");
x.t("element","child");
x.t("element","occur");
x.t("new","type");
x.t("new","class");
x.t("certain","rules");
x.t("start","letter");
x.t("document","approach");
x.t("color","/xsd:complextype");
x.t("color","type");
x.t("color","xsd:element");
x.t("color","type=");
x.t("color","xsd:restriction");
x.t("mycompany.messaging.mydata.enums.colorenum","generated");
x.t("choice","permits");
x.t("messsage","gosu");
x.t("lets","read");
x.t("file","provide");
x.t("file","source");
x.t("file","hierarchy");
x.t("file","path");
x.t("file","gosu");
x.t("file","inputstream");
x.t("file","claimcenter/modules/pl/config/registry/compatibility-xsd.xml");
x.t("file","approach");
x.t("file","section");
x.t("file","xml");
x.t("file","known");
x.t("file","explaining");
x.t("base=","xsd:string");
x.t("need","create");
x.t("need","modify");
x.t("mycompany.messaging.mydata.color","gosu");
x.t("ixmlnode","available");
x.t("ixmlnode","interface");
x.t("list","appropriate");
x.t("normalizes","name");
x.t("http","place");
x.t("http","maximum");
x.t("http","links");
x.t("incorrect","types");
x.t("incorrect","structure");
x.t("id","type=");
x.t("add","entry");
x.t("add","previous");
x.t("add","elements");
x.t("add","xsd");
x.t("unsupported","xsd");
x.t("guide","gosu");
x.t("applies","legacy");
x.t("applies","complicated");
x.t("api","differences");
x.t("api","legacy");
x.t("due","incorrect");
x.t("xsd:sequence","xsd:element");
x.t("entry","xsd");
x.t("validate","xml");
x.t("remember","add");
x.t("parse","methods");
x.t("parse","xml");
x.t("parse","main");
x.t("features","xsd");
x.t("directly","gosu");
x.t("directly","page");
x.t("requires","xml");
x.t("xsd:enumeration","value=");
x.t("unbounded","xsd:element");
x.t("unbounded","/xsd:sequence");
x.t("desired","location");
x.t("converts","string");
x.t("text_val.focus","text_val.select");
x.t("strongly-typed","gosu");
x.t("strongly-typed","xml");
x.t("strongly-typed","node");
x.t("definition","element");
x.t("definition","file");
x.t("definition","gosu");
x.t("definition","class");
x.t("test1","xsd:element");
x.t("test1","type=");
x.t("test1","/xsd:sequence");
x.t("creating","directories");
x.t("path","next");
x.t("path","claimcenter/modules/configuration/gsrc/");
x.t("name","example");
x.t("name","enclosing");
x.t("name","type");
x.t("name","start");
x.t("name","conflicts");
x.t("name","gosu");
x.t("name","myphone");
x.t("name","underscore");
x.t("name","unique");
x.t("name","types");
x.t("name","schema");
x.t("name","taken");
x.t("name","already");
x.t("name","conform");
x.t("name","otherwise");
x.t("name","class");
x.t("name","myaddress_myphone");
x.t("name","xsd");
x.t("gw.xml","package");
x.t("no","additional");
x.t("conflicts","using");
x.t("gosu","looks");
x.t("gosu","prepends");
x.t("gosu","static");
x.t("gosu","create");
x.t("gosu","uses");
x.t("gosu","type");
x.t("gosu","however");
x.t("gosu","parsing");
x.t("gosu","objects");
x.t("gosu","lets");
x.t("gosu","applies");
x.t("gosu","xsd:redefine");
x.t("gosu","hides");
x.t("gosu","loads");
x.t("gosu","next");
x.t("gosu","first");
x.t("gosu","cannot");
x.t("gosu","xml");
x.t("gosu","reference");
x.t("gosu","xsd:union");
x.t("gosu","tries");
x.t("gosu","generate");
x.t("gosu","classes");
x.t("gosu","package");
x.t("gosu","using");
x.t("gosu","xsd");
x.t("gosu","load");
x.t("gosu","generates");
x.t("references","following");
x.t("references","non-local");
x.t("test2","xsd:complextype");
x.t("test2","maxoccurs=");
x.t("iterate","findall");
x.t("findall","method");
x.t("collection-like","enhancements");
x.t("enumerated","type");
x.t("performance","reliability");
x.t("dramatically","reduces");
x.t("test3","type=");
x.t("mycompany.messaging.mydata.test2","mycompany.messaging.mydata.color");
x.t("enumeration","restriction");
x.t("enumeration","type");
x.t("enumeration","value");
x.t("enumeration","class");
x.t("part","type");
x.t("argument","parse");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("encoding=","utf-8");
x.t("test4","type=");
x.t("methods","properties");
x.t("methods","transform");
x.t("inputstream","node");
x.t("boolean","argument");
x.t("directories","manually");
x.t("namespace","attribute");
x.t("namespace","example.pkg.myschema");
x.t("generic","type");
x.t("place","copies");
x.t("professional","services");
x.t("final","type=");
x.t("loading","system");
x.t("loading","xsd");
x.t("search","iterate");
x.t("write","xml");
x.t("xsd:element","ref=");
x.t("xsd:element","name=");
x.t("target","location");
x.t("claimcenter","import");
x.t("claimcenter/modules/pl/config/registry/compatibility-xsd.xml","configuration");
x.t("mycompany.messaging.mydata.simpletest","mycompany.messaging.mydata.testtype");
x.t("allow","text");
x.t("string","static");
x.t("string","file");
x.t("string","gosu");
x.t("accessed","http");
x.t("copies","xsds");
x.t("local","resource");
x.t("xsd:redefine","unsupported");
x.t("attribute","possible");
x.t("attribute","gosu");
x.t("addition","gosu");
x.t("in-line","type");
x.t("in-line","definition");
x.t("in-line","gosu");
x.t("permits","several");
x.t("myphone","new");
x.t("characters","letter");
x.t("resource","name");
x.t("modeler","support");
x.t("legacy","xml");
x.t("legacy","xsd");
x.t("legal","structure");
x.t("legal","attributes");
x.t("compatibility-xsd.xml","file");
x.t("hides","child");
x.t("lastly","elements");
x.t("complicated","rules");
x.t("error","occurred");
x.t("contrast","strongly-typed");
x.t("contrast","child");
x.t("testtype","xsd:element");
x.t("testtype","xsd:attribute");
x.t("testtype","minoccurs=");
x.t("choices","xml");
x.t("1.0","encoding=");
x.t("red","xsd:enumeration");
x.t("loads","xsd");
x.t("suppose","add");
x.t("next","tell");
x.t("next","normalizes");
x.t("next","add");
x.t("next","xsd");
x.t("occurs","once");
x.t("transforms","element");
x.t("appears","property");
x.t("appears","list");
x.t("appears","package");
x.t("means","methods");
x.t("allowed","appear");
x.t("first","creates");
x.t("tentative","initial");
x.t("guidewire_selectall","var");
x.t("xsd:attribute","name=");
x.t("number","name");
x.t("number","type=");
x.t("importing","strongly-typed");
x.t("importing","xml");
x.t("function","enumerations");
x.t("function","guidewire_selectall");
x.t("approach","safer");
x.t("approach","require");
x.t("approach","requires");
x.t("approach","treating");
x.t("underscore","normalized");
x.t("underscore","character");
x.t("maximum","performance");
x.t("reliability","gosu");
x.t("words","put");
x.t("mycompany.messaging.mydata","next");
x.t("whether","named");
x.t("cannot","parse");
x.t("cannot","in-line");
x.t("define","new");
x.t("define","part");
x.t("unique","xsds");
x.t("against","xsd");
x.t("xsd:string","/xsd:complextype");
x.t("xsd:string","xsd:enumeration");
x.t("accessing","node\u2019s");
x.t("instead","gosu");
x.t("xml","every");
x.t("xml","source");
x.t("xml","trees");
x.t("xml","version=");
x.t("xml","apis");
x.t("xml","api");
x.t("xml","string");
x.t("xml","legacy");
x.t("xml","against");
x.t("xml","schema");
x.t("xml","data");
x.t("xml","information");
x.t("xml","untyped");
x.t("xml","system");
x.t("xml","using");
x.t("xml","xsd");
x.t("section","applies");
x.t("section","references");
x.t("types","tell");
x.t("types","incorrect");
x.t("types","gosu");
x.t("types","allow");
x.t("types","match");
x.t("types","generated");
x.t("types","used");
x.t("xsd:boolean","xsd:attribute");
x.t("directory","limitations");
x.t("directory","desired");
x.t("directory","main");
x.t("directory","already");
x.t("match","xsd");
x.t("format","choice");
x.t("handling","xsd");
x.t("restricted","within");
x.t("node","tree");
x.t("node","legacy");
x.t("node","approach");
x.t("node","classes");
x.t("important","creating");
x.t("important","load");
x.t("initial","name");
x.t("reference","guide");
x.t("reference","xsds");
x.t("correspond","legal");
x.t("reduces","errors");
x.t("code","management");
x.t("xsd.enums.colorenum","enumeration");
x.t("loader","follow");
x.t("follow","http");
x.t("fully","using");
x.t("schema","example");
x.t("schema","definition");
x.t("schema","words");
x.t("schema","package");
x.t("schema","elements");
x.t("known","xsd");
x.t("/xsd:schema","xsd");
x.t("previous","example");
x.t("appear","once");
x.t("appear","multiple");
x.t("appear","handling");
x.t("xsd:union","always");
x.t("occurred","messsage");
x.t("rules","example");
x.t("rules","nested");
x.t("taken","example");
x.t("taken","gosu");
x.t("taken","append");
x.t("tries","myaddress_myphone2");
x.t("tries","myaddress_myphone3");
x.t("configuration","module");
x.t("enums","subpackage");
x.t("qualified","attributes");
x.t("manipulating","xml");
x.t("value","property");
x.t("value","no");
x.t("value","types");
x.t("value","value");
x.t("additional","attributes");
x.t("named","gosu");
x.t("named","anonymous");
x.t("named","myaddress_myphone");
x.t("main","schema");
x.t("main","xsd");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("already","exist");
x.t("already","taken");
x.t("declaration","xsd");
x.t("several","elements");
x.t("specific","xsd");
x.t("type=","xsd:integer");
x.t("type=","color");
x.t("type=","testtype");
x.t("type=","xsd:string");
x.t("type=","xsd:boolean");
x.t("generated","possible");
x.t("generated","types");
x.t("generated","node");
x.t("generated","xsd");
x.t("import","xsd");
x.t("exposes","text");
x.t("generate","every");
x.t("process","gosu");
x.t("read","write");
x.t("represent","elements");
x.t("conform","certain");
x.t("page","error");
x.t("nodes","discussed");
x.t("nodes","dramatically");
x.t("nodes","untyped");
x.t("/xsd:sequence","xsd:attribute");
x.t("location","example.pkg");
x.t("location","remember");
x.t("location","directory");
x.t("location","generated");
x.t("location","xsd");
x.t("information","differences");
x.t("information","gosu");
x.t("information","importing");
x.t("treating","tree");
x.t("treating","xml");
x.t("data","untyped");
x.t("xsd:schema","xmlns:xsd=");
x.t("maxoccurs=","unbounded");
x.t("module","path");
x.t("module","gosu");
x.t("optional","boolean");
x.t("claimcenter/modules/configuration/gsrc/","mycompany/messaging/mydata.xsd");
x.t("defined","ixmlnode");
x.t("appropriate","element");
x.t("appropriate","generic");
x.t("nested","in-line");
x.t("blue","xsd:enumeration");
x.t("myschema.xsd","namespace");
x.t("letter","underscore");
x.t("letter","digit");
x.t("structure","document");
x.t("structure","note");
x.t("xsd:simpletype","name=");
x.t("called","myschema.xsd");
x.t("example.pkg.myschema","important");
x.t("enhancements","xml");
x.t("enhancements","defined");
x.t("children","gosu");
x.t("character","converted");
x.t("character","element");
x.t("character","gosu");
x.t("character","additionally");
x.t("specification","special");
x.t("note","contrast");
x.t("note","section");
x.t("classes","example");
x.t("classes","extend");
x.t("classes","file");
x.t("classes","function");
x.t("classes","known");
x.t("classes","generated");
x.t("classes","represent");
x.t("classes","grouping");
x.t("classes","xsd");
x.t("otherwise","name");
x.t("otherwise","gosu");
x.t("copy","file");
x.t("utf-8","xsd:schema");
x.t("minoccurs=","maxoccurs=");
x.t("package","related");
x.t("package","hierarchy");
x.t("package","name");
x.t("package","gosu");
x.t("package","means");
x.t("package","mycompany.messaging.mydata");
x.t("package","location");
x.t("causes","new");
x.t("locally","instead");
x.t("elements","example");
x.t("elements","asutfstring");
x.t("elements","impose");
x.t("elements","legal");
x.t("elements","compatibility-xsd.xml");
x.t("elements","appear");
x.t("untyped","node");
x.t("untyped","nodes");
x.t("used","helps");
x.t("following","example");
x.t("following","classes");
x.t("management","system");
x.t("system","example");
x.t("system","add");
x.t("system","copy");
x.t("system","using");
x.t("anonymous","addition");
x.t("anonymous","causes");
x.t("digit","underscore");
x.t("myaddress_myphone2","taken");
x.t("links","xsd");
x.t("special","limits");
x.t("using","three-step");
x.t("using","strongly-typed");
x.t("using","legacy");
x.t("using","optional");
x.t("using","xsds");
x.t("xsds","http");
x.t("xsds","directly");
x.t("xsds","accessed");
x.t("xsds","legacy");
x.t("xsds","function");
x.t("xsds","directory");
x.t("xsds","reference");
x.t("xsds","note");
x.t("class","every");
x.t("class","type");
x.t("class","mycompany.messaging.mydata.enums.colorenum");
x.t("class","name");
x.t("class","named");
x.t("class","generated");
x.t("class","information");
x.t("class","names");
x.t("additionally","characters");
x.t("myaddress_myphone3","until");
x.t("xmlnode","class");
x.t("xsd","defines");
x.t("xsd","files");
x.t("xsd","contact");
x.t("xsd","sequences");
x.t("xsd","support");
x.t("xsd","type\u2019s");
x.t("xsd","type");
x.t("xsd","put");
x.t("xsd","file");
x.t("xsd","need");
x.t("xsd","gosu");
x.t("xsd","references");
x.t("xsd","namespace");
x.t("xsd","loading");
x.t("xsd","mycompany.messaging.mydata.simpletest");
x.t("xsd","modeler");
x.t("xsd","choices");
x.t("xsd","appears");
x.t("xsd","words");
x.t("xsd","whether");
x.t("xsd","format");
x.t("xsd","directory");
x.t("xsd","important");
x.t("xsd","fully");
x.t("xsd","schema");
x.t("xsd","location");
x.t("xsd","specification");
x.t("xsd","otherwise");
x.t("xsd","package");
x.t("xsd","locally");
x.t("xsd","simpletype");
x.t("manually","target");
x.t("mycompany.messaging.mydata.testtype","mycompany.messaging.mydata.test2");
x.t("grouping","objects");
x.t("myaddress_myphone","element");
x.t("myaddress_myphone","already");
x.t("non-local","resources");
x.t("child","element");
x.t("child","allowed");
x.t("child","exposes");
x.t("child","elements");
x.t("/xsd:simpletype","xsd:element");
x.t("load","gosu");
x.t("load","xsd");
x.t("simpletype","defines");
x.t("simpletype","complextype");
x.t("simpletype","declaration");
x.t("occur","once");
x.t("transform","string");
x.t("names","types");
x.t("definitions","type");
x.t("append","number");
x.t("modify","xsd");
x.t("var","text_val=eval");
x.t("suffix","enum");
x.t("restrictions","restricted");
x.t("value=","green");
x.t("value=","red");
x.t("value=","blue");
x.t("generates","enumeration");
x.t("generates","xsd.enums.colorenum");
x.t("generates","classes");
x.t("generates","following");
x.t("subelements","correspond");
x.t("attributes","questions");
x.t("attributes","children");
x.t("attributes","child");
x.t("explaining","types");
x.t("xsd:restriction","base=");
x.t("resources","xsds");
}
