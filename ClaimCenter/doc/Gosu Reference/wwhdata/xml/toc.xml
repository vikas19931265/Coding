<?xml version="1.0" encoding="utf-8"?>
<WebWorksHelpTOC version="5.0" xmlns="urn:WebWorks-Help-TOC-Schema">
  <i t="About ClaimCenter Documentation" l="1">
    <i t="Conventions in This Document" l="1#2121726" />
    <i t="Support" l="1#2121769" />
  </i>
  <i t="Gosu Introduction" l="2">
    <i t="Welcome to Gosu" l="3">
      <i t="Control Flow" l="3#1437383" />
      <i t="Blocks" l="3#1469415" />
      <i t="Enhancements" l="3#1435182" />
      <i t="Collections" l="3#1441186" />
      <i t="Access to Java Types" l="3#1435102" />
      <i t="Gosu Classes and Properties" l="3#1440296" />
      <i t="Interfaces" l="3#1450798" />
      <i t="List and Array Expansion Operator *." l="3#1450589" />
      <i t="Comparisons" l="3#1452648" />
      <i t="Case Sensitivity" l="3#1450590" />
      <i t="Compound Assignment Statements" l="3#1454915" />
      <i t="Delegating Interface Implementation with Composition" l="3#1457296" />
      <i t="Concurrency" l="3#1456854" />
      <i t="Exceptions" l="3#1457070" />
      <i t="Annotations" l="3#1458452" />
      <i t="Gosu Templates" l="3#1457886" />
      <i t="XML and XSD Support" l="3#1460816" />
      <i t="Web Service Support (Consuming WSDL)" l="3#1460937" />
      <i t="Gosu Character Set" l="3#1484203" />
    </i>
    <i t="Running Gosu Programs and Calling Other Classes" l="4" />
    <i t="More About the Gosu Type System" l="5">
      <i t="Compile Time Error Prevention" l="6" />
      <i t="Type Inference" l="7" />
      <i t="Intelligent Code Completion and Other Gosu Editor Tools" l="8" />
      <i t="Null Safety for Properties and Other Operators" l="9" />
      <i t="Generics in Gosu" l="10" />
      <i t="Gosu Primitives Types" l="11" />
    </i>
    <i t="Gosu Case Sensitivity and Capitalization" l="12" />
    <i t="Gosu Statement Terminators" l="13" />
    <i t="Gosu Comments" l="14" />
    <i t="Gosu Reserved Words" l="15" />
    <i t="Gosu Generated Documentation (‘gosudoc’)" l="16" />
    <i t="Code Coverage Support" l="17" />
    <i t="Notable Differences Between Gosu and Java" l="18" />
    <i t="Get Ready for Gosu" l="19" />
  </i>
  <i t="Types" l="20">
    <i t="Access to Java Types" l="21" />
    <i t="Primitive Types" l="22" />
    <i t="Objects" l="23">
      <i t="Object Instantiation" l="23#1538265" />
      <i t="Object Property Assignment" l="23#1538294" />
      <i t="Object Property Access" l="23#1538306" />
      <i t="Object Methods" l="23#1551631" />
    </i>
    <i t="Boolean Values" l="24" />
    <i t="Sequences of Characters" l="25" />
    <i t="Array Types" l="26">
      <i t="List Access Using Array Index Notation" l="26#1535845" />
      <i t="Array Expansion" l="26#1535889" />
      <i t="Array-related Entity Methods" l="26#1550269" />
      <i t="Associative Array Syntax for Property Access" l="26#1535394" />
      <i t="Legacy Array Type" l="26#1537144" />
    </i>
    <i t="Numeric Literals" l="27" />
    <i t="Entity Types" l="28" />
    <i t="Typekeys and Typelists" l="29">
      <i t="Typelist Literals" l="29#1550330" />
      <i t="Typekey Literals" l="29#1550334" />
      <i t="Getting Information from a Typekey" l="29#1550368" />
    </i>
    <i t="Compatibility with Earlier Gosu Releases" l="30">
      <i t="DateTime" l="30#1540293" />
      <i t="Number" l="30#1541065" />
      <i t="Array" l="30#1490826" />
    </i>
  </i>
  <i t="Gosu Operators and Expressions" l="31">
    <i t="Gosu Operators" l="32">
      <i t="Operator Precedence" l="33" />
    </i>
    <i t="Standard Gosu Expressions" l="34" />
    <i t="Arithmetic Expressions" l="35" />
    <i t="Equality Expressions" l="36" />
    <i t="Evaluation Expressions" l="37" />
    <i t="Existence Testing Expressions" l="38" />
    <i t="Logical Expressions" l="39" />
    <i t="New Object Expressions" l="40" />
    <i t="Relational Expressions" l="41" />
    <i t="Unary Expressions" l="42" />
    <i t="Importing Types and Package Namespaces" l="43" />
    <i t="Conditional Ternary Expressions" l="44" />
    <i t="Special Gosu Expressions" l="45">
      <i t="Function Calls" l="46" />
      <i t="Static Method Calls" l="47" />
      <i t="Static Property Paths" l="48" />
      <i t="Entity and Typekey Type Literals" l="49" />
    </i>
    <i t="Handling Null Values In Expressions" l="50">
      <i t="Null-safe Property Access" l="50#1655840" />
      <i t="Null-safe Default Operator" l="50#1606622" />
      <i t="Null-safe Indexing for Arrays, Lists, and Maps" l="50#1598052" />
      <i t="Null-safe Math Operators" l="50#1597472" />
    </i>
  </i>
  <i t="Statements" l="51">
    <i t="Gosu Statements" l="52">
      <i t="Statement Lists" l="52#1440698" />
      <i t="New Is Optionally a Statement" l="52#1503805" />
    </i>
    <i t="Gosu Variables" l="53">
      <i t="Variable Type Declaration" l="53#1141530" />
      <i t="Variable Assignment" l="53#1453654" />
    </i>
    <i t="Gosu Conditional Execution and Looping" l="54">
      <i t="If - Else Statements" l="54#1142199" />
      <i t="For Statements" l="54#1456475" />
      <i t="While() Statements" l="54#1141335" />
      <i t="Do…While() Statements" l="54#1137579" />
      <i t="Switch() Statements" l="54#1137580" />
    </i>
    <i t="Gosu Functions" l="55">
      <i t="Named Arguments and Argument Defaults" l="55#1483902" />
      <i t="Public and Private Functions" l="55#1483028" />
    </i>
  </i>
  <i t="Exception Handling" l="56">
    <i t="Try-Catch-Finally Constructions" l="57" />
    <i t="Throw Statements" l="58" />
    <i t="Catching Exceptions in Gosu" l="59" />
    <i t="Object Lifecycle Management (using Clauses)" l="60">
      <i t="Disposable Objects" l="60#1466707" />
      <i t="Closeable Objects and using Clauses" l="60#1466986" />
      <i t="Reentrant Objects and using Clauses" l="60#1457358" />
      <i t="Returning Values from using Clauses" l="60#1469250" />
      <i t="Optional Use of a finally Clause with a using Clause" l="60#1514195" />
    </i>
    <i t="Assert Statements" l="61" />
  </i>
  <i t="Intervals" l="62">
    <i t="What are Intervals?" l="63">
      <i t="Reversing Interval Order" l="63#1456056" />
      <i t="Granularity (Step and Unit)" l="63#1456531" />
    </i>
    <i t="Writing Your Own Interval Type" l="64">
      <i t="Custom Iterable Intervals Using Sequenceable Items" l="64#1461393" />
      <i t="Custom Iterable Intervals Using Manually-written Iterators" l="64#1462661" />
      <i t="Custom Non-iterable Interval Types" l="64#1461152" />
    </i>
  </i>
  <i t="Calling Java from Gosu" l="65">
    <i t="Overview of Writing Gosu Code that Calls Java" l="66">
      <i t="Many Java Classes are Core Classes for Gosu" l="66#2134273" />
      <i t="Java Packages in Scope" l="66#2131311" />
      <i t="Static Members and Static Import in Gosu" l="66#2047802" />
      <i t="Java get/set/is Methods Convert to Gosu Properties" l="66#2021794" />
      <i t="Interfaces" l="66#2020668" />
      <i t="Enumerations" l="66#2020577" />
      <i t="Annotations" l="66#2047848" />
      <i t="Java Primitives" l="66#2047899" />
      <i t="Java Generics" l="66#2135372" />
    </i>
  </i>
  <i t="Query Builder APIs" l="67">
    <i t="Overview of the Query Builder APIs" l="68">
      <i t="The Processing Cycle of Queries" l="68#2237067" />
      <i t="SQL Select Statements and Query Builder APIs Compared" l="68#2237083" />
    </i>
    <i t="Building Simple Queries" l="69">
      <i t="Restricting the Results of a Simple Query" l="69#2237297" />
      <i t="Ordering the Results of a Simple Query" l="69#2237312" />
      <i t="Accessing the Results of a Simple Query" l="69#2237326" />
    </i>
    <i t="Joining Related Entities to Queries" l="70">
      <i t="Joining an Entity to a Query with a Simple Join" l="71" />
      <i t="Restricting Query Results with Fields on Joined Entities" l="72" />
      <i t="Different Ways to Join Related Entities to Queries" l="73" />
      <i t="Making a Query with an Inner Join" l="74" />
      <i t="Making a Query with a Left Outer Join" l="75" />
      <i t="Adding Predicates to Joined Entities" l="76" />
      <i t="Handling Duplicates in Joins with Foreign Keys on the Right" l="77" />
    </i>
    <i t="Restricting Queries with Predicates on Fields" l="78">
      <i t="Using Comparison Predicates with Character Fields" l="79" />
      <i t="Using Comparison Predicates with Date and Time Fields" l="80" />
      <i t="Using Comparison Predicates with Null Values" l="81" />
      <i t="Using Set Inclusion and Exclusion Predicates" l="82" />
      <i t="Comparing Column Values with Each Other" l="83" />
      <i t="Comparing Column Values with Literal Values" l="84" />
      <i t="Comparing Typekey Column Values with Typekey Literals" l="85" />
      <i t="Combining Predicates with AND and OR Logic" l="86" />
      <i t="Predicate Methods Reference" l="87" />
    </i>
    <i t="Working with Row Queries" l="88">
      <i t="Setting Up Row Queries" l="88#2930783" />
      <i t="Database Aggregate Functions Within Select Blocks" l="89" />
      <i t="Applying Functions to Selected Fields" l="90" />
      <i t="Limitations of Row Queries" l="91" />
    </i>
    <i t="Working with Results" l="92">
      <i t="What Result Objects Contain" l="93" />
      <i t="Filtering Results with Standard Query Filters" l="94" />
      <i t="Ordering Results" l="95" />
      <i t="Useful Properties and Methods on Result Objects" l="96" />
      <i t="Converting Result Objects to Lists, Arrays, Collections, and Sets" l="97" />
      <i t="Updating Entity Instances in Query Results" l="98" />
    </i>
    <i t="Testing and Optimizing Queries" l="99">
      <i t="Performance Differences Between Entity and Row Queries" l="100" />
      <i t="Viewing the SQL Select Statement for a Query" l="101" />
      <i t="Enabling Context Comments in Queries on SQL Server or DB2" l="102" />
      <i t="Including Retired Entities in Query Results" l="103" />
      <i t="Setting the Page Size for Prefetching Query Results" l="104" />
      <i t="Chaining Query Builder Methods" l="105" />
      <i t="Working with Advanced Inline Views" l="106" />
    </i>
    <i t="Method and Type Reference for the Query Builder APIs" l="107" />
  </i>
  <i t="Find Expressions" l="108">
    <i t="Basic Find Expressions" l="108#1425943">
      <i t="Find Expressions that Use AND/OR Operators" l="108#1417461" />
      <i t="Find Expressions that Use Equality and Relational Operators" l="108#1137084" />
      <i t="Find Expressions that Use Where...In Clauses" l="108#1359589" />
      <i t="Find Expressions and Non-Equality Comparisons" l="108#1370677" />
    </i>
    <i t="Using Exists Expressions for Array Properties in Find Expressions" l="108#1359679">
      <i t="Fixing Invalid Queries by Adding Exists Clauses" l="108#1360475" />
      <i t="Combining Exists Expressions" l="108#1358792" />
    </i>
    <i t="Find Expressions that Use Special Substring Keywords" l="108#1359890" />
    <i t="Using the Results of Find Expressions (Using Query Objects)" l="108#1289012">
      <i t="Basic Iterator Example" l="108#1361185" />
      <i t="Handling Large Query Objects from Find Expressions" l="108#1220606" />
      <i t="Sorting Results" l="108#1220627" />
      <i t="Retrieving a Single Row from Find Expression Results" l="108#1137173" />
      <i t="Found Entities Are Read-only Until Added to a Bundle" l="108#1361064" />
      <i t="Query Objects Returned by Find Expressions Are Always Dynamic" l="108#1360246" />
    </i>
  </i>
  <i t="Classes" l="109">
    <i t="What Are Classes?" l="110" />
    <i t="Creating and Instantiating Classes" l="111">
      <i t="Creating a New Instance of a Class" l="111#2449212" />
      <i t="Naming Conventions for Packages and Classes" l="111#2447745" />
    </i>
    <i t="Properties" l="112">
      <i t="Properties Act Like Data But They Are Dynamic and Virtual Functions" l="112#2477145" />
      <i t="Property Paths are Null Tolerant" l="112#2465283" />
      <i t="Static Properties" l="112#2449277" />
      <i t="More Property Examples" l="112#2447851" />
    </i>
    <i t="Modifiers" l="113">
      <i t="Access Modifiers" l="113#2445688" />
      <i t="Override Modifier" l="113#2449862" />
      <i t="Abstract Modifier" l="113#2449868" />
      <i t="Final Modifier" l="113#2449875" />
      <i t="Static Modifier" l="113#2446412" />
    </i>
    <i t="Inner Classes" l="114">
      <i t="Named Inner Classes" l="114#2450636" />
      <i t="Anonymous Inner Classes" l="114#2450064" />
    </i>
  </i>
  <i t="Enumerations" l="115">
    <i t="Using Enumerations" l="116">
      <i t="Extracting Information from Enumerations" l="116#1459344" />
      <i t="Comparing Enumerations" l="116#1459295" />
    </i>
  </i>
  <i t="Interfaces" l="117">
    <i t="What is an Interface?" l="118" />
    <i t="Defining and Using an Interface" l="119">
      <i t="Defining and Using Properties with Interfaces" l="119#1457203" />
      <i t="Modifiers and Interfaces" l="119#1459141" />
    </i>
  </i>
  <i t="Composition" l="120">
    <i t="Using Gosu Composition" l="121">
      <i t="Overriding Methods Independent of the Delegate Class" l="121#2201000" />
      <i t="Declaring Delegate Implementation Type in the Variable Definition" l="121#2198236" />
      <i t="Using One Delegate for Multiple Interfaces" l="121#2198240" />
      <i t="Using Composition With Built-in Interfaces" l="121#2198246" />
    </i>
  </i>
  <i t="Annotations" l="122">
    <i t="Annotating a Class, Method, Type, Class Variable, or Argument" l="123">
      <i t="Built-in Annotations" l="123#1471842" />
    </i>
    <i t="Annotations at Run Time" l="124">
      <i t="Gosu Class Function Parameter Argument Annotations at Run Time" l="124#1491415" />
    </i>
    <i t="Defining Your Own Annotations" l="125">
      <i t="Customizing Annotation Usage" l="125#1434674" />
    </i>
  </i>
  <i t="Enhancements" l="126">
    <i t="Using Enhancements" l="127">
      <i t="Syntax for Using Enhancements" l="127#1439437" />
      <i t="Creating a New Enhancement" l="127#1439200" />
      <i t="Syntax for Defining Enhancements" l="127#1439430" />
      <i t="Enhancement Naming and Package Conventions" l="127#1437458" />
      <i t="Enhancements on Arrays" l="127#1438604" />
    </i>
  </i>
  <i t="Gosu Blocks" l="128">
    <i t="What Are Blocks?" l="129" />
    <i t="Basic Block Definition and Invocation" l="130" />
    <i t="Variable Scope and Capturing Variables In Blocks" l="131" />
    <i t="Argument Type Inference Shortcut In Certain Cases" l="132" />
    <i t="Block Type Literals" l="133" />
    <i t="Blocks and Collections" l="134" />
    <i t="Blocks as Shortcuts for Anonymous Classes" l="135" />
  </i>
  <i t="Gosu Generics" l="136">
    <i t="Gosu Generics Overview" l="137" />
    <i t="Using Gosu Generics" l="138">
      <i t="Parameterized Classes" l="138#1454721" />
      <i t="Parameterized Methods" l="138#1454736" />
    </i>
    <i t="Other Unbounded Generics Wildcards" l="139" />
    <i t="Generics and Blocks" l="140" />
    <i t="How Generics Help Define Collection APIs" l="141" />
    <i t="Multiple Dimensionality Generics" l="142" />
    <i t="Generics With Custom ‘Containers’" l="143">
      <i t="Generics with Non-Containers" l="143#1446525" />
    </i>
  </i>
  <i t="Collections" l="144">
    <i t="Basic Lists" l="145">
      <i t="Creating a List" l="145#1451974" />
      <i t="Type Inference and List Initialization" l="145#1452009" />
      <i t="Getting and Setting List Values" l="145#1467078" />
      <i t="Special Behavior of List Interface in Gosu" l="145#1466017" />
    </i>
    <i t="Basic Hash Maps" l="146">
      <i t="Creating a Hash Map" l="146#1452165" />
      <i t="Getting and Setting Values in a Hash Map" l="146#1452408" />
      <i t="Creating a Hash Map with Type Inference" l="146#1452539" />
      <i t="Special Enhancements on Maps" l="146#1452216" />
      <i t="Wrapped Maps with Default Values" l="146#1501650" />
    </i>
    <i t="List and Array Expansion (*.)" l="147">
      <i t="Array Flattening to Single Dimensional Array" l="147#1466345" />
      <i t="Application-Specific Examples" l="147#1466372" />
    </i>
    <i t="Enhancement Reference for Collections and Related Types" l="148">
      <i t="Collections Enhancement Methods" l="149" />
      <i t="Finding Data in Collections" l="149#1462591" />
      <i t="Sorting Collections" l="149#1505126" />
      <i t="Mapping Data in Collections" l="149#1442277" />
      <i t="Iterating Across Collections" l="149#1442285" />
      <i t="Partitioning Collections" l="149#1442296" />
      <i t="Converting Lists, Arrays, and Sets" l="149#1449882" />
      <i t="Flat Mapping a Series of Collections or Arrays" l="149#1450050" />
      <i t="Sizes and Length of Collections and Strings are Equivalent" l="149#1443101" />
    </i>
  </i>
  <i t="Gosu and XML" l="150">
    <i t="Manipulating XML Overview" l="151">
      <i t="Legacy XML Support" l="152" />
    </i>
    <i t="Introduction to the XML Element in Gosu" l="153">
      <i t="Dollar Sign Prefix for Properties that Are XSD Types" l="154" />
    </i>
    <i t="Exporting XML Data" l="155">
      <i t="Export-related Methods on an XML Element" l="155#1866472" />
      <i t="XML Serialization Options Reference and Examples" l="155#1911570" />
    </i>
    <i t="Parsing XML Data into an XML Element" l="156" />
    <i t="Creating Many Qualified Names in the Same Namespace" l="157" />
    <i t="XSD-based Properties and Types" l="158">
      <i t="Important Concepts in XSD Properties and Types" l="158#1651042" />
      <i t="XSD Generated Type Examples" l="158#1673249" />
      <i t="Automatic Insertion into Lists" l="158#1673851" />
      <i t="XSD List Property Example" l="158#1610237" />
    </i>
    <i t="Getting Data From an XML Element" l="159">
      <i t="Manipulating Elements and Values (Works With or Without XSD)" l="159#1538638" />
      <i t="Attributes" l="159#1520181" />
    </i>
    <i t="Simple Values" l="160">
      <i t="Methods to Create XML Simple Values" l="160#1622820" />
      <i t="XSD to Gosu Simple Type Mappings" l="160#1622952" />
      <i t="Facet Validation" l="160#1623085" />
    </i>
    <i t="Access the Nillness of an Element" l="161" />
    <i t="Automatic Creation of Intermediary Elements" l="162" />
    <i t="Default and Fixed Attribute Values" l="163" />
    <i t="Substitution Group Hierarchies" l="164" />
    <i t="Element Sorting for XSD-based Elements" l="165" />
    <i t="Built-in Schemas" l="166">
      <i t="The XSD that Defines an XSD (The Metaschema)" l="166#1541995" />
    </i>
    <i t="Use a Local XSD for an External Namespace or XSD Location" l="167" />
    <i t="Schema Access Type" l="168" />
    <i t="The Guidewire XML (GX) Modeler" l="169">
      <i t="Automatic Publishing of the Generated XSD" l="170" />
      <i t="Generating XML Using an XML Model" l="171" />
      <i t="Customizing GX Modeler Output (GXOptions)" l="172" />
      <i t="Parsing XML Into an XML Model" l="173" />
      <i t="Arrays of Entities in XML Output" l="174" />
      <i t="Complete Guidewire XML Model Example" l="175" />
      <i t="XML Serialization Performance and Element Sorting" l="175#1931305" />
      <i t="Type Conversions from Gosu Types to XSD Types" l="175#1865256" />
    </i>
    <i t="Legacy XML APIs: Manipulating XML as Untyped Nodes" l="176">
      <i t="Untyped Node Operations" l="176#1865288" />
      <i t="Example of Manipulating XML as Untyped Nodes" l="177" />
    </i>
    <i t="Legacy XML APIs: Exporting XML Data" l="178" />
    <i t="Legacy XML APIs: Collection-like Enhancements for XML" l="179" />
    <i t="Legacy XML APIs: Structured XML Using XSDs" l="180">
      <i t="Importing Strongly-Typed XML" l="181" />
      <i t="Writing Strongly-Typed XML" l="182" />
      <i t="Handling XSD Choices in XML" l="183" />
      <i t="Gosu Type to XSD Type Conversion Reference" l="184" />
      <i t="XSD Namespaces and Qualified Names" l="185" />
      <i t="Autocreation of Intermediate Nodes" l="186" />
      <i t="XML Node IDs" l="187" />
      <i t="Date Handling in XSDs" l="188" />
    </i>
  </i>
  <i t="Bundles and Database Transactions" l="189">
    <i t="When to Use Database Transaction APIs" l="190" />
    <i t="Bundle Overview" l="191" />
    <i t="Adding Entity Instances to Bundles" l="192">
      <i t="Making an Entity Instance Writable By Adding to a Bundle" l="192#1562051" />
      <i t="Moving a Writable Entity Instance to a New Writable Bundle" l="192#1640335" />
    </i>
    <i t="Getting the Bundle of an Existing Entity Instance" l="193" />
    <i t="Getting an Entity from a Public ID or a Key (Internal ID)" l="194" />
    <i t="Creating New Entity Instances in Specific Bundles" l="195" />
    <i t="Committing a Bundle Explicitly in Very Rare Cases" l="196" />
    <i t="Removing Entity Instances from the Database" l="197" />
    <i t="Determining What Data Changed in a Bundle" l="198">
      <i t="Detecting Property Changes on an Entity Instance" l="198#1631064" />
      <i t="Getting Changes to Entity Arrays in the Current Bundle" l="198#1613756" />
      <i t="Getting Add, Changed, or Deleted Entities In a Bundle" l="198#1613798" />
    </i>
    <i t="Running Code in an Entirely New Bundle" l="199">
      <i t="Create Bundle For a Specific ClaimCenter User" l="199#1583029" />
      <i t="Warning about Transaction Class Confusion" l="199#1602225" />
    </i>
    <i t="Exception Handling And Database Commits" l="200" />
    <i t="Bundles and Published Web Services" l="201" />
    <i t="Entity Cache Versioning, Locking, and Entity Refreshing" l="202">
      <i t="Entity Instance Versioning and the Entity Touch API" l="202#1571322" />
      <i t="Record Locking for Concurrent Data Access" l="202#1568961" />
      <i t="User Interface Bundle Refreshes" l="202#1568698" />
    </i>
    <i t="Details of Bundle Commit Steps" l="203" />
  </i>
  <i t="Gosu Templates" l="204">
    <i t="Template Overview" l="205">
      <i t="Template Expressions" l="205#1464080" />
      <i t="When to Escape Special Characters for Templates" l="206" />
    </i>
    <i t="Using Template Files" l="207">
      <i t="Creating and Running a Template File" l="207#1464601" />
      <i t="Template Scriptlet Tags" l="207#1461443" />
      <i t="Template Parameters" l="207#1463866" />
      <i t="Extending a Template From a Class" l="207#1455745" />
      <i t="Template Comments" l="207#1463274" />
    </i>
    <i t="Template Export Formats" l="207#1465221" />
  </i>
  <i t="Type System" l="208">
    <i t="The Type of All Types" l="209" />
    <i t="Basic Type Coercion" l="209#1444327" />
    <i t="Basic Type Checking" l="210">
      <i t="Automatic Downcasting for ‘typeis’ and ‘typeof’" l="210#1455253" />
    </i>
    <i t="Using Reflection" l="211">
      <i t="Type Object Properties" l="211#1441372" />
      <i t="Java Type Reflection" l="211#1441477" />
      <i t="Type System Class" l="211#1465566" />
      <i t="Feature Literals" l="211#1487207" />
    </i>
    <i t="Compound Types" l="212" />
    <i t="Type Loaders" l="213" />
  </i>
  <i t="Concurrency" l="214">
    <i t="Overview of Thread Safety and Concurrency" l="215" />
    <i t="Request and Session Scoped Variables" l="216" />
    <i t="Concurrent Lazy Variables" l="217">
      <i t="Optional Non-Locking Lazy Variables" l="217#1507282" />
    </i>
    <i t="Concurrent Cache" l="218" />
    <i t="Concurrency with Monitor Locks and Reentrant Objects" l="219" />
  </i>
  <i t="Gosu Command Line Shell" l="220">
    <i t="Gosu Command Line Tool Basics" l="221">
      <i t="Unpacking and Installing the Gosu Command Line Shell" l="221#2211837" />
      <i t="Command Line Tool Options" l="221#2182333" />
      <i t="Writing a Simple Gosu Command Line Program" l="221#2208954" />
    </i>
    <i t="Command Line Arguments" l="222" />
    <i t="Advanced Class Loading Registry" l="223" />
    <i t="Gosu Interactive Shell" l="224" />
    <i t="Helpful APIs for Command Line Gosu Programs" l="225" />
  </i>
  <i t="Gosu Programs" l="226">
    <i t="The Structure of a Gosu Program" l="227">
      <i t="Metaline as First Line" l="227#2209342" />
      <i t="Functions in a Gosu Program" l="227#2209347" />
      <i t="Setting the Class Path to Call Other Gosu or Java Classes" l="227#2209362" />
    </i>
  </i>
  <i t="Running Local Shell Commands" l="228">
    <i t="Running Command Line Tools from Gosu" l="228#2186018" />
  </i>
  <i t="Checksums" l="229">
    <i t="Overview of Checksums" l="230" />
    <i t="Creating Fingerprints" l="230#1442951">
      <i t="How to Output Data Inside a Fingerprint" l="230#1443786" />
    </i>
    <i t="Extending Fingerprints" l="230#1442456" />
  </i>
  <i t="Properties Files" l="231">
    <i t="Reading Properties Files" l="231#1458192" />
  </i>
  <i t="Coding Style" l="232">
    <i t="General Coding Guidelines" l="233">
      <i t="Omit Semicolons" l="233#1445233" />
      <i t="Type Declarations" l="233#1445238" />
      <i t="The == and != Operator Recommendations and Warnings" l="233#1445388" />
      <i t="Capitalization Conventions" l="233#1458561" />
      <i t="Class Variable and Class Property Recommendations" l="233#1446206" />
      <i t="Use ‘typeis’ Inference" l="233#1454113" />
    </i>
  </i>
</WebWorksHelpTOC>