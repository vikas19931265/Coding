function FileData_Pairs(x)
{
x.t("enabling","weighted");
x.t("included","claimpreupdate");
x.t("four","default");
x.t("four","assignment");
x.t("unlike","groupuserworkloadassignmentstrategy");
x.t("creation","new");
x.t("available","default");
x.t("provide","basic");
x.t("claim","workload");
x.t("claim","field");
x.t("claim","calculates");
x.t("claim","reopened");
x.t("claim","status");
x.t("claim","cpu30500");
x.t("claim","assignment");
x.t("claim","suitable");
x.t("claim","closed");
x.t("claim","exposure");
x.t("claim","changes");
x.t("claim","reassignment");
x.t("defines","uses");
x.t("rather","just");
x.t("rather","group");
x.t("just","within");
x.t("workload","within");
x.t("workload","once");
x.t("workload","enabled");
x.t("workload","weight");
x.t("workload","uses");
x.t("workload","altered");
x.t("workload","assignment");
x.t("workload","api");
x.t("workload","parameters");
x.t("workload","addition");
x.t("workload","disabled");
x.t("workload","configuration");
x.t("workload","value");
x.t("workload","strategies");
x.t("workload","groupuserworkloadassignmentstrategy");
x.t("workload","affected");
x.t("computation","weighted");
x.t("computation","first");
x.t("implement","global");
x.t("implement","strategies");
x.t("within","group");
x.t("within","particular");
x.t("workload-based","load");
x.t("caller","specify");
x.t("description","defaultgroupexposureassignmentrules");
x.t("description","epu10000");
x.t("description","cpu30000");
x.t("description","defaultgroupclaimassignmentrules");
x.t("create","activate");
x.t("weighted","workload");
x.t("once","weighted");
x.t("events","activate");
x.t("activate","weighted");
x.t("activate","rules");
x.t("activate","order");
x.t("cpu30200","claim");
x.t("user's","calculated");
x.t("components","weight");
x.t("components","described");
x.t("preupdate","rules");
x.t("lowest","workload");
x.t("enabled","base");
x.t("enabled","configuration");
x.t("enabled","associated");
x.t("user","claim");
x.t("user","rather");
x.t("user","lowest");
x.t("user","user");
x.t("user","assignment");
x.t("user","exposure");
x.t("user","attribute");
x.t("user","least");
x.t("user","appropriate");
x.t("topic","workload");
x.t("weight","computation");
x.t("weight","events");
x.t("weight","user");
x.t("weight","group");
x.t("weight","winner");
x.t("weight","calculating");
x.t("weight","recalculation");
x.t("weight","across");
x.t("implemented","using");
x.t("field","exposure");
x.t("field","impacts");
x.t("epu10500","exposure");
x.t("uses","default");
x.t("uses","dynamic");
x.t("membership","lowest");
x.t("groupuser","objects");
x.t("text_val.select","link");
x.t("calculates","weighted");
x.t("altered","workload");
x.t("provided","user");
x.t("provided","groupuserbyattributeworkloadassignmentstrategy");
x.t("provided","default");
x.t("defaultgroupexposureassignmentrules","dgc00500");
x.t("support","workload-based");
x.t("support","subgroup");
x.t("support","choose");
x.t("open","epu10400");
x.t("open","cpu30400");
x.t("sample","weighted");
x.t("sample","rules");
x.t("sample","global");
x.t("groupuserbyattributeworkloadassignmentstrategy","groupuserbyattributeworkloadassignmentstrategy");
x.t("groupuserbyattributeworkloadassignmentstrategy","functionally");
x.t("groupuserbyattributeworkloadassignmentstrategy","userworkloadassignmentstrategy");
x.t("basic","weighted");
x.t("time","relevant");
x.t("epu10000","workload");
x.t("down","list");
x.t("guidewire","claimcenter");
x.t("default","workload");
x.t("default","assignment");
x.t("default","group");
x.t("default","rules");
x.t("default","strategy");
x.t("checks","gw");
x.t("exposurepreupdate","rules");
x.t("needed","weighted");
x.t("link","directly");
x.t("objects","group");
x.t("objects","assigned");
x.t("objects","rules");
x.t("new","claim");
x.t("new","exposure");
x.t("updates","weighted");
x.t("reopened","updates");
x.t("start","assigning");
x.t("among","candidate");
x.t("among","candidates");
x.t("subgroup","recursion");
x.t("messsage","claimcenter");
x.t("need","implement");
x.t("need","enable");
x.t("claimpreupdate","rules");
x.t("status","membership");
x.t("status","exposure");
x.t("status","changes");
x.t("cpu30500","claim");
x.t("list","candidate");
x.t("assignment","defines");
x.t("assignment","within");
x.t("assignment","workload");
x.t("assignment","weighted");
x.t("assignment","enabled");
x.t("assignment","user");
x.t("assignment","implemented");
x.t("assignment","support");
x.t("assignment","need");
x.t("assignment","assignment");
x.t("assignment","api");
x.t("assignment","methods");
x.t("assignment","balancing");
x.t("assignment","enable");
x.t("assignment","rules");
x.t("assignment","specific");
x.t("assignment","strategy");
x.t("assignment","strategies");
x.t("assignment","using");
x.t("assignable","objects");
x.t("assignable","entity");
x.t("assignable","object");
x.t("group","claim");
x.t("group","user");
x.t("group","weight");
x.t("group","rule");
x.t("group","exposure");
x.t("group","userbyattributeworkloadassignmentstrategy");
x.t("candidate","groupuser");
x.t("candidate","users");
x.t("guide","unlike");
x.t("guide","guidewire");
x.t("api","weighted");
x.t("api","uses");
x.t("api","base");
x.t("api","commands");
x.t("api","system");
x.t("filter","down");
x.t("configuring","weighted");
x.t("cpu30000","workload");
x.t("directly","page");
x.t("requirements","alternately");
x.t("text_val.focus","text_val.select");
x.t("suitable","user");
x.t("account","rather");
x.t("reassigning","claim");
x.t("closed","cpu30200");
x.t("closed","open");
x.t("closed","updates");
x.t("closed","epu10200");
x.t("epu10300","exposure");
x.t("decision-making","process");
x.t("base","configuration");
x.t("factor-based","assignment");
x.t("fit","requirements");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("parameters","weighted");
x.t("parameters","default");
x.t("further","detail");
x.t("rule","description");
x.t("rule","rule");
x.t("rule","activated");
x.t("rule","child");
x.t("methods","provided");
x.t("methods","assignment");
x.t("config.xml","enabling");
x.t("place","assignable");
x.t("comprised","following");
x.t("gw","assignment");
x.t("gw","api");
x.t("exposures","based");
x.t("decide","implement");
x.t("allows","caller");
x.t("selection","based");
x.t("claimcenter","configuration");
x.t("claimcenter","contains");
x.t("exposure","workload");
x.t("exposure","epu10500");
x.t("exposure","calculates");
x.t("exposure","reopened");
x.t("exposure","assignment");
x.t("exposure","suitable");
x.t("exposure","reassigning");
x.t("exposure","closed");
x.t("exposure","base");
x.t("exposure","rule");
x.t("exposure","changes");
x.t("exposure","impacts");
x.t("exposure","reassignment");
x.t("winner","ties");
x.t("weights","application");
x.t("entire","system");
x.t("addition","configuration");
x.t("chooses","among");
x.t("attribute","criteria");
x.t("activated","weighted");
x.t("activated","time");
x.t("weightedassignmentenabled","value");
x.t("error","occurred");
x.t("calculate","workload");
x.t("cpu30300","claim");
x.t("commands","base");
x.t("absolute","weight");
x.t("calculating","weights");
x.t("first","step");
x.t("feature","configuration");
x.t("functionally","identical");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("parent","rule");
x.t("workloads","following");
x.t("balancing","activated");
x.t("balancing","parent");
x.t("customize","methods");
x.t("particular","group");
x.t("step","using");
x.t("epu10100","exposure");
x.t("begins","userworkloadassignmentstrategy");
x.t("changes","closed");
x.t("changes","epu10300");
x.t("changes","place");
x.t("changes","cpu30300");
x.t("changes","occur");
x.t("identical","groupuserworkloadassignmentstrategy");
x.t("identical","userworkloadassignmentstrategy");
x.t("assigned","user");
x.t("assigned","assignment");
x.t("enable","config.xml");
x.t("enable","feature");
x.t("enable","rules");
x.t("reference","decide");
x.t("disabled","base");
x.t("disabled","enable");
x.t("assigns","claim");
x.t("assigns","exposure");
x.t("located","gw");
x.t("fully","support");
x.t("candidates","group");
x.t("triggered","assignable");
x.t("triggered","calculate");
x.t("least","weight");
x.t("occurred","messsage");
x.t("rules","included");
x.t("rules","available");
x.t("rules","workload");
x.t("rules","create");
x.t("rules","enabled");
x.t("rules","user");
x.t("rules","provided");
x.t("rules","rule");
x.t("rules","activated");
x.t("rules","disabled");
x.t("rules","triggered");
x.t("rules","rules");
x.t("rules","include");
x.t("rules","order");
x.t("rules","manage");
x.t("rules","using");
x.t("rules","utilize");
x.t("taken","account");
x.t("configuration","enabling");
x.t("configuration","weighted");
x.t("configuration","activate");
x.t("configuration","user");
x.t("configuration","sample");
x.t("configuration","checks");
x.t("configuration","default");
x.t("configuration","need");
x.t("configuration","guide");
x.t("configuration","configuring");
x.t("configuration","parameters");
x.t("configuration","comprised");
x.t("configuration","claimcenter");
x.t("configuration","function");
x.t("configuration","assigns");
x.t("configuration","corresponding");
x.t("configuration","following");
x.t("include","creation");
x.t("include","support");
x.t("cpu30100","claim");
x.t("defaultgroupclaimassignmentrules","dgc00500");
x.t("value","claim");
x.t("value","field");
x.t("value","new");
x.t("value","status");
x.t("value","exposure");
x.t("value","epu10100");
x.t("value","assigned");
x.t("value","cpu30100");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("recalculation","exposurepreupdate");
x.t("recalculation","global");
x.t("specific","weighted");
x.t("specific","changes");
x.t("balanced","workload");
x.t("epu10400","new");
x.t("process","begins");
x.t("process","decisions");
x.t("workload-aware","assignable");
x.t("workload-aware","assignment");
x.t("page","error");
x.t("impacts","workload");
x.t("dynamic","assignment");
x.t("ties","base");
x.t("ties","selection");
x.t("(default)","groupuserworkloadassignmentstrategy");
x.t("strategy","components");
x.t("strategy","customize");
x.t("strategy","groupuserworkloadassignmentstrategy");
x.t("strategy","used");
x.t("appropriate","status");
x.t("workload-enabled","assignable");
x.t("case","exposure");
x.t("application","guide");
x.t("described","further");
x.t("global","workload");
x.t("global","assignment");
x.t("decisions","workload-enabled");
x.t("userbyattributeworkloadassignmentstrategy","four");
x.t("userbyattributeworkloadassignmentstrategy","functionally");
x.t("userbyattributeworkloadassignmentstrategy","userbyattributeworkloadassignmentstrategy");
x.t("choose","modify");
x.t("two","components");
x.t("note","sample");
x.t("users","decision-making");
x.t("cpu30400","new");
x.t("strategies","provide");
x.t("strategies","weighted");
x.t("strategies","base");
x.t("strategies","located");
x.t("strategies","fully");
x.t("strategies","include");
x.t("strategies","specific");
x.t("strategies","process");
x.t("strategies","note");
x.t("strategies","strategies");
x.t("strategies","used");
x.t("based","absolute");
x.t("based","workloads");
x.t("groupuserworkloadassignmentstrategy","weighted");
x.t("groupuserworkloadassignmentstrategy","user's");
x.t("groupuserworkloadassignmentstrategy","groupuserbyattributeworkloadassignmentstrategy");
x.t("groupuserworkloadassignmentstrategy","default");
x.t("groupuserworkloadassignmentstrategy","allows");
x.t("groupuserworkloadassignmentstrategy","chooses");
x.t("groupuserworkloadassignmentstrategy","(default)");
x.t("ccconfigparameters","weightedassignmentenabled");
x.t("reassignment","updates");
x.t("order","weighted");
x.t("order","start");
x.t("following","default");
x.t("following","rules");
x.t("following","two");
x.t("corresponding","preupdate");
x.t("entity","compute");
x.t("compute","workload");
x.t("relevant","changes");
x.t("system","taken");
x.t("system","ccconfigparameters");
x.t("manage","weighted");
x.t("used","sample");
x.t("used","needed");
x.t("alternately","reference");
x.t("using","weighted");
x.t("using","default");
x.t("using","workload-aware");
x.t("recursion","groupuserworkloadassignmentstrategy");
x.t("calculated","weight");
x.t("assigning","claims");
x.t("criteria","filter");
x.t("across","entire");
x.t("associated","preupdate");
x.t("occur","workload-aware");
x.t("child","rules");
x.t("load","factor-based");
x.t("modify","fit");
x.t("var","text_val=eval");
x.t("epu10200","exposure");
x.t("claims","exposures");
x.t("affected","updates");
x.t("utilize","weighted");
x.t("userworkloadassignmentstrategy","allows");
x.t("userworkloadassignmentstrategy","chooses");
x.t("userworkloadassignmentstrategy","userbyattributeworkloadassignmentstrategy");
x.t("userworkloadassignmentstrategy","userworkloadassignmentstrategy");
x.t("detail","topic");
x.t("object","case");
x.t("dgc00500","balanced");
x.t("contains","four");
x.t("specify","user");
}
