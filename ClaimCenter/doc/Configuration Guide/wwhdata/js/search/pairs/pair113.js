function FileData_Pairs(x)
{
x.t("root","element");
x.t("root","entity");
x.t("example","want");
x.t("example","nonnegativeinteger");
x.t("example","generally");
x.t("worse","possible");
x.t("possible","extend");
x.t("possible","lose");
x.t("possible","commit");
x.t("possible","passing");
x.t("manner","expect");
x.t("properties","gosu");
x.t("properties","using");
x.t("method","returns");
x.t("defines","temporary");
x.t("defines","object");
x.t("moves","around");
x.t("serialization","want");
x.t("serialization","less");
x.t("rather","relying");
x.t("restriction","25");
x.t("files","nonpersistententity");
x.t("needs","guidewire");
x.t("annotation","syntax");
x.t("within","claimcenter");
x.t("nothing","xml");
x.t("nonpersistent","entities");
x.t("nonpersistent","entity");
x.t("create","instance");
x.t("create","extend");
x.t("create","false");
x.t("create","gosu");
x.t("create","non-final");
x.t("description","default");
x.t("description","array");
x.t("description","purpose");
x.t("table","name");
x.t("table","loading");
x.t("table","specify");
x.t("persistent","entity");
x.t("bundles","passing");
x.t("instance","entity");
x.t("key","none");
x.t("key","value");
x.t("required","name");
x.t("keep","track");
x.t("loses","nested");
x.t("parts","entity");
x.t("apply","ws-i");
x.t("creates","uses");
x.t("creates","human-readable");
x.t("creates","typelist");
x.t("situations","want");
x.t("uses","during");
x.t("uses","name");
x.t("field","behaves");
x.t("aspect","internal");
x.t("edgeforeignkey","edgeforeignkey");
x.t("edgeforeignkey","foreignkey");
x.t("text_val.select","link");
x.t(".displayname","specify");
x.t("type","property");
x.t("type","annotations");
x.t("type","runtime");
x.t("type","behavior");
x.t("time","claimcenter");
x.t("associates","data");
x.t("hierarchy","either");
x.t("down","claimcenter");
x.t("extend","nonpersistent");
x.t("extend","persistent");
x.t("extend","entity");
x.t("expose","web");
x.t("form","entity");
x.t("however","claimcenter");
x.t("guidewire","defines");
x.t("guidewire","recommends");
x.t("guidewire","recommendations");
x.t("entities","root");
x.t("entities","create");
x.t("entities","guidewire");
x.t("entities","obtain");
x.t("entities","participating");
x.t("entities","interact");
x.t("entities","entity");
x.t("entities","general");
x.t("removes","context");
x.t("really","needs");
x.t("property","information");
x.t("default","abstract");
x.t("automatically","creates");
x.t("objects","nonpersistent");
x.t("objects","nonpersistententity");
x.t("objects","function");
x.t("link","directly");
x.t("element","note");
x.t("element","contains");
x.t("want","field");
x.t("want","behavior");
x.t("access","name");
x.t("access","entity");
x.t("new","entities");
x.t("messsage","claimcenter");
x.t("areas","within");
x.t("determines","whether");
x.t("places","restriction");
x.t("during","time");
x.t("recommends","create");
x.t("recommends","therefore");
x.t("expect","nonpersistent");
x.t("around","entity");
x.t("add","wanted");
x.t("track","subtypes");
x.t("guide","data");
x.t("human-readable","form");
x.t("entity.displayname","method");
x.t("applies","old-style");
x.t("meaningful","entities");
x.t("false","extendable");
x.t("false","define");
x.t("false","desc");
x.t("displayname","attribute");
x.t("displayname","optional");
x.t("soap","web");
x.t("soap","call");
x.t("become","valid");
x.t("directly","page");
x.t("desired","behavior");
x.t("nonnegativeinteger","column");
x.t("true","possible");
x.t("true","new");
x.t("true","final");
x.t("true","cannot");
x.t("true","javaclass");
x.t("declare","subtype");
x.t("specified","display");
x.t("text_val.focus","text_val.select");
x.t("obtain","desired");
x.t("name","access");
x.t("name","entity.displayname");
x.t("name","attribute");
x.t("name","long");
x.t("name","subtype");
x.t("name","valid");
x.t("name","entity");
x.t("name","using");
x.t("name","typelist");
x.t("gosu","classes");
x.t("gosu","class");
x.t("base","claimcenter");
x.t("lose","parts");
x.t("custom","class");
x.t("part","soap");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("rule","general");
x.t("none","displayname");
x.t("none","exportable");
x.t("none","priority");
x.t("none","entity");
x.t("none","subelements");
x.t("staging","table");
x.t("supertype","true");
x.t("arrays","links");
x.t("web","services");
x.t("web","service");
x.t("loading","often");
x.t("final","true");
x.t("final","none");
x.t("claimcenter","creates");
x.t("claimcenter","uses");
x.t("claimcenter","automatically");
x.t("claimcenter","places");
x.t("claimcenter","none");
x.t("claimcenter","configuration");
x.t("claimcenter","discards");
x.t("claimcenter","data");
x.t("claimcenter","server");
x.t("wanted","data");
x.t("array","aspect");
x.t("array","array");
x.t("defining","data");
x.t("attribute","nothing");
x.t("attribute","description");
x.t("attribute","entity.displayname");
x.t("attribute","claimcenter");
x.t("attribute","instead");
x.t("attribute","entity");
x.t("attribute","specify");
x.t("extendable","true");
x.t("characters","length");
x.t("marked","final");
x.t("subelement","description");
x.t("nonpersistententity","element");
x.t("nonpersistententity","attribute");
x.t("nonpersistententity","subelement");
x.t("nonpersistententity","nonpersistententity");
x.t("nonpersistententity","xml");
x.t("nonpersistententity","data");
x.t("nonpersistententity","object");
x.t("metadata","files");
x.t("error","occurred");
x.t("display","name");
x.t("syntax","attributes");
x.t("ws-i","web");
x.t("long","become");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("annotations","add");
x.t("length","database");
x.t("cannot","create");
x.t("cannot","extend");
x.t("cannot","subtype");
x.t("idea","generally");
x.t("whether","transmit");
x.t("define","subtypes");
x.t("subtypes","entity");
x.t("subtypes","using");
x.t("instead","guidewire");
x.t("instead","declare");
x.t("instead","subtype");
x.t("instead","specify");
x.t("xml","root");
x.t("xml","import");
x.t("pcf","page");
x.t("types","marked");
x.t("types","object");
x.t("internal","none");
x.t("internal","column");
x.t("purpose","entity");
x.t("exportable","determines");
x.t("important","true");
x.t("code","abstract");
x.t("participating","subtype");
x.t("typekey","typekey");
x.t("thus","possible");
x.t("abstract","false");
x.t("abstract","true");
x.t("instantiate","generated");
x.t("often","known");
x.t("database","table");
x.t("database","guidewire");
x.t("issue","nonpersistent");
x.t("known","import");
x.t("bundle","live");
x.t("bundle","therefore");
x.t("occurred","messsage");
x.t("less","controllable");
x.t("less","efficient");
x.t("rules","areas");
x.t("implementsentity","implementsentity");
x.t("implementsentity","implementsinterface");
x.t("configuration","guide");
x.t("configuration","claimcenter");
x.t("javaclass","internal");
x.t("running","server");
x.t("discards","entity");
x.t("value","meaningful");
x.t("value","displayname");
x.t("value","attribute");
x.t("value","entity");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("temporary","nonpersistent");
x.t("shuts","down");
x.t("generated","code");
x.t("import","important");
x.t("import","export");
x.t("25","characters");
x.t("live","bundle");
x.t("services","nonpersistent");
x.t("services","apply");
x.t("services","attribute");
x.t("subtype","key");
x.t("subtype","hierarchy");
x.t("subtype","entities");
x.t("subtype","entity");
x.t("subtype","typelist");
x.t("valid","attribute");
x.t("valid","typelist");
x.t("page","example");
x.t("page","error");
x.t("major","issue");
x.t("context","removes");
x.t("context","entity");
x.t("context","even");
x.t("controllable","using");
x.t("data","possible");
x.t("data","bundles");
x.t("data","type");
x.t("data","really");
x.t("data","objects");
x.t("data","types");
x.t("data","model");
x.t("data","views");
x.t("data","object");
x.t("interact","data");
x.t("graph","nonpersistent");
x.t("behaves","example");
x.t("information","associates");
x.t("optional","creates");
x.t("-1","typelisttablename");
x.t("nested","arrays");
x.t("desc","description");
x.t("foreignkey","foreignkey");
x.t("foreignkey","fulldescription");
x.t("implementsinterface","implementsinterface");
x.t("implementsinterface","onetoone");
x.t("onetoone","typekey");
x.t("onetoone","onetoone");
x.t("recommendations","nonpersistent");
x.t("runtime","instead");
x.t("efficient","less");
x.t("note","cannot");
x.t("column","nonpersistent");
x.t("column","column");
x.t("column","componentref");
x.t("classes","defining");
x.t("transmit","entity");
x.t("export","staging");
x.t("priority","priority");
x.t("priority","corresponding");
x.t("work","manner");
x.t("call","applies");
x.t("rpc-encoded","style");
x.t("entity","example");
x.t("entity","moves");
x.t("entity","serialization");
x.t("entity","nonpersistent");
x.t("entity","table");
x.t("entity","required");
x.t("entity","loses");
x.t("entity",".displayname");
x.t("entity","type");
x.t("entity","guidewire");
x.t("entity","false");
x.t("entity","specified");
x.t("entity","true");
x.t("entity","name");
x.t("entity","part");
x.t("entity","none");
x.t("entity","supertype");
x.t("entity","web");
x.t("entity","claimcenter");
x.t("entity","attribute");
x.t("entity","instead");
x.t("entity","pcf");
x.t("entity","types");
x.t("entity","live");
x.t("entity","context");
x.t("entity","data");
x.t("entity","graph");
x.t("entity","-1");
x.t("entity","typelist");
x.t("entity","abstract=false");
x.t("model","base");
x.t("model","metadata");
x.t("model","configuration");
x.t("links","associated");
x.t("service","rather");
x.t("following","entity");
x.t("following","attributes");
x.t("following","subelements");
x.t("old-style","rpc-encoded");
x.t("style","soap");
x.t("corresponding","subtype");
x.t("either","subtype");
x.t("general","nonpersistent");
x.t("general","rule");
x.t("using","annotation");
x.t("using","custom");
x.t("using","following");
x.t("using","entity");
x.t("class","situations");
x.t("class","expose");
x.t("class","contains");
x.t("relying","nonpersistent");
x.t("non-final","entity");
x.t("typelist","table");
x.t("typelist","keep");
x.t("typelist","however");
x.t("typelist","entity");
x.t("typelist","associated");
x.t("bad","idea");
x.t("returns","name");
x.t("returns","value");
x.t("typelisttablename","create");
x.t("fulldescription","implementsentity");
x.t("fulldescription","fulldescription");
x.t("behavior","properties");
x.t("behavior","nonpersistent");
x.t("behavior","major");
x.t("therefore","gosu");
x.t("therefore","passing");
x.t("associated","thus");
x.t("associated","database");
x.t("abstract=false","instantiate");
x.t("componentref","edgeforeignkey");
x.t("componentref","componentref");
x.t("var","text_val=eval");
x.t("commit","nonpersistententity");
x.t("passing","nonpersistent");
x.t("passing","context");
x.t("even","worse");
x.t("views","rules");
x.t("object","properties");
x.t("object","defines");
x.t("object","database");
x.t("object","data");
x.t("server","running");
x.t("server","shuts");
x.t("generally","work");
x.t("generally","bad");
x.t("contains","data");
x.t("contains","following");
x.t("specify","database");
x.t("specify","value");
x.t("specify","data");
x.t("attributes","nonpersistententity");
x.t("subelements","nonpersistententity");
}
