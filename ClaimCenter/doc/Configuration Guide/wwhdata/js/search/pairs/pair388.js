function FileData_Pairs(x)
{
x.t("example","access");
x.t("example","approved");
x.t("financialscalculations.getavailablereserves","recovery");
x.t("incurred","value");
x.t("totalincurrednetrecoveryreserves","gross");
x.t("transactions","using");
x.t("totalincurrednetminusopenrecoveryreserves","sum");
x.t("describes","calculations");
x.t("submission","eroding");
x.t("submission","payments");
x.t("submission","today");
x.t("submission","access");
x.t("submission","noneroding");
x.t("submission","reserves");
x.t("submission","future");
x.t("financialscalculations.getfuturepayments","pendingapprovalpayments");
x.t("description","sum");
x.t("description","equivalent");
x.t("description","similar");
x.t(".totalincurredgross","totalincurrednet");
x.t("financial","components");
x.t("financial","calculations");
x.t("related","payments");
x.t("related","reserves");
x.t("related","floating");
x.t("related","recoveries");
x.t("related","following");
x.t("financialscalculationutil","pendingapprovalpaymentsexpression");
x.t("financialscalculationutil","totalincurrednetrecoveriesexpression");
x.t("financialscalculationutil","pendingapprovalnonerodingpaymentsexpression");
x.t("financialscalculationutil","grosstotalincurredexpression");
x.t("financialscalculationutil","totalrecoveryreservesexpression");
x.t("financialscalculationutil","totalincurrednetrecoveryreservesexpression");
x.t("financialscalculationutil","pendingapprovalerodingpaymentsexpression");
x.t("financialscalculationutil","nonerodingpaymentsforeignexchangeadjustmentsexpression");
x.t("financialscalculationutil","erodingpaymentsforeignexchangeadjustmentsexpression");
x.t("periodically","calculations");
x.t("foreign","exchange");
x.t("totalincurredgross","open");
x.t("totalincurredgross","sum");
x.t("components","reserve");
x.t("financialscalculator","object");
x.t("eroding","payments");
x.t("eroding","non-eroding");
x.t("eroding","submitted");
x.t("text_val.select","link");
x.t("payments","example");
x.t("payments","eroding");
x.t("payments","calculation");
x.t("payments","access");
x.t("payments","sum");
x.t("payments","plus");
x.t("payments","claimcenter");
x.t("payments","awaiting");
x.t("payments","minus");
x.t("payments","detailed");
x.t("payments","erodingpaymentsforexadjustments");
x.t("payments","recoveries");
x.t("payments","thus");
x.t("payments","pending");
x.t("payments","whose");
x.t("payments","similar");
x.t("payments","future");
x.t("payments","submitted");
x.t("today","access");
x.t("today","includes");
x.t("today","earlier");
x.t("pendingapprovalreserves","sum");
x.t("financialscalculations.getopenreserves","remainingreserves");
x.t("calculations","example");
x.t("calculations","related");
x.t("calculations","guidewire");
x.t("calculations","reserve");
x.t("calculations","floating");
x.t("calculations","payment");
x.t("calculations","function");
x.t("calculations","recovery");
x.t("calculations","return");
x.t("calculations","predefined");
x.t("calculations","note");
x.t("calculations","following");
x.t("calculations","used");
x.t("open","reserves");
x.t("open","recovery");
x.t("gross","total");
x.t("calculation","legitimately");
x.t("total","incurred");
x.t("total","foreign");
x.t("total","payments");
x.t("total","noneroding");
x.t("total","reserve");
x.t("total","reserves");
x.t("total","recovery");
x.t("total","recoveries");
x.t("guidewire","provides");
x.t("guidewire","claimcenter");
x.t("link","directly");
x.t("access","using");
x.t("includes","eroding");
x.t("includes","pending");
x.t("includes","future");
x.t("financialscalculations.getfinancialscalculation","financialscalculationutil");
x.t("amounts","using");
x.t("messsage","claimcenter");
x.t("list","describes");
x.t("sum","open");
x.t("sum","reserves");
x.t("sum","pending");
x.t("sum","future");
x.t("sum","submitted");
x.t("sum","approved");
x.t("sum","remaining");
x.t("financialscalculations.getpendingapprovalreserves","openreserves");
x.t("remainingreserves","open");
x.t("guide","guidewire");
x.t("nonerodingpaymentsforexadjustments","total");
x.t("pendingapprovalpaymentsexpression","pendingapprovalerodingpayments");
x.t("totalrecoveries","sum");
x.t("noneroding","payments");
x.t("directly","page");
x.t("reserve","calculations");
x.t("reserve","amounts");
x.t("reserve","plus");
x.t("reserve","minus");
x.t("reserve","recovery");
x.t("reserve","values");
x.t("text_val.focus","text_val.select");
x.t("totalpayments","sum");
x.t(".awaitingsubmissionreserves","openrecoveryreserves");
x.t(".totalincurrednet","totalincurrednetminusopenrecoveryreserves");
x.t("totalincurrednetrecoveries","gross");
x.t("totalincurrednetrecoveriesexpression","totalincurrednetrecoveryreserves");
x.t("base","configuration");
x.t("reserves","payments");
x.t("reserves","total");
x.t("reserves","access");
x.t("reserves","reserves");
x.t("reserves","plus");
x.t("reserves","claimcenter");
x.t("reserves","awaiting");
x.t("reserves","minus");
x.t("reserves","pending");
x.t("reserves","except");
x.t("awaitingsubmissionreserves","sum");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("provides","calculations");
x.t("provides","base");
x.t("floating","financial");
x.t("floating","financials");
x.t("floating","values");
x.t("plus","foreign");
x.t("plus","total");
x.t("plus","noneroding");
x.t("plus","awaiting");
x.t("plus","pending");
x.t("financialscalculations.getremainingreserves","availablereserves");
x.t("respective","transactions");
x.t("claimcenter","financial");
x.t("claimcenter","provides");
x.t("claimcenter","configured");
x.t("claimcenter","configuration");
x.t("claimcenter","financials");
x.t("pendingapprovalerodingpayments","pending");
x.t("financialscalculations.gettotalrecoveries","totalrecoveryreserves");
x.t("awaiting","submission");
x.t("earlier","access");
x.t("futurepayments","sum");
x.t("minus","eroding");
x.t("minus","open");
x.t("minus","total");
x.t("minus","sum");
x.t("minus","pending");
x.t("minus","future");
x.t("minus","approved");
x.t("minus","submitted");
x.t("submittedtotalincurrednet","sum");
x.t("financialscalculations.gettotalpayments","futurepayments");
x.t("error","occurred");
x.t("payment","calculations");
x.t("pendingapprovalnonerodingpayments","pending");
x.t("pendingapprovalnonerodingpaymentsexpression","paymentsforexadjustments");
x.t("equivalent","total");
x.t("grosstotalincurredexpression","totalincurrednetrecoveries");
x.t("configured","updated");
x.t(".availablereserves","awaitingsubmissionreserves");
x.t("paymentsforexadjustments","total");
x.t("reinsurance","calculations");
x.t("next","detailed");
x.t(".pendingapprovalreserves","remainingreserves");
x.t("fixed","rates");
x.t("guidewire_selectall","var");
x.t("openreserves","total");
x.t("function","guidewire_selectall");
x.t("recovery","calculations");
x.t("recovery","reserve");
x.t("recovery","reserves");
x.t("recovery","values");
x.t("exchange","rates");
x.t("exchange","adjustments");
x.t("exchange","adjustment");
x.t("totalreserves","sum");
x.t("detailed","description");
x.t("openrecoveryreserves","submitted");
x.t("variant","following");
x.t("totalrecoveryreserves","sum");
x.t("totalrecoveryreservesexpression","totalincurredgross");
x.t("submittedopenreserves","submitted");
x.t("erodingpaymentsforexadjustments","total");
x.t("recoveries","access");
x.t("recoveries","claimcenter");
x.t("recoveries","considered");
x.t("totalincurrednet","sum");
x.t("non-eroding","payments");
x.t("thus","sum");
x.t("return","financialscalculator");
x.t("pending","eroding");
x.t("pending","reserves");
x.t("pending","approval");
x.t("approval","eroding");
x.t("approval","access");
x.t("approval","non-eroding");
x.t("approval","future");
x.t("totalincurrednetrecoveryreservesexpression","floating");
x.t(".totalincurrednetminusopenrecoveryreserves","submittedtotalincurrednet");
x.t("whose","scheduled");
x.t("occurred","messsage");
x.t("financialscalculations.gettotalreserves","awaitingsubmissionreserves");
x.t("configuration","foreign");
x.t("configuration","guide");
x.t("configuration","calculated");
x.t("financials","calculations");
x.t("financials","claimcenter");
x.t("financialscalculations.getfloatingfinancials",".submittedtotalincurrednet");
x.t("financialscalculations.getfloatingfinancials",".totalincurredgross");
x.t("financialscalculations.getfloatingfinancials",".awaitingsubmissionreserves");
x.t("financialscalculations.getfloatingfinancials",".totalincurrednet");
x.t("financialscalculations.getfloatingfinancials",".availablereserves");
x.t("financialscalculations.getfloatingfinancials",".pendingapprovalreserves");
x.t("financialscalculations.getfloatingfinancials",".totalincurrednetminusopenrecoveryreserves");
x.t("financialscalculations.getfloatingfinancials",".submittedopenreserves");
x.t("financialscalculations.getfloatingfinancials",".openreserves");
x.t("financialscalculations.getfloatingfinancials",".openrecoveryreserves");
x.t("financialscalculations.getfloatingfinancials",".remainingreserves");
x.t(".submittedopenreserves","totalincurredgross");
x.t("similar","open");
x.t("value","minus");
x.t("value","predefined");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("send","date");
x.t("rates","payments");
x.t("rates","respective");
x.t("rates","claimcenter");
x.t(".openreserves","pendingapprovalreserves");
x.t("considered","floating");
x.t("page","error");
x.t("dynamic","exchange");
x.t("legitimately","negative");
x.t(".openrecoveryreserves","openreserves");
x.t("future","eroding");
x.t("future","payments");
x.t("pendingapprovalerodingpaymentsexpression","pendingapprovalnonerodingpayments");
x.t("nonerodingpaymentsforeignexchangeadjustmentsexpression","reserve");
x.t("values","totalrecoveries");
x.t("values","totalpayments");
x.t("values","totalreserves");
x.t("values","availablereserves");
x.t("values","evaluated");
x.t("submitted","payments");
x.t("submitted","open");
x.t("submitted","total");
x.t("submitted","reserves");
x.t("submitted","awaiting");
x.t("submitted","recovery");
x.t("submitted","recoveries");
x.t("approved","eroding");
x.t("approved","payments");
x.t("described","next");
x.t("predefined","financial");
x.t("predefined","reinsurance");
x.t("date","today");
x.t("note","following");
x.t(".remainingreserves","submittedopenreserves");
x.t("erodingpaymentsforeignexchangeadjustmentsexpression","nonerodingpaymentsforexadjustments");
x.t("availablereserves","remaining");
x.t("following","calculations");
x.t("following","financialscalculations.getfinancialscalculation");
x.t("following","list");
x.t("following","payment");
x.t("scheduled","send");
x.t("except","includes");
x.t("used","update");
x.t("calculated","reserve");
x.t("calculated","recovery");
x.t("calculated","values");
x.t("using","financialscalculations.getavailablereserves");
x.t("using","financialscalculations.getfuturepayments");
x.t("using","financialscalculations.getopenreserves");
x.t("using","financialscalculations.getpendingapprovalreserves");
x.t("using","floating");
x.t("using","financialscalculations.getremainingreserves");
x.t("using","financialscalculations.gettotalrecoveries");
x.t("using","financialscalculations.gettotalpayments");
x.t("using","variant");
x.t("using","financialscalculations.gettotalreserves");
x.t("using","financialscalculations.getfloatingfinancials");
x.t("using","dynamic");
x.t("using","financialscalculations.getawaitingsubmissionreserves");
x.t("adjustments","eroding");
x.t("adjustments","non-eroding");
x.t("adjustments","described");
x.t("remaining","reserve");
x.t("remaining","reserves");
x.t("pendingapprovalpayments","sum");
x.t("adjustment","eroding");
x.t("adjustment","noneroding");
x.t("evaluated","fixed");
x.t("var","text_val=eval");
x.t("financialscalculations.getawaitingsubmissionreserves","pendingapprovalreserves");
x.t("negative","value");
x.t("updated","periodically");
x.t("update","floating");
x.t("object","calculated");
}
