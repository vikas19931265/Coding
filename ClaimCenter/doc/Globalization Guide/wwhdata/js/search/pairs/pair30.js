function FileData_Pairs(x)
{
x.t("example","actions");
x.t("example","claimcenter");
x.t("example","contain");
x.t("example","error");
x.t("example","configuration");
x.t("example","following");
x.t("root","directory");
x.t("tag","placeholder");
x.t("properties","files");
x.t("properties","file");
x.t("possible","provide");
x.t("possible","create");
x.t("possible","enter");
x.t("provide","translated");
x.t("parameter","defaultapplicationlanguage");
x.t("indicated","possible");
x.t("version","display");
x.t("easy","find");
x.t("easy","string");
x.t("easy","users");
x.t("files","example");
x.t("files","properties");
x.t("files","guidewire");
x.t("files","gosu");
x.t("files","claimcenter");
x.t("files","addition");
x.t("files","display");
x.t("files","display.properties");
x.t("lists","across");
x.t("within","studio");
x.t("within","specific");
x.t("subdirectory","language");
x.t("subdirectory","display.properties");
x.t("subdirectory","tool");
x.t("studio","navigate");
x.t("studio","display");
x.t("studio","identifying");
x.t("build","directory");
x.t("installed","language");
x.t("create","display");
x.t("create","placeholder");
x.t("create","to-be-translated");
x.t("key","within");
x.t("key","create");
x.t("key","property");
x.t("key","command");
x.t("key","found");
x.t("key","list");
x.t("key","add");
x.t("key","directly");
x.t("key","name");
x.t("key","display");
x.t("key","simply");
x.t("key","master");
x.t("key","translated");
x.t("key","configuration");
x.t("key","value");
x.t("key","import");
x.t("key","example.display.key");
x.t("key","intend");
x.t("key","system");
x.t("key","difference");
x.t("arguments","display");
x.t("arguments","different");
x.t("recommend","approach");
x.t("creates","subdirectory");
x.t("creates","new");
x.t("creates","master");
x.t("locale-identifier","names");
x.t("generating","master");
x.t("later","translation");
x.t("text_val.select","link");
x.t("errors","display");
x.t("working","display");
x.t("interface","makes");
x.t("missing","default");
x.t("missing","display");
x.t("missing","keys");
x.t("open","display.properties");
x.t("scans","locale");
x.t("scans","application");
x.t("locale","example");
x.t("locale","indicated");
x.t("locale","missing");
x.t("locale","property");
x.t("locale","configured");
x.t("locale","against");
x.t("locale","node");
x.t("locale","code");
x.t("locale","folder");
x.t("locale","en_us");
x.t("locale","actually");
x.t("locale","nodes");
x.t("locale","(en_us)");
x.t("locale","folders");
x.t("multiple","folders");
x.t("however","process");
x.t("property","files");
x.t("property","file");
x.t("guidewire","recommend");
x.t("guidewire","default");
x.t("guidewire","recommends");
x.t("guidewire","provides");
x.t("guidewire","claimcenter");
x.t("default","locale");
x.t("default","application");
x.t("checks","display");
x.t("link","directly");
x.t("single","display.properties");
x.t("translate","display");
x.t("validator.phone","claimcenter");
x.t("access","editor");
x.t("new","build");
x.t("contents","file");
x.t("command","ctrl");
x.t("command","application");
x.t("messsage","claimcenter");
x.t("file","locale");
x.t("file","exactly");
x.t("file","claimcenter");
x.t("file","display.properties");
x.t("file","folder");
x.t("file","specific");
x.t("file","en_us");
x.t("file","following");
x.t("file","containing");
x.t("file","contains");
x.t("list","missing");
x.t("list","scans");
x.t("list","locale");
x.t("list","claimcenter");
x.t("list","display");
x.t("list","different");
x.t("list","already");
x.t("list","following");
x.t("list","generates");
x.t("found","display");
x.t("found","different");
x.t("add","case");
x.t("add","suffix");
x.t("defaultapplicationlanguage","locale");
x.t("recommends","add");
x.t("actions","[translate]");
x.t("during","search");
x.t("guide","language");
x.t("guide","discussion");
x.t("meaningful","string");
x.t("globalization","guide");
x.t("navigate","localizations");
x.t("large","number");
x.t("directly","studio");
x.t("directly","display");
x.t("directly","page");
x.t("circumstances","master");
x.t("detects","installed");
x.t("text_val.focus","text_val.select");
x.t("name","subdirectory");
x.t("name","name");
x.t("name","generate");
x.t("gosu","reference");
x.t("exactly","display");
x.t("base","configuration");
x.t("argument","lists");
x.t("localize","point");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("localizations","node");
x.t("localizations","en_us");
x.t("provides","display");
x.t("illustrates","contents");
x.t("find","properties");
x.t("find","placeholder");
x.t("tedious","error-prone");
x.t("makes","easy");
x.t("strings","studio");
x.t("strings","directly");
x.t("strings","enter");
x.t("strings","miss");
x.t("claimcenter","creates");
x.t("claimcenter","interface");
x.t("claimcenter","globalization");
x.t("claimcenter","base");
x.t("claimcenter","string");
x.t("claimcenter","loads");
x.t("claimcenter","/build");
x.t("claimcenter","initializes");
x.t("claimcenter","logs");
x.t("claimcenter","generate");
x.t("claimcenter","generates");
x.t("claimcenter","contains");
x.t("string","meaningful");
x.t("string","claimcenter");
x.t("string","display");
x.t("string","[translate]");
x.t("string","cases");
x.t("string","resources");
x.t("copies","file");
x.t("target","language");
x.t("contain","display");
x.t("contain","configuration");
x.t("addition","language");
x.t("understand","display");
x.t("displaykey-diff","displaykey-diff");
x.t("displaykey-diff","tool");
x.t("display","key");
x.t("display","keys");
x.t("error","default");
x.t("error","message");
x.t("error","occurred");
x.t("config","localizations");
x.t("configured","server");
x.t("commands","detailed");
x.t("point","create");
x.t("install","contains");
x.t("loads","display");
x.t("/build","tool");
x.t("first","within");
x.t("guidewire_selectall","var");
x.t("initializes","display");
x.t("importing","string");
x.t("number","arguments");
x.t("number","translated");
x.t("postcode","note");
x.t("function","guidewire_selectall");
x.t("approach","large");
x.t("editor","possible");
x.t("editor","however");
x.t("editor","access");
x.t("editor","first");
x.t("editor","localizing");
x.t("editor","using");
x.t("different","arguments");
x.t("different","argument");
x.t("different","number");
x.t("different","locales");
x.t("against","master");
x.t("lengthy","tedious");
x.t("web.qa.i18n.contactdetail.addressdetail.city","suburb");
x.t("language","open");
x.t("language","missing");
x.t("language","name");
x.t("language","configuration");
x.t("language","module");
x.t("language","using");
x.t("starting","project");
x.t("ways","translate");
x.t("instead","export");
x.t("detailed","exporting");
x.t("report","run");
x.t("display.properties","files");
x.t("display.properties","file");
x.t("display.properties","application");
x.t("directory","example");
x.t("directory","application");
x.t("directory","gwcc");
x.t("populates","subdirectory");
x.t("format","file");
x.t("node","target");
x.t("node","format");
x.t("node","expand");
x.t("node","contains");
x.t("simply","placeholder");
x.t("[translate]","makes");
x.t("[translate]","display");
x.t("[translate]","suffix");
x.t("important","tag");
x.t("reference","guide");
x.t("code","illustrates");
x.t("code","language");
x.t("master","list");
x.t("master","display");
x.t("adds","display");
x.t("folder","key");
x.t("folder","claimcenter");
x.t("folder","configuration");
x.t("folder","en_us");
x.t("folder","localizing");
x.t("logs","errors");
x.t("logs","warning");
x.t("message","noting");
x.t("message","returns");
x.t("translated","strings");
x.t("translated","display");
x.t("translated","important");
x.t("enter","instead");
x.t("enter","translated");
x.t("enter","localized");
x.t("identifying","missing");
x.t("occurred","messsage");
x.t("project","configuration");
x.t("keys","later");
x.t("keys","working");
x.t("keys","locale");
x.t("keys","property");
x.t("keys","default");
x.t("keys","guidewire");
x.t("keys","claimcenter");
x.t("keys","string");
x.t("keys","function");
x.t("keys","editor");
x.t("keys","display.properties");
x.t("keys","adds");
x.t("keys","master");
x.t("keys","generate");
x.t("keys","localizing");
x.t("keys","information");
x.t("keys","tool");
x.t("keys","application");
x.t("keys","following");
x.t("keys","using");
x.t("keys","learn");
x.t("configuration","parameter");
x.t("configuration","files");
x.t("configuration","claimcenter");
x.t("configuration","config");
x.t("configuration","display");
x.t("configuration","additional");
x.t("configuration","localizing");
x.t("discussion","property");
x.t("exporting","importing");
x.t("miss","during");
x.t("modules","display");
x.t("additional","properties");
x.t("tools","exporting");
x.t("value","different");
x.t("value","correct");
x.t("bin","directory");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("en_us","locale");
x.t("en_us","localizations");
x.t("en_us","web.qa.i18n.contactdetail.addressdetail.city");
x.t("en_us","remaining");
x.t("already","contain");
x.t("already","contains");
x.t("specific","locale");
x.t("import","commands");
x.t("import","translated");
x.t("import","export");
x.t("locales","example");
x.t("locales","validator.phone");
x.t("example.display.key","error");
x.t("generate","display");
x.t("generate","display.properties");
x.t("process","lengthy");
x.t("actually","localized");
x.t("localizing","claimcenter");
x.t("localizing","display");
x.t("page","error");
x.t("nodes","modules");
x.t("location","starting");
x.t("ctrl","shift");
x.t("module","install");
x.t("information","display");
x.t("correct","locale");
x.t("tool","creates");
x.t("tool","detects");
x.t("tool","populates");
x.t("tool","following");
x.t("placeholder","example");
x.t("placeholder","strings");
x.t("placeholder","string");
x.t("placeholder","display");
x.t("case","claimcenter");
x.t("application","root");
x.t("application","locale");
x.t("application","default");
x.t("application","checks");
x.t("application","bin");
x.t("expand","locale");
x.t("web.qa.i18n.contactdetail.addressdetail.zipcode","postcode");
x.t("de_de","example");
x.t("export","tools");
x.t("export","import");
x.t("note","claimcenter");
x.t("intend","localize");
x.t("users","understand");
x.t("noting","found");
x.t("(en_us)","missing");
x.t("localized","version");
x.t("localized","display");
x.t("suburb","web.qa.i18n.contactdetail.addressdetail.zipcode");
x.t("cases","makes");
x.t("order","copies");
x.t("system","scans");
x.t("following","command");
x.t("following","circumstances");
x.t("following","ways");
x.t("following","code");
x.t("following","location");
x.t("following","order");
x.t("following","compares");
x.t("run","following");
x.t("general","possible");
x.t("using","studio");
x.t("using","locale");
x.t("using","string");
x.t("using","display");
x.t("warning","message");
x.t("remaining","locale");
x.t("compares","locale");
x.t("containing","list");
x.t("folders","locale-identifier");
x.t("folders","configured");
x.t("folders","following");
x.t("across","locales");
x.t("returns","display");
x.t("error-prone","guidewire");
x.t("translation","possible");
x.t("names","de_de");
x.t("gwcc","displaykey-diff");
x.t("var","text_val=eval");
x.t("suffix","string");
x.t("suffix","[translate]");
x.t("learn","using");
x.t("generates","file");
x.t("generates","master");
x.t("shift","find");
x.t("to-be-translated","display");
x.t("resources","generating");
x.t("resources","import");
x.t("resources","localizing");
x.t("resources","general");
x.t("contains","multiple");
x.t("contains","property");
x.t("contains","single");
x.t("contains","list");
x.t("contains","display");
x.t("server","guidewire");
x.t("server","against");
x.t("difference","report");
x.t("difference","tool");
}
