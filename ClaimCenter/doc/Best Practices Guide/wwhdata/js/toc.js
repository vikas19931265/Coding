function  WWHBookData_AddTOCEntries(P)
{
var A=P.fN("About ClaimCenter Documentation","1");
var B=A.fN("Conventions in This Document","1#2121726");
B=A.fN("Support","1#2121769");
A=P.fN("Data Model Best Practices","2");
B=A.fN("Entity Best Practices","3");
var C=B.fN("Observe General Entity Naming Conventions","3#2160842");
C=B.fN("Add a Prefix or Suffix to New Extensions to Avoid Name Conflicts","3#2210221");
C=B.fN("Use Singular for Field Names Except for Arrays","3#2174597");
C=B.fN("Add ID as a Suffix to Column Names for Foreign Keys","3#2211242");
B=A.fN("Typelist Best Practices","4");
C=B.fN("Observe Typelist Naming Conventions","4#2161255");
B=A.fN("Data Model Best Practices Checklist","5");
A=P.fN("User Interface Best Practices","6");
B=A.fN("Page Configuration Best Practices","7");
C=B.fN("Modify Base PCF Files Whenever Possible","7#2192986");
C=B.fN("Add a Suffix to New PCF Files to Avoid Name Conflicts","7#2280132");
B=A.fN("Display Keys Best Practices","8");
C=B.fN("Use Display Keys to Display Text","8#2185577");
C=B.fN("Use Existing Display Keys Whenever Possible","8#2193885");
C=B.fN("Observe Display Key Naming Conventions","8#2187672");
C=B.fN("Add a Suffix to New Display Keys to Avoid Name Conflicts","8#2187916");
C=B.fN("Organize Display Keys by Page Configuration Component","8#2189426");
B=A.fN("User Interface Performance Best Practices","9");
C=B.fN("Avoid Post on Change and Client Reflection for Page Refreshes","10");
C=B.fN("Avoid Repeated Calculations of Expensive Widget Values","11");
C=B.fN("Avoid Expensive Calculations of Widget Properties","12");
C=B.fN("Use Application Permission Keys for Visibility and Editability","13");
B=A.fN("User Interface Best Practices Checklist","14");
A=P.fN("Rules Best Practices","15");
B=A.fN("Rules Naming Best Practices","16");
C=B.fN("Observe Rule Naming Conventions","17");
C=B.fN("Observe Operating System Length Restrictions on Rule Names","18");
C=B.fN("Get and Display Rule Names in Messages","19");
C=B.fN("Assign a Dedicated Rules Librarian to Manage Rule Names","20");
B=A.fN("Rules Performance Best Practices","21");
C=B.fN("Purge Unused and Obsolete Rules Before Upgrading","21#2168419");
B=A.fN("Rules Best Practices Checklist","22");
A=P.fN("Gosu Language Best Practices","23");
B=A.fN("Gosu Naming and Declaration Best Practices","24");
C=B.fN("Observe General Gosu Naming Conventions","25");
C=B.fN("Omit Type Specifications with Variable Initialization","26");
C=B.fN("Add a Suffix to Functions and Classes to Avoid Name Conflicts","27");
C=B.fN("Declare Functions Private Unless Absolutely Necessary","28");
C=B.fN("Use Public Properties Instead of Public Variables","29");
C=B.fN("Do Not Declare Static Scope for Mutable Variables","30");
C=B.fN("Use Extensions to Add Functions to Entities","31");
C=B.fN("Match Capitalization of Types, Keywords, and Symbols","32");
B=A.fN("Gosu Commenting Best Practices","33");
C=B.fN("Block Comments","34");
C=B.fN("Javadoc Comments","35");
C=B.fN("Single-line Comments","36");
C=B.fN("Trailing Comments","37");
C=B.fN("Using Comment Delimiters to Disable Code","38");
B=A.fN("Gosu Coding Best Practices","39");
C=B.fN("Use Whitespace Effectively","40");
C=B.fN("Use Parentheses Effectively","41");
C=B.fN("Use Curly Braces Effectively","42");
C=B.fN("Program Defensively Against Conditions that Can Fail","43");
C=B.fN("Omit Semicolons as Statement Delimiters","44");
C=B.fN("Use != Instead of &lt;&gt; as the Inequality Operator","45");
C=B.fN("Observe Null Safety with Equality Operators","46");
C=B.fN("Use typeis Expressions for Automatic Downcasting","47");
C=B.fN("Observe Loop Control Best Practices","48");
C=B.fN("Return from Functions as Early as Possible","49");
C=B.fN("Use Query Builder APIs instead of Find Expressions in New Code","50");
B=A.fN("Gosu Performance Best Practices","51");
C=B.fN("Use the Fastest Technique for String Concatenation","52");
C=B.fN("Consider the Order of Terms in Compound Expressions","53");
C=B.fN("Avoid Repeated Method Calls Within an Algorithm","54");
C=B.fN("Remove Constant Variables and Expressions from Loops","55");
C=B.fN("Pull Up Multiple Performance Intensive Method Calls","56");
C=B.fN("Be Wary of Dot Notation with Object Access Paths","57");
C=B.fN("Avoid Code that Incidentally Queries the Database","58");
C=B.fN("Use Comparison Methods to Filter Queries","59");
C=B.fN("Use Count Properties on Query Builder Results and Find Queries","60");
C=B.fN("Use Activity Pattern Codes Instead of Public IDs in Comparisons","61");
C=B.fN("Do Not Instantiate Plugins for Every Execution","62");
B=A.fN("Gosu Best Practices Checklist","63");
}
