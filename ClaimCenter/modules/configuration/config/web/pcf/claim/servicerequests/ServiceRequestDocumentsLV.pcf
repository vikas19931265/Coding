<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <ListViewPanel
    id="ServiceRequestDocumentsLV">
    <Require
      name="serviceRequest"
      type="ServiceRequest"/>
    <Variable
      initialValue="serviceRequest.ViewableDocumentLinksAndDocuments"
      name="documentInfoPairs"
      recalculateOnRefresh="true"/>
    <RowIterator
      editable="false"
      elementName="documentInfoPair"
      value="documentInfoPairs">
      <Variable
        initialValue="documentInfoPair.Second"
        name="document"/>
      <Row>
        <Cell
          action="serviceRequest.unlinkDocumentForUI(document)"
          id="Unlink"
          showHeaderIcon="false"
          value="displaykey.LV.Claim.ServiceRequest.Document.Remove"
          valueVisible="documentInfoPair.First.Unlinkable"
          visible="documentInfoPairs.hasMatch(\ p -&gt; p.First.Unlinkable)"/>
        <Cell
          icon="document.Icon"
          id="Icon"
          showHeaderIcon="false"
          value="true"/>
        <Cell
          id="Name"
          label="displaykey.LV.Claim.Documents.Document.Name"
          printWidth="4"
          value="document.Name"/>
        <LinkCell
          id="View"
          label="displaykey.LV.Claim.Documents.Document.ViewAndEdit.View">
          <DocumentLink
            document="document"
            documentAction="viewRepositoryVersion"
            id="TransactionSetDocumentsLV_ViewLink"
            label="displaykey.LV.Claim.Documents.Document.ViewAndEdit.View"
            styleClass="miniButton"
            visible="document.DMS"/>
          <DocumentLink
            document="document"
            documentAction="editRepositoryVersion"
            id="DocumentsLV_EditLink"
            label="displaykey.LV.Claim.Documents.Document.ViewAndEdit.Edit"
            styleClass="miniButton"
            visible="( gw.document.DocumentsUtil.showEditButtons() and document.DMS) and perm.Document.edit(document) and not serviceRequest.AlreadyPromoted"/>
          <DocumentLink
            document="document"
            documentAction="editLocalVersion"
            id="DocumentsLV_EditLocalLink"
            label="displaykey.LV.Claim.Documents.Document.ViewAndEdit.EditLocal"
            styleClass="miniButton"
            visible="( gw.document.DocumentsUtil.showEditButtons() and document.DMS) and perm.Document.edit(document) and not serviceRequest.AlreadyPromoted"/>
          <DocumentLink
            document="document"
            documentAction="uploadLocalVersion"
            id="DocumentsLV_UpdateLink"
            label="displaykey.LV.Claim.Documents.Document.ViewAndEdit.Update"
            styleClass="miniButton"
            visible="( gw.document.DocumentsUtil.showEditButtons() and document.DMS) and perm.Document.edit(document) and not serviceRequest.AlreadyPromoted"/>
          <DocumentLink
            document="document"
            documentAction="discardLocalVersion"
            id="DocumentsLV_DiscardLink"
            label="displaykey.LV.Claim.Documents.Document.ViewAndEdit.Discard"
            styleClass="miniButton"
            visible="( gw.document.DocumentsUtil.showEditButtons() and document.DMS) and perm.Document.edit(document) and not serviceRequest.AlreadyPromoted"/>
        </LinkCell>
        <TypeKeyCell
          id="Type"
          label="displaykey.LV.Claim.Documents.Document.Type"
          printWidth="2"
          value="document.Type"/>
        <Cell
          id="RelatedStatementType"
          label="displaykey.LV.Claim.Documents.Document.RelatesToStatement"
          printWidth="2"
          value="getRelatedStatementType(documentInfoPair)"/>
        <TypeKeyCell
          id="Status"
          label="displaykey.LV.Claim.Documents.Document.Status"
          value="document.Status"/>
        <Cell
          id="Author"
          label="displaykey.LV.Claim.Documents.Document.Author"
          printWidth="2"
          value="document.Author"/>
        <DateCell
          dateFormat="short"
          id="DateModified"
          label="displaykey.LV.Claim.Documents.Document.DateModified"
          sortDirection="descending"
          sortOrder="1"
          timeFormat="short"
          value="document.DateModified"/>
        <DateCell
          dateFormat="short"
          id="DateSpecialistNotified"
          label="displaykey.LV.Claim.Documents.Document.DateSpecialistNotified"
          sortDirection="descending"
          sortOrder="2"
          timeFormat="short"
          value="documentInfoPair.First.DateSpecialistNotified"/>
      </Row>
    </RowIterator>
    <Code><![CDATA[function getRelatedStatementType(docLinkPair : gw.util.Pair<ServiceRequestDocumentLink,Document>) : String {
  if (not docLinkPair.Second.IsServiceRequestStatementDocument) {
    return ""
  }
  
  var statementDocInfos = docLinkPair.First.StatementDocumentLinks
  if (statementDocInfos.allMatch(\ s -> s.ServiceRequestStatement typeis ServiceRequestQuote)) {
    return displaykey.Web.ServiceRequest.Quote.Proper
  } else if (statementDocInfos.allMatch(\ s -> s.ServiceRequestStatement typeis ServiceRequestInvoice)) {
    return displaykey.Web.ServiceRequest.Invoice.Proper
  }
  return displaykey.LV.Claim.ServiceRequest.Document.QuoteAndInvoice
}]]></Code>
  </ListViewPanel>
</PCF>