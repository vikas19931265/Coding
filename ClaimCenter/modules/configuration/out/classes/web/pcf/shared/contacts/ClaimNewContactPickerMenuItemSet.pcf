<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <MenuItemSet
    desc="Used to construct the New Contact menu for Contact pickers"
    id="ClaimNewContactPickerMenuItemSet">
    <Require
      name="requiredContactType"
      type="Type"/>
    <Require
      name="parentContact"
      type="Contact"/>
    <Require
      name="claim"
      type="Claim"/>
    <MenuItem
      action="NewContactPopup.push(typekey.Contact.TC_PERSON, parentContact, claim)"
      id="NewContactPickerMenuItemSet_NewPerson"
      label="displaykey.Web.NewContactMenu.NewPerson"
      visible="requiredContactType == entity.Contact or requiredContactType == entity.Person"/>
    <MenuItem
      id="NewContactPickerMenuItemSet_NewVendor"
      label="displaykey.Web.NewContactMenu.NewVendor"
      visible="ShowNewVendor">
      <MenuItem
        action="NewContactPopup.push(typekey.Contact.TC_AUTOREPAIRSHOP, parentContact, claim)"
        id="NewContactPickerMenuItemSet_AutoRepairShop"
        label="displaykey.Web.NewContactMenu.AutoRepairShop"
        visible="requiredContactType.isAssignableFrom(entity.AutoRepairShop)"/>
      <MenuItem
        action="NewContactPopup.push(typekey.Contact.TC_AUTOTOWINGAGCY, parentContact, claim)"
        id="NewContactPickerMenuItemSet_AutoTowingAgcy"
        label="displaykey.Web.NewContactMenu.AutoTowingAgcy"
        visible="requiredContactType.isAssignableFrom(entity.AutoTowingAgcy)"/>
      <MenuItem
        action="NewContactPopup.push(typekey.Contact.TC_DOCTOR, parentContact, claim)"
        id="NewContactPickerMenuItemSet_Doctor"
        label="displaykey.Web.NewContactMenu.Doctor"
        visible="requiredContactType.isAssignableFrom(entity.Doctor)"/>
      <MenuItem
        action="NewContactPopup.push(typekey.Contact.TC_MEDICALCAREORG, parentContact, claim)"
        id="NewContactPickerMenuItemSet_MedicalCareOrg"
        label="displaykey.Web.NewContactMenu.MedicalCareOrg"
        visible="requiredContactType.isAssignableFrom(entity.MedicalCareOrg)"/>
      <MenuItem
        action="NewContactPopup.push(typekey.Contact.TC_COMPANYVENDOR, parentContact, claim)"
        id="NewContactPickerMenuItemSet_CompanyVendor"
        label="displaykey.Web.NewContactMenu.CompanyVendor"
        visible="requiredContactType.isAssignableFrom(entity.CompanyVendor)"/>
    </MenuItem>
    <MenuItem
      action="NewContactPopup.push(typekey.Contact.TC_COMPANY, parentContact, claim)"
      id="NewContactPickerMenuItemSet_NewCompany"
      label="displaykey.Web.NewContactMenu.NewCompany"
      visible="requiredContactType.isAssignableFrom(entity.Company)"/>
    <MenuItem
      id="NewContactPickerMenuItemSet_NewLegal"
      label="displaykey.Web.NewContactMenu.NewLegal"
      visible="ShowNewLegal">
      <MenuItem
        action="NewContactPopup.push(typekey.Contact.TC_ADJUDICATOR, parentContact, claim)"
        id="NewContactPickerMenuItemSet_Adjudicator"
        label="displaykey.Web.NewContactMenu.Adjudicator"
        visible="requiredContactType.isAssignableFrom(entity.Adjudicator)"/>
      <MenuItem
        action="NewContactPopup.push(typekey.Contact.TC_ATTORNEY, parentContact, claim)"
        id="NewContactPickerMenuItemSet_Attorney"
        label="displaykey.Web.NewContactMenu.Attorney"
        visible="requiredContactType.isAssignableFrom(entity.Attorney)"/>
      <MenuItem
        action="NewContactPopup.push(typekey.Contact.TC_LAWFIRM, parentContact, claim)"
        id="NewContactPickerMenuItemSet_LawFirm"
        label="displaykey.Web.NewContactMenu.LawFirm"
        visible="requiredContactType.isAssignableFrom(entity.LawFirm)"/>
      <MenuItem
        action="NewContactPopup.push(typekey.Contact.TC_LEGALVENUE, parentContact, claim)"
        id="NewContactPickerMenuItemSet_NewLegalVenue"
        label="displaykey.Web.NewContactMenu.LegalVenue"
        visible="requiredContactType.isAssignableFrom(entity.LegalVenue)"/>
    </MenuItem>
    <Code><![CDATA[property get ShowNewVendor() : boolean {
  return {entity.Contact,
          entity.Company,
          entity.Person,
          entity.PersonVendor,
          entity.CompanyVendor,
          entity.AutoRepairShop,
          entity.AutoTowingAgcy,
          entity.Doctor,
          entity.MedicalCareOrg}.contains(requiredContactType)
}

property get ShowNewLegal() : boolean {
  return {entity.Contact,
          entity.Attorney,
          entity.LawFirm,
          entity.Company,
          entity.LegalVenue,
          entity.Person,
          entity.Adjudicator}.contains(requiredContactType)
}
]]></Code>
  </MenuItemSet>
</PCF>