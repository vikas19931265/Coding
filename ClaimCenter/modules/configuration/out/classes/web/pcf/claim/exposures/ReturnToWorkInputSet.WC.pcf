<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <InputSet
    id="ReturnToWorkInputSet"
    mode="WC">
    <Require
      name="Injury"
      type="InjuryIncident"/>
    <Require
      name="DetailedView"
      type="Boolean"/>
    <Variable
      initialValue="util.DateUtil.currentDate()"
      name="Today"/>
    <BooleanRadioInput
      editable="true"
      id="ReturnToModWorkValid"
      label="displaykey.NVV.Incident.Injury.RTW.ReturnToModWorkValid"
      value="Injury.ReturnToModWorkValid"
      visible="DetailedView">
      <PostOnChange/>
    </BooleanRadioInput>
    <DateInput
      editable="true"
      hideIfReadOnly="true"
      id="ReturnToModWorkDate"
      label="displaykey.NVV.Incident.Injury.RTW.ReturnToModWorkDate"
      validationExpression="((Injury.ReturnToModWorkActual and Injury.ReturnToModWorkDate &gt; util.DateUtil.currentDate()) ?  displaykey.Warning.Date.RTW.IfActualForbidFuture : null)"
      value="Injury.ReturnToModWorkDate"
      visible="Injury.ReturnToModWorkValid">
      <PostOnChange
        onChange="if (Injury.ReturnToModWorkDate.compareIgnoreTime(Today) == -1) {Injury.ReturnToModWorkActual = true} else if (Injury.ReturnToModWorkDate.compareIgnoreTime(Today) == 0) {Injury.ReturnToModWorkActual = null}  else if (Injury.ReturnToModWorkDate.compareIgnoreTime(Today) == 1) {Injury.ReturnToModWorkActual = false}"/>
    </DateInput>
    <BooleanRadioInput
      editable="true"
      falseLabel="displaykey.NVV.Incident.Injury.RTW.Projected"
      hideIfReadOnly="true"
      id="ReturnToModWorkActual"
      label="displaykey.NVV.Incident.Injury.RTW.ReturnToModWorkActual"
      required="Injury.ReturnToModWorkDate != null"
      trueLabel="displaykey.NVV.Incident.Injury.RTW.Actual"
      value="Injury.ReturnToModWorkActual"
      visible="Injury.ReturnToModWorkValid"/>
    <Input
      hideIfEditable="true"
      id="RTModWReadOnlyMSG"
      label="displaykey.NVV.Incident.Injury.RTW.ReturnToModWorkDate"
      value="(((Injury.ReturnToModWorkDate== null ? null :( Injury.ReturnToModWorkActual) ? Injury.ReturnToModWorkDate.format( &quot;short&quot; ) : displaykey.NVV.Incident.Injury.RTW.Msg.Projected(Injury.ReturnToModWorkDate.format( &quot;short&quot; ), (-1 * Injury.ReturnToModWorkDate.DaysSince) ))))"
      visible="Injury.ReturnToModWorkValid and (CurrentLocation.InEditMode != true)"/>
    <InputDivider
      hideIfReadOnly="true"
      id="RTWDivider"/>
    <BooleanRadioInput
      editable="true"
      id="ReturnToWorkValid"
      label="displaykey.NVV.Incident.Injury.RTW.ReturnToWorkValid"
      value="Injury.ReturnToWorkValid"
      visible="DetailedView">
      <PostOnChange/>
    </BooleanRadioInput>
    <DateInput
      editable="true"
      hideIfReadOnly="true"
      id="ReturnToWorkDate"
      label="displaykey.NVV.Incident.Injury.RTW.ReturnToWorkDate"
      validationExpression="((Injury.ReturnToWorkActual and Injury.ReturnToWorkDate &gt; util.DateUtil.currentDate()) ?  displaykey.Warning.Date.RTW.IfActualForbidFuture : null)"
      value="Injury.ReturnToWorkDate"
      visible="Injury.ReturnToWorkValid">
      <PostOnChange
        onChange="if (Injury.ReturnToWorkDate.compareIgnoreTime(Today) == -1) {Injury.ReturnToWorkActual = true} else if (Injury.ReturnToWorkDate.compareIgnoreTime(Today) == 0) {Injury.ReturnToWorkActual = null}  else if (Injury.ReturnToWorkDate.compareIgnoreTime(Today) == 1) {Injury.ReturnToWorkActual = false}"/>
    </DateInput>
    <BooleanRadioInput
      editable="true"
      falseLabel="displaykey.NVV.Incident.Injury.RTW.Projected"
      hideIfReadOnly="true"
      id="ReturnToWorkActual"
      label="displaykey.NVV.Incident.Injury.RTW.ReturnToWorkActual"
      required="Injury.ReturnToWorkDate != null"
      trueLabel="displaykey.NVV.Incident.Injury.RTW.Actual"
      value="Injury.ReturnToWorkActual"
      visible="Injury.ReturnToWorkValid"/>
    <Input
      hideIfEditable="true"
      id="RTWReadOnlyMSG"
      label="displaykey.NVV.Incident.Injury.RTW.ReturnToWorkDate"
      value="(((Injury.ReturnToWorkDate== null ? null :( Injury.ReturnToWorkActual) ? Injury.ReturnToWorkDate.format( &quot;short&quot; ) : displaykey.NVV.Incident.Injury.RTW.Msg.Projected(Injury.ReturnToWorkDate.format( &quot;short&quot; ), (-1 * Injury.ReturnToWorkDate.DaysSince) ))))"
      visible="Injury.ReturnToWorkValid and (CurrentLocation.InEditMode != true)"/>
  </InputSet>
</PCF>