<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <DetailViewPanel
    id="NewPaymentDetailDV"
    mode="default">
    <ExposeIterator
      name="EditablePaymentLineItemsLV"
      valueType="entity.TransactionLineItem"
      widget="EditablePaymentLineItemsLV.EditablePaymentLineItemsLV"/>
    <Require
      name="Payment"
      type="Payment"/>
    <Require
      name="Wizard"
      type="financials.CheckWizardInfo"/>
    <Require
      name="reserveLineInputSetHelper"
      type="financials.ReserveLineInputSetHelper"/>
    <Variable
      initialValue="Payment.SharedDeductible"
      name="deductible"
      recalculateOnRefresh="true"
      type="Deductible"/>
    <InputColumn>
      <InputSetRef
        def="ReserveLineInputSet(Payment, reserveLineInputSetHelper)"/>
      <TypeKeyInput
        editable="true"
        filter="Wizard.isAllowedPaymentType( Payment, VALUE )"
        id="Payment_PaymentType"
        label="displaykey.NVV.Financials.NewPaymentDetail.Payment.PaymentType"
        requestValidationExpression="Wizard.validatePaymentType(Payment, VALUE)"
        required="true"
        value="Payment.PaymentType"/>
      <BooleanRadioInput
        editable="true"
        id="Payment_Eroding"
        label="displaykey.Web.NewCheckWizard.NewPaymentDetail.Eroding"
        required="true"
        value="Payment.ErodesReserves"
        visible="!Payment.Exposure.Closed and Payment.PaymentType != PaymentType.TC_SUPPLEMENT"/>
      <Input
        formatType="currency"
        id="Transaction_AvailableReserves"
        label="displaykey.NVV.Financials.NewPaymentDetail.Transaction.AvailableReserves"
        value="financials.FinancialsCalculationsForEditedTransaction.getAvailableReserves(Payment).ReservingAmountTransactionAmountPair"
        visible="Payment.ReserveLine != null and not Payment.ReserveLine.New"/>
      <Input
        editable="true"
        id="Transaction_Comments"
        label="displaykey.NVV.Financials.NewPaymentDetail.Transaction.Comments"
        value="Payment.Comments"/>
      <TypeKeyInput
        editable="not Wizard.Check.LinkedToServiceRequests"
        id="Payment_Currency"
        label="displaykey.Web.NewCheckWizard.NewPaymentDetail.Currency"
        required="true"
        value="Wizard.CheckCurrency"
        visible="util.CurrencyUtil.isMultiCurrencyMode()">
        <PostOnChange/>
      </TypeKeyInput>
      <InputSetRef
        def="CheckExchangeRateInputSet(Payment.Check,null)"/>
      <ListViewInput
        available="Payment.ReserveLine != null"
        def="EditablePaymentLineItemsLV(Payment)"
        editable="true"
        label="displaykey.NVV.Financials.NewPaymentDetail.Transaction.LineItems"
        mode="getMode()"
        validationExpression="Payment.getCheckWizardPaymentValidationExpression()">
        <Toolbar>
          <IteratorButtons
            addLabel="displaykey.Java.Financials.TransactionLineItem.AddItem"
            addShortcut="I"
            addVisible="gw.api.financials.FinancialsUtil.isAllowMultipleLineItems()"
            iterator="EditablePaymentLineItemsLV.EditablePaymentLineItemsLV"
            removeVisible="gw.api.financials.FinancialsUtil.isAllowMultipleLineItems()"/>
          <AddButton
            id="ApplyDeductibleButton"
            iterator="EditablePaymentLineItemsLV.EditablePaymentLineItemsLV"
            label="displaykey.NVV.Financials.NewPaymentDetail.Transaction.ApplyDeductible"
            toCreateAndAdd="Payment.addDeductibleLineItem()"
            visible="gw.api.financials.FinancialsUtil.isAllowMultipleLineItems() and !Payment.Check.CheckSet.Recurring and deductible != null and !deductible.Paid and !deductible.Waived and gw.api.financials.FinancialsUtil.isUseDeductibleHandling()"/>
        </Toolbar>
      </ListViewInput>
    </InputColumn>
    <InputColumn>
      <InputSetRef
        def="ServiceRequestInvoiceInputSet(Wizard, true)"
        mode="Wizard.Check.ServiceRequestInvoices.Count == 1 ? &quot;single&quot; : &quot;multiple&quot;"
        visible="Wizard.Check.LinkedToServiceRequests"/>
    </InputColumn>
    <Code><![CDATA[
function getMode() : String {
  if (Payment.LineItems.countWhere(\ t -> t.LineCategory=="Deductible") == 1) {
    return "deductible"
  } else {
    return "default"
  }
}
      
    ]]></Code>
  </DetailViewPanel>
</PCF>