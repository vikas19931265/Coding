package gw.sampledata
uses gw.pl.persistence.core.Bundle
uses gw.api.databuilder.PropertyItemBuilder
uses gw.api.databuilder.AssessmentContentItemBuilder
uses java.util.Date
uses gw.api.util.CurrencyUtil

@Export
class SampleHomeownersClaims extends SampleDataBase {

  construct(inCache : SampleDataCache) {
    super(inCache)
  }

  override property get Description() : String {
    return "Homeowners Claims and associated Contacts, Policies, Exposures, Notes, ClaimContacts, Activities and Financials"
  }
    
  override function testSampleData(bundle : Bundle) {
    {
      var addressDemoSample2014 = new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("425 Madison St.")
        .withCountry("US")
        .withPostalCode("60606")
        .withState(State.TC_IL)
        .withAddressType("business")
        .withCity("Chicago")
        .create(bundle)

      var contactDemoSample10195 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Egertson")
        .withPublicId("demo_sample:10195")
        .withFirstName("Karen")
        .withPrimaryPhone("work")
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("908 Angels Landing Rd.")
          .withCountry("US")
          .withPostalCode("91352")
          .withState(State.TC_CA)
          .withAddressType("home")
          .withCity("Anaheim"))
        .withWorkPhone("213-457-6378")
        .create(bundle)

      var contactDemoSample10194 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Darion")
        .withPublicId("demo_sample:10194")
        .withFirstName("Ken")
        .withPrimaryPhone("work")
        .withPrimaryAddressSetEarly( addressDemoSample2014 )
        .withWorkPhone("626-473-9576")
        .create(bundle)

      var propertyItemClockDemoSample = new PropertyItemBuilder()
        .withDescription("Grandfather Clock")
        .withAppraisedValue(1725bd.ofDefaultCurrency())
        .share()

      var claim = new gw.api.databuilder.ClaimBuilder()
        .withAssignmentStatus("assigned")
        .withLossDate(BaseDate.addDays(-25))
        .withLossCause("burglary")
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withAssignmentDate(BaseDate.addDays(0))
        .withFlagged("isflagged")
        .withLossLocation(addressDemoSample2014)
        .withClaimNumber("426-24-366170")
        .withMainContactType("employee")
        .withReportedByType("employee")
        .withLossType("PR")
        .withValidationLevel("newloss")
        .withPolicy( new gw.api.databuilder.PolicyBuilder()
          .withExpirationDate(BaseDate.addDays(274))
          .withUnderwritingCo("parent")
          .withVerified(true)
          .withOrigEffectiveDate(BaseDate.addDays(-3266))
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withUnderwritingGroup("acme_prop")
          .withEffectiveDate(BaseDate.addDays(-90))
          .withStatus("inforce")
          .withPolicyNumber("53-235675")
          .withPublicId("demo_sample:2030")
          .withTotalProperties(1)
          .withPolicyType("Homeowners")
          .withTotalVehicles(0)
          .withRiskUnit( new gw.api.databuilder.PropertyRUBuilder()
            .withRUNumber(1)
            .withPolicyLocation( new gw.api.databuilder.PolicyLocationBuilder()
              .withAddress(addressDemoSample2014)
              .withLienholder(new gw.api.databuilder.PropertyOwnerBuilder()
                .withLienholder(new gw.api.databuilder.CompanyBuilder()
                  .withPublicId("demo_sample:2026")
                  .withPrimaryPhone("work")
                  .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
                    .withAddressLine1("55 California St")
                    .withCountry("US")
                    .withPostalCode("61571")
                    .withState(State.TC_IL)
                    .withAddressType("business")
                    .withCity("Washington"))
                  .withWorkPhone("309-234-9876")
                  .withName("GMAC"))
                .withOwnerType("partial_owner"))
              .withLienholder(new gw.api.databuilder.PropertyOwnerBuilder()
                .withLienholder(new gw.api.databuilder.CompanyBuilder()
                  .withPublicId("demo_sample:2027")
                  .withPrimaryPhone("work")
                  .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
                    .withAddressLine1("2000 Park Avenue")
                    .withCountry("US")
                    .withPostalCode("61571")
                    .withState(State.TC_IL)
                    .withAddressType("business")
                    .withCity("Washington"))
                  .withWorkPhone("309-234-9876")
                  .withName("CitiMortgage"))
                .withOwnerType("partial_owner"))
              .withHighValueItem(new PropertyItemBuilder()
                .withDescription("Wide Screen TV")
                .withAppraisedValue(3250bd.ofDefaultCurrency()))
              .withHighValueItem(propertyItemClockDemoSample))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                .withType("HODW_Dwelling_Cov_HOE")
                .withIncidentLimit(750000bd.ofDefaultCurrency())
                .withExposureLimit(500000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                .withType("HODW_Other_Structures_HOE")
                .withIncidentLimit(100000bd.ofDefaultCurrency())
                .withExposureLimit(75000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                .withType("HODW_Personal_Property_HOE")
                .withIncidentLimit(75000bd.ofDefaultCurrency())
                .withExposureLimit(50000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                .withType("HOLI_Personal_Liability_HOE")
                .withIncidentLimit(800000bd.ofDefaultCurrency())
                .withExposureLimit(600000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                .withType("HOLI_Med_Pay_HOE")
                .withIncidentLimit(500000bd.ofDefaultCurrency())
                .withExposureLimit(250000bd.ofDefaultCurrency()))
              .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                .withType("HODW_Loss_Of_Use_HOE")
                .withIncidentLimit(50000bd.ofDefaultCurrency())
                .withExposureLimit(50000bd.ofDefaultCurrency())))
          .withContactInRole(contactDemoSample10195, "agent")
          .withContactInRole(contactDemoSample10194, "insured"))
        .withIncident(new gw.api.databuilder.PropertyContentsIncidentBuilder()
          .withDescription("Grandfather clock, jewelry, laptop, stereo system, louis vuitton bag, etc")
          .withPropertyContentsScheduledItem(new gw.api.databuilder.PropertyContentsScheduledItemBuilder()
            .withItemOrder( 0 )
            .withPropertyItem(propertyItemClockDemoSample))
          .withContentItemLine(new AssessmentContentItemBuilder()
            .withDescription("diamond bracelet")
            .withContentSchedule( "homeowners" )
            .withContentCategory("jewelry")
            .withPurchaseCost(2040bd.ofDefaultCurrency())
            .withDateAcquired( Date.Today.addYears(-10) )
            .withNumberOfItems(2)
            .withDepreciationPercentage(0)
            .withReplacementValue(3000bd.ofDefaultCurrency()))
          .withContentItemLine(new AssessmentContentItemBuilder()
            .withDescription("sony vaio laptop")
            .withContentSchedule( "homeowners" )
            .withContentCategory("computers")
            .withPurchaseCost(1424bd.ofDefaultCurrency())
            .withDateAcquired( Date.Today.addYears(-3))
            .withNumberOfItems(1)
            .withDepreciationPercentage(40)
            .withReplacementValue(750bd.ofDefaultCurrency()))
          .withContentItemLine(new AssessmentContentItemBuilder()
            .withDescription("bose stereo system")
            .withContentSchedule( "homeowners" )
            .withContentCategory("electronics")
            .withPurchaseCost(3999bd.ofDefaultCurrency())
            .withDateAcquired( Date.Today.addYears(-5))
            .withNumberOfItems(1)
            .withDepreciationPercentage(30)
            .withReplacementValue(2000bd.ofDefaultCurrency()))
          .withContentItemLine(new AssessmentContentItemBuilder()
            .withDescription("louis vuitton bag")
            .withContentSchedule( "homeowners" )
            .withContentCategory("clothing")
            .withPurchaseCost(1000bd.ofDefaultCurrency())
            .withDateAcquired( Date.Today.addYears(-1))
            .withNumberOfItems(1)
            .withDepreciationPercentage(2)
            .withReplacementValue(1100bd.ofDefaultCurrency())))
        .withMetroReport(new gw.api.databuilder.MetroReportBuilder()
          .withMetroReportType( "G" )
          .withAgentCity("Alhambra")
          .withAgentState(State.TC_CA)
          .withStatus("received"))
        .withNote(new gw.api.databuilder.NoteBuilder()
          .withBody("Requested insured to lodge a police complaint and emailed Contents Loss worksheet. Waiting to hear from insured.")
          .withAuthoringDate(BaseDate.addDays(-20)))
        .withNote(new gw.api.databuilder.NoteBuilder()
          .withBody("Received Content Loss worksheet from insured.")
          .withAuthoringDate(BaseDate.addDays(-18)))
        .withAssignedGroup(findGroupByName("Midwest Property A"))
        .withJurisdictionState("IL")
        .withReportedDate(BaseDate.addDays(-25))
        .withCoverageInQuestion(false)
        .withIncidentReport(false)
        .withLOBCode("HomeownersLine_HOE")
        .withPublicID("demo_sample:301")
        .withDescription("Insured's house was burglarized. Insured returned from vacation after 2 weeks and found the house door ajar.")
        .withState("open")
        .withAssignedUser(findUserByUserName("wdufraine"))
        .withContactInRole(contactDemoSample10195, "reporter")
        .create(bundle)

      var claimInfoDemoSample301 = new gw.api.databuilder.ClaimInfoBuilder()
        .withRootPublicId("demo_sample:301")
        .withClaimNumber("426-24-366170")
        .onClaim(claim)
        .create(bundle)

      var policyPeriodDemoSample72030 = new gw.api.databuilder.PolicyPeriodBuilder()
        .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample301))
        .withPolicyPeriodType("policy")
        .withExpirationDate(BaseDate.addDays(274))
        .withPolicyNumber("53-235675")
        .withPublicId("demo_sample:72030")
        .withPolicyType("Homeowners")
        .withEffectiveDate(BaseDate.addDays(-90))
        .create(bundle)
    }

    {
      var contactDemoSample2365 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Albertson")
        .withPublicId("demo_sample:2365")
        .withFirstName("John")
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("1244 Fair Oaks Ave")
          .withCountry("US")
          .withPostalCode("91101")
          .withState(State.TC_CA)
          .withAddressType("home")
          .withCity("Pasadena"))
        .withWorkPhone("213-457-6540")
        .create(bundle)

      var contactDemoSample2366 = new gw.api.databuilder.CCCompanyVendorBuilder()
        .withCompanyName("Citizen Corps")
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("546 Elka Drive")
          .withCountry("US")
          .withPostalCode("91101")
          .withState(State.TC_CA)
          .withAddressType("home")
          .withCity("Santa Monica"))
        .withWorkPhone("213-897-5431")
        .create(bundle)
        
      var policyLocationDempSample1 = new gw.api.databuilder.PolicyLocationBuilder()
        .withAddress(new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("425 Madison St.")
          .withCountry("US")
          .withPostalCode("60606")
          .withState(State.TC_IL)
          .withAddressType("business")
          .withCity("Chicago"))
        .create(bundle)
        
      var claim = new gw.api.databuilder.ClaimBuilder()
        .withAssignmentStatus("assigned")
        .withLossDate(BaseDate.addDays(-25))
        .withLossCause("waterdamage")
        .withWeatherRelated(true)
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withAssignmentDate(BaseDate.addDays(0))
        .withFlagged("neverflagged")
        .withLossLocation(new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("425 Madison St.")
          .withCountry("US")
          .withPostalCode("60606")
          .withState(State.TC_IL)
          .withAddressType("business")
          .withCity("Chicago"))
        .withClaimNumber("426-24-300170")
        .withMainContactType("employee")
        .withReportedByType("employee")
        .withLossType("PR")
        .withValidationLevel("newloss")
        .withPolicy( new gw.api.databuilder.PolicyBuilder()
          .withExpirationDate(BaseDate.addDays(185))
          .withUnderwritingCo("parent")
          .withVerified(true)
          .withOrigEffectiveDate(BaseDate.addDays(-2005))
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withUnderwritingGroup("acme_prop")
          .withEffectiveDate(BaseDate.addDays(-180))
          .withStatus("inforce")
          .withPolicyNumber("53-300675")
          .withPublicId("demo_sample:3030")
          .withTotalProperties(1)
          .withPolicyType("Homeowners")
          .withTotalVehicles(0)
          .withRiskUnit( new gw.api.databuilder.PropertyRUBuilder()
            .withRUNumber(1)
            .withPolicyLocation( new gw.api.databuilder.PolicyLocationBuilder()
              .withAddress(new gw.api.databuilder.AddressBuilder()
                .withAddressLine1("215 Maple Ave.")
                .withCountry("US")
                .withPostalCode("01079")
                .withState(State.TC_MA)
                .withAddressType("home")
                .withCity("Thorndidarike")))
            .withCoverage( new gw.api.databuilder.PropertyCoverageBuilder()
              .withIncidentLimit(500000bd.ofDefaultCurrency())
              .withType("HODW_Earthquake_HOE")
              .withDeductible(5000bd.ofDefaultCurrency()))
            .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
                            .withType("HODW_Dwelling_Cov_HOE")
                            .withDeductible(500bd.ofDefaultCurrency()))
            .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
              .withType("HODW_Other_Structures_HOE")
              .withIncidentLimit(160000bd.ofDefaultCurrency())
              .withExposureLimit(75000bd.ofDefaultCurrency()))
            .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
              .withType("HODW_Personal_Property_HOE")
              .withIncidentLimit(200000bd.ofDefaultCurrency())
              .withExposureLimit(50000bd.ofDefaultCurrency()))
            .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
              .withType("HOLI_Personal_Liability_HOE")
              .withIncidentLimit(800000bd.ofDefaultCurrency())
              .withExposureLimit(600000bd.ofDefaultCurrency()))
            .withCoverage(new gw.api.databuilder.PropertyCoverageBuilder()
              .withType("HOLI_Med_Pay_HOE")
              .withIncidentLimit(500000bd.ofDefaultCurrency())
              .withExposureLimit(250000bd.ofDefaultCurrency())))
          .withContactInRole(contactDemoSample2365, "insured"))
        .withPropertyWaterDamage(new gw.api.databuilder.PropertyWaterDamageBuilder()
          .withWaterSource( "other" )
          .withHasWaterBeenTurnedOff( true ))
        .withNote(new gw.api.databuilder.NoteBuilder()
          .withBody("EMS has been dispatched to insured's primary location to prevent further damage to the property. Insured was also asked to move living room furniture to another room if the water started collecting there.")
          .withAuthoringDate(BaseDate.addDays(-20)))
        .withNote(new gw.api.databuilder.NoteBuilder()
          .withBody("Spoke to the Insured. The rains had stopped and the EMS was able to plug the hole in the roof that has caused the damage. Need to check with insured about any mold damage.")
          .withAuthoringDate(BaseDate.addDays(-18)))
        .withAssignedGroup(findGroupByName("Midwest Property A"))
        .withJurisdictionState("IL")
        .withReportedDate(BaseDate.addDays(-25))
        .withCoverageInQuestion(false)
        .withLOBCode("HomeownersLine_HOE")
        .withPublicID("demo_sample:30003")
        .withDescription("Flooding")
        .withState("open")
        .withAssignedUser(findUserByUserName("wdufraine"))
        .withContactInRole(contactDemoSample2365, "reporter")
        .withContactInRole(contactDemoSample2366, "ems")
        .create(bundle)

      var coverageToShare = claim.Policy.RiskUnits.singleWhere( \ r -> r.RUNumber == 1 ).Coverages.singleWhere(\ c -> c.Type == "HODW_Dwelling_Cov_HOE")

    var incidentDemoSample1 = new gw.api.databuilder.DwellingIncidentBuilder()
      .withDescription("heavy rains led to water leaking through the roof damaging walls, carpets and kitchen floor.")
      .onClaim(claim)
      .create(bundle)
      
    var exposureDemoSample1 = new gw.api.databuilder.ExposureBuilder()
      .withExposureType("Dwelling")
      .withCoverage(coverageToShare)
      .withCoverageSubType("HODWDwelling")
      .withIncident(incidentDemoSample1)
      .withState(ExposureState.TC_OPEN)
      .withPrimaryCoverage("HODW_Dwelling_Cov_HOE")
      .onClaim(claim)
      .create(bundle)

    var transactionSetDemoSample1 = new gw.api.databuilder.CheckSetBuilder()
      .withApprovalDate(BaseDate.addDays(-7))
      .withRequestingUser(findUserByUserName("aapplegate"))
      .withApprovalStatus("approved")
      .onClaim(claim)
      .create(bundle)

    var reserveLineDemoSample1 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample1)
      .withCostType("claimcost")
      .withCostCategory("property_repair")
      .withClaim(claim)
      .create(bundle)

    var checkDemoSample1 = new gw.api.databuilder.CheckBuilder()
      .onClaim(claim)
      .withIssueDate(BaseDate.addDays(-6))
      .withScheduledSendDate(BaseDate.addDays(-6))
      .withBankAccount("default")
      .onCheckSet(transactionSetDemoSample1)
      .withPayTo("John Albertson")
      .withStatus("issued")
      .withPaymentMethod("check")
      .withCheckNumber("11059")
      .withPayee(new gw.api.databuilder.CheckPayeeBuilder()
            .withPayee(contactDemoSample2365)
            .withPayeeType("claimant"))
      .withType("primary")
      .create(bundle)

    var transactionDemoSample10017 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample1)
      .onExposure(exposureDemoSample1)
      .onTransactionSet(transactionSetDemoSample1)
      .withCostType("claimcost")
      .withCostCategory("property_repair")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .onClaim(claim)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("property damage")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(2000bd.ofDefaultCurrency())
        .withClaimAmount(2000bd.ofDefaultCurrency())
        .withReservingAmount(2000bd.ofDefaultCurrency())
        .withTransactionAmount(2000bd.ofDefaultCurrency())
        .withLineCategory("other")
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample20014 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample1)
      .onTransactionSet(transactionSetDemoSample1)
      .withCostCategory("body")
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus("submitted")
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .onCheck(checkDemoSample1)
      .withPaymentType("partial")
      .onExposure(exposureDemoSample1)
      .withCostType("claimcost")
      .onClaim(claim)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("property damage")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(1500bd.ofDefaultCurrency())
        .withClaimAmount(1500bd.ofDefaultCurrency())
        .withReservingAmount(1500bd.ofDefaultCurrency())
        .withTransactionAmount(1500bd.ofDefaultCurrency())
        .withLineCategory("other")
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

      var claimInfoDemoSample30003 = new gw.api.databuilder.ClaimInfoBuilder()
        .withRootPublicId("demo_sample:30003")
        .withClaimNumber("426-24-300170")
        .onClaim(claim)
        .create(bundle)
    }
  }
}
